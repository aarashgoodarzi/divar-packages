{"interfaceLanguages":{"occ":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/removefocusedrowvalue()","title":"removeFocusedRowValue","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/viewdidlayoutsubviews()","title":"viewDidLayoutSubviews","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/viewwilldisappear(_:)","title":"viewWillDisappear:","type":"method"}],"path":"\/documentation\/divar\/abstractformviewcontroller","title":"AbstractFormViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/table","title":"table","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/refresh()","title":"refresh","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/scrollviewdidscroll(_:)","title":"scrollViewDidScroll:","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/scrollviewshouldscrolltotop(_:)","title":"scrollViewShouldScrollToTop:","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/scrollviewwillenddragging(_:withvelocity:targetcontentoffset:)","title":"scrollViewWillEndDragging:withVelocity:targetContentOffset:","type":"method"}],"path":"\/documentation\/divar\/abstracttableviewcontroller\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/abstracttableviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/tableview(_:diddeselectrowat:)","title":"tableView:didDeselectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/tableview(_:estimatedheightforrowat:)","title":"tableView:estimatedHeightForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/abstracttableviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/abstracttableviewcontroller","title":"AbstractTableViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/adviewviewcontroller\/actionbutton","title":"actionButton","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/adimage","title":"adImage","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/addtitle","title":"addTitle","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/frommeindicator","title":"fromMeIndicator","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/frommeindicatorwidthconstraint","title":"fromMeIndicatorWidthConstraint","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/myadlabel","title":"myAdLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/adviewviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/adviewviewcontroller\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"},{"path":"\/documentation\/divar\/adviewviewcontroller\/openpost()","title":"openPost","type":"method"},{"path":"\/documentation\/divar\/adviewviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/adviewviewcontroller","title":"AdViewViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/deleteagent()","title":"deleteAgent","type":"method"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/addeditagentviewcontroller","title":"AddEditAgentViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/addsalesmanviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/addsalesmanviewcontroller","title":"AddSalesmanViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/addstoremanagerviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/addstoremanagerviewcontroller","title":"AddStoreManagerViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/addusertransactionformviewcontroller","title":"AddUserTransactionFormViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/addvrviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/addvrviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/addvrviewcontroller","title":"AddVRViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedcollectionview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/advancedcollectionview\/init(frame:collectionviewlayout:)","title":"initWithFrame:collectionViewLayout:","type":"method"},{"path":"\/documentation\/divar\/advancedcollectionview\/reloaddata()","title":"reloadData","type":"method"}],"path":"\/documentation\/divar\/advancedcollectionview","title":"AdvancedCollectionView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedtableview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/advancedtableview\/init(frame:style:)","title":"initWithFrame:style:","type":"method"},{"path":"\/documentation\/divar\/advancedtableview\/reloaddata()","title":"reloadData","type":"method"}],"path":"\/documentation\/divar\/advancedtableview","title":"AdvancedTableView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"}],"path":"\/documentation\/divar\/advancedwidgetviewcontroller","title":"AdvancedWidgetViewController","type":"class"},{"path":"\/documentation\/divar\/agentmanagementflowcontroller","title":"AgentManagementFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/alertviewcontroller\/horizontalstackview","title":"horizontalStackView","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/alertviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/viewdidlayoutsubviews()","title":"viewDidLayoutSubviews","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/alertviewcontroller","title":"AlertViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/savebuttontapped()","title":"saveButtonTapped","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/documentpicker(_:didpickdocumentsat:)","title":"documentPicker:didPickDocumentsAtURLs:","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/uidocumentpickerdelegate-implementations","title":"UIDocumentPickerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/textview(_:shouldchangetextin:replacementtext:)","title":"textView:shouldChangeTextInRange:replacementText:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/textviewdidchange(_:)","title":"textViewDidChange:","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/uitextviewdelegate-implementations","title":"UITextViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller","title":"AngoolakResponseEditorViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/savebuttontapped()","title":"saveButtonTapped","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/tableview(_:caneditrowat:)","title":"tableView:canEditRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/tableview(_:titleforheaderinsection:)","title":"tableView:titleForHeaderInSection:","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/tableview(_:editingstyleforrowat:)","title":"tableView:editingStyleForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/tableview(_:trailingswipeactionsconfigurationforrowat:)","title":"tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller","title":"AngoolakResponseHeaderEditorViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseservicecell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseservicecell\/init(style:reuseidentifier:)","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseservicecell","title":"AngoolakResponseServiceCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/tableview(_:caneditrowat:)","title":"tableView:canEditRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/tableview(_:editingstyleforrowat:)","title":"tableView:editingStyleForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/tableview(_:trailingswipeactionsconfigurationforrowat:)","title":"tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/angoolakresponseviewcontroller","title":"AngoolakResponseViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolaksandboxservicecell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxservicecell\/init(style:reuseidentifier:)","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/angoolaksandboxservicecell","title":"AngoolakSandBoxServiceCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/handlekeyboardstatus(_:)","title":"handleKeyboardStatus:","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/init","title":"init","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/tableview(_:caneditrowat:)","title":"tableView:canEditRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/tableview(_:commit:forrowat:)","title":"tableView:commitEditingStyle:forRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"}],"path":"\/documentation\/divar\/angoolaksandboxviewcontroller","title":"AngoolakSandBoxViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakservicecollectionviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/angoolakservicecollectionviewcell\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/angoolakservicecollectionviewcell","title":"AngoolakServiceCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"}],"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/collectionview(_:didselectitemat:)","title":"collectionView:didSelectItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/collectionview(_:layout:insetforsectionat:)","title":"collectionView:layout:insetForSectionAtIndex:","type":"method"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/collectionview(_:layout:sizeforitemat:)","title":"collectionView:layout:sizeForItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"}],"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller","title":"AngoolakServiceSelectionViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakstatefulrowtableviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/angoolakstatefulrowtableviewcell\/init(style:reuseidentifier:)","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/angoolakstatefulrowtableviewcell","title":"AngoolakStatefulRowTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/appdelegate\/window","title":"window","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appdelegate\/application(_:didchangestatusbarframe:)","title":"application:didChangeStatusBarFrame:","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:didfinishlaunchingwithoptions:)","title":"application:didFinishLaunchingWithOptions:","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:supportedinterfaceorientationsfor:)","title":"application:supportedInterfaceOrientationsForWindow:","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/applicationdidbecomeactive(_:)","title":"applicationDidBecomeActive:","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/applicationdidenterbackground(_:)","title":"applicationDidEnterBackground:","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/applicationwillenterforeground(_:)","title":"applicationWillEnterForeground:","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/applicationwillresignactive(_:)","title":"applicationWillResignActive:","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/init","title":"init","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appdelegate\/application(_:continue:restorationhandler:)","title":"application:continueUserActivity:restorationHandler:","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:didfailtoregisterforremotenotificationswitherror:)","title":"application:didFailToRegisterForRemoteNotificationsWithError:","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:didreceiveremotenotification:fetchcompletionhandler:)","title":"application:didReceiveRemoteNotification:fetchCompletionHandler:","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:didregisterforremotenotificationswithdevicetoken:)","title":"application:didRegisterForRemoteNotificationsWithDeviceToken:","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:open:options:)","title":"application:openURL:options:","type":"method"},{"title":"Type Methods","type":"groupMarker"}],"path":"\/documentation\/divar\/appdelegate\/uiapplicationdelegate-implementations","title":"UIApplicationDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appdelegate\/usernotificationcenter(_:didreceive:withcompletionhandler:)","title":"userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/usernotificationcenter(_:willpresent:withcompletionhandler:)","title":"userNotificationCenter:willPresentNotification:withCompletionHandler:","type":"method"}],"path":"\/documentation\/divar\/appdelegate\/unusernotificationcenterdelegate-implementations","title":"UNUserNotificationCenterDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/appdelegate","title":"AppDelegate","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/layoutsubviews()","title":"layoutSubviews","type":"method"}],"path":"\/documentation\/divar\/approximatemapselectorrow","title":"ApproximateMapSelectorRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/stackview","title":"stackView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/dismiss(animated:completion:)","title":"dismissViewControllerAnimated:completion:","type":"method"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/willmove(toparent:)","title":"willMoveToParentViewController:","type":"method"}],"path":"\/documentation\/divar\/archivenoteviewcontroller","title":"ArchiveNoteViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/audioplaymanager\/init()","title":"init","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/audioplaymanager\/audioplayerbegininterruption(_:)","title":"audioPlayerBeginInterruption:","type":"method"},{"path":"\/documentation\/divar\/audioplaymanager\/audioplayerdecodeerrordidoccur(_:error:)","title":"audioPlayerDecodeErrorDidOccur:error:","type":"method"},{"path":"\/documentation\/divar\/audioplaymanager\/audioplayerdidfinishplaying(_:successfully:)","title":"audioPlayerDidFinishPlaying:successfully:","type":"method"},{"path":"\/documentation\/divar\/audioplaymanager\/audioplayerendinterruption(_:withoptions:)","title":"audioPlayerEndInterruption:withOptions:","type":"method"}],"path":"\/documentation\/divar\/audioplaymanager\/avaudioplayerdelegate-implementations","title":"AVAudioPlayerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/audioplaymanager","title":"AudioPlayManager","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/backbarbuttonitem\/menu","title":"menu","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/backbarbuttonitem\/init","title":"init","type":"method"},{"path":"\/documentation\/divar\/backbarbuttonitem\/initwithcoder:","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/backbarbuttonitem","title":"BackBarButtonItem","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bannerrowcollectionviewcell\/bannerrowview","title":"bannerRowView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bannerrowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/bannerrowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/bannerrowcollectionviewcell","title":"BannerRowCollectionViewCell","type":"class"},{"path":"\/documentation\/divar\/baseflowcontroller","title":"BaseFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/resetform(_:)","title":"resetForm:","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/baseformcontroller","title":"BaseFormController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformviewcontroller\/defaultdoneaction()","title":"defaultDoneAction","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/removefocusedrowvalue()","title":"removeFocusedRowValue","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/baseformviewcontroller","title":"BaseFormViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/basesegmentedviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/basesegmentedviewcontroller\/segmentselected(_:)","title":"segmentSelected:","type":"method"},{"path":"\/documentation\/divar\/basesegmentedviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/basesegmentedviewcontroller","title":"BaseSegmentedViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/baseviewcontroller\/canbecomefirstresponder","title":"canBecomeFirstResponder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseviewcontroller\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/baseviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/baseviewcontroller\/viewdiddisappear(_:)","title":"viewDidDisappear:","type":"method"},{"path":"\/documentation\/divar\/baseviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/baseviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"}],"path":"\/documentation\/divar\/baseviewcontroller","title":"BaseViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/bottombar","title":"bottomBar","type":"property"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/webviewcontainer","title":"webViewContainer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/webview(_:didfinish:)","title":"webView:didFinishNavigation:","type":"method"}],"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/wknavigationdelegate-implementations","title":"WKNavigationDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc","title":"BeforeRegisterTermsAndConditionsVC","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/blockingview\/button","title":"button","type":"property"},{"path":"\/documentation\/divar\/blockingview\/buttontext","title":"buttonText","type":"property"},{"path":"\/documentation\/divar\/blockingview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/blockingview\/descriptionlabel","title":"descriptionLabel","type":"property"},{"path":"\/documentation\/divar\/blockingview\/descriptiontext","title":"descriptionText","type":"property"},{"path":"\/documentation\/divar\/blockingview\/titlelabel","title":"titleLabel","type":"property"},{"path":"\/documentation\/divar\/blockingview\/titletext","title":"titleText","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/blockingview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/blockingview\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/blockingview\/onbuttonclick(_:)","title":"onButtonClick:","type":"method"}],"path":"\/documentation\/divar\/blockingview","title":"BlockingView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/button","title":"button","type":"property"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/descriptionlabel","title":"descriptionLabel","type":"property"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/divider","title":"divider","type":"property"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/taponbutton(_:)","title":"tapOnButton:","type":"method"}],"path":"\/documentation\/divar\/blockingviewcollectionviewcell","title":"BlockingViewCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarkview\/animationdidstop(_:finished:)","title":"animationDidStop:finished:","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"}],"path":"\/documentation\/divar\/bookmarkview","title":"BookmarkView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/deletebookmark(posttoken:)","title":"deleteBookmarkWithPostToken:","type":"method"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/handlelongpress(gesturerecognizer:)","title":"handleLongPressWithGestureRecognizer:","type":"method"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"}],"path":"\/documentation\/divar\/bookmarksviewcontroller","title":"BookmarksViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/booleanrateformviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/booleanrateformviewcontroller","title":"BooleanRateFormViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/booleanraterowcollectionviewcell\/booleanraterowview","title":"booleanRateRowView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/booleanraterowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/booleanraterowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/booleanraterowcollectionviewcell","title":"BooleanRateRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller","title":"BottomSheetContactViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekaviewcontroller\/dismiss(animated:completion:)","title":"dismissViewControllerAnimated:completion:","type":"method"},{"path":"\/documentation\/divar\/bottomsheeteurekaviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/bottomsheeteurekaviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/bottomsheeteurekaviewcontroller","title":"BottomSheetEurekaViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/imagecontainerview","title":"imageContainerView","type":"property"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/imageview","title":"imageView","type":"property"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/ishighlighted","title":"highlighted","type":"property"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/stackview","title":"stackView","type":"property"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"}],"path":"\/documentation\/divar\/bottomsheetitemcell","title":"BottomSheetItemCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/collectionview","title":"collectionView","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/headerview","title":"headerView","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/titlelabel","title":"titleLabel","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/titleview","title":"titleView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"}],"path":"\/documentation\/divar\/bottomsheetviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/collectionview(_:didselectitemat:)","title":"collectionView:didSelectItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/bottomsheetviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/bottomsheetviewcontroller","title":"BottomSheetViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackcell\/collectionview","title":"collectionView","type":"property"},{"path":"\/documentation\/divar\/brandfeedbackcell\/questiontitle","title":"questionTitle","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/brandfeedbackcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/brandfeedbackcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackcell\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/brandfeedbackcell\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"}],"path":"\/documentation\/divar\/brandfeedbackcell\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackcell\/collectionview(_:didselectitemat:)","title":"collectionView:didSelectItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/brandfeedbackcell\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackcell\/collectionview(_:layout:sizeforitemat:)","title":"collectionView:layout:sizeForItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/brandfeedbackcell\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandfeedbackcell","title":"BrandFeedbackCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandheadercell\/englishtitlelabel","title":"englishTitleLabel","type":"property"},{"path":"\/documentation\/divar\/brandheadercell\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandheadercell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/brandheadercell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/brandheadercell","title":"BrandHeaderCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/iconimageview","title":"iconImageView","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/iconleadingconstraint","title":"iconLeadingConstraint","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/iconwidthconstraint","title":"iconWidthConstraint","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/init(style:reuseidentifier:)","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/prepareforreuse()","title":"prepareForReuse","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/setselected(_:animated:)","title":"setSelected:animated:","type":"method"}],"path":"\/documentation\/divar\/brandmultihierarchytableviewcell","title":"BrandMultiHierarchyTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/stackview","title":"stackView","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview","title":"tableView","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/taglistview","title":"taglistView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview(_:diddeselectrowat:)","title":"tableView:didDeselectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview(_:willselectrowat:)","title":"tableView:willSelectRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller","title":"BrandMultiHierarchyViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandpushselectorcell\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandpushselectorcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/brandpushselectorcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/brandpushselectorcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/brandpushselectorcell","title":"BrandPushSelectorCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandratetableviewcell\/raterowview","title":"rateRowView","type":"property"},{"path":"\/documentation\/divar\/brandratetableviewcell\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandratetableviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/brandratetableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/brandratetableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/brandratetableviewcell\/prepareforreuse()","title":"prepareForReuse","type":"method"},{"path":"\/documentation\/divar\/brandratetableviewcell\/setselected(_:animated:)","title":"setSelected:animated:","type":"method"}],"path":"\/documentation\/divar\/brandratetableviewcell","title":"BrandRateTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsectionheader\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsectionheader\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/brandsectionheader\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/brandsectionheader","title":"BrandSectionHeader","type":"class"},{"path":"\/documentation\/divar\/browseflowcontroller","title":"BrowseFlowController","type":"class"},{"path":"\/documentation\/divar\/bulkladderbaseflowcontroller","title":"BulkLadderBaseFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/businessgetcontactviewcontroller\/init","title":"init","type":"method"},{"path":"\/documentation\/divar\/businessgetcontactviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/businessgetcontactviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/businessgetcontactviewcontroller","title":"BusinessGetContactViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/businesssubscriptionviewcontroller","title":"BusinessSubscriptionViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/buybulkladderviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/buybulkladderviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/buybulkladderviewcontroller","title":"BuyBulkLadderViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverserviceimpl\/callobserver(_:callchanged:)","title":"callObserver:callChanged:","type":"method"}],"path":"\/documentation\/divar\/callobserverserviceimpl","title":"CallObserverServiceImpl","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cameraoverlayview\/closebutton","title":"closeButton","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/flashbutton","title":"flashButton","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/recordbutton","title":"recordButton","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/timerlabel","title":"timerLabel","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/timerview","title":"timerView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cameraoverlayview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/cameraoverlayview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/cameraoverlayview","title":"CameraOverlayView","type":"class"},{"path":"\/documentation\/divar\/caragentbulkladderflowcontroller","title":"CarAgentBulkLadderFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontroller","title":"CarAgentBuyLadderPackageViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbuypackageviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/caragentbuypackageviewcontroller","title":"CarAgentBuyPackageViewController","type":"class"},{"path":"\/documentation\/divar\/caragentflowcontroller","title":"CarAgentFlowController","type":"class"},{"path":"\/documentation\/divar\/caragentformflowcontroller","title":"CarAgentFormFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentsubmitviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/caragentsubmitviewcontroller","title":"CarAgentSubmitViewController","type":"class"},{"path":"\/documentation\/divar\/carbusinessflowcontroller","title":"CarBusinessFlowController","type":"class"},{"path":"\/documentation\/divar\/carinspectionflowcontroller","title":"CarInspectionFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/carinspectionregisterviewcontroller","title":"CarInspectionRegisterViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller","title":"CarInspectionSubmitViewController","type":"class"},{"path":"\/documentation\/divar\/carlandingpageflowcontroller","title":"CarLandingPageFlowController","type":"class"},{"path":"\/documentation\/divar\/carpriceflowcontroller","title":"CarPriceFlowController","type":"class"},{"path":"\/documentation\/divar\/carspecsflowcontroller","title":"CarSpecsFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/categorycontroller\/stackview","title":"stackView","type":"property"},{"path":"\/documentation\/divar\/categorycontroller\/switchview","title":"switchView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categorycontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/categorycontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/categorycontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"}],"path":"\/documentation\/divar\/categorycontroller","title":"CategoryController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/categorycontrollercell\/descriptionlabel","title":"descriptionLabel","type":"property"},{"path":"\/documentation\/divar\/categorycontrollercell\/descriptionview","title":"descriptionView","type":"property"},{"path":"\/documentation\/divar\/categorycontrollercell\/indicatorimageview","title":"indicatorImageView","type":"property"},{"path":"\/documentation\/divar\/categorycontrollercell\/itemimageview","title":"itemImageView","type":"property"},{"path":"\/documentation\/divar\/categorycontrollercell\/itemlabel","title":"itemLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categorycontrollercell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/categorycontrollercell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/categorycontrollercell\/prepareforreuse()","title":"prepareForReuse","type":"method"}],"path":"\/documentation\/divar\/categorycontrollercell","title":"CategoryControllerCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryhierarchycontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/categoryhierarchycontroller\/tableview(_:heightforheaderinsection:)","title":"tableView:heightForHeaderInSection:","type":"method"},{"path":"\/documentation\/divar\/categoryhierarchycontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/categoryhierarchycontroller","title":"CategoryHierarchyController","type":"class"},{"path":"\/documentation\/divar\/chatflowcontroller","title":"ChatFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinstructloginviewcontroller\/blockingview","title":"blockingView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinstructloginviewcontroller\/init","title":"init","type":"method"},{"path":"\/documentation\/divar\/chatinstructloginviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/chatinstructloginviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/chatinstructloginviewcontroller","title":"ChatInstructLoginViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/activityindicator","title":"activityIndicator","type":"property"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/buttomlabel","title":"buttomLabel","type":"property"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/centertitle","title":"centerTitle","type":"property"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/openpostbutton","title":"openPostButton","type":"property"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/toplabel","title":"topLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/chatnavigationtitleview","title":"ChatNavigationTitleView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/tableview","title":"tableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/chatsettingscontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/chatsettingscontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/chatsettingscontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/chatsettingscontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/chatsettingscontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/chatsettingscontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatsettingscontroller","title":"ChatSettingsController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chattoastview\/bodylabel","title":"bodyLabel","type":"property"},{"path":"\/documentation\/divar\/chattoastview\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chattoastview\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/chattoastview\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/chattoastview\/openconversation(_:)","title":"openConversation:","type":"method"}],"path":"\/documentation\/divar\/chattoastview","title":"ChatToastView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuseridentification\/init","title":"init","type":"method"}],"path":"\/documentation\/divar\/chatuseridentification","title":"ChatUserIdentification","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/stackview","title":"stackView","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/stackviewbottomconstraint","title":"stackViewBottomConstraint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/userregisterationchanged()","title":"UserRegisterationChanged","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/handleblockunblockevent()","title":"handleBlockUnblockEvent","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/handlekeyboardstatus(_:)","title":"handleKeyboardStatus:","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/makecallbuttonaction(_:)","title":"makeCallButtonAction:","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/requestunblockuser()","title":"requestUnblockUser","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/setupconnectionstatusprompt()","title":"setupConnectionStatusPrompt","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/showoptions()","title":"showOptions","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/showwarningifexists()","title":"showWarningIfExists","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/toggleconnectionstatus()","title":"toggleConnectionStatus","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/togglepeertypingstatus()","title":"togglePeerTypingStatus","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/viewdidlayoutsubviews()","title":"viewDidLayoutSubviews","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/showblockreasons()","title":"showBlockReasons","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/chatoptionactionprotocol-implementations","title":"ChatOptionActionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/safariviewcontrollerdidfinish(_:)","title":"safariViewControllerDidFinish:","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/sfsafariviewcontrollerdelegate-implementations","title":"SFSafariViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/documentpicker(_:didpickdocumentsat:)","title":"documentPicker:didPickDocumentsAtURLs:","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/documentpickerwascancelled(_:)","title":"documentPickerWasCancelled:","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/uidocumentpickerdelegate-implementations","title":"UIDocumentPickerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/imagepickercontroller(_:didfinishpickingmediawithinfo:)","title":"imagePickerController:didFinishPickingMediaWithInfo:","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/uiimagepickercontrollerdelegate-implementations","title":"UIImagePickerControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatviewcontroller","title":"ChatViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/checkabletableviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/checkabletableviewcell\/init(style:reuseidentifier:)","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/checkabletableviewcell\/setselected(_:animated:)","title":"setSelected:animated:","type":"method"}],"path":"\/documentation\/divar\/checkabletableviewcell","title":"CheckableTableViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewrowcollectionviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/chipviewrowcollectionviewcell\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/chipviewrowcollectionviewcell","title":"ChipViewRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/circularprogressbar\/bcakgroundfillcolor","title":"bcakgroundFillColor","type":"property"},{"path":"\/documentation\/divar\/circularprogressbar\/fillcolor","title":"fillColor","type":"property"},{"path":"\/documentation\/divar\/circularprogressbar\/linewidth","title":"lineWidth","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/circularprogressbar\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/circularprogressbar\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/circularprogressbar\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/circularprogressbar\/layoutsublayers(of:)","title":"layoutSublayersOfLayer:","type":"method"}],"path":"\/documentation\/divar\/circularprogressbar","title":"CircularProgressBar","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/circularview\/frame","title":"frame","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/circularview\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/circularview\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/circularview\/layoutsubviews()","title":"layoutSubviews","type":"method"},{"path":"\/documentation\/divar\/circularview\/tintcolordidchange()","title":"tintColorDidChange","type":"method"}],"path":"\/documentation\/divar\/circularview","title":"CircularView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterview\/handletapgesture()","title":"handleTapGesture","type":"method"},{"path":"\/documentation\/divar\/cityfilterview\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/cityfilterview\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/cityfilterview","title":"CityFilterView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/stackview","title":"stackView","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/stackviewbottomconstraint","title":"stackViewBottomConstraint","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tableview","title":"tableView","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/taglistview","title":"taglistView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/citymultiselectviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tableview(_:diddeselectrowat:)","title":"tableView:didDeselectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tableview(_:willselectrowat:)","title":"tableView:willSelectRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/citymultiselectviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/citymultiselectviewcontroller","title":"CityMultiSelectViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview","title":"tableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/scrollviewshouldscrolltotop(_:)","title":"scrollViewShouldScrollToTop:","type":"method"}],"path":"\/documentation\/divar\/cityselectviewcontroller\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/cityselectviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:heightforfooterinsection:)","title":"tableView:heightForFooterInSection:","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:heightforheaderinsection:)","title":"tableView:heightForHeaderInSection:","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:viewforheaderinsection:)","title":"tableView:viewForHeaderInSection:","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:willdisplay:forrowat:)","title":"tableView:willDisplayCell:forRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/cityselectviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/cityselectviewcontroller","title":"CitySelectViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contacttableviewcell\/contacttitle","title":"contactTitle","type":"property"},{"path":"\/documentation\/divar\/contacttableviewcell\/indicatorimage","title":"indicatorImage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contacttableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/contacttableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/contacttableviewcell","title":"ContactTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationrowcell\/conversationrow","title":"conversationRow","type":"property"},{"path":"\/documentation\/divar\/conversationrowcell\/isselected","title":"selected","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationrowcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/conversationrowcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/conversationrowcell","title":"ConversationRowCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/stackview","title":"stackView","type":"property"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/tableview","title":"tableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/viewwilldisappear(_:)","title":"viewWillDisappear:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/conversationsviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/conversationsviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/conversationsviewcontroller","title":"ConversationsViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/deleteagent()","title":"deleteAgent","type":"method"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/createandeditoperatorviewcontroller","title":"CreateAndEditOperatorViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custombyteformatter\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/custombyteformatter\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/custombyteformatter\/string(frombytecount:)","title":"stringFromByteCount:","type":"method"}],"path":"\/documentation\/divar\/custombyteformatter","title":"CustomByteFormatter","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custommfmessagecomposeviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/custommfmessagecomposeviewcontroller\/initwithnavigationbarclass:toolbarclass:","title":"initWithNavigationBarClass:toolbarClass:","type":"method"},{"path":"\/documentation\/divar\/custommfmessagecomposeviewcontroller\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"},{"path":"\/documentation\/divar\/custommfmessagecomposeviewcontroller\/initwithrootviewcontroller:","title":"initWithRootViewController:","type":"method"},{"path":"\/documentation\/divar\/custommfmessagecomposeviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custommfmessagecomposeviewcontroller\/messagecomposeviewcontroller(_:didfinishwith:)","title":"messageComposeViewController:didFinishWithResult:","type":"method"}],"path":"\/documentation\/divar\/custommfmessagecomposeviewcontroller\/mfmessagecomposeviewcontrollerdelegate-implementations","title":"MFMessageComposeViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/custommfmessagecomposeviewcontroller","title":"CustomMFMessageComposeViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickerhandler\/init","title":"init","type":"method"},{"path":"\/documentation\/divar\/custompickerhandler\/numberofcomponents(in:)","title":"numberOfComponentsInPickerView:","type":"method"},{"path":"\/documentation\/divar\/custompickerhandler\/pickerview(_:didselectrow:incomponent:)","title":"pickerView:didSelectRow:inComponent:","type":"method"},{"path":"\/documentation\/divar\/custompickerhandler\/pickerview(_:numberofrowsincomponent:)","title":"pickerView:numberOfRowsInComponent:","type":"method"},{"path":"\/documentation\/divar\/custompickerhandler\/pickerview(_:titleforrow:forcomponent:)","title":"pickerView:titleForRow:forComponent:","type":"method"},{"path":"\/documentation\/divar\/custompickerhandler\/pickerview(_:viewforrow:forcomponent:reusing:)","title":"pickerView:viewForRow:forComponent:reusingView:","type":"method"}],"path":"\/documentation\/divar\/custompickerhandler","title":"CustomPickerHandler","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customuiactivity\/activityimage","title":"activityImage","type":"property"},{"path":"\/documentation\/divar\/customuiactivity\/activitytitle","title":"activityTitle","type":"property"},{"path":"\/documentation\/divar\/customuiactivity\/activitytype","title":"activityType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customuiactivity\/canperform(withactivityitems:)","title":"canPerformWithActivityItems:","type":"method"},{"path":"\/documentation\/divar\/customuiactivity\/perform()","title":"performActivity","type":"method"},{"path":"\/documentation\/divar\/customuiactivity\/prepare(withactivityitems:)","title":"prepareWithActivityItems:","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customuiactivity\/activitycategory","title":"activityCategory","type":"property"}],"path":"\/documentation\/divar\/customuiactivity","title":"CustomUIActivity","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/viewwilldisappear(_:)","title":"viewWillDisappear:","type":"method"}],"path":"\/documentation\/divar\/customuiactivityviewcontroller","title":"CustomUIActivityViewController","type":"class"},{"path":"\/documentation\/divar\/dealerflowcontroller","title":"DealerFlowController","type":"class"},{"path":"\/documentation\/divar\/dealerformflowcontroller","title":"DealerFormFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubmitviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/dealersubmitviewcontroller","title":"DealerSubmitViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/stackholder","title":"stackHolder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller","title":"DealerSubscriptionDetailsViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/stackview","title":"stackView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/viewwilldisappear(_:)","title":"viewWillDisappear:","type":"method"}],"path":"\/documentation\/divar\/dealersubscriptionviewcontroller","title":"DealerSubscriptionViewController","type":"class"},{"path":"\/documentation\/divar\/dealershipgetcontactflowcontroller","title":"DealershipGetContactFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/textfield","title":"textField","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"}],"path":"\/documentation\/divar\/descriptionfieldtableviewcell","title":"DescriptionFieldTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldview\/textfield","title":"textField","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldview\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldview\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldview\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldview\/textview(_:shouldchangetextin:replacementtext:)","title":"textView:shouldChangeTextInRange:replacementText:","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldview\/textviewdidbeginediting(_:)","title":"textViewDidBeginEditing:","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldview\/textviewdidendediting(_:)","title":"textViewDidEndEditing:","type":"method"}],"path":"\/documentation\/divar\/descriptionfieldview\/uitextviewdelegate-implementations","title":"UITextViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/descriptionfieldview","title":"DescriptionFieldView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/descriptiontext","title":"descriptionText","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/endediting(_:)","title":"endEditing:","type":"method"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/setediting(_:animated:)","title":"setEditing:animated:","type":"method"}],"path":"\/documentation\/divar\/descriptionprimarytableviewcell","title":"DescriptionPrimaryTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/descriptiontext","title":"descriptionText","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/endediting(_:)","title":"endEditing:","type":"method"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/setediting(_:animated:)","title":"setEditing:animated:","type":"method"}],"path":"\/documentation\/divar\/descriptionsecondarytableviewcell","title":"DescriptionSecondaryTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextrow\/descriptionview","title":"descriptionView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextrow\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/descriptiontextrow\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/descriptiontextrow\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/descriptiontextrow","title":"DescriptionTextRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/divider","title":"divider","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/hasdivider","title":"hasDivider","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/isprimary","title":"isPrimary","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/numberoflines","title":"numberOfLines","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/showmoreheightconstraint","title":"showMoreHeightConstraint","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/showmorelabel","title":"showMoreLabel","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/showmoretopconstraint","title":"showMoreTopConstraint","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/text","title":"text","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/textlabel","title":"textLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/descriptionview\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/descriptionview\/tappedonexpand(_:)","title":"tappedOnExpand:","type":"method"}],"path":"\/documentation\/divar\/descriptionview","title":"DescriptionView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionviewtableviewcell\/descriptionview","title":"descriptionView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionviewtableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/descriptionviewtableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/descriptionviewtableviewcell","title":"DescriptionViewTableViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dimmedview\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/dimmedview","title":"DimmedView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/disablelistviewcontroller","title":"DisableListViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/barbuttonitembuttontapped(sender:)","title":"barButtonItemButtonTappedWithSender:","type":"method"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/barbuttonitemtapped(sender:)","title":"barButtonItemTappedWithSender:","type":"method"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/disablepageviewcontroller","title":"DisablePageViewController","type":"class"},{"path":"\/documentation\/divar\/districtannotation","title":"DistrictAnnotation","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/districtannotationview\/reuseidentifier","title":"reuseIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/districtannotationview\/init(annotation:reuseidentifier:)","title":"initWithAnnotation:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/districtannotationview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/districtannotationview\/prepareforreuse()","title":"prepareForReuse","type":"method"}],"path":"\/documentation\/divar\/districtannotationview","title":"DistrictAnnotationView","type":"class"},{"path":"\/documentation\/divar\/districtmultipolygon","title":"DistrictMultiPolygon","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/districtpolygon\/init","title":"init","type":"method"}],"path":"\/documentation\/divar\/districtpolygon","title":"DistrictPolygon","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/loadview()","title":"loadView","type":"method"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/mapview(_:rendererfor:)","title":"mapView:rendererForOverlay:","type":"method"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/mapview(_:viewfor:)","title":"mapView:viewForAnnotation:","type":"method"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/mapviewdidchangevisibleregion(_:)","title":"mapViewDidChangeVisibleRegion:","type":"method"}],"path":"\/documentation\/divar\/districtedmapviewcontroller\/mkmapviewdelegate-implementations","title":"MKMapViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/districtedmapviewcontroller","title":"DistrictedMapViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/divarsplashview\/animationdidstop(_:finished:)","title":"animationDidStop:finished:","type":"method"},{"path":"\/documentation\/divar\/divarsplashview\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/divarsplashview","title":"DivarSplashView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dividerview\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/dividerview\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/dividerview","title":"DividerView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller","title":"EditMarketplaceStoreViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/emptydataview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/emptydataview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/emptydataview","title":"EmptyDataView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/environment\/init","title":"init","type":"method"}],"path":"\/documentation\/divar\/environment","title":"Environment","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/errorcollectionviewcell\/dviderview","title":"dviderView","type":"property"},{"path":"\/documentation\/divar\/errorcollectionviewcell\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/errorcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/errorcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/errorcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/errorcollectionviewcell","title":"ErrorCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationrowcollectionviewcell\/priceview","title":"priceView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationrowcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/evaluationrowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/evaluationrowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/evaluationrowcollectionviewcell","title":"EvaluationRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationview\/bottomstackview","title":"bottomStackView","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/bounds","title":"bounds","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/indicatoricon","title":"indicatorIcon","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/indicatorlabel","title":"indicatorLabel","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/indicatorverticalline","title":"indicatorVerticalLine","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/indicatorview","title":"indicatorView","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/leftviewconstraint","title":"leftViewConstraint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/evaluationview\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/evaluationview\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"}],"path":"\/documentation\/divar\/evaluationview","title":"EvaluationView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/divider","title":"divider","type":"property"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/imageview","title":"imageView","type":"property"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/indicatorimage","title":"indicatorImage","type":"property"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/subtitle","title":"subtitle","type":"property"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/time","title":"time","type":"property"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/prepareforreuse()","title":"prepareForReuse","type":"method"}],"path":"\/documentation\/divar\/eventrowcollectionviewcell","title":"EventRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/contentrightconstraint","title":"contentRightConstraint","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/divider","title":"divider","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/dividerrightconstraint","title":"dividerRightConstraint","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/imageview","title":"imageView","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/imagewidthconstraint","title":"imageWidthConstraint","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/indicatorimage","title":"indicatorImage","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/ishighlighted","title":"highlighted","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/leftconstraint","title":"leftConstraint","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/rightconstraint","title":"rightConstraint","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/featurerowcollectionviewcell","title":"FeatureRowCollectionViewCell","type":"class"},{"path":"\/documentation\/divar\/featuredpostsflowcontroller","title":"FeaturedPostsFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview","title":"collectionView","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/submitbutton","title":"submitButton","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"}],"path":"\/documentation\/divar\/feedbackalertviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview(_:didselectitemat:)","title":"collectionView:didSelectItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/feedbackalertviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview(_:layout:insetforsectionat:)","title":"collectionView:layout:insetForSectionAtIndex:","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview(_:layout:minimuminteritemspacingforsectionat:)","title":"collectionView:layout:minimumInteritemSpacingForSectionAtIndex:","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview(_:layout:sizeforitemat:)","title":"collectionView:layout:sizeForItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/feedbackalertviewcontroller\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"}],"path":"\/documentation\/divar\/feedbackalertviewcontroller","title":"FeedbackAlertViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackanswercell\/answertitle","title":"answerTitle","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackanswercell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/feedbackanswercell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/feedbackanswercell","title":"FeedbackAnswerCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackstarcollectionviewcell\/starimageview","title":"starImageView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackstarcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/feedbackstarcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/feedbackstarcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/feedbackstarcollectionviewcell\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"}],"path":"\/documentation\/divar\/feedbackstarcollectionviewcell","title":"FeedbackStarCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/fileinfo\/previewitemtitle","title":"previewItemTitle","type":"property"},{"path":"\/documentation\/divar\/fileinfo\/previewitemurl","title":"previewItemURL","type":"property"}],"path":"\/documentation\/divar\/fileinfo","title":"FileInfo","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/tableview","title":"tableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/filtercategoryselectorcontroller","title":"FilterCategorySelectorController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/viewwilldisappear(_:)","title":"viewWillDisappear:","type":"method"}],"path":"\/documentation\/divar\/firsttimeviewcontroller","title":"FirstTimeViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/forceupdateviewcontroller\/blockingview","title":"blockingView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/forceupdateviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/forceupdateviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/forceupdateviewcontroller","title":"ForceUpdateViewController","type":"class"},{"path":"\/documentation\/divar\/formflowcontroller","title":"FormFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formatter\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/formatter\/stringforvalue(_:axis:)","title":"stringForValue:axis:","type":"method"}],"path":"\/documentation\/divar\/formatter","title":"Formatter","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardconversationcell\/adimage","title":"adImage","type":"property"},{"path":"\/documentation\/divar\/forwardconversationcell\/adtitle","title":"adTitle","type":"property"},{"path":"\/documentation\/divar\/forwardconversationcell\/lastmessagelabel","title":"lastMessageLabel","type":"property"},{"path":"\/documentation\/divar\/forwardconversationcell\/peername","title":"peerName","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardconversationcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/forwardconversationcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/forwardconversationcell","title":"ForwardConversationCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/forwardviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/forwardviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/forwardviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/forwardviewcontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/forwardviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/forwardviewcontroller","title":"ForwardViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/collectionview","title":"collectionView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/prepareforreuse()","title":"prepareForReuse","type":"method"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/rotateaction()","title":"rotateAction","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"}],"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/collectionview(_:layout:sizeforitemat:)","title":"collectionView:layout:sizeForItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"}],"path":"\/documentation\/divar\/gaugechartcollectionviewcell","title":"GaugeChartCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartitemcollectionviewcell\/indicatorview","title":"indicatorView","type":"property"},{"path":"\/documentation\/divar\/gaugechartitemcollectionviewcell\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartitemcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/gaugechartitemcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/gaugechartitemcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/gaugechartitemcollectionviewcell","title":"GaugeChartItemCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugeview\/draw(_:)","title":"drawRect:","type":"method"},{"path":"\/documentation\/divar\/gaugeview\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/gaugeview\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/gaugeview","title":"GaugeView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/tableview","title":"tableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/viewwilltransition(to:with:)","title":"viewWillTransitionToSize:withTransitionCoordinator:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/callobserver(_:callchanged:)","title":"callObserver:callChanged:","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/cxcallobserverdelegate-implementations","title":"CXCallObserverDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/mailcomposecontroller(_:didfinishwith:error:)","title":"mailComposeController:didFinishWithResult:error:","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/mfmailcomposeviewcontrollerdelegate-implementations","title":"MFMailComposeViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/messagecomposeviewcontroller(_:didfinishwith:)","title":"messageComposeViewController:didFinishWithResult:","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/mfmessagecomposeviewcontrollerdelegate-implementations","title":"MFMessageComposeViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/getcontactviewcontroller","title":"GetContactViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/groupfeaturerowcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/groupfeaturerowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/groupfeaturerowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/groupfeaturerowcollectionviewcell","title":"GroupFeatureRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/groupinfoelementview\/bottomlabel","title":"bottomLabel","type":"property"},{"path":"\/documentation\/divar\/groupinfoelementview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/groupinfoelementview\/leftdivider","title":"leftDivider","type":"property"},{"path":"\/documentation\/divar\/groupinfoelementview\/toplabel","title":"topLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/groupinfoelementview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/groupinfoelementview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/groupinfoelementview","title":"GroupInfoElementView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/groupinforowcollectionviewcell\/dividerview","title":"dividerView","type":"property"},{"path":"\/documentation\/divar\/groupinforowcollectionviewcell\/stackview","title":"stackView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/groupinforowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/groupinforowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/groupinforowcollectionviewcell","title":"GroupInfoRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/headerbarviewcontroller\/desc","title":"desc","type":"property"},{"path":"\/documentation\/divar\/headerbarviewcontroller\/headertitle","title":"headerTitle","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/headerbarviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/headerbarviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/headerbarviewcontroller","title":"HeaderBarViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/hintview\/iconimageview","title":"iconImageView","type":"property"},{"path":"\/documentation\/divar\/hintview\/iconimageviewwidthconstraint","title":"iconImageViewWidthConstraint","type":"property"},{"path":"\/documentation\/divar\/hintview\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/hintview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/hintview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/hintview","title":"HintView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/horizontalcollectionflowlayout\/flipshorizontallyinoppositelayoutdirection","title":"flipsHorizontallyInOppositeLayoutDirection","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/horizontalcollectionflowlayout\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/horizontalcollectionflowlayout\/init","title":"init","type":"method"},{"path":"\/documentation\/divar\/horizontalcollectionflowlayout\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/horizontalcollectionflowlayout\/prepare()","title":"prepareLayout","type":"method"}],"path":"\/documentation\/divar\/horizontalcollectionflowlayout","title":"HorizontalCollectionFlowLayout","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorsectionheaderreusableview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorsectionheaderreusableview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorsectionheaderreusableview","title":"IVCollectionAssetSelectorSectionHeaderReusableView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/collectionview(_:didselectitemat:)","title":"collectionView:didSelectItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/collectionview(_:willdisplay:foritemat:)","title":"collectionView:willDisplayCell:forItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller","title":"IVCollectionAssetSelectorViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcell\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcell\/layoutsubviews()","title":"layoutSubviews","type":"method"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcell\/prepareforreuse()","title":"prepareForReuse","type":"method"}],"path":"\/documentation\/divar\/ivcollectionimageassetselectorcell","title":"IVCollectionImageAssetSelectorCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/ivcollectionselectorcell\/init(style:reuseidentifier:)","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/ivcollectionselectorcell","title":"IVCollectionSelectorCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller","title":"IVCollectionSelectorViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcell\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcell\/prepareforreuse()","title":"prepareForReuse","type":"method"}],"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcell","title":"IVCollectionVideoAssetSelectorCell","type":"class"},{"path":"\/documentation\/divar\/ivflowcontroller","title":"IVFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/viewwilldisappear(_:)","title":"viewWillDisappear:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/imagepickercontroller(_:didfinishpickingmediawithinfo:)","title":"imagePickerController:didFinishPickingMediaWithInfo:","type":"method"}],"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/uiimagepickercontrollerdelegate-implementations","title":"UIImagePickerControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivvideorecorderviewcontroller","title":"IVVideoRecorderViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouselcell\/mainimage","title":"mainImage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouselcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/imagecarouselcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/imagecarouselcell","title":"ImageCarouselCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouselcollectionviewcell\/collection","title":"collection","type":"property"},{"path":"\/documentation\/divar\/imagecarouselcollectionviewcell\/divider","title":"divider","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouselcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/imagecarouselcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/imagecarouselcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/imagecarouselcollectionviewcell","title":"ImageCarouselCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouseldatasource\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/imagecarouseldatasource\/collectionview(_:didselectitemat:)","title":"collectionView:didSelectItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/imagecarouseldatasource\/collectionview(_:layout:sizeforitemat:)","title":"collectionView:layout:sizeForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/imagecarouseldatasource\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"}],"path":"\/documentation\/divar\/imagecarouseldatasource","title":"ImageCarouselDataSource","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepicker\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/imagepicker\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"},{"path":"\/documentation\/divar\/imagepicker\/initwithstyle:","title":"initWithStyle:","type":"method"},{"path":"\/documentation\/divar\/imagepicker\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/imagepicker\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/imagepicker\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/imagepicker\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"},{"path":"\/documentation\/divar\/imagepicker\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/imagepicker","title":"ImagePicker","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview","title":"collectionView","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselection\/stackview","title":"stackView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview(_:didselectitemat:)","title":"collectionView:didSelectItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview(_:layout:minimuminteritemspacingforsectionat:)","title":"collectionView:layout:minimumInteritemSpacingForSectionAtIndex:","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview(_:layout:minimumlinespacingforsectionat:)","title":"collectionView:layout:minimumLineSpacingForSectionAtIndex:","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview(_:layout:sizeforitemat:)","title":"collectionView:layout:sizeForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/numberofsections(in:)","title":"numberOfSectionsInCollectionView:","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/imagepickerimageselection","title":"ImagePickerImageSelection","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/editbtn","title":"editBtn","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/imageview","title":"imageView","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/selectionicon","title":"selectionIcon","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/selectionview","title":"selectionView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/editaction(_:)","title":"editAction:","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/layoutsubviews()","title":"layoutSubviews","type":"method"}],"path":"\/documentation\/divar\/imagepickerimageselectioncell","title":"ImagePickerImageSelectionCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerlistcell\/albumimagepreview","title":"albumImagePreview","type":"property"},{"path":"\/documentation\/divar\/imagepickerlistcell\/countlabel","title":"countLabel","type":"property"},{"path":"\/documentation\/divar\/imagepickerlistcell\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerlistcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/imagepickerlistcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/imagepickerlistcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/imagepickerlistcell","title":"ImagePickerListCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageslidercollectionviewcell\/mediaslider","title":"mediaSlider","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageslidercollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/imageslidercollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/imageslidercollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/imageslidercollectionviewcell","title":"ImageSliderCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowexpandablecollectionviewcell\/expandableview","title":"expandableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowexpandablecollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/inforowexpandablecollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/inforowexpandablecollectionviewcell","title":"InfoRowExpandableCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowtableviewcell\/titlelabel","title":"titleLabel","type":"property"},{"path":"\/documentation\/divar\/inforowtableviewcell\/valuelabel","title":"valueLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowtableviewcell\/endediting(_:)","title":"endEditing:","type":"method"},{"path":"\/documentation\/divar\/inforowtableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/inforowtableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/inforowtableviewcell\/setediting(_:animated:)","title":"setEditing:animated:","type":"method"}],"path":"\/documentation\/divar\/inforowtableviewcell","title":"InfoRowTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/attachmentbutton","title":"attachmentButton","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/recordingview","title":"recordingView","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbutton","title":"sendButton","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/textview","title":"textView","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/topdivider","title":"topDivider","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/attachmentbuttonaction(_:)","title":"attachmentButtonAction:","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonaction(_:)","title":"sendButtonAction:","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/startrecording(_:)","title":"startRecording:","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/gesturerecognizershouldbegin(_:)","title":"gestureRecognizerShouldBegin:","type":"method"}],"path":"\/documentation\/divar\/inputareaviewcontroller\/uigesturerecognizerdelegate-implementations","title":"UIGestureRecognizerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/textviewdidchange(_:)","title":"textViewDidChange:","type":"method"}],"path":"\/documentation\/divar\/inputareaviewcontroller\/uitextviewdelegate-implementations","title":"UITextViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/inputareaviewcontroller","title":"InputAreaViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jscorelocalstorage-swift.class\/extend(_:)","title":"extend:","type":"method"},{"path":"\/documentation\/divar\/jscorelocalstorage-swift.class\/init(urlsession:)","title":"initWithURLSession:","type":"method"}],"path":"\/documentation\/divar\/jscorelocalstorage-swift.class","title":"JSCoreLocalStorage","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jscorewindow-swift.class\/extend(_:)","title":"extend:","type":"method"}],"path":"\/documentation\/divar\/jscorewindow-swift.class","title":"JSCoreWindow","type":"class"},{"path":"\/documentation\/divar\/jobsflowcontroller","title":"JobsFlowController","type":"class"},{"path":"\/documentation\/divar\/jobsformflowcontroller","title":"JobsFormFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jobssubmitviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/jobssubmitviewcontroller","title":"JobsSubmitViewController","type":"class"},{"path":"\/documentation\/divar\/kaladetailsflowcontroller","title":"KalaDetailsFlowController","type":"class"},{"path":"\/documentation\/divar\/landingpageflowcontroller","title":"LandingPageFlowController","type":"class"},{"path":"\/documentation\/divar\/landlineverificationflowcontroller","title":"LandlineVerificationFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landscapewidgetviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/landscapewidgetviewcontroller","title":"LandscapeWidgetViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitlerow\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/legendtitlerow\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/legendtitlerow\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/legendtitlerow","title":"LegendTitleRow","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitlerowtableviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/legendtitlerowtableviewcell\/init(style:reuseidentifier:)","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/legendtitlerowtableviewcell","title":"LegendTitleRowTableViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/endediting(_:)","title":"endEditing:","type":"method"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/init(style:reuseidentifier:)","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/setediting(_:animated:)","title":"setEditing:animated:","type":"method"}],"path":"\/documentation\/divar\/legendtitletableviewcell","title":"LegendTitleTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/collectionview","title":"collectionView","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/stackview","title":"stackView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/collectionview(_:didselectitemat:)","title":"collectionView:didSelectItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/collectionview(_:layout:sizeforitemat:)","title":"collectionView:layout:sizeForItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller","title":"LimitedLocationSelectorViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/linechartrowcollectionviewcell\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/linechartrowcollectionviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/linechartrowcollectionviewcell\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/linechartrowcollectionviewcell","title":"LineChartRowCollectionViewCell","type":"class"},{"path":"\/documentation\/divar\/linkflowcontroller","title":"LinkFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/loadingtoast\/activityindicator","title":"activityIndicator","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/loadingtoast\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/loadingtoast\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/loadingtoast\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/loadingtoast","title":"LoadingToast","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationmanager\/locationmanager(_:didchangeauthorization:)","title":"locationManager:didChangeAuthorizationStatus:","type":"method"},{"path":"\/documentation\/divar\/locationmanager\/locationmanager(_:didfailwitherror:)","title":"locationManager:didFailWithError:","type":"method"},{"path":"\/documentation\/divar\/locationmanager\/locationmanager(_:didupdatelocations:)","title":"locationManager:didUpdateLocations:","type":"method"}],"path":"\/documentation\/divar\/locationmanager","title":"LocationManager","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationmanagerhelper\/init","title":"init","type":"method"}],"path":"\/documentation\/divar\/locationmanagerhelper","title":"LocationManagerHelper","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/districtlesscitybutton","title":"districtLessCityButton","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/districtlesscityview","title":"districtLessCityView","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchbartopviewheightconstraint","title":"searchBarTopViewHeightConstraint","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchboxholderview","title":"searchBoxHolderView","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/tableview","title":"tableView","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/toptableview","title":"topTableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/selectcitywithoutdistrict(_:)","title":"selectCityWithoutDistrict:","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/scrollviewwillenddragging(_:withvelocity:targetcontentoffset:)","title":"scrollViewWillEndDragging:withVelocity:targetContentOffset:","type":"method"}],"path":"\/documentation\/divar\/locationselectorviewcontroller\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/locationselectorviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/tableview(_:willselectrowat:)","title":"tableView:willSelectRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/locationselectorviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/locationselectorviewcontroller","title":"LocationSelectorViewController","type":"class"},{"path":"\/documentation\/divar\/mfmessageflowcontroller","title":"MFMessageFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mainflowcontroller\/handlechatnewmessage(_:)","title":"handleChatNewMessage:","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/socketconnectionchanged(_:)","title":"socketConnectionChanged:","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/updateprofilebadge()","title":"updateProfileBadge","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/userregisterationchanged(notification:)","title":"userRegisterationChangedWithNotification:","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mainflowcontroller\/tabbarcontroller(_:shouldselect:)","title":"tabBarController:shouldSelectViewController:","type":"method"}],"path":"\/documentation\/divar\/mainflowcontroller\/uitabbarcontrollerdelegate-implementations","title":"UITabBarControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mainflowcontroller","title":"MainFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/loadview()","title":"loadView","type":"method"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/mapview(_:rendererfor:)","title":"mapView:rendererForOverlay:","type":"method"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/mapview(_:viewfor:)","title":"mapView:viewForAnnotation:","type":"method"}],"path":"\/documentation\/divar\/mapdetailsviewcontroller\/mkmapviewdelegate-implementations","title":"MKMapViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mapdetailsviewcontroller","title":"MapDetailsViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/stackview","title":"stackView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller","title":"MapDistrictSelectorViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/maprowcollectionviewcell\/imageview","title":"imageView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/maprowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/maprowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/maprowcollectionviewcell","title":"MapRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/activityindicator","title":"activityIndicator","type":"property"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/imageupload","title":"imageUpload","type":"property"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/imageview","title":"imageView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell","title":"MapSelectorRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/activityindicator","title":"activityIndicator","type":"property"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/confirmlocationbutton","title":"confirmLocationButton","type":"property"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/locationlabel","title":"locationLabel","type":"property"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/mappin","title":"mapPin","type":"property"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/mapview","title":"mapView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/confirmlocationaction(_:)","title":"confirmLocationAction:","type":"method"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/mapview(_:regiondidchangeanimated:)","title":"mapView:regionDidChangeAnimated:","type":"method"}],"path":"\/documentation\/divar\/mapselectorviewcontroller\/mkmapviewdelegate-implementations","title":"MKMapViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mapselectorviewcontroller","title":"MapSelectorViewController","type":"class"},{"path":"\/documentation\/divar\/marketplaceflowcontroller","title":"MarketPlaceFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller","title":"MarketpalceFeedbackViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller","title":"MarketplaceEditAssistantViewController","type":"class"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller","title":"MarketplaceFormFlowController","type":"class"},{"path":"\/documentation\/divar\/marketplacepriceflowcontroller","title":"MarketplacePriceFlowController","type":"class"},{"path":"\/documentation\/divar\/marketplacequickeditpostflowcontroller","title":"MarketplaceQuickEditPostFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacequickeditpostvc\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/marketplacequickeditpostvc","title":"MarketplaceQuickEditPostVC","type":"class"},{"path":"\/documentation\/divar\/marketplaceregisterflowcontroller","title":"MarketplaceRegisterFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/dismiss(animated:completion:)","title":"dismissViewControllerAnimated:completion:","type":"method"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/willmove(toparent:)","title":"willMoveToParentViewController:","type":"method"}],"path":"\/documentation\/divar\/marketplacesubmitviewcontroller","title":"MarketplaceSubmitViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller","title":"MarketplaceSubscriptionViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/closebutton","title":"closeButton","type":"property"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/messagelabel","title":"messageLabel","type":"property"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/namelabel","title":"nameLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/closebuttonaction(_:)","title":"closeButtonAction:","type":"method"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/messagepreviewbarviewcontroller","title":"MessagePreviewBarViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagetoast\/messagelabel","title":"messageLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagetoast\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/messagetoast\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/messagetoast","title":"MessageToast","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/getmessagescompleted(_:)","title":"getMessagesCompleted:","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/viewdiddisappear(_:)","title":"viewDidDisappear:","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/numberofpreviewitems(in:)","title":"numberOfPreviewItemsInPreviewController:","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/previewcontroller(_:previewitemat:)","title":"previewController:previewItemAtIndex:","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/qlpreviewcontrollerdatasource-implementations","title":"QLPreviewControllerDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/previewcontrollerdiddismiss(_:)","title":"previewControllerDidDismiss:","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/qlpreviewcontrollerdelegate-implementations","title":"QLPreviewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/scrollviewdidendscrollinganimation(_:)","title":"scrollViewDidEndScrollingAnimation:","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/tableview(_:willdisplay:forrowat:)","title":"tableView:willDisplayCell:forRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagingviewcontroller","title":"MessagingViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/metrickitconfiguration\/didreceive(_:)-86zt6","title":"didReceiveMetricPayloads:","type":"method"},{"path":"\/documentation\/divar\/metrickitconfiguration\/didreceive(_:)-z3jm","title":"didReceiveDiagnosticPayloads:","type":"method"},{"path":"\/documentation\/divar\/metrickitconfiguration\/init()","title":"init","type":"method"}],"path":"\/documentation\/divar\/metrickitconfiguration","title":"MetricKitConfiguration","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/viewdiddisappear(_:)","title":"viewDidDisappear:","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"}],"path":"\/documentation\/divar\/mobilezeropriceviewcontroller","title":"MobileZeroPriceViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/stackview","title":"stackView","type":"property"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/tableview","title":"tableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/init","title":"init","type":"method"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/tableview(_:diddeselectrowat:)","title":"tableView:didDeselectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller","title":"MultiConversationDeleteViewController","type":"class"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller","title":"MyDivarHolderFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/segmentselected(_:)","title":"segmentSelected:","type":"method"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/safariviewcontrollerdidfinish(_:)","title":"safariViewControllerDidFinish:","type":"method"}],"path":"\/documentation\/divar\/mydivarholderviewcontroller\/sfsafariviewcontrollerdelegate-implementations","title":"SFSafariViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mydivarholderviewcontroller","title":"MyDivarHolderViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mypostsviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/mypostsviewcontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/divar\/mypostsviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/mypostsviewcontroller","title":"MyPostsViewController","type":"class"},{"path":"\/documentation\/divar\/nationalidverificationflowcontroller","title":"NationalIdVerificationFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/navigationcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/navigationcontroller\/initwithnavigationbarclass:toolbarclass:","title":"initWithNavigationBarClass:toolbarClass:","type":"method"},{"path":"\/documentation\/divar\/navigationcontroller\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"},{"path":"\/documentation\/divar\/navigationcontroller\/initwithrootviewcontroller:","title":"initWithRootViewController:","type":"method"},{"path":"\/documentation\/divar\/navigationcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/navigationcontroller\/navigationcontroller(_:didshow:animated:)","title":"navigationController:didShowViewController:animated:","type":"method"}],"path":"\/documentation\/divar\/navigationcontroller\/uinavigationcontrollerdelegate-implementations","title":"UINavigationControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/navigationcontroller","title":"NavigationController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/tableview(_:caneditrowat:)","title":"tableView:canEditRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/tableview(_:commit:forrowat:)","title":"tableView:commitEditingStyle:forRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/tableview(_:editingstyleforrowat:)","title":"tableView:editingStyleForRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/netshearsignorelistviewcontroller","title":"NetShearsIgnoreListViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/actionbutton","title":"actionButton","type":"property"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/mainlabel","title":"mainLabel","type":"property"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/nicknametextfield","title":"nickNameTextField","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/enterchat()","title":"enterChat","type":"method"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"textField:shouldChangeCharactersInRange:replacementString:","type":"method"}],"path":"\/documentation\/divar\/nicknameviewcontroller\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/nicknameviewcontroller","title":"NickNameViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/nopreviewitem\/previewitemtitle","title":"previewItemTitle","type":"property"},{"path":"\/documentation\/divar\/nopreviewitem\/previewitemurl","title":"previewItemURL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/nopreviewitem\/init","title":"init","type":"method"}],"path":"\/documentation\/divar\/nopreviewitem","title":"NoPreviewItem","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/noterowcollectionviewcell\/descriptionview","title":"descriptionView","type":"property"},{"path":"\/documentation\/divar\/noterowcollectionviewcell\/selectorview","title":"selectorView","type":"property"},{"path":"\/documentation\/divar\/noterowcollectionviewcell\/titleview","title":"titleView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noterowcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/noterowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/noterowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/noterowcollectionviewcell","title":"NoteRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/noterowtableviewcell\/notelabel","title":"noteLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noterowtableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/noterowtableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/noterowtableviewcell","title":"NoteRowTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/noteviewcontroller\/bottomconstraint","title":"bottomConstraint","type":"property"},{"path":"\/documentation\/divar\/noteviewcontroller\/stackholder","title":"stackHolder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noteviewcontroller\/deletenote()","title":"deleteNote","type":"method"},{"path":"\/documentation\/divar\/noteviewcontroller\/handlekeyboardstatus(_:)","title":"handleKeyboardStatus:","type":"method"},{"path":"\/documentation\/divar\/noteviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/noteviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/noteviewcontroller","title":"NoteViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/bottomstackview","title":"bottomStackView","type":"property"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/textview","title":"textView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/textview(_:shouldchangetextin:replacementtext:)","title":"textView:shouldChangeTextInRange:replacementText:","type":"method"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/textviewdidbeginediting(_:)","title":"textViewDidBeginEditing:","type":"method"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/textviewdidchange(_:)","title":"textViewDidChange:","type":"method"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/textviewdidendediting(_:)","title":"textViewDidEndEditing:","type":"method"}],"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/uitextviewdelegate-implementations","title":"UITextViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/notewithbottombarviewcontroller","title":"NoteWithBottomBarViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notesviewcontroller\/deletenote(posttoken:)","title":"deleteNoteWithPostToken:","type":"method"},{"path":"\/documentation\/divar\/notesviewcontroller\/handlelongpress(gesturerecognizer:)","title":"handleLongPressWithGestureRecognizer:","type":"method"},{"path":"\/documentation\/divar\/notesviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/notesviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/notesviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"}],"path":"\/documentation\/divar\/notesviewcontroller","title":"NotesViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noticepreviewcollectionviewcell\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/noticepreviewcollectionviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/noticepreviewcollectionviewcell\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/noticepreviewcollectionviewcell","title":"NoticePreviewCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/bottomconstraint","title":"bottomConstraint","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/bottomstack","title":"bottomStack","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/mainscrollview","title":"mainScrollView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/handlekeyboardstatus(_:)","title":"handleKeyboardStatus:","type":"method"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/numberinputviewcontroller","title":"NumberInputViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numberstepper\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/numberstepper\/leftbutton","title":"leftButton","type":"property"},{"path":"\/documentation\/divar\/numberstepper\/numberlabel","title":"numberLabel","type":"property"},{"path":"\/documentation\/divar\/numberstepper\/rightbutton","title":"rightButton","type":"property"},{"path":"\/documentation\/divar\/numberstepper\/value","title":"value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numberstepper\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/numberstepper\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/numberstepper","title":"NumberStepper","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/tableview(_:heightforheaderinsection:)","title":"tableView:heightForHeaderInSection:","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/tableview(_:viewforheaderinsection:)","title":"tableView:viewForHeaderInSection:","type":"method"}],"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"textField:shouldChangeCharactersInRange:replacementString:","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/textfielddidbeginediting(_:)","title":"textFieldDidBeginEditing:","type":"method"}],"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller","title":"NumberTextFieldDialogWidgetController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/stackview","title":"stackView","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/stackviewbottomconstraint","title":"stackViewBottomConstraint","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableview","title":"tableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableview(_:heightforheaderinsection:)","title":"tableView:heightForHeaderInSection:","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableview(_:viewforheaderinsection:)","title":"tableView:viewForHeaderInSection:","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"textField:shouldChangeCharactersInRange:replacementString:","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/textfielddidbeginediting(_:)","title":"textFieldDidBeginEditing:","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numbertextfieldpagecontroller","title":"NumberTextFieldPageController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/offlineformviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/offlineformviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/offlineformviewcontroller","title":"OfflineFormViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/offlinepageviewcontroller","title":"OfflinePageViewController","type":"class"},{"path":"\/documentation\/divar\/openpageflowcontroller","title":"OpenPageFlowController","type":"class"},{"path":"\/documentation\/divar\/operatormanagementflowcontroller","title":"OperatorManagementFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/optioncell\/indicator","title":"indicator","type":"property"},{"path":"\/documentation\/divar\/optioncell\/title","title":"title","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/optioncell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/optioncell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/optioncell\/setselected(_:animated:)","title":"setSelected:animated:","type":"method"}],"path":"\/documentation\/divar\/optioncell","title":"OptionCell","type":"class"},{"path":"\/documentation\/divar\/pancontainerview","title":"PanContainerView","type":"class"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationanimator\/animatetransition(using:)","title":"animateTransition:","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationanimator\/transitionduration(using:)","title":"transitionDuration:","type":"method"}],"path":"\/documentation\/divar\/panmodalpresentationanimator\/uiviewcontrolleranimatedtransitioning-implementations","title":"UIViewControllerAnimatedTransitioning Implementations","type":"symbol"}],"path":"\/documentation\/divar\/panmodalpresentationanimator","title":"PanModalPresentationAnimator","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/presentedview","title":"presentedView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/containerviewwilllayoutsubviews()","title":"containerViewWillLayoutSubviews","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/dismissaltransitionwillbegin()","title":"dismissalTransitionWillBegin","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/initwithpresentedviewcontroller:presentingviewcontroller:","title":"initWithPresentedViewController:presentingViewController:","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/presentationtransitiondidend(_:)","title":"presentationTransitionDidEnd:","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/presentationtransitionwillbegin()","title":"presentationTransitionWillBegin","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/viewwilltransition(to:with:)","title":"viewWillTransitionToSize:withTransitionCoordinator:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/gesturerecognizer(_:shouldberequiredtofailby:)","title":"gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/gesturerecognizer(_:shouldrecognizesimultaneouslywith:)","title":"gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:","type":"method"}],"path":"\/documentation\/divar\/panmodalpresentationcontroller\/uigesturerecognizerdelegate-implementations","title":"UIGestureRecognizerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/panmodalpresentationcontroller","title":"PanModalPresentationController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationdelegate\/init","title":"init","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationdelegate\/adaptivepresentationstyle(for:traitcollection:)","title":"adaptivePresentationStyleForPresentationController:traitCollection:","type":"method"}],"path":"\/documentation\/divar\/panmodalpresentationdelegate\/uiadaptivepresentationcontrollerdelegate-implementations","title":"UIAdaptivePresentationControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationdelegate\/animationcontroller(fordismissed:)","title":"animationControllerForDismissedController:","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationdelegate\/animationcontroller(forpresented:presenting:source:)","title":"animationControllerForPresentedController:presentingController:sourceController:","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationdelegate\/presentationcontroller(forpresented:presenting:source:)","title":"presentationControllerForPresentedViewController:presentingViewController:sourceViewController:","type":"method"}],"path":"\/documentation\/divar\/panmodalpresentationdelegate\/uiviewcontrollertransitioningdelegate-implementations","title":"UIViewControllerTransitioningDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/panmodalpresentationdelegate","title":"PanModalPresentationDelegate","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/persiannumberformatter\/getobjectvalue(_:for:errordescription:)","title":"getObjectValue:forString:errorDescription:","type":"method"},{"path":"\/documentation\/divar\/persiannumberformatter\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/persiannumberformatter\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/persiannumberformatter","title":"PersianNumberFormatter","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/personalaccountblockingview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/personalaccountblockingview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/personalaccountblockingview","title":"PersonalAccountBlockingView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerhandler\/init","title":"init","type":"method"},{"path":"\/documentation\/divar\/pickerhandler\/numberofcomponents(in:)","title":"numberOfComponentsInPickerView:","type":"method"},{"path":"\/documentation\/divar\/pickerhandler\/pickerview(_:didselectrow:incomponent:)","title":"pickerView:didSelectRow:inComponent:","type":"method"},{"path":"\/documentation\/divar\/pickerhandler\/pickerview(_:numberofrowsincomponent:)","title":"pickerView:numberOfRowsInComponent:","type":"method"},{"path":"\/documentation\/divar\/pickerhandler\/pickerview(_:titleforrow:forcomponent:)","title":"pickerView:titleForRow:forComponent:","type":"method"},{"path":"\/documentation\/divar\/pickerhandler\/pickerview(_:viewforrow:forcomponent:reusing:)","title":"pickerView:viewForRow:forComponent:reusingView:","type":"method"}],"path":"\/documentation\/divar\/pickerhandler","title":"PickerHandler","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/bottomconstraint","title":"bottomConstraint","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/stackview","title":"stackView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/dismiss(animated:completion:)","title":"dismissViewControllerAnimated:completion:","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/willmove(toparent:)","title":"willMoveToParentViewController:","type":"method"}],"path":"\/documentation\/divar\/postarchiveviewcontroller","title":"PostArchiveViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcell\/isselected","title":"selected","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/postcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postcell\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/postcell\/prepareforreuse()","title":"prepareForReuse","type":"method"}],"path":"\/documentation\/divar\/postcell","title":"PostCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/dismiss(animated:completion:)","title":"dismissViewControllerAnimated:completion:","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/willmove(toparent:)","title":"willMoveToParentViewController:","type":"method"}],"path":"\/documentation\/divar\/postcreateviewcontroller","title":"PostCreateViewController","type":"class"},{"path":"\/documentation\/divar\/postdetailsflowcontroller","title":"PostDetailsFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/actionbutton","title":"actionButton","type":"property"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/descriptionlabel","title":"descriptionLabel","type":"property"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/feedbackimage","title":"feedBackImage","type":"property"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/headerlabel","title":"headerLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/sendfeedback(_:)","title":"sendFeedBack:","type":"method"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/postfeedbackviewcontroller","title":"PostFeedBackViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactheadercell\/ourmessagedetails","title":"ourMessageDetails","type":"property"},{"path":"\/documentation\/divar\/postgetcontactheadercell\/ourmessagetitle","title":"ourMessageTitle","type":"property"},{"path":"\/documentation\/divar\/postgetcontactheadercell\/theirmessagedetails","title":"theirMessageDetails","type":"property"},{"path":"\/documentation\/divar\/postgetcontactheadercell\/theirmessagetitle","title":"theirMessageTitle","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactheadercell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/postgetcontactheadercell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postgetcontactheadercell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/postgetcontactheadercell","title":"PostGetContactHeaderCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/tableview","title":"tableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/viewwilltransition(to:with:)","title":"viewWillTransitionToSize:withTransitionCoordinator:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/callobserver(_:callchanged:)","title":"callObserver:callChanged:","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/cxcallobserverdelegate-implementations","title":"CXCallObserverDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/mailcomposecontroller(_:didfinishwith:error:)","title":"mailComposeController:didFinishWithResult:error:","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/mfmailcomposeviewcontrollerdelegate-implementations","title":"MFMailComposeViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/messagecomposeviewcontroller(_:didfinishwith:)","title":"messageComposeViewController:didFinishWithResult:","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/mfmessagecomposeviewcontrollerdelegate-implementations","title":"MFMessageComposeViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller","title":"PostGetContactsViewController","type":"class"},{"path":"\/documentation\/divar\/postlistflowcontroller","title":"PostListFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"}],"path":"\/documentation\/divar\/postlisttabbedviewcontroller","title":"PostListTabbedViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/postlistviewcontroller","title":"PostListViewController","type":"class"},{"path":"\/documentation\/divar\/postmanageflowcontroller","title":"PostManageFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorycell\/orderid","title":"orderID","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistorycell\/price","title":"price","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistorycell\/time","title":"time","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistorycell\/title","title":"title","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorycell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistorycell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/postpaymenthistorycell","title":"PostPaymentHistoryCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/tableview","title":"tableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/getdata()","title":"getData","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller","title":"PostPaymentHistoryViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postpaymentviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/postpaymentviewcontroller","title":"PostPaymentViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postredeemcodecontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postredeemcodecontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/postredeemcodecontroller","title":"PostRedeemCodeController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/bottomconstraint","title":"bottomConstraint","type":"property"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/stackholder","title":"stackHolder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/handlekeyboardstatus(_:)","title":"handleKeyboardStatus:","type":"method"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/postreportdescriptionviewcontroller","title":"PostReportDescriptionViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewlistcell\/separatorview","title":"separatorView","type":"property"},{"path":"\/documentation\/divar\/postviewlistcell\/titlelabel","title":"titleLabel","type":"property"},{"path":"\/documentation\/divar\/postviewlistcell\/valuelabel","title":"valueLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewlistcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postviewlistcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/postviewlistcell\/setselected(_:animated:)","title":"setSelected:animated:","type":"method"}],"path":"\/documentation\/divar\/postviewlistcell","title":"PostViewListCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postchitableviewcell\/messageimageview","title":"messageImageView","type":"property"},{"path":"\/documentation\/divar\/postchitableviewcell\/messagesubtitlelabel","title":"messageSubtitleLabel","type":"property"},{"path":"\/documentation\/divar\/postchitableviewcell\/messagetitlelabel","title":"messageTitleLabel","type":"property"},{"path":"\/documentation\/divar\/postchitableviewcell\/seenstatusimageview","title":"seenStatusImageView","type":"property"},{"path":"\/documentation\/divar\/postchitableviewcell\/timelabel","title":"timeLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postchitableviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/postchitableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postchitableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/postchitableviewcell\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"}],"path":"\/documentation\/divar\/postchitableviewcell","title":"PostchiTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postfixtextfield\/postfix","title":"postfix","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postfixtextfield\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/postfixtextfield\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postfixtextfield\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/postfixtextfield\/removepostfix()","title":"removePostFix","type":"method"},{"path":"\/documentation\/divar\/postfixtextfield\/texthaschanged()","title":"textHasChanged","type":"method"}],"path":"\/documentation\/divar\/postfixtextfield","title":"PostfixTextField","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/refresh()","title":"refresh","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/collectionview(_:didselectitemat:)","title":"collectionView:didSelectItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/postsviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/scrollviewdidscroll(_:)","title":"scrollViewDidScroll:","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/scrollviewshouldscrolltotop(_:)","title":"scrollViewShouldScrollToTop:","type":"method"}],"path":"\/documentation\/divar\/postsviewcontroller\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postsviewcontroller","title":"PostsViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/priceestimationcollectionviewcell\/priceview","title":"priceView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/priceestimationcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/priceestimationcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/priceestimationcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/priceestimationcollectionviewcell","title":"PriceEstimationCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/priceestimationview\/bottomstackview","title":"bottomStackView","type":"property"},{"path":"\/documentation\/divar\/priceestimationview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/priceestimationview\/leftlabel","title":"leftLabel","type":"property"},{"path":"\/documentation\/divar\/priceestimationview\/middlelabel","title":"middleLabel","type":"property"},{"path":"\/documentation\/divar\/priceestimationview\/rightlabel","title":"rightLabel","type":"property"},{"path":"\/documentation\/divar\/priceestimationview\/topleftlabel","title":"topLeftLabel","type":"property"},{"path":"\/documentation\/divar\/priceestimationview\/toprightlabel","title":"topRightLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/priceestimationview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/priceestimationview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/priceestimationview","title":"PriceEstimationView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/priceevaluationtableviewcell\/priceevaluationview","title":"priceEvaluationView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/priceevaluationtableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/priceevaluationtableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/priceevaluationtableviewcell","title":"PriceEvaluationTableViewCell","type":"class"},{"path":"\/documentation\/divar\/priceflowcontroller","title":"PriceFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pricerowcollectioncell\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/pricerowcollectioncell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/pricerowcollectioncell\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/pricerowcollectioncell\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"}],"path":"\/documentation\/divar\/pricerowcollectioncell","title":"PriceRowCollectionCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/primarybutton\/isenabled","title":"enabled","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/primarybutton\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/primarybutton\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/primarybutton","title":"PrimaryButton","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/primarybuttontableviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/primarybuttontableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/primarybuttontableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/primarybuttontableviewcell\/setselected(_:animated:)","title":"setSelected:animated:","type":"method"}],"path":"\/documentation\/divar\/primarybuttontableviewcell","title":"PrimaryButtonTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/privacycell\/textmessage","title":"textMessage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/privacycell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/privacycell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/privacycell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/privacycell","title":"PrivacyCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/qatableviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/qatableviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/qatableviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/qatableviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/qatableviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/qatableviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/qatableviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/qatableviewcontroller","title":"QATableViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/qlvideocontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/qlvideocontroller\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"},{"path":"\/documentation\/divar\/qlvideocontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/divar\/qlvideocontroller\/viewdidlayoutsubviews()","title":"viewDidLayoutSubviews","type":"method"},{"path":"\/documentation\/divar\/qlvideocontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/qlvideocontroller","title":"QLVideoController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/numberofpreviewitems(in:)","title":"numberOfPreviewItemsInPreviewController:","type":"method"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/previewcontroller(_:previewitemat:)","title":"previewController:previewItemAtIndex:","type":"method"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"}],"path":"\/documentation\/divar\/quicklookviewcontroller","title":"QuickLookViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/label","title":"label","type":"property"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/textfield","title":"textField","type":"property"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/titletextfieldconstraint","title":"titleTextfieldConstraint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/donepressed(_:)","title":"donePressed:","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/textfielddidchange(_:)","title":"textFieldDidChange:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"textField:shouldChangeCharactersInRange:replacementString:","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/textfielddidbeginediting(_:)","title":"textFieldDidBeginEditing:","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/textfieldshouldclear(_:)","title":"textFieldShouldClear:","type":"method"}],"path":"\/documentation\/divar\/rangeselecttableviewcell\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/rangeselecttableviewcell","title":"RangeSelectTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/raterowcollectionviewcell\/raterowview","title":"rateRowView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/raterowcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/raterowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/raterowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/raterowcollectionviewcell\/prepareforreuse()","title":"prepareForReuse","type":"method"}],"path":"\/documentation\/divar\/raterowcollectionviewcell","title":"RateRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/raterowview\/angryimageview","title":"angryImageView","type":"property"},{"path":"\/documentation\/divar\/raterowview\/emojislistimageview","title":"emojisListImageView","type":"property"},{"path":"\/documentation\/divar\/raterowview\/happyimageview","title":"happyImageView","type":"property"},{"path":"\/documentation\/divar\/raterowview\/neutralimageview","title":"neutralImageView","type":"property"},{"path":"\/documentation\/divar\/raterowview\/sadimageview","title":"sadImageView","type":"property"},{"path":"\/documentation\/divar\/raterowview\/satisfiedimageview","title":"satisfiedImageView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/raterowview\/angryimagetap()","title":"angryImageTap","type":"method"},{"path":"\/documentation\/divar\/raterowview\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/raterowview\/happyimagetap()","title":"happyImageTap","type":"method"},{"path":"\/documentation\/divar\/raterowview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/raterowview\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/raterowview\/neutralimagetap()","title":"neutralImageTap","type":"method"},{"path":"\/documentation\/divar\/raterowview\/sadimagetap()","title":"sadImageTap","type":"method"},{"path":"\/documentation\/divar\/raterowview\/satisfiedimagetap()","title":"satisfiedImageTap","type":"method"}],"path":"\/documentation\/divar\/raterowview","title":"RateRowView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rateviewcontroller\/bottomconstraint","title":"bottomConstraint","type":"property"},{"path":"\/documentation\/divar\/rateviewcontroller\/bottomstack","title":"bottomStack","type":"property"},{"path":"\/documentation\/divar\/rateviewcontroller\/mainscrollview","title":"mainScrollView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rateviewcontroller\/handlekeyboardstatus(_:)","title":"handleKeyboardStatus:","type":"method"},{"path":"\/documentation\/divar\/rateviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/rateviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/rateviewcontroller","title":"RateViewController","type":"class"},{"path":"\/documentation\/divar\/realestatebulkladderflowcontroller","title":"RealEstateBulkLadderFlowController","type":"class"},{"path":"\/documentation\/divar\/realestateflowcontroller","title":"RealEstateFlowController","type":"class"},{"path":"\/documentation\/divar\/realestateformflowcontroller","title":"RealEstateFormFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/collectionview","title":"collectionView","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/stackview","title":"stackView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/collectionview(_:didselectitemat:)","title":"collectionView:didSelectItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/collectionview(_:layout:sizeforitemat:)","title":"collectionView:layout:sizeForItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller","title":"RealEstateLocationSelectorViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/realestateregistrationviewcontroller","title":"RealEstateRegistrationViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatesubmitviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/realestatesubmitviewcontroller","title":"RealEstateSubmitViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/recentvisitsviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/recentvisitsviewcontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/divar\/recentvisitsviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/recentvisitsviewcontroller","title":"RecentVisitsViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/redeembutton\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/redeembutton\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/redeembutton","title":"RedeemButton","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/registeragentviewcontroller","title":"RegisterAgentViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/registerdealerviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/registerdealerviewcontroller","title":"RegisterDealerViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/dismiss(animated:completion:)","title":"dismissViewControllerAnimated:completion:","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/willmove(toparent:)","title":"willMoveToParentViewController:","type":"method"}],"path":"\/documentation\/divar\/registermarketplaceviewcontroller","title":"RegisterMarketplaceViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/layoutsubviews()","title":"layoutSubviews","type":"method"}],"path":"\/documentation\/divar\/rentslidercollectionviewcell","title":"RentSliderCollectionViewCell","type":"class"},{"path":"\/documentation\/divar\/saleassistantflowcontroller","title":"SaleAssistantFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/schemaformviewcontroller","title":"SchemaFormViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowcollectionviewcell\/ishighlighted","title":"highlighted","type":"property"},{"path":"\/documentation\/divar\/scorerowcollectionviewcell\/scorerowview","title":"scoreRowView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/scorerowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/scorerowcollectionviewcell","title":"ScoreRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowtableviewcell\/scorerowview","title":"scoreRowView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowtableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/scorerowtableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/scorerowtableviewcell\/sethighlighted(_:animated:)","title":"setHighlighted:animated:","type":"method"}],"path":"\/documentation\/divar\/scorerowtableviewcell","title":"ScoreRowTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowview\/contentrightconstraint","title":"contentRightConstraint","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/dividerview","title":"dividerView","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/imageview","title":"imageView","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/imagewidthconstaint","title":"imageWidthConstaint","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/indicatorimage","title":"indicatorImage","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/leftconstraint","title":"leftConstraint","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/scoretitle","title":"scoreTitle","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/scoreview","title":"scoreView","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/scorerowview\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/scorerowview\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"}],"path":"\/documentation\/divar\/scorerowview","title":"ScoreRowView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scoreview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/scoreview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/scoreview","title":"ScoreView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scoreviewslices\/draw(_:)","title":"drawRect:","type":"method"},{"path":"\/documentation\/divar\/scoreviewslices\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/scoreviewslices\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/scoreviewslices","title":"ScoreViewSlices","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/screenwidgetviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/screenwidgetviewcontroller","title":"ScreenWidgetViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/intrinsiccontentsize","title":"intrinsicContentSize","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/layoutsubviews()","title":"layoutSubviews","type":"method"}],"path":"\/documentation\/divar\/scrollingpagecontrol","title":"ScrollingPageControl","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingstackview\/directionallayoutmargins","title":"directionalLayoutMargins","type":"property"},{"path":"\/documentation\/divar\/scrollingstackview\/layoutmargins","title":"layoutMargins","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingstackview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/scrollingstackview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/scrollingstackview","title":"ScrollingStackView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/init","title":"init","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/searchandselectstringviewcontroller","title":"SearchAndSelectStringViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/resetform(_:)","title":"resetForm:","type":"method"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/searchfilterviewcontroller","title":"SearchFilterViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryrowtablecell\/searchhistoryrow","title":"searchHistoryRow","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryrowtablecell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/searchhistoryrowtablecell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/searchhistoryrowtablecell\/setselected(_:animated:)","title":"setSelected:animated:","type":"method"}],"path":"\/documentation\/divar\/searchhistoryrowtablecell","title":"SearchHistoryRowTableCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/init(nibname:bundle:)","title":"initWithNibName:bundle:","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/searchhistoryviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/searchhistoryviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/searchhistoryviewcontroller","title":"SearchHistoryViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchresultcollectionviewcell\/searchresultview","title":"searchResultView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchresultcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/searchresultcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/searchresultcollectionviewcell","title":"SearchResultCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchresultrowtablecell\/searchresultview","title":"searchResultView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchresultrowtablecell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/searchresultrowtablecell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"path":"\/documentation\/divar\/searchresultrowtablecell\/setselected(_:animated:)","title":"setSelected:animated:","type":"method"}],"path":"\/documentation\/divar\/searchresultrowtablecell","title":"SearchResultRowTableCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionrowcell\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionrowcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionrowcell\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/searchsuggestionrowcell","title":"SearchSuggestionRowCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/searchsuggestionsviewcontroller","title":"SearchSuggestionsViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/searchviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/searchviewcontroller","title":"SearchViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybutton\/isenabled","title":"enabled","type":"property"},{"path":"\/documentation\/divar\/secondarybutton\/ishighlighted","title":"highlighted","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybutton\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/secondarybutton\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/secondarybutton\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/secondarybutton","title":"SecondaryButton","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttoncollectionviewcell\/secondarybutton","title":"secondaryButton","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttoncollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/secondarybuttoncollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/secondarybuttoncollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/secondarybuttoncollectionviewcell","title":"SecondaryButtonCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttontableviewcell\/secondarybutton","title":"secondaryButton","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttontableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/secondarybuttontableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttontableviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"}],"path":"\/documentation\/divar\/secondarybuttontableviewcell","title":"SecondaryButtonTableViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sectiondividercollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/sectiondividercollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/sectiondividercollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/sectiondividercollectionviewcell","title":"SectionDividerCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbar\/toolbar","title":"toolbar","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbar\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/segmentedbar\/segmentvaluechanged()","title":"segmentValueChanged","type":"method"},{"path":"\/documentation\/divar\/segmentedbar\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/segmentedbar","title":"SegmentedBar","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowcollectionviewcell\/ishighlighted","title":"highlighted","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/selectorrowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/selectorrowcollectionviewcell","title":"SelectorRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowtableviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/selectorrowtableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/selectorrowtableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/selectorrowtableviewcell","title":"SelectorRowTableViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller","title":"SelectorWithSearchBarViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/sendfeedbackviewcontroller","title":"SendFeedbackViewController","type":"class"},{"path":"\/documentation\/divar\/settingsflowcontroller","title":"SettingsFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/settingsviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/settingsviewcontroller","title":"SettingsViewController","type":"class"},{"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontroller","title":"ShahkarLandlineVerificationFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview","title":"tableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/singlehierarchybasecontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:heightforheaderinsection:)","title":"tableView:heightForHeaderInSection:","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:viewforheaderinsection:)","title":"tableView:viewForHeaderInSection:","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:willdisplay:forrowat:)","title":"tableView:willDisplayCell:forRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/singlehierarchybasecontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlehierarchybasecontroller","title":"SingleHierarchyBaseController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchycontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/singlehierarchycontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/singlehierarchycontroller","title":"SingleHierarchyController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/tableview(_:diddeselectrowat:)","title":"tableView:didDeselectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlemultibaseviewcontroller","title":"SingleMultiBaseViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/tableview(_:didselectrowat:)","title":"tableView:didSelectRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/singlemultilocationviewcontroller","title":"SingleMultiLocationViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlepushselectorcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/singlepushselectorcell\/init(style:reuseidentifier:)","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/singlepushselectorcell","title":"SinglePushSelectorCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sonnatsuggestionrowtableviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/sonnatsuggestionrowtableviewcell\/init(style:reuseidentifier:)","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/sonnatsuggestionrowtableviewcell","title":"SonnatSuggestionRowTableViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/primarybuttontapped()","title":"primaryButtonTapped","type":"method"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/splitbuttonbarviewcontroller","title":"SplitButtonBarViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/statefulrowcollectionviewcell\/divider","title":"divider","type":"property"},{"path":"\/documentation\/divar\/statefulrowcollectionviewcell\/ishighlighted","title":"highlighted","type":"property"},{"path":"\/documentation\/divar\/statefulrowcollectionviewcell\/statefulview","title":"statefulView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/statefulrowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/statefulrowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/statefulrowcollectionviewcell","title":"StatefulRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/statefultableviewcell\/statefulview","title":"statefulView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/statefultableviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/statefultableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/statefultableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/statefultableviewcell","title":"StatefulTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/statefulview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/statefulview\/titlelabel","title":"titleLabel","type":"property"},{"path":"\/documentation\/divar\/statefulview\/valuelabel","title":"valueLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/statefulview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/statefulview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/statefulview","title":"StatefulView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbar\/defaultstepcolor","title":"defaultStepColor","type":"property"},{"path":"\/documentation\/divar\/stepindicatorbar\/initialstep","title":"initialStep","type":"property"},{"path":"\/documentation\/divar\/stepindicatorbar\/stepcolor","title":"stepColor","type":"property"},{"path":"\/documentation\/divar\/stepindicatorbar\/stepsnumber","title":"stepsNumber","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbar\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/stepindicatorbar\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/stepindicatorbar\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/stepindicatorbar","title":"StepIndicatorBar","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorrowcollectionviewcell\/label","title":"label","type":"property"},{"path":"\/documentation\/divar\/stepindicatorrowcollectionviewcell\/stepindicatorbar","title":"stepIndicatorBar","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorrowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/stepindicatorrowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/stepindicatorrowcollectionviewcell","title":"StepIndicatorRowCollectionViewCell","type":"class"},{"path":"\/documentation\/divar\/submitpromotionflowcontroller","title":"SubmitPromotionFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell\/indicatoricon","title":"indicatorIcon","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell","title":"SubscriptionRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/subtitlerowcollectionviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/subtitlerowcollectionviewcell\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/subtitlerowcollectionviewcell","title":"SubtitleRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestioncollectionviewcell\/collection","title":"collection","type":"property"},{"path":"\/documentation\/divar\/suggestioncollectionviewcell\/divider","title":"divider","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestioncollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/suggestioncollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/suggestioncollectionviewcell","title":"SuggestionCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionitemcell\/headerimage","title":"headerImage","type":"property"},{"path":"\/documentation\/divar\/suggestionitemcell\/lasttitle","title":"lastTitle","type":"property"},{"path":"\/documentation\/divar\/suggestionitemcell\/primaytitle","title":"primayTitle","type":"property"},{"path":"\/documentation\/divar\/suggestionitemcell\/secondarytitle","title":"secondaryTitle","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionitemcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/suggestionitemcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/suggestionitemcell","title":"SuggestionItemCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionrowcollectionviewcell\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/suggestionrowcollectionviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/suggestionrowcollectionviewcell\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/suggestionrowcollectionviewcell","title":"SuggestionRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/barswitch","title":"barSwitch","type":"property"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/switchchangedaction(_:)","title":"switchChangedAction:","type":"method"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/switchbarviewcontroller","title":"SwitchBarViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/switchtableviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/switchtableviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/switchtableviewcell\/init(style:reuseidentifier:)","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/switchtableviewcell","title":"SwitchTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/switchview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/switchview\/switchlabel","title":"switchLabel","type":"property"},{"path":"\/documentation\/divar\/switchview\/switchoutlet","title":"switchOutlet","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/switchview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/switchview\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/switchview\/switchvaluecahnged(_:)","title":"switchValueCahnged:","type":"method"}],"path":"\/documentation\/divar\/switchview","title":"SwitchView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tabbedlinechartcollectionviewcell\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/tabbedlinechartcollectionviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/tabbedlinechartcollectionviewcell\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/tabbedlinechartcollectionviewcell","title":"TabbedLineChartCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/contentstackview","title":"contentStackView","type":"property"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/tabsviewholder","title":"tabsViewHolder","type":"property"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/tabsviewholderheight","title":"tabsViewHolderHeight","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/segmentvaluechanged()","title":"segmentValueChanged","type":"method"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/position(for:)","title":"positionForBar:","type":"method"}],"path":"\/documentation\/divar\/tabbedpageviewcontroller\/uibarpositioningdelegate-implementations","title":"UIBarPositioningDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/tabbedpageviewcontroller","title":"TabbedPageViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistcell\/closebutton","title":"closeButton","type":"property"},{"path":"\/documentation\/divar\/taglistcell\/iconimageview","title":"iconImageView","type":"property"},{"path":"\/documentation\/divar\/taglistcell\/titlecenterxconstraint","title":"titleCenterXConstraint","type":"property"},{"path":"\/documentation\/divar\/taglistcell\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/closebuttonclicked(_:)","title":"closeButtonClicked:","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/prepareforreuse()","title":"prepareForReuse","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"}],"path":"\/documentation\/divar\/taglistcell","title":"TagListCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistcollectionviewcell\/taglistview","title":"tagListView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/taglistcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/taglistcollectionviewcell","title":"TagListCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistdelegateanddatasource\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/taglistdelegateanddatasource\/collectionview(_:layout:sizeforitemat:)","title":"collectionView:layout:sizeForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/taglistdelegateanddatasource\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"}],"path":"\/documentation\/divar\/taglistdelegateanddatasource","title":"TagListDelegateAndDataSource","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistflowlayout\/init","title":"init","type":"method"},{"path":"\/documentation\/divar\/taglistflowlayout\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/taglistflowlayout\/prepare()","title":"prepareLayout","type":"method"}],"path":"\/documentation\/divar\/taglistflowlayout","title":"TagListFlowLayout","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/flipshorizontallyinoppositelayoutdirection","title":"flipsHorizontallyInOppositeLayoutDirection","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/init","title":"init","type":"method"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/layoutattributesforelements(in:)","title":"layoutAttributesForElementsInRect:","type":"method"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/prepare()","title":"prepareLayout","type":"method"}],"path":"\/documentation\/divar\/taglistmultilineflowlayout","title":"TagListMultilineFlowLayout","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistview\/collectionview","title":"collectionView","type":"property"},{"path":"\/documentation\/divar\/taglistview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/taglistview\/dividerview","title":"dividerView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistview\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/taglistview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/taglistview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/taglistview","title":"TagListView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistviewcontroller\/collectionview","title":"collectionView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistviewcontroller\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/taglistviewcontroller\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"},{"path":"\/documentation\/divar\/taglistviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistviewcontroller\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/taglistviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"}],"path":"\/documentation\/divar\/taglistviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistviewcontroller\/collectionview(_:didselectitemat:)","title":"collectionView:didSelectItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/taglistviewcontroller\/collectionview(_:willdisplay:foritemat:)","title":"collectionView:willDisplayCell:forItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/taglistviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistviewcontroller\/collectionview(_:layout:sizeforitemat:)","title":"collectionView:layout:sizeForItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/taglistviewcontroller\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"}],"path":"\/documentation\/divar\/taglistviewcontroller","title":"TagListViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tagview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/tagview\/labelrightconstraint","title":"labelRightConstraint","type":"property"},{"path":"\/documentation\/divar\/tagview\/labelrighttoimageconstraint","title":"labelRightToImageConstraint","type":"property"},{"path":"\/documentation\/divar\/tagview\/mainimage","title":"mainImage","type":"property"},{"path":"\/documentation\/divar\/tagview\/mainlabel","title":"mainLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tagview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/tagview\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/tagview\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"}],"path":"\/documentation\/divar\/tagview","title":"TagView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tagviewcollectionviewcell\/tagview","title":"tagView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tagviewcollectionviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/tagviewcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/tagviewcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/tagviewcollectionviewcell","title":"TagViewCollectionViewCell","type":"class"},{"path":"\/documentation\/divar\/testphonenumberflowcontroller","title":"TestPhoneNumberFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldhintview\/hintview","title":"hintView","type":"property"},{"path":"\/documentation\/divar\/textfieldhintview\/textfieldview","title":"textFieldView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldhintview\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/textfieldhintview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/textfieldhintview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/textfieldhintview","title":"TextFieldHintView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/textfield","title":"textField","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/awakefromnib()","title":"awakeFromNib","type":"method"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/initwithstyle:reuseidentifier:","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/textfieldtableviewcell","title":"TextFieldTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/textfieldview\/textfield","title":"textField","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/textfieldview\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/textfieldview\/textfielddidchange(_:)","title":"textFieldDidChange:","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldview\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"textField:shouldChangeCharactersInRange:replacementString:","type":"method"}],"path":"\/documentation\/divar\/textfieldview\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/textfieldview","title":"TextFieldView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tinytooltipview\/backgroundview","title":"backgroundView","type":"property"},{"path":"\/documentation\/divar\/tinytooltipview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/tinytooltipview\/imagewidthconstraint","title":"imageWidthConstraint","type":"property"},{"path":"\/documentation\/divar\/tinytooltipview\/mainimage","title":"mainImage","type":"property"},{"path":"\/documentation\/divar\/tinytooltipview\/mainlabel","title":"mainLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tinytooltipview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/tinytooltipview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/tinytooltipview","title":"TinyTooltipView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/titlerowcollectionviewcell\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/titlerowcollectionviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/titlerowcollectionviewcell\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/titlerowcollectionviewcell","title":"TitleRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/titlerowtableviewcell\/endediting(_:)","title":"endEditing:","type":"method"},{"path":"\/documentation\/divar\/titlerowtableviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/titlerowtableviewcell\/init(style:reuseidentifier:)","title":"initWithStyle:reuseIdentifier:","type":"method"}],"path":"\/documentation\/divar\/titlerowtableviewcell","title":"TitleRowTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/titleview\/text","title":"text","type":"property"},{"path":"\/documentation\/divar\/titleview\/textcolor","title":"textColor","type":"property"},{"path":"\/documentation\/divar\/titleview\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/titleview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/titleview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/titleview","title":"TitleView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/toolboxcollectionviewcell\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/toolboxcollectionviewcell\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/toolboxcollectionviewcell\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/toolboxcollectionviewcell\/prepareforreuse()","title":"prepareForReuse","type":"method"}],"path":"\/documentation\/divar\/toolboxcollectionviewcell","title":"ToolboxCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltipcontainerview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/tooltipcontainerview\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/tooltipcontainerview\/layoutsubviews()","title":"layoutSubviews","type":"method"},{"path":"\/documentation\/divar\/tooltipcontainerview\/point(inside:with:)","title":"pointInside:withEvent:","type":"method"}],"path":"\/documentation\/divar\/tooltipcontainerview","title":"TooltipContainerView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltipview\/backgroundview","title":"backgroundView","type":"property"},{"path":"\/documentation\/divar\/tooltipview\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/tooltipview\/imagewidthconstraint","title":"imageWidthConstraint","type":"property"},{"path":"\/documentation\/divar\/tooltipview\/mainimage","title":"mainImage","type":"property"},{"path":"\/documentation\/divar\/tooltipview\/mainlabel","title":"mainLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltipview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/tooltipview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/tooltipview","title":"TooltipView","type":"class"},{"path":"\/documentation\/divar\/transactionflowcontroller","title":"TransactionFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/numberofsections(in:)","title":"numberOfSectionsInTableView:","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview(_:cellforrowat:)","title":"tableView:cellForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview(_:numberofrowsinsection:)","title":"tableView:numberOfRowsInSection:","type":"method"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview(_:heightforheaderinsection:)","title":"tableView:heightForHeaderInSection:","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview(_:heightforrowat:)","title":"tableView:heightForRowAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview(_:viewforheaderinsection:)","title":"tableView:viewForHeaderInSection:","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview(_:willdisplay:forrowat:)","title":"tableView:willDisplayCell:forRowAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"textField:shouldChangeCharactersInRange:replacementString:","type":"method"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller","title":"TransformablePriceViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/primarybutton","title":"primaryButton","type":"property"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/secondarybutton","title":"secondaryButton","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/primarybuttonaction(_:)","title":"primaryButtonAction:","type":"method"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/secondarybuttonaction(_:)","title":"secondaryButtonAction:","type":"method"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/twinbuttonsviewcontroller","title":"TwinButtonsViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/unexpandablerowcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/unexpandablerowcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/unexpandablerowcollectionviewcell","title":"UnexpandableRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/updateviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"}],"path":"\/documentation\/divar\/updateviewcontroller","title":"UpdateViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/usedpriceformviewcontroller","title":"UsedPriceFormViewController","type":"class"},{"path":"\/documentation\/divar\/userregisterflowcontroller","title":"UserRegisterFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrowcontroller\/bottomconstraint","title":"bottomConstraint","type":"property"},{"path":"\/documentation\/divar\/validatorrowcontroller\/bottomstack","title":"bottomStack","type":"property"},{"path":"\/documentation\/divar\/validatorrowcontroller\/mainscrollview","title":"mainScrollView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrowcontroller\/handlekeyboardstatus(_:)","title":"handleKeyboardStatus:","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/validatorrowcontroller","title":"ValidatorRowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/bottomconstraint","title":"bottomConstraint","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/bottomstack","title":"bottomStack","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/mainscrollview","title":"mainScrollView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/handlekeyboardstatus(_:)","title":"handleKeyboardStatus:","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/verificationcodeinputviewcontroller","title":"VerificationCodeInputViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoplayerview\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/videoplayerview\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/videoplayerview\/observevalue(forkeypath:of:change:context:)","title":"observeValueForKeyPath:ofObject:change:context:","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videoplayerview\/layerclass","title":"layerClass","type":"property"}],"path":"\/documentation\/divar\/videoplayerview","title":"VideoPlayerView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videopreviewcontroller\/bottomstack","title":"bottomStack","type":"property"},{"path":"\/documentation\/divar\/videopreviewcontroller\/playbutton","title":"playButton","type":"property"},{"path":"\/documentation\/divar\/videopreviewcontroller\/playerview","title":"playerView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videopreviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/videopreviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/videopreviewcontroller","title":"VideoPreviewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videorecorder\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/videorecorder\/initwithnavigationbarclass:toolbarclass:","title":"initWithNavigationBarClass:toolbarClass:","type":"method"},{"path":"\/documentation\/divar\/videorecorder\/initwithnibname:bundle:","title":"initWithNibName:bundle:","type":"method"},{"path":"\/documentation\/divar\/videorecorder\/initwithrootviewcontroller:","title":"initWithRootViewController:","type":"method"},{"path":"\/documentation\/divar\/videorecorder\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/videorecorder","title":"VideoRecorder","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/blinkingview","title":"blinkingView","type":"property"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/duration","title":"duration","type":"property"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/erasebutton","title":"eraseButton","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/audioplayerdidfinishplaying(_:successfully:)","title":"audioPlayerDidFinishPlaying:successfully:","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/dismissvoice(_:)","title":"dismissVoice:","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/handletimerlabel()","title":"handleTimerLabel","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/stoprecording()","title":"stopRecording","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/voicerecorderviewcontroller","title":"VoiceRecorderViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/warningpreviewview\/closebuttonaction(_:)","title":"closeButtonAction:","type":"method"},{"path":"\/documentation\/divar\/warningpreviewview\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/warningpreviewview\/init(frame:)","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/warningpreviewview","title":"WarningPreviewView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonbarcollectionviewcell\/stackview","title":"stackView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonbarcollectionviewcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/widebuttonbarcollectionviewcell\/initwithframe:","title":"initWithFrame:","type":"method"}],"path":"\/documentation\/divar\/widebuttonbarcollectionviewcell","title":"WideButtonBarCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/bottomsuperviewconstraint","title":"bottomSuperViewConstraint","type":"property"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/button","title":"button","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/buttonaction(_:)","title":"buttonAction:","type":"method"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/widebuttonviewcontroller","title":"WideButtonViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/wideimageupload\/borderimageview","title":"borderImageView","type":"property"},{"path":"\/documentation\/divar\/wideimageupload\/contentview","title":"contentView","type":"property"},{"path":"\/documentation\/divar\/wideimageupload\/imageview","title":"imageView","type":"property"},{"path":"\/documentation\/divar\/wideimageupload\/titlelabel","title":"titleLabel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/wideimageupload\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/wideimageupload\/init(frame:)","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/wideimageupload\/traitcollectiondidchange(_:)","title":"traitCollectionDidChange:","type":"method"}],"path":"\/documentation\/divar\/wideimageupload","title":"WideImageUpload","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedbottomsheetviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedbottomsheetviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/widgetbasedbottomsheetviewcontroller","title":"WidgetBasedBottomSheetViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:diddeselectitemat:)","title":"collectionView:didDeselectItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:didenddisplaying:foritemat:)","title":"collectionView:didEndDisplayingCell:forItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:didselectitemat:)","title":"collectionView:didSelectItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:shouldselectitemat:)","title":"collectionView:shouldSelectItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:willdisplay:foritemat:)","title":"collectionView:willDisplayCell:forItemAtIndexPath:","type":"method"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/scrollviewdidscroll(_:)","title":"scrollViewDidScroll:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/scrollviewwillbegindragging(_:)","title":"scrollViewWillBeginDragging:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/scrollviewwillenddragging(_:withvelocity:targetcontentoffset:)","title":"scrollViewWillEndDragging:withVelocity:targetContentOffset:","type":"method"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller","title":"WidgetBasedCollectionViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller","title":"WidgetBasedFilterViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/more()","title":"more","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/sharepost()","title":"sharePost","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/viewdidappear(_:)","title":"viewDidAppear:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/viewdidlayoutsubviews()","title":"viewDidLayoutSubviews","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/viewwilldisappear(_:)","title":"viewWillDisappear:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/viewwilllayoutsubviews()","title":"viewWillLayoutSubviews","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/willmove(toparent:)","title":"willMoveToParentViewController:","type":"method"}],"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller","title":"WidgetBasedPostDetailsViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller\/sharepost()","title":"sharePost","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller","title":"WidgetBasedPostPreviewViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/barbuttonitembuttontapped(sender:)","title":"barButtonItemButtonTappedWithSender:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/barbuttonitemtapped(sender:)","title":"barButtonItemTappedWithSender:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/collectionview(_:cellforitemat:)","title":"collectionView:cellForItemAtIndexPath:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"collectionView:numberOfItemsInSection:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller","title":"WidgetBasedSegmentedViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/init()","title":"init","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"}],"path":"\/documentation\/divar\/widgetbasedviewcontroller","title":"WidgetBasedViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetcell\/initwithcoder:","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/widgetcell\/initwithframe:","title":"initWithFrame:","type":"method"},{"path":"\/documentation\/divar\/widgetcell\/prepareforreuse()","title":"prepareForReuse","type":"method"}],"path":"\/documentation\/divar\/widgetcell","title":"WidgetCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/xmlhttprequest-swift.class\/extend(_:)","title":"extend:","type":"method"},{"path":"\/documentation\/divar\/xmlhttprequest-swift.class\/init(sessionconfig:)","title":"initWithSessionConfig:","type":"method"},{"path":"\/documentation\/divar\/xmlhttprequest-swift.class\/init(urlsession:)","title":"initWithURLSession:","type":"method"}],"path":"\/documentation\/divar\/xmlhttprequest-swift.class","title":"XMLHttpRequest","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/init(coder:)","title":"initWithCoder:","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/viewdiddisappear(_:)","title":"viewDidDisappear:","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/viewdidload()","title":"viewDidLoad","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/viewwillappear(_:)","title":"viewWillAppear:","type":"method"}],"path":"\/documentation\/divar\/zeropriceviewcontroller","title":"ZeroPriceViewController","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jscorelocalstorageprotocol\/getitem(_:)","title":"getItem:","type":"method"},{"path":"\/documentation\/divar\/jscorelocalstorageprotocol\/setitem(_:_:)","title":"setItem::","type":"method"}],"path":"\/documentation\/divar\/jscorelocalstorageprotocol","title":"JSCoreLocalStorage","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jscorewindowprotocol\/cleartimeout(_:)","title":"clearTimeout:","type":"method"},{"path":"\/documentation\/divar\/jscorewindowprotocol\/localstorage()","title":"localStorage","type":"method"},{"path":"\/documentation\/divar\/jscorewindowprotocol\/setinterval(_:_:)","title":"setInterval::","type":"method"},{"path":"\/documentation\/divar\/jscorewindowprotocol\/settimeout(_:_:)","title":"setTimeout::","type":"method"}],"path":"\/documentation\/divar\/jscorewindowprotocol","title":"JSCoreWindow","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/onerror","title":"onerror","type":"property"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/onload","title":"onload","type":"property"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/onreadystatechange","title":"onreadystatechange","type":"property"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/readystate","title":"readyState","type":"property"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/responsetext","title":"responseText","type":"property"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/status","title":"status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/getallresponseheaders()","title":"getAllResponseHeaders","type":"method"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/getreponseheader(_:)","title":"getReponseHeader:","type":"method"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/open(_:_:_:)","title":"open:::","type":"method"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/send(_:)","title":"send:","type":"method"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/setrequestheader(_:_:)","title":"setRequestHeader::","type":"method"}],"path":"\/documentation\/divar\/xmlhttprequestprotocol","title":"XMLHttpRequest","type":"protocol"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/savedpostlisttype\/bookmarks","title":"SavedPostListTypeBookmarks","type":"case"},{"path":"\/documentation\/divar\/savedpostlisttype\/myposts","title":"SavedPostListTypeMyPosts","type":"case"},{"path":"\/documentation\/divar\/savedpostlisttype\/notes","title":"SavedPostListTypeNotes","type":"case"},{"path":"\/documentation\/divar\/savedpostlisttype\/recents","title":"SavedPostListTypeRecents","type":"case"}],"path":"\/documentation\/divar\/savedpostlisttype","title":"SavedPostListType","type":"enum"}],"path":"\/documentation\/divar","title":"Divar","type":"module"}],"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/apnshandler\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/apnshandler\/application(_:didfinishlaunchingwithoptions:)","title":"func application(UIApplication, didFinishLaunchingWithOptions: [UIApplication.LaunchOptionsKey : Any]?)","type":"method"},{"path":"\/documentation\/divar\/apnshandler\/login(identifier:)","title":"func login(identifier: String)","type":"method"},{"path":"\/documentation\/divar\/apnshandler\/logout()","title":"func logout()","type":"method"}],"path":"\/documentation\/divar\/apnshandler","title":"APNSHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/init(container:previousdata:shouldaddbuttonrow:)","title":"init(container: AbstractFormViewControllerDIContainer, previousData: [String : Any], shouldAddButtonRow: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/delegate","title":"var delegate: AbstractFormViewContorllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/formaccessoryviewsttribute","title":"var formAccessoryViewSttribute: FormAccessoryViewAttribute","type":"property"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/previousdata","title":"var previousData: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/shouldaddbuttonrow","title":"var shouldAddButtonRow: Bool","type":"property"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/slug","title":"var slug: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/didgetlocalvalidationerrors(errors:)","title":"func didGetLocalValidationErrors(errors: [BaseRow : [ValidationError]])","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/executefield(withkey:completion:)","title":"func executeField(withKey: String, completion: ((_ row: BaseRow?) -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/generateform(with:)","title":"func generateForm(with: Schema) -> Form","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/handlestandarderror(error:)","title":"func handleStandardError(error: Base_BadRequestJsonSchemaData)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/implementsubmitvalidationerrors(properties:)","title":"func implementSubmitValidationErrors(properties: [String : SubmitValidationError])","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/refreshform(form:metaveriosn:)","title":"func refreshForm(form: Form, metaVeriosn: Int?)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/removefocusedrowvalue()","title":"func removeFocusedRowValue()","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/resetform()","title":"func resetForm()","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/savedraft(on:)","title":"func saveDraft(on: DocumentHelperProtocol)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/submitform(form:draft:)","title":"func submitForm(form: Form, draft: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/valuehasbeenchanged(for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/viewdidlayoutsubviews()","title":"func viewDidLayoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/viewwilldisappear(_:)","title":"func viewWillDisappear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/alak(_:didrequesttoperform:)","title":"func alak(AlakBaseRow, didRequestToPerform: Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/abstractformviewcontroller\/alakbaserowtoparentdelegate-implementations","title":"AlakBaseRowToParentDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/imageselectorrow(_:didrequestchangesubmitbuttonstate:)","title":"func imageSelectorRow(ImageSelectorRow, didRequestChangeSubmitButtonState: Bool)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/imageselectorrow(_:didrequestopencameracontroller:)","title":"func imageSelectorRow(ImageSelectorRow, didRequestOpenCameraController: ImagePicker)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/imageselectorrow(_:didrequestshowoptions:)","title":"func imageSelectorRow(ImageSelectorRow, didRequestShowOptions: [SheetItem])","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/imageselectorrow(_:uploaddidfailwitherror:)","title":"func imageSelectorRow(ImageSelectorRow, uploadDidFailWithError: Error?)","type":"method"}],"path":"\/documentation\/divar\/abstractformviewcontroller\/imageselectorrowdelegate-implementations","title":"ImageSelectorRowDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/openivcollectionassetselectorviewcontroller(pickerdelegate:selectorviewmodelconfiguration:selecteditemviewmodelconfiguration:)","title":"func openIVCollectionAssetSelectorViewController(pickerDelegate: IVCollectionAssetSelectorViewModelDelegate, selectorViewModelConfiguration: IVCollectionAssetSelectorViewModelConfiguration, selectedItemViewModelConfiguration: IVCollectionAssetSelectorSelectedItemViewModelConfiguration)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/openivcollectionselectorviewcontroller(configuration:delegate:)","title":"func openIVCollectionSelectorViewController(configuration: IVCollectionSelectorViewModelInitConfiguration, delegate: IVCollectionSelectorViewModelDelegate?)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/openivvideorecorderviewcontroller(configuration:delegate:)","title":"func openIVVideoRecorderViewController(configuration: IVVideoRecorderViewModelConfiguration, delegate: IVVideoRecorderViewModelDelegate?)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/videowidgetrow(_:didrequestshowoptions:title:)","title":"func videoWidgetRow(VideoSelectorWidgetRow, didRequestShowOptions: [SheetItem], title: String?)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/videowidgetrow(_:didrequestshowoptions:with:title:)","title":"func videoWidgetRow(VideoSelectorWidgetRow, didRequestShowOptions: [SheetItem], with: SheetBannerModel, title: String?)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/videowidgetrow(_:didrequestshowtoast:)","title":"func videoWidgetRow(VideoSelectorWidgetRow, didRequestShowToast: String)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/videowidgetrowrequestedtograntcamerapermission(_:permissionresult:)","title":"func videoWidgetRowRequestedToGrantCameraPermission(VideoSelectorWidgetRow, permissionResult: (Bool) -> Void)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontroller\/videowidgetrowrequestedtograntgallerypermission(_:permissionresult:)","title":"func videoWidgetRowRequestedToGrantGalleryPermission(VideoSelectorWidgetRow, permissionResult: (Bool) -> Void)","type":"method"}],"path":"\/documentation\/divar\/abstractformviewcontroller\/videoselectorwidgetrowtoparentcontrollerdelegate-implementations","title":"VideoSelectorWidgetRowToParentControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/abstractformviewcontroller","title":"AbstractFormViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/delegate","title":"var delegate: AbstractTableViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/offset","title":"var offset: CLongLong","type":"property"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/page","title":"var page: Int","type":"property"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/posts","title":"var posts: [CellConfigurator]","type":"property"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/setupui","title":"var setupUI: Void","type":"property"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/table","title":"var table: AdvancedTableView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/addnewpage(_:)","title":"func addNewPage([CellConfigurator])","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/deselect(at:)","title":"func deselect(at: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/refresh()","title":"func refresh()","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/reloaddata()","title":"func reloadData()","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/setuppulltorefresh()","title":"func setupPullToRefresh()","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/configurablecell(_:with:datachange:payload:)","title":"func configurableCell(UITableViewCell, with: IndexPath?, dataChange: ConfigurableCellEnum, payload: Any)","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/configurablecell(_:with:select:)","title":"func configurableCell(UITableViewCell, with: IndexPath?, select: ConfigurableCellEnum)","type":"method"}],"path":"\/documentation\/divar\/abstracttableviewcontroller\/configurablecelldelegate-implementations","title":"ConfigurableCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/scrollviewdidscroll(_:)","title":"func scrollViewDidScroll(UIScrollView)","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/scrollviewshouldscrolltotop(_:)","title":"func scrollViewShouldScrollToTop(UIScrollView) -> Bool","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/scrollviewwillenddragging(_:withvelocity:targetcontentoffset:)","title":"func scrollViewWillEndDragging(UIScrollView, withVelocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>)","type":"method"}],"path":"\/documentation\/divar\/abstracttableviewcontroller\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/abstracttableviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/tableview(_:diddeselectrowat:)","title":"func tableView(UITableView, didDeselectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/tableview(_:estimatedheightforrowat:)","title":"func tableView(UITableView, estimatedHeightForRowAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"}],"path":"\/documentation\/divar\/abstracttableviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/abstracttableviewcontroller","title":"AbstractTableViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actiondispatcher\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actiondispatcher\/flow","title":"var flow: BaseFlowController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actiondispatcher\/perform(_:)","title":"func perform(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/actiondispatcher","title":"ActionDispatcher","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogbuilder\/for(_:)-1bhjn","title":"func `for`(Widgets_NavigationBar) -> PrivateWidgetNext","type":"method"},{"path":"\/documentation\/divar\/actionlogbuilder\/for(_:)-1p8f3","title":"func `for`(Widgets_Widget) -> PrivateWidgetNext","type":"method"},{"path":"\/documentation\/divar\/actionlogbuilder\/for(_:)-5z67k","title":"func `for`(WidgetBasedCollectionViewController) -> PrivatePageNext","type":"method"},{"path":"\/documentation\/divar\/actionlogbuilder\/for(_:)-74ayj","title":"func `for`(WidgetBasedBottomSheetViewController) -> PrivateBottomSheetNext","type":"method"},{"path":"\/documentation\/divar\/actionlogbuilder\/for(_:)-96op9","title":"func `for`(LegacyActionLog) -> PrivateActionLogBuilder","type":"method"},{"path":"\/documentation\/divar\/actionlogbuilder\/for(_:)-pot9","title":"func `for`(Widgets_StickyWidget) -> PrivateStickyNext","type":"method"},{"path":"\/documentation\/divar\/actionlogbuilder\/for(searchablepage:)","title":"func `for`(searchablePage: WidgetBasedCollectionViewController) -> PrivatePageWithSearchNext","type":"method"}],"path":"\/documentation\/divar\/actionlogbuilder","title":"ActionLogBuilder","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogperformance\/eventchildfinished(eventcategory:eventname:reason:)","title":"func eventChildFinished(eventCategory: String, eventName: String, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/actionlogperformance\/eventchildstarted(eventcategory:eventname:description:)","title":"func eventChildStarted(eventCategory: String, eventName: String, description: String?)","type":"method"},{"path":"\/documentation\/divar\/actionlogperformance\/eventfinished(eventcategory:eventpayload:reason:)","title":"func eventFinished(eventCategory: String, eventPayload: [String : Any]?, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/actionlogperformance\/eventstarted(eventcategory:eventname:eventpayload:customdata:)","title":"func eventStarted(eventCategory: String, eventName: String, eventPayload: [String : Any]?, customData: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/actionlogperformance\/logevent(data:)","title":"func logEvent(data: Any)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogperformance\/shared","title":"static let shared: ActionLogPerformance","type":"property"}],"path":"\/documentation\/divar\/actionlogperformance","title":"ActionLogPerformance","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogservice\/init(grpcservice:)","title":"init(grpcService: GRPCNetworkManagerProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogservice\/grpcservice","title":"var grpcService: GRPCNetworkManagerProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogservice\/sendactionlogs(actionlogs:clientmeta:)","title":"func sendActionLogs(actionLogs: [ActionLogPOSO], clientMeta: ActionLog_ClientMetaInfo) async -> Result<[String], DError>","type":"method"}],"path":"\/documentation\/divar\/actionlogservice","title":"ActionLogService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogs\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogs\/clientinfo","title":"var clientInfo: ActionLog_ClientInfo","type":"property"},{"path":"\/documentation\/divar\/actionlogs\/clientmeta","title":"var clientMeta: ActionLog_ClientMetaInfo","type":"property"},{"path":"\/documentation\/divar\/actionlogs\/isrequesting","title":"var isRequesting: Bool","type":"property"},{"path":"\/documentation\/divar\/actionlogs\/maxdatabasesize","title":"var maxDatabaseSize: Int","type":"property"},{"path":"\/documentation\/divar\/actionlogs\/serialdatabasequeue","title":"var serialDatabaseQueue: DispatchQueue","type":"property"},{"path":"\/documentation\/divar\/actionlogs\/threshold","title":"var threshold: Int","type":"property"},{"path":"\/documentation\/divar\/actionlogs\/user","title":"var user: User?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogs\/initial(service:config:user:)","title":"func initial(service: ActionLogServiceProtocol, config: ActionLogConfig?, user: User)","type":"method"},{"path":"\/documentation\/divar\/actionlogs\/log(coordinator:actioninfo:)","title":"func log(coordinator: ActionLog_ActionLogCoordinator, actionInfo: ActionLog_ActionInfo)","type":"method"},{"path":"\/documentation\/divar\/actionlogs\/log(legacyactioninfo:)","title":"func log(legacyActionInfo: ActionLog_ActionInfo)","type":"method"},{"path":"\/documentation\/divar\/actionlogs\/reloadsession()","title":"func reloadSession()","type":"method"},{"path":"\/documentation\/divar\/actionlogs\/sendtoserver(_:)","title":"func sendToServer([ActionLogPOSO])","type":"method"},{"path":"\/documentation\/divar\/actionlogs\/userregisterationchanged(_:)","title":"func userRegisterationChanged(NSNotification)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogs\/table","title":"ActionLogs.Table","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogs\/databasequeue","title":"static var databaseQueue: String","type":"property"},{"path":"\/documentation\/divar\/actionlogs\/shared","title":"static let shared: ActionLogs","type":"property"}],"path":"\/documentation\/divar\/actionlogs","title":"ActionLogs","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/adviewviewcontroller\/actionbutton","title":"var actionButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/adimage","title":"var adImage: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/addtitle","title":"var addTitle: UILabel!","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/conversation","title":"var conversation: ChatConversationTable?","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/delegate","title":"var delegate: AdViewViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/frommeindicator","title":"var fromMeIndicator: UILabel!","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/frommeindicatorwidthconstraint","title":"var fromMeIndicatorWidthConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/myadlabel","title":"var myAdLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/adviewviewcontroller\/post","title":"var post: PostViewStructure?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/adviewviewcontroller\/loadadimage(url:)","title":"func loadAdImage(url: String?)","type":"method"},{"path":"\/documentation\/divar\/adviewviewcontroller\/openpost()","title":"func openPost()","type":"method"},{"path":"\/documentation\/divar\/adviewviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/adviewviewcontroller","title":"AdViewViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/init(container:editid:)","title":"init(container: AddEditAgentViewControllerDIContainer, editID: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/isdeleteaction","title":"var isDeleteAction: Bool","type":"property"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/successeditmessage","title":"var successEditMessage: String","type":"property"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/successsubmitmessage","title":"var successSubmitMessage: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/deleteagent()","title":"func deleteAgent()","type":"method"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/setupbarbuttonitem()","title":"func setupBarButtonItem()","type":"method"},{"path":"\/documentation\/divar\/addeditagentviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/addeditagentviewcontroller","title":"AddEditAgentViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/addsalesmanviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/addsalesmanviewcontroller\/init(container:formid:editid:newschema:newdata:previousdata:)","title":"init(container: AddSalesmanViewControllerDIContainer, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/addsalesmanviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/addsalesmanviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/addsalesmanviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/addsalesmanviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/addsalesmanviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/addsalesmanviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/addsalesmanviewcontroller","title":"AddSalesmanViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/addstoremanagerviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/addstoremanagerviewcontroller\/init(container:formid:editid:newschema:newdata:previousdata:)","title":"init(container: AddStoreManagerViewControllerDIContainer, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/addstoremanagerviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/addstoremanagerviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/addstoremanagerviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/addstoremanagerviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/addstoremanagerviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/addstoremanagerviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/addstoremanagerviewcontroller","title":"AddStoreManagerViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/init(container:payload:)","title":"init(container: AddUserTransactionFormViewControllerDIContainer, payload: Widgets_TransactionAddUserPayload)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/buttontext","title":"var buttonText: String?","type":"property"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/payload","title":"let payload: Widgets_TransactionAddUserPayload","type":"property"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/shouldcloseonfinish","title":"var shouldCloseOnFinish: Bool","type":"property"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/addusertransactionformviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/addusertransactionformviewcontroller","title":"AddUserTransactionFormViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/addusertransactionservice\/init(grpcservie:)","title":"init(grpcServie: GRPCNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/addusertransactionservice\/addusertransaction(model:payload:completion:)","title":"func addUserTransaction(model: SchemaRequestModel, payload: Widgets_TransactionAddUserPayload, completion: FormResult)","type":"method"}],"path":"\/documentation\/divar\/addusertransactionservice","title":"AddUserTransactionService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/addvrviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/addvrviewcontroller\/init(container:managetoken:newschema:newdata:previousdata:)","title":"init(container: AddVRViewControllerDIContainer, manageToken: String, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/addvrviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/addvrviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/addvrviewcontroller\/managetoken","title":"var manageToken: String","type":"property"},{"path":"\/documentation\/divar\/addvrviewcontroller\/needsresetbutton","title":"var needsResetButton: Bool","type":"property"},{"path":"\/documentation\/divar\/addvrviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/addvrviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/addvrviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/addvrviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/addvrviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/addvrviewcontroller","title":"AddVRViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedcollectionview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/advancedcollectionview\/init(frame:collectionviewlayout:)","title":"init(frame: CGRect, collectionViewLayout: UICollectionViewLayout)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedcollectionview\/emptymessagetext","title":"var emptyMessageText: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedcollectionview\/addinfinityscroll(withdetectionboundary:handler:)","title":"func addInfinityScroll(withDetectionBoundary: CGFloat, handler: (_ scrollView: UIScrollView) -> Void)","type":"method"},{"path":"\/documentation\/divar\/advancedcollectionview\/addpulltorefresh(target:selector:)","title":"func addPullToRefresh(target: Any?, selector: Selector)","type":"method"},{"path":"\/documentation\/divar\/advancedcollectionview\/beginrefresh()","title":"func beginRefresh()","type":"method"},{"path":"\/documentation\/divar\/advancedcollectionview\/endinfinityscroll()","title":"func endInfinityScroll()","type":"method"},{"path":"\/documentation\/divar\/advancedcollectionview\/endrefresh()","title":"func endRefresh()","type":"method"},{"path":"\/documentation\/divar\/advancedcollectionview\/reloaddata()","title":"func reloadData()","type":"method"},{"path":"\/documentation\/divar\/advancedcollectionview\/updateemptydatasetifneeded()","title":"func updateEmptyDataSetIfNeeded()","type":"method"}],"path":"\/documentation\/divar\/advancedcollectionview","title":"AdvancedCollectionView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedtableview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/advancedtableview\/init(frame:style:)","title":"init(frame: CGRect, style: UITableView.Style)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedtableview\/emptymessagetext","title":"var emptyMessageText: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedtableview\/addpulltorefresh(target:selector:)","title":"func addPullToRefresh(target: Any?, selector: Selector)","type":"method"},{"path":"\/documentation\/divar\/advancedtableview\/beginrefresh()","title":"func beginRefresh()","type":"method"},{"path":"\/documentation\/divar\/advancedtableview\/endrefresh()","title":"func endRefresh()","type":"method"},{"path":"\/documentation\/divar\/advancedtableview\/reloaddata()","title":"func reloadData()","type":"method"},{"path":"\/documentation\/divar\/advancedtableview\/updateemptydatasetifneeded()","title":"func updateEmptyDataSetIfNeeded()","type":"method"}],"path":"\/documentation\/divar\/advancedtableview","title":"AdvancedTableView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/init(viewmodel:)","title":"init(viewModel: WidgetViewModelProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/identifier","title":"var identifier: PageIdentifier?","type":"property"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/isembeded","title":"var isEmbeded: Bool","type":"property"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/navigationbaritems","title":"var navigationBarItems: [Int : Widgets_NavigationBar]","type":"property"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/performancemonitor","title":"var performanceMonitor: PerformanceMonitorProtocol?","type":"property"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/shouldreloadonappear","title":"var shouldReloadOnAppear: Bool","type":"property"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/stackholder","title":"var stackHolder: UIStackView?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/handle(error:)","title":"func handle(error: DError)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/update(emptystatemessage:)","title":"func update(emptyStateMessage: String?)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/update(searchbox:)","title":"func update(searchBox: SearchBoxViewModel?)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/update(stickywidgets:)","title":"func update(stickyWidgets: StickyWidgetActionWrapper?)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/update(taglist:)","title":"func update(tagList: [TagListItem])","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/update(title:)","title":"func update(title: String?)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/update(viewstate:)","title":"func update(viewState: WidgetViewState)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/update(widgetlist:)","title":"func update(widgetList: WidgetList)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/widgetbasedcollectionviewcontroller(_:canstartinfinitescroll:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, canStartInfiniteScroll: AdvancedCollectionView?) -> Bool","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartinfinitescroll:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartInfiniteScroll: AdvancedCollectionView?)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartpulltorefresh:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/widgetviewchildfinish(event:)","title":"func widgetViewChildFinish(event: WidgetViewControllerPerformaceHelper.WidgetViewControllerChildEvents)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/widgetviewchildstarted(event:)","title":"func widgetViewChildStarted(event: WidgetViewControllerPerformaceHelper.WidgetViewControllerChildEvents)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/widgetvieweventfinished(event:reason:)","title":"func widgetViewEventFinished(event: String, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/widgetvieweventstarted(event:eventpayload:customdata:)","title":"func widgetViewEventStarted(event: String, eventPayload: [String : Any]?, customData: [String : Any]?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/apply(filters:with:)","title":"func apply(filters: Google_Protobuf_Struct, with: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/filterablewidgetbased-implementations","title":"FilterableWidgetBased Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/tagdidselect(tag:index:)","title":"func tagDidSelect(tag: TagListItem, index: Int)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/taglistcell(_:tag:didremoveitematindex:)","title":"func taglistCell(TagListCell, tag: TagListItem, didRemoveItemAtIndex: Int)","type":"method"}],"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/taglistviewcontrollerdelegate-implementations","title":"TagListViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/scrollview(_:didchangeverticalscrolldirection:)","title":"func scrollView(UIScrollView, didChangeVerticalScrollDirection: VerticalScrollingDirection)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/scrollviewdirectionchangesensitivity(_:)","title":"func scrollViewDirectionChangeSensitivity(UIScrollView) -> DirectionChangeSensitivity","type":"method"}],"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/uiscrollviewdirectiondelegate-implementations","title":"UIScrollViewDirectionDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/childeventfinish(event:reaason:)","title":"func childEventFinish(event: String, reaason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/childeventstart(event:)","title":"func childEventStart(event: String)","type":"method"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/collectiondidreloading()","title":"func collectionDidReloading()","type":"method"}],"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/widgetbasecollectionperformancelogdelegate-implementations","title":"WidgetBaseCollectionPerformanceLogDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/barbuttonitembuttontappedselector","title":"var barButtonItemButtonTappedSelector: Selector","type":"property"},{"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/barbuttonitemtappedselector","title":"var barButtonItemTappedSelector: Selector","type":"property"}],"path":"\/documentation\/divar\/advancedwidgetviewcontroller\/widgetbasednavigationbarpresenterprotocol-implementations","title":"WidgetBasedNavigationBarPresenterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/divar\/advancedwidgetviewcontroller","title":"AdvancedWidgetViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/agentmanagementflowcontroller\/initialagentmanagement(with:)","title":"func initialAgentManagement(with: NavigationController) -> UIViewController","type":"method"}],"path":"\/documentation\/divar\/agentmanagementflowcontroller","title":"AgentManagementFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/alakbasecell\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/alakbasecell\/delegate","title":"var delegate: AlakCellDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/alakbasecell\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/collectionview(_:diddeselectitemat:)","title":"func collectionView(UICollectionView, didDeselectItemAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/collectionview(_:didenddisplaying:foritemat:)","title":"func collectionView(UICollectionView, didEndDisplaying: UICollectionViewCell, forItemAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/collectionview(_:heightforitemat:)","title":"func collectionView(UICollectionView, heightForItemAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/collectionview(_:shoulditemhasfullwidthat:)","title":"func collectionView(UICollectionView, shouldItemHasFullWidthAt: IndexPath) -> Bool","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/collectionview(_:shouldselectitemat:)","title":"func collectionView(UICollectionView, shouldSelectItemAt: IndexPath) -> Bool","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/collectionview(_:willdisplay:foritemat:)","title":"func collectionView(UICollectionView, willDisplay: UICollectionViewCell, forItemAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/iswidgetsempty()","title":"func isWidgetsEmpty() -> Bool","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/set(datasource:)","title":"func set(dataSource: [Widgets_Widget])","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/widget(for:)","title":"func widget(for: Int) -> Widgets_Widget?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/alakbasecell\/callparent(action:widget:actionlogcoordinator:)","title":"func callParent(action: Widgets_Action, widget: Widgets_Widget, actionLogCoordinator: ActionLog_ActionLogCoordinator?)","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/internalstatechanges(widget:parameters:)","title":"func internalStateChanges(widget: Widgets_Widget, parameters: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/alakbasecell\/reloadself(_:newwidget:)","title":"func reloadSelf(WidgetCell, newWidget: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/alakbasecell\/widgetcelldelegate-implementations","title":"WidgetCellDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/alakbasecell","title":"AlakBaseCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/alakbaserow\/init(property:performancemonitoroptions:)","title":"init(property: Schema, performanceMonitorOptions: [PerformanceMonitorProtocol])","type":"init"},{"path":"\/documentation\/divar\/alakbaserow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/alakbaserow\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/alakbaserow\/actionlogenabled","title":"var actionLogEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/alakbaserow\/delegate","title":"var delegate: AlakBaseRowToParentDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/alakbaserow\/alak(_:diddeselectwidget:atindexpath:)","title":"func alak(AlakBaseCell, didDeSelectWidget: Widgets_Widget, atIndexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/alakbaserow\/alak(_:didenddisplaying:atindexpath:)","title":"func alak(AlakBaseCell, didEndDisplaying: Widgets_Widget, atIndexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/alakbaserow\/alak(_:didselectwidget:action:actionlogcoordinator:)","title":"func alak(AlakBaseCell, didSelectWidget: Widgets_Widget, action: Widgets_Action?, actionLogCoordinator: ActionLog_ActionLogCoordinator?)","type":"method"},{"path":"\/documentation\/divar\/alakbaserow\/alak(_:shouldselectwidget:atindexpath:)","title":"func alak(AlakBaseCell, shouldSelectWidget: Widgets_Widget, atIndexPath: IndexPath) -> Bool","type":"method"},{"path":"\/documentation\/divar\/alakbaserow\/alak(_:willdisplay:atindexpath:)","title":"func alak(AlakBaseCell, willDisplay: Widgets_Widget, atIndexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/alakbaserow\/extractwidgetlist(from:)","title":"func extractWidgetList(from: Schema) -> [Widgets_Widget]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/alakbaserow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/alakbaserow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/alakbaserow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/alakbaserow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/alakbaserow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/alakbaserow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/alakbaserow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/alakbaserow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/alakbaserow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/alakbaserow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/alakbaserow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/alakbaserow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/alakbaserow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/alakbaserow","title":"AlakBaseRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/album\/init(collection:)","title":"init(collection: PHAssetCollection)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/album\/collection","title":"let collection: PHAssetCollection","type":"property"},{"path":"\/documentation\/divar\/album\/items","title":"var items: [Image]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/album\/reload()","title":"func reload()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/album\/fetchoptions()","title":"static func fetchOptions() -> PHFetchOptions","type":"method"}],"path":"\/documentation\/divar\/album","title":"Album","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/alertviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/alertviewcontroller\/init(title:items:allowtaptodismiss:allowdragtodismiss:)","title":"init(title: String, items: [AlertItem], allowTapToDismiss: Bool, allowDragToDismiss: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/alertviewcontroller\/allowsdragtodismiss-4boww","title":"var allowsDragToDismiss: Bool","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/allowstaptodismiss-4f0zo","title":"var allowsTapToDismiss: Bool","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/cornerradius-1uirm","title":"var cornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/horizontalstackview","title":"var horizontalStackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/longformheight-8wvnx","title":"var longFormHeight: PanModalHeight","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/panscrollable","title":"var panScrollable: UIScrollView?","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/shouldroundtopcorners-11c4v","title":"var shouldRoundTopCorners: Bool","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/alertviewcontroller\/viewdidlayoutsubviews()","title":"func viewDidLayoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/alertviewcontroller\/allowsdragtodismiss-9xhhw","title":"var allowsDragToDismiss: Bool","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/allowsextendedpanscrolling","title":"var allowsExtendedPanScrolling: Bool","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/allowstaptodismiss-7sniv","title":"var allowsTapToDismiss: Bool","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/anchormodaltolongform","title":"var anchorModalToLongForm: Bool","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/banner","title":"var banner: PanModalBannerCompatible?","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/cornerradius-3x5i7","title":"var cornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/hasbanner","title":"var hasBanner: Bool","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/ishapticfeedbackenabled","title":"var isHapticFeedbackEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/isuserinteractionenabled","title":"var isUserInteractionEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/longformheight-2z2ut","title":"var longFormHeight: PanModalHeight","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/panmodalbackgroundcolor","title":"var panModalBackgroundColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/scrollindicatorinsets","title":"var scrollIndicatorInsets: UIEdgeInsets","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/shortformheight","title":"var shortFormHeight: PanModalHeight","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/shouldroundtopcorners-xe93","title":"var shouldRoundTopCorners: Bool","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/showdragindicator","title":"var showDragIndicator: Bool","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/springdamping","title":"var springDamping: CGFloat","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/topoffset","title":"var topOffset: CGFloat","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/transitionanimationoptions","title":"var transitionAnimationOptions: UIView.AnimationOptions","type":"property"},{"path":"\/documentation\/divar\/alertviewcontroller\/transitionduration","title":"var transitionDuration: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/alertviewcontroller\/panmodalanimate(_:_:)","title":"func panModalAnimate(AnimationBlockType, AnimationCompletionType?)","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/panmodaldiddismiss()","title":"func panModalDidDismiss()","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/panmodalperformupdates(_:)","title":"func panModalPerformUpdates(() -> Void)","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/panmodalsetneedslayoutupdate()","title":"func panModalSetNeedsLayoutUpdate()","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/panmodaltransition(to:)","title":"func panModalTransition(to: PanModalPresentationController.PresentationState)","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/panmodalwilldismiss()","title":"func panModalWillDismiss()","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/shouldprioritize(panmodalgesturerecognizer:)","title":"func shouldPrioritize(panModalGestureRecognizer: UIPanGestureRecognizer) -> Bool","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/shouldrespond(to:)","title":"func shouldRespond(to: UIPanGestureRecognizer) -> Bool","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/shouldtransition(to:)","title":"func shouldTransition(to: PanModalPresentationController.PresentationState) -> Bool","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/willrespond(to:)","title":"func willRespond(to: UIPanGestureRecognizer)","type":"method"},{"path":"\/documentation\/divar\/alertviewcontroller\/willtransition(to:)","title":"func willTransition(to: PanModalPresentationController.PresentationState)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/alertviewcontroller\/animationblocktype","title":"AlertViewController.AnimationBlockType","type":"typealias"},{"path":"\/documentation\/divar\/alertviewcontroller\/animationcompletiontype","title":"AlertViewController.AnimationCompletionType","type":"typealias"},{"path":"\/documentation\/divar\/alertviewcontroller\/layouttype","title":"AlertViewController.LayoutType","type":"typealias"}],"path":"\/documentation\/divar\/alertviewcontroller\/panmodalpresentable-implementations","title":"PanModalPresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/alertviewcontroller","title":"AlertViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/init(responsedata:)","title":"init(responseData: Data?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/delegate","title":"var delegate: AngoolakResponseEditorDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/savebuttontapped()","title":"func saveButtonTapped()","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/documentpicker(_:didpickdocumentsat:)","title":"func documentPicker(UIDocumentPickerViewController, didPickDocumentsAt: [URL])","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/uidocumentpickerdelegate-implementations","title":"UIDocumentPickerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/textview(_:shouldchangetextin:replacementtext:)","title":"func textView(UITextView, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/textviewdidchange(_:)","title":"func textViewDidChange(UITextView)","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller\/uitextviewdelegate-implementations","title":"UITextViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/angoolakresponseeditorviewcontroller","title":"AngoolakResponseEditorViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/init(headers:)","title":"init(headers: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/delegate","title":"var delegate: AngoolakResponseHeaderEditorDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/savebuttontapped()","title":"func saveButtonTapped()","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/tableview(_:caneditrowat:)","title":"func tableView(UITableView, canEditRowAt: IndexPath) -> Bool","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/tableview(_:titleforheaderinsection:)","title":"func tableView(UITableView, titleForHeaderInSection: Int) -> String?","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/tableview(_:editingstyleforrowat:)","title":"func tableView(UITableView, editingStyleForRowAt: IndexPath) -> UITableViewCell.EditingStyle","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/tableview(_:trailingswipeactionsconfigurationforrowat:)","title":"func tableView(UITableView, trailingSwipeActionsConfigurationForRowAt: IndexPath) -> UISwipeActionsConfiguration?","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/angoolakresponseheadereditorviewcontroller","title":"AngoolakResponseHeaderEditorViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseservicecell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/angoolakresponseservicecell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseservicecell\/preparewith(title:subtitle:icon:)","title":"func prepareWith(title: String, subtitle: String, icon: UIImage)","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseservicecell","title":"AngoolakResponseServiceCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/didentered(response:)","title":"func didEntered(response: Data)","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/angoolakresponseeditordelegate-implementations","title":"AngoolakResponseEditorDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/didsaved(headers:)","title":"func didSaved(headers: [String : String])","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/angoolakresponseheadereditordelegate-implementations","title":"AngoolakResponseHeaderEditorDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/statefulrow(didselect:)","title":"func statefulRow(didSelect: StatefulRow)","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/statefulrowdelegate-implementations","title":"StatefulRowDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/tableview(_:caneditrowat:)","title":"func tableView(UITableView, canEditRowAt: IndexPath) -> Bool","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/tableview(_:editingstyleforrowat:)","title":"func tableView(UITableView, editingStyleForRowAt: IndexPath) -> UITableViewCell.EditingStyle","type":"method"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/tableview(_:trailingswipeactionsconfigurationforrowat:)","title":"func tableView(UITableView, trailingSwipeActionsConfigurationForRowAt: IndexPath) -> UISwipeActionsConfiguration?","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/widebuttonbar(didtap:)","title":"func wideButtonBar(didTap: WideButtonBar)","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseviewcontroller\/widebuttonbardelegate-implementations","title":"WideButtonBarDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/angoolakresponseviewcontroller","title":"AngoolakResponseViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolaksandboxservicecell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/angoolaksandboxservicecell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolaksandboxservicecell\/serviceurltitle","title":"let serviceUrlTitle: LegendTitleRow","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolaksandboxservicecell\/prepare()","title":"func prepare()","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxservicecell\/preparewith(originalurl:redirecturl:)","title":"func prepareWith(originalUrl: String, redirectUrl: String)","type":"method"}],"path":"\/documentation\/divar\/angoolaksandboxservicecell","title":"AngoolakSandBoxServiceCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/accessorytoolbar()","title":"func accessoryToolbar() -> UIView?","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/handlekeyboardstatus(_:)","title":"func handleKeyboardStatus(Notification)","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/statefulrow(didselect:)","title":"func statefulRow(didSelect: StatefulRow)","type":"method"}],"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/statefulrowdelegate-implementations","title":"StatefulRowDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/tableview(_:caneditrowat:)","title":"func tableView(UITableView, canEditRowAt: IndexPath) -> Bool","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/tableview(_:commit:forrowat:)","title":"func tableView(UITableView, commit: UITableViewCell.EditingStyle, forRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/widebuttonbar(didtap:)","title":"func wideButtonBar(didTap: WideButtonBar)","type":"method"}],"path":"\/documentation\/divar\/angoolaksandboxviewcontroller\/widebuttonbardelegate-implementations","title":"WideButtonBarDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/angoolaksandboxviewcontroller","title":"AngoolakSandBoxViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakservicecollectionviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/angoolakservicecollectionviewcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakservicecollectionviewcell\/preparewith(model:)","title":"func prepareWith(model: AngoolakServiceItem)","type":"method"}],"path":"\/documentation\/divar\/angoolakservicecollectionviewcell","title":"AngoolakServiceCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/collectionview(_:layout:insetforsectionat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, insetForSectionAt: Int) -> UIEdgeInsets","type":"method"},{"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/collectionview(_:layout:sizeforitemat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, sizeForItemAt: IndexPath) -> CGSize","type":"method"}],"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"}],"path":"\/documentation\/divar\/angoolakserviceselectionviewcontroller","title":"AngoolakServiceSelectionViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakstatefulrowtableviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/angoolakstatefulrowtableviewcell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakstatefulrowtableviewcell\/prepare()","title":"func prepare()","type":"method"},{"path":"\/documentation\/divar\/angoolakstatefulrowtableviewcell\/prepare(with:)","title":"func prepare(with: AngoolakStatefulRowModel)","type":"method"}],"path":"\/documentation\/divar\/angoolakstatefulrowtableviewcell","title":"AngoolakStatefulRowTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/appdelegate\/configurations","title":"var configurations: AppConfigurations","type":"property"},{"path":"\/documentation\/divar\/appdelegate\/container","title":"let container: DIContainer","type":"property"},{"path":"\/documentation\/divar\/appdelegate\/enterbackgroundtimer","title":"var enterBackgroundTimer: Date?","type":"property"},{"path":"\/documentation\/divar\/appdelegate\/launchoptions","title":"var launchOptions: [UIApplication.LaunchOptionsKey : Any]?","type":"property"},{"path":"\/documentation\/divar\/appdelegate\/mainflowcontroller","title":"var mainFlowController: MainFlowController?","type":"property"},{"path":"\/documentation\/divar\/appdelegate\/qaconfigs","title":"var qaConfigs: QAConfigurations","type":"property"},{"path":"\/documentation\/divar\/appdelegate\/socketconnectivitylogger","title":"var socketConnectivityLogger: SocketConnectivityLogHelper?","type":"property"},{"path":"\/documentation\/divar\/appdelegate\/window","title":"var window: UIWindow?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appdelegate\/addroutes()","title":"func addRoutes()","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:didchangestatusbarframe:)","title":"func application(UIApplication, didChangeStatusBarFrame: CGRect)","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:didfinishlaunchingwithoptions:)","title":"func application(UIApplication, didFinishLaunchingWithOptions: [UIApplication.LaunchOptionsKey : Any]?) -> Bool","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:supportedinterfaceorientationsfor:)","title":"func application(UIApplication, supportedInterfaceOrientationsFor: UIWindow?) -> UIInterfaceOrientationMask","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/applicationdidbecomeactive(_:)","title":"func applicationDidBecomeActive(UIApplication)","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/applicationdidenterbackground(_:)","title":"func applicationDidEnterBackground(UIApplication)","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/applicationwillenterforeground(_:)","title":"func applicationWillEnterForeground(UIApplication)","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/applicationwillresignactive(_:)","title":"func applicationWillResignActive(UIApplication)","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/definecarbrandmodel()","title":"func defineCarBrandModel()","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/definecarspecs()","title":"func defineCarSpecs()","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/initmainflowcontroller()","title":"func initMainFlowController()","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/lognotification(payload:state:)","title":"func logNotification(payload: UniversalNotificationPayload, state: UIApplication.State)","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/setupforegroundnotification()","title":"func setupForegroundNotification()","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/startobservesocketsession()","title":"func startObserveSocketSession()","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/validatelogin(phonenumber:completion:)","title":"func validateLogin(phoneNumber: String, completion: ((Bool) -> Void))","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appdelegate\/application(_:continue:restorationhandler:)","title":"func application(UIApplication, continue: NSUserActivity, restorationHandler: ([UIUserActivityRestoring]?) -> Void) -> Bool","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:didfailtoregisterforremotenotificationswitherror:)","title":"func application(UIApplication, didFailToRegisterForRemoteNotificationsWithError: Error)","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:didreceiveremotenotification:fetchcompletionhandler:)","title":"func application(UIApplication, didReceiveRemoteNotification: [AnyHashable : Any], fetchCompletionHandler: (UIBackgroundFetchResult) -> Void)","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:didregisterforremotenotificationswithdevicetoken:)","title":"func application(UIApplication, didRegisterForRemoteNotificationsWithDeviceToken: Data)","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/application(_:open:options:)","title":"func application(UIApplication, open: URL, options: [UIApplication.OpenURLOptionsKey : Any]) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appdelegate\/main()","title":"static func main()","type":"method"}],"path":"\/documentation\/divar\/appdelegate\/uiapplicationdelegate-implementations","title":"UIApplicationDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appdelegate\/usernotificationcenter(_:didreceive:withcompletionhandler:)","title":"func userNotificationCenter(UNUserNotificationCenter, didReceive: UNNotificationResponse, withCompletionHandler: () -> Void)","type":"method"},{"path":"\/documentation\/divar\/appdelegate\/usernotificationcenter(_:willpresent:withcompletionhandler:)","title":"func userNotificationCenter(UNUserNotificationCenter, willPresent: UNNotification, withCompletionHandler: (UNNotificationPresentationOptions) -> Void)","type":"method"}],"path":"\/documentation\/divar\/appdelegate\/unusernotificationcenterdelegate-implementations","title":"UNUserNotificationCenterDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/appdelegate","title":"AppDelegate","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/appphotoserviceimpl\/init(photolibrary:)","title":"init(photoLibrary: PHPhotoLibrary)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/appphotoserviceimpl\/appcollection","title":"var appCollection: PHAssetCollection?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appphotoserviceimpl\/addnewphototoalbum(image:)","title":"func addNewPhotoToAlbum(image: UIImage) async throws -> String","type":"method"},{"path":"\/documentation\/divar\/appphotoserviceimpl\/addnewphototoalbum(imagedata:)","title":"func addNewPhotoToAlbum(imageData: Data) async throws -> String","type":"method"},{"path":"\/documentation\/divar\/appphotoserviceimpl\/addnewvideotoalbum(videourl:)","title":"func addNewVideoToAlbum(videoURL: URL) async throws -> String","type":"method"},{"path":"\/documentation\/divar\/appphotoserviceimpl\/loadappcollection()","title":"func loadAppCollection() async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/appphotoserviceimpl\/appphotocollectionname","title":"static let appPhotoCollectionName: String","type":"property"}],"path":"\/documentation\/divar\/appphotoserviceimpl","title":"AppPhotoServiceImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/appurlhelper\/init(_:)-43vg5","title":"init(BaseURL)","type":"init"},{"path":"\/documentation\/divar\/appurlhelper\/init(_:)-8j6af","title":"init(UrlType)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appurlhelper\/getvalue()","title":"func getValue() -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/baseweb","title":"case baseWeb","type":"case"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/chat","title":"case chat","type":"case"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/gateway","title":"case gateway","type":"case"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/gatewaywithoutversion","title":"case gatewayWithoutVersion","type":"case"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/grpcgateway","title":"case grpcGateway","type":"case"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/help","title":"case help","type":"case"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/imageupload","title":"case imageUpload","type":"case"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/sentry","title":"case sentry","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/appurlhelper\/urltype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appurlhelper\/urltype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/appurlhelper\/urltype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/appurlhelper\/urltype","title":"AppUrlHelper.UrlType","type":"enum"}],"path":"\/documentation\/divar\/appurlhelper","title":"AppUrlHelper","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/approximatecheckbox","title":"let approximateCheckBox: SwitchRow","type":"property"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/approximatecoordinate","title":"var approximateCoordinate: CLLocationCoordinate2D?","type":"property"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/approximateradius","title":"var approximateRadius: Double","type":"property"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/coordinate","title":"var coordinate: CLLocationCoordinate2D?","type":"property"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/isapproximate","title":"var isApproximate: Bool","type":"property"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/mapselector","title":"let mapSelector: MapSelector","type":"property"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/onselectmap","title":"var onSelectMap: (() -> Void)?","type":"property"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/ontoggle","title":"var onToggle: ((Bool, ApproximateMapSelectorRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/subtitle","title":"var subtitle: String?","type":"property"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/switchisenabled","title":"var switchIsEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/fill(title:subtitle:isapproximate:switchisenabled:coordinate:onselect:ontoggle:)","title":"func fill(title: String, subtitle: String, isApproximate: Bool, switchIsEnabled: Bool, coordinate: CLLocationCoordinate2D?, onSelect: (() -> Void)?, onToggle: ((Bool, ApproximateMapSelectorRow) -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/approximatemapselectorrow\/switchrow(didchangevalue:)","title":"func switchRow(didChangeValue: Bool)","type":"method"}],"path":"\/documentation\/divar\/approximatemapselectorrow\/switchrowdelegate-implementations","title":"SwitchRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/approximatemapselectorrow","title":"ApproximateMapSelectorRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/init(headerbarconfig:bottombarconfig:reason:)","title":"init(headerBarConfig: HeaderBarConfig, bottomBarConfig: TwinButtonsConfig, reason: ArchiveQuestion)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/bottombarconfig","title":"let bottomBarConfig: TwinButtonsConfig","type":"property"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/headerbar","title":"var headerBar: HeaderBarViewController","type":"property"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/headerbarconfig","title":"let headerBarConfig: HeaderBarConfig","type":"property"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/notewithbottombar","title":"var noteWithBottomBar: NoteWithBottomBarViewController","type":"property"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/parentvc","title":"var parentVC: PostArchiveViewController?","type":"property"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/reason","title":"let reason: ArchiveQuestion","type":"property"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/dismiss(animated:completion:)","title":"func dismiss(animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/willmove(toparent:)","title":"func willMove(toParent: UIViewController?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/notewithbottombar(_:didsubmitnote:)","title":"func noteWithBottomBar(NoteWithBottomBarViewController, didSubmitNote: String)","type":"method"},{"path":"\/documentation\/divar\/archivenoteviewcontroller\/notewithbottombardidrequestdismiss(_:)","title":"func noteWithBottomBarDidRequestDismiss(NoteWithBottomBarViewController)","type":"method"}],"path":"\/documentation\/divar\/archivenoteviewcontroller\/notewithbottombardelegate-implementations","title":"NoteWithBottomBarDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/archivenoteviewcontroller","title":"ArchiveNoteViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/audioplaymanager\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/audioplaymanager\/init(service:)","title":"init(service: ChatServiceProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/audioplaymanager\/delegate","title":"var delegate: PlayAudioDelegate?","type":"property"},{"path":"\/documentation\/divar\/audioplaymanager\/service","title":"var service: ChatServiceProtocol?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/audioplaymanager\/destroyplayer()","title":"func destroyPlayer()","type":"method"},{"path":"\/documentation\/divar\/audioplaymanager\/playmp3sound(url:needsrepeat:playsonspeaker:)","title":"func playMp3Sound(url: URL?, needsRepeat: Bool, playsOnSpeaker: Bool)","type":"method"},{"path":"\/documentation\/divar\/audioplaymanager\/playwavsound(url:needsrepeat:playsonspeaker:)","title":"func playWavSound(url: URL?, needsRepeat: Bool, playsOnSpeaker: Bool)","type":"method"},{"path":"\/documentation\/divar\/audioplaymanager\/startplaying(_:)","title":"func startPlaying(ChatFileMessageStructure)","type":"method"},{"path":"\/documentation\/divar\/audioplaymanager\/stopplayer()","title":"func stopPlayer()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/audioplaymanager\/audioplayerbegininterruption(_:)","title":"func audioPlayerBeginInterruption(AVAudioPlayer)","type":"method"},{"path":"\/documentation\/divar\/audioplaymanager\/audioplayerdecodeerrordidoccur(_:error:)","title":"func audioPlayerDecodeErrorDidOccur(AVAudioPlayer, error: Error?)","type":"method"},{"path":"\/documentation\/divar\/audioplaymanager\/audioplayerdidfinishplaying(_:successfully:)","title":"func audioPlayerDidFinishPlaying(AVAudioPlayer, successfully: Bool)","type":"method"},{"path":"\/documentation\/divar\/audioplaymanager\/audioplayerendinterruption(_:withoptions:)","title":"func audioPlayerEndInterruption(AVAudioPlayer, withOptions: Int)","type":"method"}],"path":"\/documentation\/divar\/audioplaymanager\/avaudioplayerdelegate-implementations","title":"AVAudioPlayerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/audioplaymanager","title":"AudioPlayManager","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/backbarbuttonitem\/menu","title":"var menu: UIMenu?","type":"property"}],"path":"\/documentation\/divar\/backbarbuttonitem","title":"BackBarButtonItem","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bannerrowcollectionviewcell\/bannerrowview","title":"var bannerRowView: BannerRow!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bannerrowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_BannerRowData)","type":"method"},{"path":"\/documentation\/divar\/bannerrowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/bannerrowcollectionviewcell","title":"BannerRowCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/baseflowcontroller\/init(container:configuration:)","title":"init(container: BaseFlowDIContainer, configuration: IntroConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/baseflowcontroller\/actiondispatcher","title":"var actionDispatcher: ActionDispatcherProtocol","type":"property"},{"path":"\/documentation\/divar\/baseflowcontroller\/configuration","title":"let configuration: IntroConfig","type":"property"},{"path":"\/documentation\/divar\/baseflowcontroller\/container","title":"let container: BaseFlowDIContainer","type":"property"},{"path":"\/documentation\/divar\/baseflowcontroller\/navigationcontroller","title":"var navigationController: NavigationController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseflowcontroller\/initialqawidget(url:)","title":"func initialQaWidget(url: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/initialviewcontroller()","title":"func initialViewController() -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/logcustomerinspectionsecondarybutton(posttoken:)","title":"func logCustomerInspectionSecondaryButton(postToken: String)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/loginspectionreportsecondarybutton(posttoken:)","title":"func logInspectionReportSecondaryButton(postToken: String)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/navigationcontroller(_:)","title":"func navigationController(NavigationController?) -> Self","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/openbooleanratefeedback(_:)","title":"func openBooleanRateFeedback(CustomAction)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/openratefeedback(_:)","title":"func openRateFeedback(CustomAction)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/performcustomaction(action:)","title":"func performCustomAction(action: CustomAction)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseflowcontroller\/categoryhierarchydidselectcategory(_:item:source:)","title":"func categoryHierarchyDidSelectCategory(CategoryHierarchyController, item: UIOptionsDataStruct, source: ActionLog_SingleSelectedHierarchyItemSelectionActionInfo.Source)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/categoryhierarchyselectordidcancel(_:)","title":"func categoryHierarchySelectorDidCancel(CategoryHierarchyController)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/categoryhierarchyvc(_:didselectitem:source:)","title":"func categoryHierarchyVC(CategoryHierarchyController, didSelectItem: UIOptionsDataStruct, source: ActionLog_SingleSelectedHierarchyItemSelectionActionInfo.Source)","type":"method"}],"path":"\/documentation\/divar\/baseflowcontroller\/categoryhierarchycontrollerdelegate-implementations","title":"CategoryHierarchyControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseflowcontroller\/citymultiselect(_:didselectcities:)","title":"func cityMultiSelect(CityMultiSelectViewController, didSelectCities: [TitleValue<String, String>])","type":"method"}],"path":"\/documentation\/divar\/baseflowcontroller\/citymultiselectviewcontrollerdelegate-implementations","title":"CityMultiSelectViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseflowcontroller\/landlineconfirmedsuccessfully(in:)","title":"func landlineConfirmedSuccessfully(in: LandlineVerificationFlowController)","type":"method"}],"path":"\/documentation\/divar\/baseflowcontroller\/landlineverificationflowcontrollerdelegate-implementations","title":"LandlineVerificationFlowControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseflowcontroller\/cancelcarinspectionsuccess(_:)","title":"func cancelCarInspectionSuccess(PostArchiveViewController)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/didreportbrandpost(_:)","title":"func didReportBrandPost(PostArchiveViewController)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/didreportpost(_:)","title":"func didReportPost(PostArchiveViewController)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/didrequestdetailspage(_:data:post:)","title":"func didRequestDetailsPage(PostArchiveViewController, data: SingleMultiModel, post: PostViewStructure?)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/didrequestregisterpage(_:)","title":"func didRequestRegisterPage(PostArchiveViewController)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/postarchivedidarchivepost(_:post:)","title":"func postArchiveDidArchivePost(PostArchiveViewController, post: PostViewStructure)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/postarchivedidrequestshowchildren(_:children:)","title":"func postArchiveDidRequestShowChildren(PostArchiveViewController, children: [SingleMultiModel])","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/postreportdidrequestshowchildren(_:children:)","title":"func postReportDidRequestShowChildren(PostArchiveViewController, children: [SingleMultiModel])","type":"method"}],"path":"\/documentation\/divar\/baseflowcontroller\/postarchiveviewcontrollerdelegate-implementations","title":"PostArchiveViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseflowcontroller\/postcreatedidsavepost(_:slug:posttype:phone:)","title":"func postCreateDidSavePost(PostCreateViewController, slug: String, postType: UserType, phone: String)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/postcreatedidupdatefailongettingdata(_:)","title":"func postCreateDidUpdateFailOnGettingData(PostCreateViewController)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/postcreatedidupdatepost(_:)","title":"func postCreateDidUpdatePost(PostCreateViewController)","type":"method"}],"path":"\/documentation\/divar\/baseflowcontroller\/postcreateviewcontrollerdelegate-implementations","title":"PostCreateViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseflowcontroller\/submitratesuccessfully(_:_:)","title":"func submitRateSuccessfully(RateViewController, String)","type":"method"}],"path":"\/documentation\/divar\/baseflowcontroller\/rateviewcontrollerdelegate-implementations","title":"RateViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseflowcontroller\/searchfiltervcdidcancel(_:)","title":"func searchFilterVCDidCancel(SearchFilterViewController)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/searchfiltervcdidrequestfilteringposts(_:filters:categorychanged:)","title":"func searchFilterVCDidRequestFilteringPosts(SearchFilterViewController, filters: SearchFilterHistory, categoryChanged: Bool)","type":"method"}],"path":"\/documentation\/divar\/baseflowcontroller\/searchfilterviewcontrollerdelegate-implementations","title":"SearchFilterViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseflowcontroller\/perform(action:)","title":"func perform(action: Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/baseflowcontroller\/perform(custom:)","title":"func perform(custom: CustomAction)","type":"method"}],"path":"\/documentation\/divar\/baseflowcontroller\/widgetbasedactiondelegate-implementations","title":"WidgetBasedActionDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/baseflowcontroller","title":"BaseFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/baseformcontroller\/init(container:)","title":"init(container: BaseFormControllerDIContainer)","type":"init"},{"path":"\/documentation\/divar\/baseformcontroller\/init(container:formid:editid:newschema:newdata:previousdata:)","title":"init(container: BaseFormControllerDIContainer, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformcontroller\/abstractformvc","title":"var abstractFormVC: AbstractFormViewController","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/actiondelegate","title":"var actionDelegate: AbstractFormActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/bottombar","title":"var bottomBar: ButtonComponentProtocol?","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/editid","title":"var editID: String?","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/eventnameprefix","title":"var eventNamePrefix: String","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/form","title":"var form: Form","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/formcontroller","title":"var formController: AbstractFormViewController","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/formid","title":"var formID: String?","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/iseditingform","title":"var isEditingForm: Bool","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/newdata","title":"var newData: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/newschema","title":"var newSchema: Schema?","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/performancemonitor","title":"var performanceMonitor: PerformanceMonitor","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/previousdata","title":"var previousData: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/splitbuttonbar","title":"var splitButtonBar: SplitButtonBarViewController","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/stackview","title":"var stackView: UIStackView","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/twinbuttonbar","title":"var twinButtonBar: TwinButtonsViewController","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/type","title":"var type: FormActionType.NextPageType","type":"property"},{"path":"\/documentation\/divar\/baseformcontroller\/widebuttonbar","title":"var wideButtonBar: WideButtonViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformcontroller\/buttonclicked(_:action:)","title":"func buttonClicked(WideButtonViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/didremovefocusedrowvalue(_:row:)","title":"func didRemoveFocusedRowValue(AbstractFormViewController, row: BaseRow)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/didsetuptableview(_:for:)","title":"func didSetupTableView(AbstractFormViewController, for: UITableView)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/formcontroller(_:didgetlocalvalidationerrors:)","title":"func formController(AbstractFormViewController, didGetLocalValidationErrors: [BaseRow : [ValidationError]]?)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/formcontroller(_:didselect:)","title":"func formController(AbstractFormViewController, didSelect: BaseRow)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/getresponsedata(result:)","title":"func getResponseData(result: FormResultValue) -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/getresponsemodel(result:)","title":"func getResponseModel(result: FormResultValue) -> SchemaResponseModel?","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/handledependency(for:data:)","title":"func handleDependency(for: BaseRow, data: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/handlegetpageresponse(from:result:completion:refreshonerror:)","title":"func handleGetPageResponse(from: BaseFormViewProtocol, result: FormResultValue, completion: CompletionHandlerType, refreshOnError: () -> Void)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/handlerefreshresponse(from:result:currentdata:previousdata:extradata:refreshonerror:)","title":"func handleRefreshResponse(from: BaseFormViewProtocol, result: FormResultValue, currentData: [String : Any], previousData: [String : Any], extraData: Any?, refreshOnError: () -> Void)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/handlestandarderror(error:)","title":"func handleStandardError(error: Base_BadRequestJsonSchemaData)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/handlesubmitresponse(from:result:currentdata:previousdata:extradata:refreshonerror:)","title":"func handleSubmitResponse(from: BaseFormViewProtocol, result: FormResultValue, currentData: [String : Any], previousData: [String : Any], extraData: Any?, refreshOnError: () -> Void)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/primarybuttonclicked(_:action:)-2bp2r","title":"func primaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/primarybuttonclicked(_:action:)-5hp0y","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/resetform(_:)","title":"func resetForm(UIBarButtonItem)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/secondarybuttonclicked(_:action:)","title":"func secondaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/setupresetbarbutton()","title":"func setupResetBarButton()","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/validateresponse(from:result:refreshonerror:)","title":"func validateResponse(from: BaseFormViewProtocol, result: FormResultValue, refreshOnError: () -> Void) -> Bool","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/valuehasbeenchanged(_:for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"},{"path":"\/documentation\/divar\/baseformcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformcontroller\/formcontroller(_:didrequestchangesubmitbuttonstate:)","title":"func formController(AbstractFormViewController, didRequestChangeSubmitButtonState: Bool)","type":"method"}],"path":"\/documentation\/divar\/baseformcontroller\/abstractformviewcontorllerdelegate-implementations","title":"AbstractFormViewContorllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/baseformcontroller","title":"BaseFormController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/baseformviewcontroller\/init(container:)","title":"init(container: BaseFormViewControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformviewcontroller\/customnavigationaccessoryview","title":"var customNavigationAccessoryView: (UIView & NavigationAccessory)?","type":"property"},{"path":"\/documentation\/divar\/baseformviewcontroller\/formaccessoryviewsttribute","title":"var formAccessoryViewSttribute: FormAccessoryViewAttribute","type":"property"},{"path":"\/documentation\/divar\/baseformviewcontroller\/issettingvalues","title":"var isSettingValues: Bool","type":"property"},{"path":"\/documentation\/divar\/baseformviewcontroller\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/baseformviewcontroller\/swiftmessageerror","title":"var swiftMessageError: SwiftMessages","type":"property"},{"path":"\/documentation\/divar\/baseformviewcontroller\/swiftmessageloading","title":"var swiftMessageLoading: SwiftMessages","type":"property"},{"path":"\/documentation\/divar\/baseformviewcontroller\/swiftmessagetoast","title":"var swiftMessageToast: SwiftMessages","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformviewcontroller\/changerowdetailtextlabelcolor(for:)","title":"func changeRowDetailTextLabelColor(for: BaseRow)","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/defaultdoneaction()","title":"func defaultDoneAction()","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/deleteanimation(forrows:)","title":"func deleteAnimation(forRows: [BaseRow]) -> UITableView.RowAnimation","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/deleteanimation(forsections:)","title":"func deleteAnimation(forSections: [Section]) -> UITableView.RowAnimation","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/disablerowsforsubmit(_:bool:)","title":"func disableRowsForSubmit(Form, bool: Bool)","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/getdependenciestoremove(keys:schemas:)","title":"func getDependenciesToRemove(keys: [String], schemas: [Schema]?) -> [Schema]","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/getrow(with:)","title":"func getRow(with: IndexPath) -> BaseRow?","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/getrowstobeadded(for:)","title":"func getRowsToBeAdded(for: [Schema]?) -> [(BaseRow, Int)]","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/getschemastobeadded(for:dependencyschemas:)","title":"func getSchemasToBeAdded(for: BaseRow, dependencySchemas: [Schema]?) -> [Schema]?","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/handlerowsdependency(with:row:newdata:)","title":"func handleRowsDependency(with: [Schema]?, row: BaseRow, newData: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/removeallerrorsfromform(_:)","title":"func removeAllErrorsFromForm(Form)","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/removefocusedrowvalue()","title":"func removeFocusedRowValue()","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/removerowvalue(from:)","title":"func removeRowValue(from: BaseRow)","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/removerows(for:in:)","title":"func removeRows(for: [Schema]?, in: Section?)","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/removesectionsrowseparators(_:option:)","title":"func removeSectionsRowSeparators([Section], option: SeparatorHideStyle)","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/setvalue(_:_:_:)","title":"func setValue([String : Any], Form, Bool)","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/setvalueforrow(_:values:_:)","title":"func setValueForRow(BaseRow, values: [String : Any], Bool)","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/setvalueforsection(_:_:isfillingdraft:)","title":"func setValueForSection([String : Any], Form, isFillingDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/showcancelbutton()","title":"func showCancelButton()","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/validate(_:)","title":"func validate(BaseRow)","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/valuehasbeenchanged(for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformviewcontroller\/getbarbutton(_:title:action:tintcolor:labelalignment:)","title":"static func getBarButton(Any?, title: String, action: Selector?, tintColor: UIColor, labelAlignment: UIControl.ContentHorizontalAlignment) -> UIBarButtonItem","type":"method"},{"path":"\/documentation\/divar\/baseformviewcontroller\/getformholder(from:)","title":"class func getFormHolder(from: [UIViewController]) -> UIViewController?","type":"method"}],"path":"\/documentation\/divar\/baseformviewcontroller","title":"BaseFormViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/basesegmentedviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/basesegmentedviewcontroller\/init(viewcontrollers:)","title":"init(viewControllers: [UIViewController])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/basesegmentedviewcontroller\/hidesegmentforonetab","title":"var hideSegmentForOneTab: Bool","type":"property"},{"path":"\/documentation\/divar\/basesegmentedviewcontroller\/selectedsegmentindex","title":"var selectedSegmentIndex: Int?","type":"property"},{"path":"\/documentation\/divar\/basesegmentedviewcontroller\/viewcontrollers","title":"var viewControllers: [UIViewController]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/basesegmentedviewcontroller\/removeallviewcontrollers()","title":"func removeAllViewControllers()","type":"method"},{"path":"\/documentation\/divar\/basesegmentedviewcontroller\/segmentselected(_:)","title":"func segmentSelected(UISegmentedControl)","type":"method"},{"path":"\/documentation\/divar\/basesegmentedviewcontroller\/updateviewcontrollers(_:)","title":"func updateViewControllers([UIViewController])","type":"method"},{"path":"\/documentation\/divar\/basesegmentedviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/basesegmentedviewcontroller","title":"BaseSegmentedViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/baseviewcontroller\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/baseviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/baseviewcontroller\/init(withnib:)","title":"init(withNib: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/baseviewcontroller\/canbecomefirstresponder","title":"var canBecomeFirstResponder: Bool","type":"property"},{"path":"\/documentation\/divar\/baseviewcontroller\/orderid","title":"var orderId: String?","type":"property"},{"path":"\/documentation\/divar\/baseviewcontroller\/shouldshowclosebutton","title":"var shouldShowCloseButton: Bool","type":"property"},{"path":"\/documentation\/divar\/baseviewcontroller\/swiftmessageerror","title":"var swiftMessageError: SwiftMessages","type":"property"},{"path":"\/documentation\/divar\/baseviewcontroller\/swiftmessageloading","title":"var swiftMessageLoading: SwiftMessages","type":"property"},{"path":"\/documentation\/divar\/baseviewcontroller\/swiftmessagetoast","title":"var swiftMessageToast: SwiftMessages","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseviewcontroller\/showcancelbutton()","title":"func showCancelButton()","type":"method"},{"path":"\/documentation\/divar\/baseviewcontroller\/viewdiddisappear(_:)","title":"func viewDidDisappear(Bool)","type":"method"},{"path":"\/documentation\/divar\/baseviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/baseviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/baseviewcontroller\/tooltippresenterview","title":"var tooltipPresenterView: UIView","type":"property"}],"path":"\/documentation\/divar\/baseviewcontroller\/tooltippresenter-implementations","title":"TooltipPresenter Implementations","type":"symbol"}],"path":"\/documentation\/divar\/baseviewcontroller","title":"BaseViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/init(termslink:title:)","title":"init(termsLink: String, title: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/acceptcallback","title":"var acceptCallBack: ((_ vc: BeforeRegisterTermsAndConditionsVC?) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/bottombar","title":"var bottomBar: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/declinecallback","title":"var declineCallBack: ((_ vc: BeforeRegisterTermsAndConditionsVC) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/twinbuttonbar","title":"var twinButtonBar: TwinButtonsViewController","type":"property"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/webview","title":"var webView: WKWebView!","type":"property"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/webviewcontainer","title":"var webViewContainer: UIView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/configtwinbutton()","title":"func configTwinButton()","type":"method"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/configwebview()","title":"func configWebView()","type":"method"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/secondarybuttonclicked(_:action:)","title":"func secondaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/twinbuttonsviewcontrollerdelegate-implementations","title":"TwinButtonsViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/webview(_:didfinish:)","title":"func webView(WKWebView, didFinish: WKNavigation!)","type":"method"}],"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc\/wknavigationdelegate-implementations","title":"WKNavigationDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/beforeregistertermsandconditionsvc","title":"BeforeRegisterTermsAndConditionsVC","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/blockingview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/blockingview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/blockingview\/button","title":"var button: UIButton!","type":"property"},{"path":"\/documentation\/divar\/blockingview\/buttontext","title":"var buttonText: String","type":"property"},{"path":"\/documentation\/divar\/blockingview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/blockingview\/delegate","title":"var delegate: BlockingViewDelegate?","type":"property"},{"path":"\/documentation\/divar\/blockingview\/descriptionlabel","title":"var descriptionLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/blockingview\/descriptiontext","title":"var descriptionText: String","type":"property"},{"path":"\/documentation\/divar\/blockingview\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/blockingview\/titletext","title":"var titleText: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/blockingview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/blockingview\/onbuttonclick(_:)","title":"func onButtonClick(Any)","type":"method"}],"path":"\/documentation\/divar\/blockingview","title":"BlockingView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/button","title":"var button: UIButton!","type":"property"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/descriptionlabel","title":"var descriptionLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/divider","title":"var divider: UIView!","type":"property"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_BlockingViewData)","type":"method"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/blockingviewcollectionviewcell\/taponbutton(_:)","title":"func tapOnButton(UIButton)","type":"method"}],"path":"\/documentation\/divar\/blockingviewcollectionviewcell","title":"BlockingViewCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarkservice\/init(servicenetworkmanager:user:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol, user: User)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarkservice\/clearbookmarks(dataprovider:)","title":"func clearBookmarks(dataProvider: DataProviderProtocol) async throws","type":"method"},{"path":"\/documentation\/divar\/bookmarkservice\/getbookmarkslist()","title":"func getBookmarksList() async -> Result<UserPostLists, DError>","type":"method"}],"path":"\/documentation\/divar\/bookmarkservice","title":"BookmarkService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarkview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/bookmarkview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarkview\/animationgroup","title":"let animationGroup: DispatchGroup","type":"property"},{"path":"\/documentation\/divar\/bookmarkview\/delegate","title":"var delegate: BookmarkViewDelegate?","type":"property"},{"path":"\/documentation\/divar\/bookmarkview\/filledbookmarkshape","title":"let filledBookmarkShape: CAShapeLayer","type":"property"},{"path":"\/documentation\/divar\/bookmarkview\/insidebookmarkshape","title":"let insideBookmarkShape: CAShapeLayer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarkview\/addaction(_:)","title":"func addAction(() -> Void)","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/animationdidstop(_:finished:)","title":"func animationDidStop(CAAnimation, finished: Bool)","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/bookmarktoinprogress(duration:)","title":"func bookmarkToInProgress(duration: TimeInterval)","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/changecolor(from:to:duration:)","title":"func changeColor(from: UIColor, to: UIColor, duration: TimeInterval)","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/drawbookmark()","title":"func drawBookMark()","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/filledscaleupanddown(duration:)","title":"func filledScaleUpAndDown(duration: TimeInterval)","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/inprogresstobookmark(isbookmark:duration:)","title":"func inProgressToBookmark(isBookmark: Bool, duration: TimeInterval)","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/insideview(hidden:duration:)","title":"func insideView(hidden: Bool, duration: TimeInterval)","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/setbookmark(_:)","title":"func setBookmark(Bool)","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"path":"\/documentation\/divar\/bookmarkview\/unbookmarktoinprogress(duration:)","title":"func unBookmarkToInprogress(duration: TimeInterval)","type":"method"}],"path":"\/documentation\/divar\/bookmarkview","title":"BookmarkView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/init(container:)","title":"init(container: BookmarksViewControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/delegate","title":"var delegate: BookmarksViewControllerDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/deletebookmark(posttoken:)","title":"func deleteBookmark(postToken: String)","type":"method"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/handlelongpress(gesturerecognizer:)","title":"func handleLongPress(gestureRecognizer: UILongPressGestureRecognizer)","type":"method"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/logopeningpost(index:token:)","title":"func logOpeningPost(index: Int, token: String)","type":"method"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarksviewcontroller\/sonnatcollectionview(_:didselectitemat:)","title":"func sonnatCollectionView(CollectionCellController, didSelectItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/bookmarksviewcontroller\/sonnatcollectionviewdelegate-implementations","title":"SonnatCollectionViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/bookmarksviewcontroller","title":"BookmarksViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/booleanrateformviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/booleanrateformviewcontroller\/init(container:payload:)","title":"init(container: BooleanRateFormViewControllerDIContainer, payload: BooleanRateRowFeedBackPayload)","type":"init"},{"path":"\/documentation\/divar\/booleanrateformviewcontroller\/init(container:paymentservice:dataprovider:payload:formid:editid:newschema:newdata:previousdata:)","title":"init(container: BooleanRateFormViewControllerDIContainer, paymentService: PaymentServiceProtocol, dataProvider: DataProviderProtocol, payload: BooleanRateRowFeedBackPayload, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/booleanrateformviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/booleanrateformviewcontroller\/payload","title":"var payload: BooleanRateRowFeedBackPayload","type":"property"},{"path":"\/documentation\/divar\/booleanrateformviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/booleanrateformviewcontroller\/successsubmitmessage","title":"var successSubmitMessage: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/booleanrateformviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/booleanrateformviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/booleanrateformviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/booleanrateformviewcontroller","title":"BooleanRateFormViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/booleanraterowcollectionviewcell\/booleanraterowview","title":"var booleanRateRowView: BooleanRateRow!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/booleanraterowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_BooleanRateRowData)","type":"method"},{"path":"\/documentation\/divar\/booleanraterowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/booleanraterowcollectionviewcell\/statechanged(state:row:)","title":"func stateChanged(state: BooleanRateRowStatus, row: BooleanRateRow)","type":"method"}],"path":"\/documentation\/divar\/booleanraterowcollectionviewcell\/booleanraterowdelegate-implementations","title":"BooleanRateRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/booleanraterowcollectionviewcell","title":"BooleanRateRowCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller\/init(container:token:)","title":"init(container: BottomSheetContactViewControllerDIContainer, token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller\/stackholder","title":"var stackHolder: UIStackView?","type":"property"},{"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller\/token","title":"var token: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller\/reloaddata()","title":"func reloadData()","type":"method"},{"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller\/sourceview","title":"var sourceView: ActionLog_ScreenshotActionInfo.Source","type":"property"}],"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller\/screenshotprotocol-implementations","title":"ScreenshotProtocol Implementations","type":"symbol"}],"path":"\/documentation\/divar\/bottomsheetcontactviewcontroller","title":"BottomSheetContactViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/init(tag:property:)","title":"init(tag: String?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/enumname","title":"var enumName: String","type":"property"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/selectedindex","title":"var selectedIndex: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/reloadrow()","title":"func reloadRow()","type":"method"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/setdefaultvalue()","title":"func setDefaultValue()","type":"method"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/presenterrow","title":"BottomSheetEurekaRow.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/validationchanged","title":"BottomSheetEurekaRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/bottomsheeteurekarow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/bottomsheeteurekarow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/bottomsheeteurekarow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/bottomsheeteurekarow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/bottomsheeteurekarow","title":"BottomSheetEurekaRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekaviewcontroller\/init(alignment:property:)","title":"init(alignment: NSTextAlignment, property: Schema?)","type":"init"},{"path":"\/documentation\/divar\/bottomsheeteurekaviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekaviewcontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/bottomsheeteurekaviewcontroller\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/bottomsheeteurekaviewcontroller\/row","title":"var row: RowOf<String>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheeteurekaviewcontroller\/dismiss(animated:completion:)","title":"func dismiss(animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/bottomsheeteurekaviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/bottomsheeteurekaviewcontroller","title":"BottomSheetEurekaViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/imagecontainerview","title":"var imageContainerView: UIView!","type":"property"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/imageview","title":"var imageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/isdisabled","title":"var isDisabled: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/ishighlighted","title":"var isHighlighted: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/fill(item:alignment:)","title":"func fill(item: SheetItem, alignment: NSTextAlignment)","type":"method"},{"path":"\/documentation\/divar\/bottomsheetitemcell\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"}],"path":"\/documentation\/divar\/bottomsheetitemcell","title":"BottomSheetItemCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/init(title:bannermodel:alignment:allowtaptodismiss:allowdragtodismiss:)","title":"init(title: String?, bannerModel: SheetBannerModel?, alignment: NSTextAlignment, allowTapToDismiss: Bool, allowDragToDismiss: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/allowsdragtodismiss-3i6m2","title":"var allowsDragToDismiss: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/allowstaptodismiss-99g8g","title":"var allowsTapToDismiss: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/banner-6zw81","title":"var banner: PanModalBannerCompatible?","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/collectionview","title":"var collectionView: UICollectionView!","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/cornerradius-7r1rl","title":"var cornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/headerview","title":"var headerView: UIView!","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/longformheight-4qrja","title":"var longFormHeight: PanModalHeight","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/panscrollable","title":"var panScrollable: UIScrollView?","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/shortformheight-rgoh","title":"var shortFormHeight: PanModalHeight","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/shouldroundtopcorners-1pmv","title":"var shouldRoundTopCorners: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/titlestringheight","title":"var titleStringHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/titleview","title":"var titleView: UIView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/additem(_:)","title":"func addItem(SheetItem)","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/additems(_:)","title":"func addItems([SheetItem])","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/collectionview(_:heightforitemat:)","title":"func collectionView(UICollectionView, heightForItemAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/collectionview(_:shoulditemhasfullwidthat:)","title":"func collectionView(UICollectionView, shouldItemHasFullWidthAt: IndexPath) -> Bool","type":"method"}],"path":"\/documentation\/divar\/bottomsheetviewcontroller\/flowlayoutwithanimationsdelegate-implementations","title":"FlowLayoutWithAnimationsDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/allowsdragtodismiss-6dhmn","title":"var allowsDragToDismiss: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/allowsextendedpanscrolling","title":"var allowsExtendedPanScrolling: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/allowstaptodismiss-8j96b","title":"var allowsTapToDismiss: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/anchormodaltolongform","title":"var anchorModalToLongForm: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/banner-9smwg","title":"var banner: PanModalBannerCompatible?","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/cornerradius-1w830","title":"var cornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/hasbanner","title":"var hasBanner: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/ishapticfeedbackenabled","title":"var isHapticFeedbackEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/isuserinteractionenabled","title":"var isUserInteractionEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/longformheight-3ft6e","title":"var longFormHeight: PanModalHeight","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/panmodalbackgroundcolor","title":"var panModalBackgroundColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/scrollindicatorinsets","title":"var scrollIndicatorInsets: UIEdgeInsets","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/shortformheight-6gu4i","title":"var shortFormHeight: PanModalHeight","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/shouldroundtopcorners-9dszh","title":"var shouldRoundTopCorners: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/showdragindicator","title":"var showDragIndicator: Bool","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/springdamping","title":"var springDamping: CGFloat","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/topoffset","title":"var topOffset: CGFloat","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/transitionanimationoptions","title":"var transitionAnimationOptions: UIView.AnimationOptions","type":"property"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/transitionduration","title":"var transitionDuration: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/panmodalanimate(_:_:)","title":"func panModalAnimate(AnimationBlockType, AnimationCompletionType?)","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/panmodaldiddismiss()","title":"func panModalDidDismiss()","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/panmodalperformupdates(_:)","title":"func panModalPerformUpdates(() -> Void)","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/panmodalsetneedslayoutupdate()","title":"func panModalSetNeedsLayoutUpdate()","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/panmodaltransition(to:)","title":"func panModalTransition(to: PanModalPresentationController.PresentationState)","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/panmodalwilldismiss()","title":"func panModalWillDismiss()","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/shouldprioritize(panmodalgesturerecognizer:)","title":"func shouldPrioritize(panModalGestureRecognizer: UIPanGestureRecognizer) -> Bool","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/shouldrespond(to:)","title":"func shouldRespond(to: UIPanGestureRecognizer) -> Bool","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/shouldtransition(to:)","title":"func shouldTransition(to: PanModalPresentationController.PresentationState) -> Bool","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/willrespond(to:)","title":"func willRespond(to: UIPanGestureRecognizer)","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/willtransition(to:)","title":"func willTransition(to: PanModalPresentationController.PresentationState)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/animationblocktype","title":"BottomSheetViewController.AnimationBlockType","type":"typealias"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/animationcompletiontype","title":"BottomSheetViewController.AnimationCompletionType","type":"typealias"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/layouttype","title":"BottomSheetViewController.LayoutType","type":"typealias"}],"path":"\/documentation\/divar\/bottomsheetviewcontroller\/panmodalpresentable-implementations","title":"PanModalPresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/bottomsheetviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetviewcontroller\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/bottomsheetviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/bottomsheetviewcontroller","title":"BottomSheetViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackcell\/collectionview","title":"var collectionView: UICollectionView!","type":"property"},{"path":"\/documentation\/divar\/brandfeedbackcell\/delegate","title":"var delegate: BrandFeedbackCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/brandfeedbackcell\/model","title":"var model: BrandFeedbackStructure?","type":"property"},{"path":"\/documentation\/divar\/brandfeedbackcell\/questiontitle","title":"var questionTitle: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/brandfeedbackcell\/fill(_:)","title":"func fill(BrandFeedbackStructure)","type":"method"},{"path":"\/documentation\/divar\/brandfeedbackcell\/getanswercell(_:indexpath:)","title":"func getAnswerCell(FeedbackQAStruct?, indexPath: IndexPath) -> FeedbackAnswerCell","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackcell\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/brandfeedbackcell\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/brandfeedbackcell\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackcell\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/brandfeedbackcell\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackcell\/collectionview(_:layout:sizeforitemat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, sizeForItemAt: IndexPath) -> CGSize","type":"method"}],"path":"\/documentation\/divar\/brandfeedbackcell\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandfeedbackcell","title":"BrandFeedbackCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandheadercell\/englishtitlelabel","title":"var englishTitleLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/brandheadercell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandheadercell\/fill(with:)","title":"func fill(with: BrandHeaderStructure)","type":"method"}],"path":"\/documentation\/divar\/brandheadercell","title":"BrandHeaderCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/init(tag:property:)","title":"init(tag: String?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/presenterrow","title":"BrandMultiHierarchyEurekaRow.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/validationchanged","title":"BrandMultiHierarchyEurekaRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/brandmultihierarchyeurekarow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandmultihierarchyeurekarow","title":"BrandMultiHierarchyEurekaRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/defaultaccessorytype","title":"var defaultAccessoryType: AccessoryType","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/iconimageview","title":"var iconImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/iconleadingconstraint","title":"var iconLeadingConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/iconwidthconstraint","title":"var iconWidthConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/imageasset","title":"var imageAsset: MultiURLImageAsset?","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/fill(with:)","title":"func fill(with: SingleMultiModel)","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchytableviewcell\/setselected(_:animated:)","title":"func setSelected(Bool, animated: Bool)","type":"method"}],"path":"\/documentation\/divar\/brandmultihierarchytableviewcell","title":"BrandMultiHierarchyTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/init(container:root:tree:config:)","title":"init(container: BrandMultiHierarchyViewControllerDIContainer, root: MultiHierarchyNode, tree: MultiHierarchyNode, config: BrandMultiHierarchyConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/buttonbar","title":"var buttonBar: WideButtonViewController","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/config","title":"var config: BrandMultiHierarchyConfig","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/presentingtree","title":"var presentingTree: MultiHierarchyNode","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/root","title":"var root: MultiHierarchyNode","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/row","title":"var row: RowOf<[UIOptionsDataStruct]>!","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview","title":"var tableView: UITableView!","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/taglistvc","title":"var taglistVC: TagListViewController","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/taglistview","title":"var taglistView: UIView!","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tree","title":"var tree: MultiHierarchyNode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/addchilds()","title":"func addChilds()","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/enablebutton(_:)","title":"func enableButton(Bool)","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/gettaglistsugestions()","title":"func getTaglistSugestions() -> [UIOptionsDataStruct]?","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/setbuttontitle()","title":"func setButtonTitle()","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/setupsearchcontroller()","title":"func setupSearchController()","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/setuptableview()","title":"func setupTableView()","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/setuptaglistview()","title":"func setupTaglistView()","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/setupui()","title":"func setupUI()","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/updatetaglistview(animated:)","title":"func updateTaglistView(animated: Bool)","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tagdidselect(tag:index:)","title":"func tagDidSelect(tag: TagListItem, index: Int)","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/taglistcell(_:tag:didremoveitematindex:)","title":"func taglistCell(TagListCell, tag: TagListItem, didRemoveItemAtIndex: Int)","type":"method"}],"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/taglistviewcontrollerdelegate-implementations","title":"TagListViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview(_:diddeselectrowat:)","title":"func tableView(UITableView, didDeselectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/tableview(_:willselectrowat:)","title":"func tableView(UITableView, willSelectRowAt: IndexPath) -> IndexPath?","type":"method"}],"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/buttonclicked(_:action:)","title":"func buttonClicked(WideButtonViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller\/widebuttonviewcontrollerdelegate-implementations","title":"WideButtonViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandmultihierarchyviewcontroller","title":"BrandMultiHierarchyViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandpushselectorcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/brandpushselectorcell\/type","title":"var type: BrandWidgets","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandpushselectorcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/brandpushselectorcell\/fill(with:)","title":"func fill(with: String)","type":"method"}],"path":"\/documentation\/divar\/brandpushselectorcell","title":"BrandPushSelectorCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandratetableviewcell\/raterowview","title":"var rateRowView: RateRowView!","type":"property"},{"path":"\/documentation\/divar\/brandratetableviewcell\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/divar\/brandratetableviewcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandratetableviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/brandratetableviewcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"},{"path":"\/documentation\/divar\/brandratetableviewcell\/setselected(_:animated:)","title":"func setSelected(Bool, animated: Bool)","type":"method"}],"path":"\/documentation\/divar\/brandratetableviewcell","title":"BrandRateTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsectionheader\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsectionheader\/fill(with:)","title":"func fill(with: String)","type":"method"}],"path":"\/documentation\/divar\/brandsectionheader","title":"BrandSectionHeader","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/browseflowcontroller\/initialcategorywithslug(slug:)","title":"func initialCategoryWithSlug(slug: String) -> UIViewController?","type":"method"},{"path":"\/documentation\/divar\/browseflowcontroller\/initialviewcontroller()","title":"func initialViewController() -> UIViewController","type":"method"}],"path":"\/documentation\/divar\/browseflowcontroller","title":"BrowseFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bulkladderbaseflowcontroller\/initialbulkladderviewcontroller(with:)","title":"func initialBulkLadderViewController(with: NavigationController) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bulkladderbaseflowcontroller\/bulkladderviewcontroller(shouldopenfilterwith:request:for:)","title":"func bulkLadderViewController(shouldOpenFilterWith: Schema, request: WidgetBasedFilterRequest, for: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/bulkladderbaseflowcontroller\/generalbulkladderviewcontrollerdelegate-implementations","title":"GeneralBulkLadderViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bulkladderbaseflowcontroller\/widgetbasedfilterviewcontroller(_:data:tag:)","title":"func widgetBasedFilterViewController(WidgetBasedFilterViewController, data: [String : Any], tag: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/bulkladderbaseflowcontroller\/widgetbasedfilterviewcontrollerdelegate-implementations","title":"WidgetBasedFilterViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/bulkladderbaseflowcontroller","title":"BulkLadderBaseFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/init(container:request:submitrequest:)","title":"init(container: BulkLadderViewControllerDIContainer, request: BulkLadderRequest, submitRequest: BulkLadderSubmitRequest)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/pagerequest","title":"var pageRequest: BulkLadderRequest","type":"property"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/selectablepostslist","title":"var selectablePostsList: SelectablePostsListViewController<Widgets_SelectPostForLadderPayload>","type":"property"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/selectedmanagetokens","title":"var selectedManageTokens: [String]","type":"property"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/stackholder","title":"var stackHolder: UIStackView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/handlebulkladderinfinitescrollresponse(_:vc:collectionview:)","title":"func handleBulkLadderInfiniteScrollResponse(ExtractableMessage, vc: WidgetBasedCollectionViewController, collectionView: AdvancedCollectionView?)","type":"method"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/handlebulkladderpulltorefreshresponse(_:vc:)","title":"func handleBulkLadderPullToRefreshResponse(ExtractableMessage, vc: WidgetBasedCollectionViewController)","type":"method"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/logbulkladderpage(_:)","title":"func logBulkLadderPage(ExtractableMessage)","type":"method"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/openalertquestion()","title":"func openAlertQuestion()","type":"method"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/setinfinitescroll(_:ispulltorefresh:)","title":"func setInfiniteScroll(ExtractableMessage, isPullToRefresh: Bool)","type":"method"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/setupselectablepostslist()","title":"func setupSelectablePostsList()","type":"method"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/defaultemptymessagetext","title":"var defaultEmptyMessageText: String","type":"property"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/defaulterrormessage","title":"var defaultErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/hasmaxseletablelimit","title":"var hasMaxSeletableLimit: Bool","type":"property"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/maxselectableitems","title":"var maxSelectableItems: Int32?","type":"property"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/pagination","title":"var pagination: Pagination","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/selectablepostslist(_:didstartinfinitescroll:)","title":"func selectablePostsList(WidgetBasedCollectionViewController, didStartInfiniteScroll: AdvancedCollectionView?)","type":"method"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/selectablepostslist(_:didstartpulltorefresh:)","title":"func selectablePostsList(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/textforsplitbuttonbar(number:)","title":"func textForSplitButtonBar(number: Int) -> String","type":"method"}],"path":"\/documentation\/divar\/bulkladderviewcontroller\/selectablepostslistviewcontrollerdelegate-implementations","title":"SelectablePostsListViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bulkladderviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/bulkladderviewcontroller\/splitbuttonbarviewcontrollerdelegate-implementations","title":"SplitButtonBarViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/bulkladderviewcontroller","title":"BulkLadderViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/businesscoreservice\/init(servicenetworkmanager:user:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol, user: User)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/businesscoreservice\/bulkladder(request:responsetype:)","title":"func bulkLadder<ResponseType>(request: WidgetBasedRequest, responseType: ResponseType.Type) async -> ExtractableResultValue","type":"method"},{"path":"\/documentation\/divar\/businesscoreservice\/getbusinessregisterschema(model:)","title":"func getBusinessRegisterSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/businesscoreservice\/registernewbusiness(model:)","title":"func registerNewBusiness(model: SchemaRequestModel) async -> FormResultValue","type":"method"}],"path":"\/documentation\/divar\/businesscoreservice","title":"BusinessCoreService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/businessgetcontactviewcontroller\/stackholder","title":"var stackHolder: UIStackView?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/businessgetcontactviewcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/businessgetcontactviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/businessgetcontactviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartpulltorefresh:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"}],"path":"\/documentation\/divar\/businessgetcontactviewcontroller","title":"BusinessGetContactViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontroller\/init(container:purchasetype:consumertype:newschema:newdata:previousdata:)","title":"init(container: BusinessSubscriptionViewControllerDIContainer, purchaseType: String, consumerType: String, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontroller\/consumertype","title":"var consumerType: String","type":"property"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontroller\/nextbuttontitle","title":"var nextButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontroller\/purchasetype","title":"var purchaseType: String","type":"property"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontroller\/valuehasbeenchanged(_:for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"}],"path":"\/documentation\/divar\/businesssubscriptionviewcontroller","title":"BusinessSubscriptionViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/buybulkladderviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/buybulkladderviewcontroller\/init(container:)","title":"init(container: BuyBulkLadderViewControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/buybulkladderviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/buybulkladderviewcontroller\/buttontext","title":"var buttonText: String?","type":"property"},{"path":"\/documentation\/divar\/buybulkladderviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/buybulkladderviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/buybulkladderviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/buybulkladderviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/buybulkladderviewcontroller\/valuehasbeenchanged(_:for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"},{"path":"\/documentation\/divar\/buybulkladderviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/buybulkladderviewcontroller","title":"BuyBulkLadderViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cache\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cache\/insert(_:forkey:)","title":"func insert(Value, forKey: Key)","type":"method"},{"path":"\/documentation\/divar\/cache\/removevalue(forkey:)","title":"func removeValue(forKey: Key)","type":"method"},{"path":"\/documentation\/divar\/cache\/value(forkey:)","title":"func value(forKey: Key) -> Value?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/divar\/cache\/subscript(_:)","title":"subscript(Key) -> Value?","type":"subscript"}],"path":"\/documentation\/divar\/cache","title":"Cache","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/calllogmessagecell\/delegate","title":"var delegate: CallLogCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/calllogmessagecell\/menuoptions","title":"var menuOptions: [MessageCellOptions]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/calllogmessagecell\/fillmessageview()","title":"func fillMessageView()","type":"method"},{"path":"\/documentation\/divar\/calllogmessagecell\/messageviewdidtapped()","title":"func messageViewDidTapped()","type":"method"}],"path":"\/documentation\/divar\/calllogmessagecell","title":"CallLogMessageCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverserviceimpl\/init(callobserver:initialcallstate:initialcallcomplementarystate:)","title":"init(callObserver: CXCallObserver, initialCallState: CallObserverServiceCallState?, initialCallComplementaryState: CallObserverServiceComplementaryState)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverserviceimpl\/statechangepublisher","title":"var stateChangePublisher: AnyPublisher<CallObserverServiceStateChangeResult, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverserviceimpl\/callobserver(_:callchanged:)","title":"func callObserver(CXCallObserver, callChanged: CXCall)","type":"method"},{"path":"\/documentation\/divar\/callobserverserviceimpl\/detectcomplementarystate(from:newstate:last:)","title":"func detectComplementaryState(from: CallObserverServiceCallState?, newState: CallObserverServiceCallState, last: CallObserverServiceComplementaryState) -> CallObserverServiceComplementaryState","type":"method"}],"path":"\/documentation\/divar\/callobserverserviceimpl","title":"CallObserverServiceImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cameraoverlayview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/cameraoverlayview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"path":"\/documentation\/divar\/cameraoverlayview\/init(frame:initialremainingtime:)","title":"init(frame: CGRect, initialRemainingTime: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cameraoverlayview\/closebutton","title":"var closeButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/countdowntimer","title":"var countdownTimer: SwiftTimer?","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/delegate","title":"var delegate: CameraOverlayDelegate?","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/flashbutton","title":"var flashButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/isflashon","title":"var isFlashOn: Bool","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/isrecording","title":"var isRecording: Bool","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/recordbutton","title":"var recordButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/remainingtime","title":"var remainingTime: Int","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/timerlabel","title":"var timerLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/cameraoverlayview\/timerview","title":"var timerView: UIView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cameraoverlayview\/startcountdowntimer()","title":"func startCountdownTimer()","type":"method"},{"path":"\/documentation\/divar\/cameraoverlayview\/stopcountdowntimer()","title":"func stopCountdownTimer()","type":"method"},{"path":"\/documentation\/divar\/cameraoverlayview\/timerticks()","title":"func timerTicks()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/cameraoverlayview\/tapsound\/startrecording","title":"case startRecording","type":"case"},{"path":"\/documentation\/divar\/cameraoverlayview\/tapsound\/stoprecording","title":"case stopRecording","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cameraoverlayview\/tapsound\/init(rawvalue:)","title":"init?(rawValue: SystemSoundID)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/cameraoverlayview\/tapsound\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cameraoverlayview\/tapsound\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/cameraoverlayview\/tapsound\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cameraoverlayview\/tapsound\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cameraoverlayview\/tapsound\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/cameraoverlayview\/tapsound\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/cameraoverlayview\/tapsound","title":"CameraOverlayView.TapSound","type":"enum"}],"path":"\/documentation\/divar\/cameraoverlayview","title":"CameraOverlayView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbulkladderflowcontroller\/initialbulkladderviewcontroller(with:)","title":"func initialBulkLadderViewController(with: NavigationController) -> UIViewController","type":"method"}],"path":"\/documentation\/divar\/caragentbulkladderflowcontroller","title":"CarAgentBulkLadderFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontroller\/init(container:newschema:newdata:previousdata:)","title":"init(container: CarAgentBuyLadderPackageViewControllerDIContainer, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontroller\/nextbuttontitle","title":"var nextButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontroller\/valuehasbeenchanged(_:for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"}],"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontroller","title":"CarAgentBuyLadderPackageViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbuypackageviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/caragentbuypackageviewcontroller\/init(container:newschema:newdata:previousdata:)","title":"init(container: CarAgentBuyPackageViewControllerDIContainer, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbuypackageviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/caragentbuypackageviewcontroller\/nextbuttontitle","title":"var nextButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/caragentbuypackageviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbuypackageviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/caragentbuypackageviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/caragentbuypackageviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/caragentbuypackageviewcontroller\/valuehasbeenchanged(_:for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"}],"path":"\/documentation\/divar\/caragentbuypackageviewcontroller","title":"CarAgentBuyPackageViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentflowcontroller\/opencaragentpanelorbottomsheet(_:)","title":"func openCarAgentPanelOrBottomSheet(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/caragentflowcontroller\/opencaragentsbulkladder(_:)","title":"func openCarAgentsBulkLadder(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/caragentflowcontroller\/opencaragentspostinbusiness(_:)","title":"func openCarAgentsPostInBusiness(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/caragentflowcontroller\/opencaragentspurchaseladdersubscription(_:)","title":"func openCarAgentsPurchaseLadderSubscription(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/caragentflowcontroller\/opencaragentspurchasepackagesubscription(_:)","title":"func openCarAgentsPurchasePackageSubscription(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/caragentflowcontroller","title":"CarAgentFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentformflowcontroller\/initialcaragentbuyladderpackageviewcontroller(with:)","title":"func initialCarAgentBuyLadderPackageViewController(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/caragentformflowcontroller\/initialcaragentbuypackageviewcontroller(with:)","title":"func initialCarAgentBuyPackageViewController(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/caragentformflowcontroller\/initialcaragentsubmitviewcontroller(with:editid:)","title":"func initialCarAgentSubmitViewController(with: NavigationController, editID: String?) -> UIViewController","type":"method"}],"path":"\/documentation\/divar\/caragentformflowcontroller","title":"CarAgentFormFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentservice\/getbuyladderpackagepageschema(model:)","title":"func getBuyLadderPackagePageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/caragentservice\/getbuypackagepageschema(model:)","title":"func getBuyPackagePageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/caragentservice\/getsubmitpageschema(model:)","title":"func getSubmitPageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/caragentservice\/registerbusiness()","title":"func registerBusiness() async -> Result<CarAgentRegisterResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/caragentservice","title":"CarAgentService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentsubmitviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/caragentsubmitviewcontroller\/init(container:editid:newschema:newdata:previousdata:)","title":"init(container: CarAgentSubmitViewControllerDIContainer, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentsubmitviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/caragentsubmitviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/caragentsubmitviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/caragentsubmitviewcontroller\/needsresetbutton","title":"var needsResetButton: Bool","type":"property"},{"path":"\/documentation\/divar\/caragentsubmitviewcontroller\/shoulddraft","title":"var shouldDraft: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentsubmitviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/caragentsubmitviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/caragentsubmitviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/caragentsubmitviewcontroller","title":"CarAgentSubmitViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carbusinessflowcontroller\/opencarconciergesaleregisterpromotion(_:)","title":"func openCarConciergeSaleRegisterPromotion(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessflowcontroller\/opencardealersdisablepostspage(_:)","title":"func openCarDealersDisablePostsPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessflowcontroller\/opendealerbulkladder(_:)","title":"func openDealerBulkLadder(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessflowcontroller\/opendealershipcardealerslist(_:)","title":"func openDealershipCarDealersList(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessflowcontroller\/openplandetails(_:)","title":"func openPlanDetails(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessflowcontroller\/openpricereport(_:)","title":"func openPriceReport(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessflowcontroller\/openpurchasesubscription(_:)","title":"func openPurchaseSubscription(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessflowcontroller\/opensubscriptionmanagement(_:)","title":"func openSubscriptionManagement(Widgets_Action)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carbusinessflowcontroller\/dealerpaymentdidcancel(_:)","title":"func dealerPaymentDidCancel(DealerSubscriptionDetailsViewController)","type":"method"},{"path":"\/documentation\/divar\/carbusinessflowcontroller\/dealerpaymentdidfailed(_:)","title":"func dealerPaymentDidFailed(DealerSubscriptionDetailsViewController)","type":"method"},{"path":"\/documentation\/divar\/carbusinessflowcontroller\/dealerpaymentdidperformpayment(_:)","title":"func dealerPaymentDidPerformPayment(DealerSubscriptionDetailsViewController)","type":"method"}],"path":"\/documentation\/divar\/carbusinessflowcontroller\/dealersubscriptiondetailsviewcontrollerdelegate-implementations","title":"DealerSubscriptionDetailsViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/carbusinessflowcontroller","title":"CarBusinessFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cardisablepageservice\/init(grpcservice:)","title":"init(grpcService: GRPCNetworkManagerProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cardisablepageservice\/grpcservice","title":"let grpcService: GRPCNetworkManagerProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cardisablepageservice\/disable(mngtokens:completion:)","title":"func disable(mngTokens: [String], completion: ExtractableResult)","type":"method"},{"path":"\/documentation\/divar\/cardisablepageservice\/enable(mngtokens:completion:)","title":"func enable(mngTokens: [String], completion: ExtractableResult)","type":"method"},{"path":"\/documentation\/divar\/cardisablepageservice\/getdisablepoststabs(completion:)","title":"func getDisablePostsTabs(completion: ExtractableResult)","type":"method"},{"path":"\/documentation\/divar\/cardisablepageservice\/getdisabledlist(request:completion:)","title":"func getDisabledList(request: DisableListPageRequest, completion: ExtractableResult)","type":"method"},{"path":"\/documentation\/divar\/cardisablepageservice\/getenabledlist(request:completion:)","title":"func getEnabledList(request: DisableListPageRequest, completion: ExtractableResult)","type":"method"}],"path":"\/documentation\/divar\/cardisablepageservice","title":"CarDisablePageService","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/initial(managetoken:)","title":"func initial(manageToken: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/initial(with:managetoken:)","title":"func initial(with: NavigationController, manageToken: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/initialkarnamehregister(in:carinspectiontoken:)","title":"func initialKarnamehRegister(in: NavigationController, carInspectionToken: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/initialuserinspection(posttoken:)","title":"func initialUserInspection(postToken: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/initialuserinspection(token:)","title":"func initialUserInspection(token: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/initialuserinspection(with:token:)","title":"func initialUserInspection(with: NavigationController, token: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/showreport(in:inspectiontoken:cardetailslug:postoken:)","title":"func showReport(in: NavigationController, inspectionToken: String, carDetailSlug: String?, posToken: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/showreport(inspectiontoken:)","title":"func showReport(inspectionToken: String) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/carinspectioncancellation(_:)","title":"func carInspectionCancellation(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/carinspectionkarnamehmanagepage(_:)","title":"func carInspectionKarnamehManagePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/carinspectionmanagepage(_:)","title":"func carInspectionManagePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/carinspectionpreviewreport(_:)","title":"func carInspectionPreviewReport(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/carinspectionpublicreportview(_:)","title":"func carInspectionPublicReportView(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/carinspectionpublishreport(_:)","title":"func carInspectionPublishReport(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/carinspectionsettlement(_:)","title":"func carInspectionSettlement(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionflowcontroller\/mechaniccarblogpost(_:)","title":"func mechanicCarBlogPost(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/carinspectionflowcontroller\/carinspectionactionhandler-implementations","title":"CarInspectionActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/divar\/carinspectionflowcontroller","title":"CarInspectionFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontroller\/init(container:)","title":"init(container: CarInspectionRegisterViewControllerDIContainer)","type":"init"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontroller\/init(container:managetoken:carinspectiontoken:)","title":"init(container: CarInspectionRegisterViewControllerDIContainer, manageToken: String, carInspectionToken: String?)","type":"init"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontroller\/init(container:posttoken:carinspectiontoken:)","title":"init(container: CarInspectionRegisterViewControllerDIContainer, postToken: String, carInspectionToken: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontroller\/buttontext","title":"var buttonText: String?","type":"property"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontroller\/didsetuptableview(_:for:)","title":"func didSetupTableView(AbstractFormViewController, for: UITableView)","type":"method"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/carinspectionregisterviewcontroller","title":"CarInspectionRegisterViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionservice\/cancelcarinspection(managetoken:carinspectiontoken:cancelreasoncode:)","title":"func cancelCarInspection(manageToken: String, carInspectionToken: String, cancelReasonCode: String) async -> Result<Google_Protobuf_Empty, DError>","type":"method"},{"path":"\/documentation\/divar\/carinspectionservice\/carinspectionpublishreport(managetoken:carinspectiontoken:)","title":"func carInspectionPublishReport(manageToken: String?, carInspectionToken: String?) async -> Result<CarInspection_PublishReportResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/carinspectionservice\/carinspectionregisterandedit(page:token:currentdata:)","title":"func carInspectionRegisterAndEdit(page: Int, token: InspectionServiceTokens, currentData: [String : Any]) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/carinspectionservice\/carinspectionregistersubmit(page:currentdata:conciergesaledata:)","title":"func carInspectionRegisterSubmit(page: Int, currentData: [String : Any], conciergeSaleData: [String : Any]) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/carinspectionservice\/carinspectionsettlement(mngtoken:inspectiontoken:)","title":"func carInspectionSettlement(mngToken: String, inspectionToken: String) async -> Result<CarInspection_CarInspectionSettlementResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/carinspectionservice","title":"CarInspectionService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller\/init(container:)","title":"init(container: CarInspectionSubmitViewControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller\/buttontext","title":"var buttonText: String?","type":"property"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller\/conciergesaledata","title":"var conciergeSaleData: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller\/didsetuptableview(_:for:)","title":"func didSetupTableView(AbstractFormViewController, for: UITableView)","type":"method"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/carinspectionsubmitviewcontroller","title":"CarInspectionSubmitViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carlandingpageflowcontroller\/opencarconciergesalelandingpage(_:)","title":"func openCarConciergeSaleLandingPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carlandingpageflowcontroller\/opencarconciergesalelandingpage(slug:)","title":"func openCarConciergeSaleLandingPage(slug: String)","type":"method"},{"path":"\/documentation\/divar\/carlandingpageflowcontroller\/opendealershiplandingpage(_:)","title":"func openDealershipLandingPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/carlandingpageflowcontroller","title":"CarLandingPageFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carpriceflowcontroller\/cardetailspricetoolspage(_:)","title":"func carDetailsPriceToolsPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carpriceflowcontroller\/cardetailsusedpricepage(_:)","title":"func carDetailsUsedPricePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carpriceflowcontroller\/cardetailszeropricepage(_:)","title":"func carDetailsZeroPricePage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/carpriceflowcontroller","title":"CarPriceFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carspecsflowcontroller\/initialcardetailsbrandpage(in:brandslug:)","title":"func initialCarDetailsBrandPage(in: NavigationController, brandSlug: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/carspecsflowcontroller\/initialcardetailscategorypage(in:categoryslug:)","title":"func initialCarDetailsCategoryPage(in: NavigationController, categorySlug: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/carspecsflowcontroller\/initialcarspecshomepage(in:)","title":"func initialCarSpecsHomePage(in: NavigationController) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carspecsflowcontroller\/cardetailsbrandpage(_:)","title":"func carDetailsBrandPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carspecsflowcontroller\/cardetailscarspecshomepage(_:)","title":"func carDetailsCarSpecsHomePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carspecsflowcontroller\/cardetailscategorypage(_:)","title":"func carDetailsCategoryPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carspecsflowcontroller\/cardetailspricechartpage(_:)","title":"func carDetailsPriceChartPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/carspecsflowcontroller\/carspecactionhandler-implementations","title":"CarSpecActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/divar\/carspecsflowcontroller","title":"CarSpecsFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/categorycontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/categorycontroller\/init(container:property:hierarchydata:header:)","title":"init(container: CategoryControllerDIContainer, property: Schema?, hierarchyData: [UIOptionsDataStruct]?, header: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/categorycontroller\/delegate","title":"var delegate: CategoryControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/categorycontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/categorycontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/categorycontroller\/row","title":"var row: RowOf<String>!","type":"property"},{"path":"\/documentation\/divar\/categorycontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/categorycontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/categorycontroller\/switchview","title":"var switchView: SwitchView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categorycontroller\/setupsearchcontroller()","title":"func setupSearchController()","type":"method"},{"path":"\/documentation\/divar\/categorycontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/categorycontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categorycontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/categorycontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/categorycontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/categorycontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/categorycontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/categorycontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/categorycontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/categorycontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/categorycontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categorycontroller\/singlehierarchyvc(_:didselectitem:source:)","title":"func singleHierarchyVC(SingleHierarchyController, didSelectItem: UIOptionsDataStruct, source: ActionLog_SingleSelectedHierarchyItemSelectionActionInfo.Source)","type":"method"}],"path":"\/documentation\/divar\/categorycontroller\/singlehierarchycontrollerdelegate-implementations","title":"SingleHierarchyControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/categorycontroller","title":"CategoryController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/categorycontrollercell\/descriptionlabel","title":"var descriptionLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/categorycontrollercell\/descriptionview","title":"var descriptionView: UIView!","type":"property"},{"path":"\/documentation\/divar\/categorycontrollercell\/indicatorimageview","title":"var indicatorImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/categorycontrollercell\/itemimageview","title":"var itemImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/categorycontrollercell\/itemlabel","title":"var itemLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categorycontrollercell\/fill(data:)","title":"func fill(data: UIOptionsDataStruct)","type":"method"},{"path":"\/documentation\/divar\/categorycontrollercell\/fill(title:imageurl:imagedarkurl:description:showindicatorarrow:)","title":"func fill(title: String?, imageUrl: String?, imageDarkUrl: String?, description: String?, showIndicatorArrow: Bool)","type":"method"},{"path":"\/documentation\/divar\/categorycontrollercell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"}],"path":"\/documentation\/divar\/categorycontrollercell","title":"CategoryControllerCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryhierarchycontroller\/delegate","title":"var delegate: CategoryHierarchyControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/categoryhierarchycontroller\/searchdelegate","title":"var searchDelegate: SearchActionDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryhierarchycontroller\/branddidselect(item:source:)","title":"func brandDidSelect(item: UIOptionsDataStruct, source: ActionLog_SingleSelectedHierarchyItemSelectionActionInfo.Source)","type":"method"},{"path":"\/documentation\/divar\/categoryhierarchycontroller\/setupclosebutton()","title":"func setupCloseButton()","type":"method"},{"path":"\/documentation\/divar\/categoryhierarchycontroller\/tableview(_:heightforheaderinsection:)","title":"func tableView(UITableView, heightForHeaderInSection: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/categoryhierarchycontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/categoryhierarchycontroller","title":"CategoryHierarchyController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryrow\/init(property:onvalidationchanged:onchange:)","title":"init(property: Schema, onValidationChanged: ValidationChanged, onChange: OnChange)","type":"init"},{"path":"\/documentation\/divar\/categoryrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/categoryrow\/init(tag:property:)","title":"init(tag: String?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/categoryrow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/categoryrow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/categoryrow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryrow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/categoryrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/categoryrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/categoryrow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryrow\/onchange","title":"CategoryRow.OnChange","type":"typealias"},{"path":"\/documentation\/divar\/categoryrow\/presenterrow","title":"CategoryRow.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/categoryrow\/validationchanged","title":"CategoryRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryrow\/categorycontroller(_:didselectitem:)","title":"func categoryController(CategoryController, didSelectItem: UIOptionsDataStruct)","type":"method"}],"path":"\/documentation\/divar\/categoryrow\/categorycontrollerdelegate-implementations","title":"CategoryControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/categoryrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryrow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/categoryrow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/categoryrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/categoryrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/categoryrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/categoryrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/categoryrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/categoryrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/categoryrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/categoryrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/categoryrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/categoryrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/categoryrow","title":"CategoryRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementeventhandler\/init(event:dataprovider:)","title":"init(event: ChatAnnouncementEventModel, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementeventhandler\/handlenewannouncement()","title":"func handleNewAnnouncement()","type":"method"}],"path":"\/documentation\/divar\/chatannouncementeventhandler","title":"ChatAnnouncementEventHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/announcement","title":"var announcement: ChatAnnouncementTable","type":"property"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/conversationid","title":"var conversationID: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/announcement","title":"case announcement","type":"case"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/conversationid","title":"case conversationID","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatannouncementeventmodel\/codingkeys","title":"ChatAnnouncementEventModel.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatannouncementeventmodel","title":"ChatAnnouncementEventModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockunblockrequest\/init(conversationid:peerid:reason:action:networkmanager:dataprovider:)","title":"init(conversationID: String, peerID: String, reason: String?, action: PeerManagementEnum, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"path":"\/documentation\/divar\/chatblockunblockrequest\/init(payload:networkmanager:dataprovider:)","title":"init(payload: ChatPayload, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockunblockrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatblockunblockrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatblockunblockrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockunblockrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: ((Any) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockunblockrequest\/action","title":"static var action: PeerManagementEnum","type":"property"},{"path":"\/documentation\/divar\/chatblockunblockrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatblockunblockrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockunblockrequest\/gettoggledtopic(topic:)","title":"static func getToggledTopic(topic: String) -> String","type":"method"},{"path":"\/documentation\/divar\/chatblockunblockrequest\/gettopic(_:)","title":"static func getTopic(PeerManagementEnum) -> String","type":"method"}],"path":"\/documentation\/divar\/chatblockunblockrequest","title":"ChatBlockUnblockRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockunblockrequesthandler\/init(data:networkmanager:)","title":"init(data: ChatMessageBlockStructure, networkManager: ChatNetworkManager)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockunblockrequesthandler\/data","title":"var data: ChatMessageBlockStructure","type":"property"},{"path":"\/documentation\/divar\/chatblockunblockrequesthandler\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockunblockrequesthandler\/execute(completionblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any?>) -> Void?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockunblockrequesthandler\/resulttype","title":"ChatBlockUnblockRequestHandler.ResultType","type":"typealias"}],"path":"\/documentation\/divar\/chatblockunblockrequesthandler","title":"ChatBlockUnblockRequestHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockv2request\/init(_:networkmanager:dataprovider:)","title":"init(ChatBlockV2Model, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockv2request\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatblockv2request\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatblockv2request\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockv2request\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: (RequestCompletionHandlerType<Any>), errorHandlingBlock: ((String) -> Void)?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockv2request\/resultmodel","title":"ChatBlockV2Request.ResultModel","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockv2request\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatblockv2request\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatblockv2request","title":"ChatBlockV2Request","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationrequest\/init(for:networkmanager:dataprovider:)","title":"init(for: String, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatconversationrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatconversationrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: ((ChatConversationStructure) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"path":"\/documentation\/divar\/chatconversationrequest\/getconversation(completionblock:errorhanlingblock:)","title":"func getConversation(completionBlock: ((ChatConversationTable?) -> Void)?, errorHanlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationrequest\/resultmodel","title":"ChatConversationRequest.ResultModel","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatconversationrequest","title":"ChatConversationRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationstructure\/fromme","title":"var fromMe: Bool?","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/lastmessage","title":"var lastMessage: ChatMessageStructure?","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/lastmessageid","title":"var lastMessageID: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/ownercontact","title":"var ownerContact: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/ownerlastseenid","title":"var ownerLastSeenID: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/peer","title":"var peer: ChatUserStructure?","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/peercontact","title":"var peerContact: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/peerdeleted","title":"var peerDeleted: Bool?","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/peerlastseenid","title":"var peerLastSeenID: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/relatedad","title":"var relatedAd: ChatAdvertisementStructure?","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/status","title":"var status: ChatConversationTable.Status?","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/tochatconversationtable","title":"var toChatConversationTable: ChatConversationTable?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/fromme","title":"case fromMe","type":"case"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/lastmessage","title":"case lastMessage","type":"case"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/lastmessageid","title":"case lastMessageID","type":"case"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/ownercontact","title":"case ownerContact","type":"case"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/ownerlastseenid","title":"case ownerLastSeenID","type":"case"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/peer","title":"case peer","type":"case"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/peercontact","title":"case peerContact","type":"case"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/peerdeleted","title":"case peerDeleted","type":"case"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/peerlastseenid","title":"case peerLastSeenID","type":"case"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/relatedad","title":"case relatedAd","type":"case"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/status","title":"case status","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatconversationstructure\/innercodingkeys","title":"ChatConversationStructure.InnerCodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatconversationstructure","title":"ChatConversationStructure","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeleteconversationrequest\/init(conversationids:networkmanager:dataprovider:)","title":"init(conversationIds: [String], networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"path":"\/documentation\/divar\/chatdeleteconversationrequest\/init(payload:networkmanager:dataprovider:)","title":"init(payload: ChatPayload, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeleteconversationrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatdeleteconversationrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatdeleteconversationrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeleteconversationrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: ((Any) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeleteconversationrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatdeleteconversationrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatdeleteconversationrequest","title":"ChatDeleteConversationRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeletemessagerequest\/init(_:networkmanager:dataprovider:)","title":"init(ChatConversationMessageTable, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeletemessagerequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatdeletemessagerequest\/message","title":"let message: ChatConversationMessageTable","type":"property"},{"path":"\/documentation\/divar\/chatdeletemessagerequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatdeletemessagerequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeletemessagerequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any?>, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeletemessagerequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatdeletemessagerequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatdeletemessagerequest","title":"ChatDeleteMessageRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeletemulitconversationshandler\/init(conversations:dataprovider:)","title":"init(conversations: [ChatConversationTable], dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeletemulitconversationshandler\/conversationids","title":"var conversationIDs: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeletemulitconversationshandler\/delete()","title":"func delete()","type":"method"},{"path":"\/documentation\/divar\/chatdeletemulitconversationshandler\/undo()","title":"func undo()","type":"method"}],"path":"\/documentation\/divar\/chatdeletemulitconversationshandler","title":"ChatDeleteMulitConversationsHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdownloadrequest\/init(task:progress:)","title":"init(task: Task<(), Error>, progress: (Progress) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdownloadrequest\/progress","title":"var progress: (Progress) -> Void","type":"property"},{"path":"\/documentation\/divar\/chatdownloadrequest\/task","title":"var task: Task<(), Error>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdownloadrequest\/cancelrequest()","title":"func cancelRequest()","type":"method"},{"path":"\/documentation\/divar\/chatdownloadrequest\/downloadprogress(on:_:)","title":"func downloadProgress(on: DispatchQueue, (Progress) -> Void) -> ChatDownloadRequest","type":"method"},{"path":"\/documentation\/divar\/chatdownloadrequest\/uploadprogress(on:_:)","title":"func uploadProgress(on: DispatchQueue, (Progress) -> Void) -> ChatDownloadRequest","type":"method"}],"path":"\/documentation\/divar\/chatdownloadrequest","title":"ChatDownloadRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessagerequest\/init(_:networkmanager:dataprovider:)","title":"init(ChatConversationMessageTable, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessagerequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chateditmessagerequest\/message","title":"let message: ChatConversationMessageTable","type":"property"},{"path":"\/documentation\/divar\/chateditmessagerequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chateditmessagerequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessagerequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any?>, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessagerequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chateditmessagerequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chateditmessagerequest","title":"ChatEditMessageRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorhandler\/init()","title":"init()","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorhandler\/deleteoutboxmessage(forid:networkmanager:dataprovider:)","title":"class func deleteOutboxMessage(forID: String, networkManager: ChatNetworkManager?, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/chaterrorhandler\/handleerrormessages(reason:messageid:networkmanager:dataprovider:)","title":"class func handleErrorMessages(reason: String, messageID: String, networkManager: ChatNetworkManager?, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/chaterrorhandler\/retrysendinoutboxedmessages(networkmanager:dataprovider:)","title":"class func retrySendinOutboxedMessages(networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/chaterrorhandler\/setmessageassent(forid:isblocked:dataprovider:)","title":"class func setMessageAsSent(forID: String, isBlocked: Bool, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/chaterrorhandler\/setmessageassent(forid:rejectionreason:dataprovider:)","title":"class func setMessageAsSent(forID: String, rejectionReason: String, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/chaterrorhandler\/setmessageblocked(messageid:dataprovider:completionblock:)","title":"class func setMessageBlocked(messageID: String, dataProvider: DataProviderProtocol, completionBlock: ((String) -> Void)?)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/filenotfound","title":"case FileNotFound","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/peerspammed","title":"case PeerSpammed","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/alreadyexists","title":"case alreadyExists","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/alreadyinserted","title":"case alreadyInserted","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/blockself","title":"case blockSelf","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/blocked","title":"case blocked","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/blockedbyme","title":"case blockedByMe","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/deletedconversation","title":"case deletedConversation","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/general","title":"case general","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/internalservererror","title":"case internalServerError","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/invalidconversation","title":"case invalidConversation","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/invalidlocation","title":"case invalidLocation","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/limitreached","title":"case limitReached","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/maxfilesize","title":"case maxFileSize","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/messagetoolong","title":"case messageTooLong","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/messagetooshort","title":"case messageTooShort","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/missingmetadata","title":"case missingMetadata","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/nointernet","title":"case noInternet","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/outboxed","title":"case outboxed","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/ownerdeletedconversation","title":"case ownerDeletedConversation","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/peerdeletedconversation","title":"case peerDeletedConversation","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/peernotfound","title":"case peerNotFound","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/spammed","title":"case spammed","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/suspendedonday","title":"case suspendedOnDay","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/suspendedsevendays","title":"case suspendedSevenDays","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/suspendedthirtydays","title":"case suspendedThirtyDays","type":"case"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/suspendedthreedays","title":"case suspendedThreeDays","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chaterrorhandler\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorhandler\/error\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chaterrorhandler\/error\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chaterrorhandler\/error","title":"ChatErrorHandler.Error","type":"enum"}],"path":"\/documentation\/divar\/chaterrorhandler","title":"ChatErrorHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorloghelper\/init(performancemonitor:error:topic:payload:)","title":"init(performanceMonitor: PerformanceMonitorProtocol, error: SocketErrorResponseStruct, topic: String, payload: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorloghelper\/error","title":"var error: SocketErrorResponseStruct","type":"property"},{"path":"\/documentation\/divar\/chaterrorloghelper\/payload","title":"var payload: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/chaterrorloghelper\/performancemonitor","title":"var performanceMonitor: PerformanceMonitorProtocol","type":"property"},{"path":"\/documentation\/divar\/chaterrorloghelper\/topic","title":"var topic: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorloghelper\/logevent()","title":"func logEvent()","type":"method"}],"path":"\/documentation\/divar\/chaterrorloghelper","title":"ChatErrorLogHelper","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventhandler\/init(event:networkmanager:dataprovider:)","title":"init(event: ChatEventModel, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventhandler\/dataprovider","title":"let dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chateventhandler\/event","title":"let event: ChatEventModel","type":"property"},{"path":"\/documentation\/divar\/chateventhandler\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventhandler\/execute(completionblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any>) -> Void?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/announcement","title":"case announcement","type":"case"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/blocking","title":"case blocking","type":"case"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/conversationdelete","title":"case conversationDelete","type":"case"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/message","title":"case message","type":"case"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/newconversation","title":"case newConversation","type":"case"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/peertyping","title":"case peerTyping","type":"case"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/postchi","title":"case postchi","type":"case"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/received","title":"case received","type":"case"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/seen","title":"case seen","type":"case"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/suggestionlist","title":"case suggestionList","type":"case"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/typing","title":"case typing","type":"case"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/updateprofile","title":"case updateProfile","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chateventhandler\/eventtypes\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chateventhandler\/eventtypes","title":"ChatEventHandler.EventTypes","type":"enum"}],"path":"\/documentation\/divar\/chateventhandler","title":"ChatEventHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventmodel\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/chateventmodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventmodel\/eventtype","title":"var eventType: Int?","type":"property"},{"path":"\/documentation\/divar\/chateventmodel\/silent","title":"var silent: Bool?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventmodel\/from(payload:)","title":"static func from(payload: [String : Any]) throws -> ChatEventModel?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/eventtype","title":"case eventType","type":"case"},{"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/silent","title":"case silent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chateventmodel\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chateventmodel\/codingkeys","title":"ChatEventModel.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chateventmodel","title":"ChatEventModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfilemanager\/init()","title":"init()","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfilemanager\/copyfileinchatfiles(fileurl:withname:)","title":"class func copyFileInChatFiles(fileURL: URL, withName: String) throws","type":"method"},{"path":"\/documentation\/divar\/chatfilemanager\/filepathwithname(_:)","title":"class func filePathWithName(String) -> URL","type":"method"}],"path":"\/documentation\/divar\/chatfilemanager","title":"ChatFileManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatflowcontroller\/init(container:configuration:)","title":"init(container: BaseFlowDIContainer, configuration: IntroConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatflowcontroller\/journeyaction","title":"var journeyAction: (() -> Void)?","type":"property"},{"path":"\/documentation\/divar\/chatflowcontroller\/parentviewcontroller","title":"var parentViewController: UIViewController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatflowcontroller\/askfornickname(parent:completionblock:)","title":"func askForNickname(parent: UIViewController, completionBlock: CompletionHandlerType)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/clearnotificationcenter()","title":"func clearNotificationCenter()","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/handlechatflow(parent:completionblock:)","title":"func handleChatFlow(parent: UIViewController, completionBlock: CompletionHandlerType)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/initial(with:)","title":"func initial(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/initialviewcontroller()","title":"func initialViewController() -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/openchatviewcontroller(conversation:forwardingmessage:vc:)","title":"func openChatViewController(conversation: ChatConversationStructure, forwardingMessage: ChatConversationMessageTable, vc: UIViewController)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/openconversation(conversationid:title:)","title":"func openConversation(conversationID: String, title: String)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/openconversationforpost(_:with:)","title":"func openConversationForPost(PostViewStructure, with: NavigationController)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/pushtochatviewcontroller(_:conversationid:)","title":"func pushToChatViewController(UIViewController, conversationID: String)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/pushtoconversationlistfromviewcontroller(_:animated:)","title":"func pushToConversationListFromViewController(UIViewController, animated: Bool)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/showinappnotificationtoast(parent:payload:)","title":"func showInAppNotificationToast(parent: UIViewController, payload: [AnyHashable : Any])","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/userregisteredsuccessfully(in:with:)","title":"func userRegisteredSuccessfully(in: UserRegisterFlowController, with: String)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatflowcontroller\/didrequestlogin(_:)","title":"func didRequestLogin(ChatInstructLoginViewController)","type":"method"}],"path":"\/documentation\/divar\/chatflowcontroller\/chatinstructloginviewcontrollerdelegate-implementations","title":"ChatInstructLoginViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatflowcontroller\/chatviewcontroller(_:didrequestshowforwardlistforconversations:withmessage:)","title":"func chatViewController(ChatViewController, didRequestShowForwardListForConversations: [ChatConversationStructure], withMessage: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/chatviewcontroller(_:didrequestshowinconversationactionswidget:)","title":"func chatViewController(ChatViewController, didRequestShowInConversationActionsWidget: Widgets_BottomSheet)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/chatviewcontrollerdidrequestasknickname(_:parent:)","title":"func chatViewControllerDidRequestAskNickname(ChatViewController, parent: UIViewController)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/chatviewcontrollerdidrequestopenningpost(post:vc:)","title":"func chatViewControllerDidRequestOpenningPost(post: PostViewStructure, vc: UIViewController)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/chatviewcontrollerdidrequestopenningsupport(_:)","title":"func chatViewControllerDidRequestOpenningSupport(ChatViewController)","type":"method"}],"path":"\/documentation\/divar\/chatflowcontroller\/chatviewcontrollerdelegate-implementations","title":"ChatViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatflowcontroller\/conversationviewcontrollerdidrequestopeninmultidelete(_:vc:)","title":"func conversationViewControllerDidRequestOpeninMultiDelete([ChatConversationTable], vc: ConversationsViewController)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/conversationviewcontrollerdidrequestopeningchat(_:vc:)","title":"func conversationViewControllerDidRequestOpeningChat(ChatConversationTable, vc: UIViewController)","type":"method"},{"path":"\/documentation\/divar\/chatflowcontroller\/conversationviewcontrollerdidrequestopeningpostchi(_:vc:)","title":"func conversationViewControllerDidRequestOpeningPostchi(ChatConversationTable, vc: UIViewController)","type":"method"}],"path":"\/documentation\/divar\/chatflowcontroller\/conversationsviewcontrollerdelegate-implementations","title":"ConversationsViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatflowcontroller\/forwardviewcontroller(_:didrequestforwardmessage:toconversation:)","title":"func forwardViewController(ForwardViewController, didRequestForwardMessage: ChatConversationMessageTable, toConversation: ChatConversationStructure)","type":"method"}],"path":"\/documentation\/divar\/chatflowcontroller\/forwardviewcontrollerdelegate-implementations","title":"ForwardViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatflowcontroller","title":"ChatFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetannouncementrequest\/init(fromid:networkmanager:dataprovider:)","title":"init(fromID: String?, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"path":"\/documentation\/divar\/chatgetannouncementrequest\/init(payload:networkmanager:dataprovider:)","title":"init(payload: ChatPayload, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetannouncementrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatgetannouncementrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatgetannouncementrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetannouncementrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: (RequestCompletionHandlerType<GetAnnouncementResponseModel>), errorHandlingBlock: ((String) -> Void)?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetannouncementrequest\/resultmodel","title":"ChatGetAnnouncementRequest.ResultModel","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetannouncementrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatgetannouncementrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatgetannouncementrequest","title":"ChatGetAnnouncementRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetannouncementrequesthandler\/init(response:networkmanager:dataprovider:)","title":"init(response: CompletionResultType, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetannouncementrequesthandler\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: (RequestCompletionHandlerType<GetAnnouncementResponseModel>), errorHandlingBlock: ((String) -> Void)?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetannouncementrequesthandler\/completionresulttype","title":"ChatGetAnnouncementRequestHandler.CompletionResultType","type":"typealias"}],"path":"\/documentation\/divar\/chatgetannouncementrequesthandler","title":"ChatGetAnnouncementRequestHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetlastseenrequest\/init(peerid:networkmanager:dataprovider:)","title":"init(peerID: String, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetlastseenrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatgetlastseenrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatgetlastseenrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetlastseenrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: (RequestCompletionHandlerType<String>), errorHandlingBlock: ((String) -> Void)?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetlastseenrequest\/resultmodel","title":"ChatGetLastSeenRequest.ResultModel","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetlastseenrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatgetlastseenrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatgetlastseenrequest","title":"ChatGetLastSeenRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/init(conversationid:payload:networkmanager:dataprovider:)","title":"init(conversationID: String, payload: ChatPayload, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/init(networkmanager:dataprovider:)","title":"init(networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<ChatGetMessageResponseStructure>, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/loadmoredata(baseid:completionhandler:)","title":"func loadMoreData(baseID: String?, completionHandler: RequestCompletionHandlerType<ChatGetMessageResponseStructure>)","type":"method"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/saveconversationmessages(_:conversationid:)","title":"func saveConversationMessages([ChatMessageStructure], conversationID: String?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/sortorderenum\/acs","title":"case acs","type":"case"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/sortorderenum\/desc","title":"case desc","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/sortorderenum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/sortorderenum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/sortorderenum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatgetmessagerequest\/sortorderenum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/sortorderenum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessagerequest\/sortorderenum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatgetmessagerequest\/sortorderenum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatgetmessagerequest\/sortorderenum","title":"ChatGetMessageRequest.SortOrderEnum","type":"enum"}],"path":"\/documentation\/divar\/chatgetmessagerequest","title":"ChatGetMessageRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetsuggestionsrequest\/init(conversationid:networkmanager:dataprovider:suggestiondelegate:)","title":"init(conversationId: String, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol, suggestionDelegate: GetSuggestionProtocol?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetsuggestionsrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatgetsuggestionsrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatgetsuggestionsrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"path":"\/documentation\/divar\/chatgetsuggestionsrequest\/suggestiondelegate","title":"var suggestionDelegate: GetSuggestionProtocol?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetsuggestionsrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: ((GetSuggestionsStructure) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetsuggestionsrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatgetsuggestionsrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatgetsuggestionsrequest","title":"ChatGetSuggestionsRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitloghelper\/init(didebaanmonitoring:)","title":"init(didebaanMonitoring: DidebaanMonitoring)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitloghelper\/logcomplete()","title":"func logComplete()","type":"method"},{"path":"\/documentation\/divar\/chatinitloghelper\/logrequest()","title":"func logRequest()","type":"method"},{"path":"\/documentation\/divar\/chatinitloghelper\/logresponse()","title":"func logResponse()","type":"method"}],"path":"\/documentation\/divar\/chatinitloghelper","title":"ChatInitLogHelper","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitrequesthandler\/init(data:networkmanager:dataprovider:)","title":"init(data: ChatInitStateResultStructure, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitrequesthandler\/data","title":"let data: ChatInitStateResultStructure","type":"property"},{"path":"\/documentation\/divar\/chatinitrequesthandler\/dataprovider","title":"let dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatinitrequesthandler\/networkmanager","title":"let networkManager: ChatNetworkManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitrequesthandler\/execute(completionblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any>) -> Void?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitrequesthandler\/resulttype","title":"ChatInitRequestHandler.ResultType","type":"typealias"}],"path":"\/documentation\/divar\/chatinitrequesthandler","title":"ChatInitRequestHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstaterequest\/init(networkmanager:dataprovider:)","title":"init(networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstaterequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatinitstaterequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatinitstaterequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstaterequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any>, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstaterequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatinitstaterequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatinitstaterequest","title":"ChatInitStateRequest","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinstructloginviewcontroller\/blockingview","title":"var blockingView: BlockingView!","type":"property"},{"path":"\/documentation\/divar\/chatinstructloginviewcontroller\/delegate","title":"var delegate: ChatInstructLoginViewControllerDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinstructloginviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinstructloginviewcontroller\/didtap(onblockingview:)","title":"func didTap(onBlockingView: UIView)","type":"method"}],"path":"\/documentation\/divar\/chatinstructloginviewcontroller\/blockingviewdelegate-implementations","title":"BlockingViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatinstructloginviewcontroller","title":"ChatInstructLoginViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/blockstatus","title":"let blockStatus: String?","type":"property"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/userid","title":"let userID: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/blockstatus","title":"case blockStatus","type":"case"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/userid","title":"case userID","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatmessageblockstructure\/innercodingkeys","title":"ChatMessageBlockStructure.InnerCodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatmessageblockstructure","title":"ChatMessageBlockStructure","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/conversationid","title":"let conversationID: String?","type":"property"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/message","title":"var message: ChatMessageStructure?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/conversationid","title":"case conversationID","type":"case"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/message","title":"case message","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatmessageeventstructure\/innercodingkeys","title":"ChatMessageEventStructure.InnerCodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatmessageeventstructure","title":"ChatMessageEventStructure","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagegetforwardlistrequest\/init(_:networkmanager:dataprovider:)","title":"init(ChatConversationMessageTable, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagegetforwardlistrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatmessagegetforwardlistrequest\/message","title":"let message: ChatConversationMessageTable","type":"property"},{"path":"\/documentation\/divar\/chatmessagegetforwardlistrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatmessagegetforwardlistrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagegetforwardlistrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<[ChatConversationStructure]?>, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagegetforwardlistrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatmessagegetforwardlistrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatmessagegetforwardlistrequest","title":"ChatMessageGetForwardListRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenrequest\/init(conversationid:messageid:seenorigin:networkmanager:dataprovider:)","title":"init(conversationID: String, messageID: String, seenOrigin: SeenMessageOriginEnum, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"path":"\/documentation\/divar\/chatmessageseenrequest\/init(payload:networkmanager:dataprovider:)","title":"init(payload: ChatPayload, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatmessageseenrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatmessageseenrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: ((Any) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenrequest\/origin","title":"static var origin: SeenMessageOriginEnum?","type":"property"},{"path":"\/documentation\/divar\/chatmessageseenrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatmessageseenrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatmessageseenrequest","title":"ChatMessageSeenRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenrequesthandler\/init(data:origin:networkmanager:dataprovider:)","title":"init(data: ChatMessageSeenStructure, origin: SeenMessageOriginEnum, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenrequesthandler\/dataprovider","title":"let dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatmessageseenrequesthandler\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenrequesthandler\/execute(completionblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any>) -> Void?","type":"method"},{"path":"\/documentation\/divar\/chatmessageseenrequesthandler\/updateconversationseenstatus(completionblock:)","title":"func updateConversationSeenStatus(completionBlock: (() -> Void)?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenrequesthandler\/resulttype","title":"ChatMessageSeenRequestHandler.ResultType","type":"typealias"}],"path":"\/documentation\/divar\/chatmessageseenrequesthandler","title":"ChatMessageSeenRequestHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/conversationid","title":"let conversationID: String?","type":"property"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/fromme","title":"let fromMe: Bool?","type":"property"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/messageid","title":"let messageID: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/conversationid","title":"case conversationID","type":"case"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/fromme","title":"case fromMe","type":"case"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/messageid","title":"case messageID","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatmessageseenstructure\/innercodingkeys","title":"ChatMessageSeenStructure.InnerCodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatmessageseenstructure","title":"ChatMessageSeenStructure","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/conversationid","title":"let conversationID: String?","type":"property"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/typing","title":"let typing: Bool?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/conversationid","title":"case conversationID","type":"case"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/typing","title":"case typing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatmessagetypingstructure\/innercodingkeys","title":"ChatMessageTypingStructure.InnerCodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatmessagetypingstructure","title":"ChatMessageTypingStructure","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/activityindicator","title":"var activityIndicator: UIActivityIndicatorView!","type":"property"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/buttomlabel","title":"var buttomLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/centermode","title":"var centerMode: Bool","type":"property"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/centertitle","title":"var centerTitle: UILabel!","type":"property"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/networkmanager","title":"var networkManager: ChatNetworkManager?","type":"property"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/openpostbutton","title":"var openPostButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/toplabel","title":"var topLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/chatnavigationtitleview\/togglestatus()","title":"func toggleStatus()","type":"method"}],"path":"\/documentation\/divar\/chatnavigationtitleview","title":"ChatNavigationTitleView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkmanager\/init(user:chatservice:socket:dataprovider:userdefaults:)","title":"init(user: User, chatService: ChatServiceProtocol, socket: ChatSocketProtocol, dataProvider: DataProviderProtocol, userDefaults: UserDefaults)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkmanager\/cdnurl","title":"var CDNURL: String","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/blockedusers","title":"var blockedUsers: Set<String>","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/chatservice","title":"var chatService: ChatServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/forceupdate","title":"var forceUpdate: Bool","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/hasnickname","title":"var hasNickname: Bool","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/hasupdate","title":"var hasUpdate: Bool","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/isconnected","title":"var isConnected: Bool","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/lasteventid","title":"var lastEventID: String?","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/meta","title":"var meta: ChatStaticMeta?","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/servermessage","title":"var serverMessage: String","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/servertimediff","title":"var serverTimeDiff: TimeInterval?","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/shouldretryinitapi","title":"var shouldRetryInitApi: Bool","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/therearesavedmessages","title":"var thereAreSavedMessages: Bool","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/user","title":"let user: User","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanager\/userdefaults","title":"let userDefaults: UserDefaults","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkmanager\/userregisterationchanged()","title":"func UserRegisterationChanged()","type":"method"},{"path":"\/documentation\/divar\/chatnetworkmanager\/connecttosocket()","title":"func connectToSocket()","type":"method"},{"path":"\/documentation\/divar\/chatnetworkmanager\/disconnect(retryconnecting:error:)","title":"func disconnect(retryConnecting: Bool, error: Error?)","type":"method"},{"path":"\/documentation\/divar\/chatnetworkmanager\/getconnectionstatus()","title":"func getConnectionStatus() -> ConnectionStatus","type":"method"},{"path":"\/documentation\/divar\/chatnetworkmanager\/getconversationlist(completionblock:)","title":"func getConversationList(completionBlock: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/chatnetworkmanager\/newsession()","title":"func newSession()","type":"method"},{"path":"\/documentation\/divar\/chatnetworkmanager\/performspecificsyncaction(actionid:)","title":"func performSpecificSyncAction(actionID: String)","type":"method"},{"path":"\/documentation\/divar\/chatnetworkmanager\/performsyncactions()","title":"func performSyncActions()","type":"method"},{"path":"\/documentation\/divar\/chatnetworkmanager\/setupreachabilitytimer()","title":"func setupReachabilityTimer()","type":"method"},{"path":"\/documentation\/divar\/chatnetworkmanager\/setupsocketconnection(withretry:)","title":"func setupSocketConnection(withRetry: Bool)","type":"method"},{"path":"\/documentation\/divar\/chatnetworkmanager\/userchannelsend(topic:payload:onok:onerror:onwarning:)","title":"func userChannelSend(topic: ChatTopic, payload: ChatPayload, onOk: (Any) -> Void, onError: (String) -> Void, onWarning: ((String) -> Void)?)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkmanager\/connectionstatus\/connected","title":"case connected","type":"case"},{"path":"\/documentation\/divar\/chatnetworkmanager\/connectionstatus\/connecting","title":"case connecting","type":"case"},{"path":"\/documentation\/divar\/chatnetworkmanager\/connectionstatus\/offline","title":"case offline","type":"case"},{"path":"\/documentation\/divar\/chatnetworkmanager\/connectionstatus\/updating","title":"case updating","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkmanager\/connectionstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkmanager\/connectionstatus\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatnetworkmanager\/connectionstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatnetworkmanager\/connectionstatus","title":"ChatNetworkManager.ConnectionStatus","type":"enum"}],"path":"\/documentation\/divar\/chatnetworkmanager","title":"ChatNetworkManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatreportpeerrequest\/init(_:networkmanager:dataprovider:)","title":"init(ReportPeerModel, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatreportpeerrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatreportpeerrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatreportpeerrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatreportpeerrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: (RequestCompletionHandlerType<Any>), errorHandlingBlock: ((String) -> Void)?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatreportpeerrequest\/resultmodel","title":"ChatReportPeerRequest.ResultModel","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatreportpeerrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatreportpeerrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatreportpeerrequest","title":"ChatReportPeerRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendfilerequest\/init(_:image:filepath:networkmanager:dataprovider:fileuploader:)","title":"init(ChatConversationMessageTable, image: UIImage?, filePath: URL?, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol, fileUploader: FileUploaderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendfilerequest\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/divar\/chatsendfilerequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatsendfilerequest\/filepath","title":"var filePath: URL?","type":"property"},{"path":"\/documentation\/divar\/chatsendfilerequest\/fileuploader","title":"var fileUploader: FileUploaderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatsendfilerequest\/image","title":"var image: UIImage?","type":"property"},{"path":"\/documentation\/divar\/chatsendfilerequest\/message","title":"let message: ChatConversationMessageTable","type":"property"},{"path":"\/documentation\/divar\/chatsendfilerequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatsendfilerequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendfilerequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: ((Any) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"path":"\/documentation\/divar\/chatsendfilerequest\/forwardfile(completionblock:errorhandlingblock:)","title":"func forwardFile(completionBlock: ((Any) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendfilerequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatsendfilerequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"},{"path":"\/documentation\/divar\/chatsendfilerequest\/uploadingfileids","title":"static var uploadingFileIDs: NSMutableSet","type":"property"}],"path":"\/documentation\/divar\/chatsendfilerequest","title":"ChatSendFileRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendlocationrequest\/init(_:location:networkmanager:dataprovider:)","title":"init(ChatConversationMessageTable, location: Location, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendlocationrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatsendlocationrequest\/message","title":"let message: ChatConversationMessageTable","type":"property"},{"path":"\/documentation\/divar\/chatsendlocationrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatsendlocationrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendlocationrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: ((Any) -> Void)?, errorHandlingBlock: ((String) -> Void)?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendlocationrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatsendlocationrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatsendlocationrequest","title":"ChatSendLocationRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendmessagerequest\/init(_:networkmanager:dataprovider:isforwarding:onwarning:)","title":"init(ChatConversationMessageTable, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol, isForwarding: Bool, onWarning: ((String) -> Void)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendmessagerequest\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/divar\/chatsendmessagerequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatsendmessagerequest\/message","title":"let message: ChatConversationMessageTable","type":"property"},{"path":"\/documentation\/divar\/chatsendmessagerequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatsendmessagerequest\/onwarning","title":"var onWarning: ((String) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/chatsendmessagerequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendmessagerequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any>, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendmessagerequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatsendmessagerequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatsendmessagerequest","title":"ChatSendMessageRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendsuggestionrequest\/init(conversationid:networkmanager:dataprovider:id:replytoid:)","title":"init(conversationId: String, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol, id: String, replyToID: String?)","type":"init"},{"path":"\/documentation\/divar\/chatsendsuggestionrequest\/init(payload:networkmanager:dataprovider:)","title":"init(payload: ChatPayload, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendsuggestionrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatsendsuggestionrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatsendsuggestionrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"path":"\/documentation\/divar\/chatsendsuggestionrequest\/replytoid","title":"var replyToID: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendsuggestionrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: ((Any) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendsuggestionrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatsendsuggestionrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatsendsuggestionrequest","title":"ChatSendSuggestionRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendtypingrequest\/init(conversationid:typingstaus:networkmanager:dataprovider:)","title":"init(conversationID: String, typingStaus: Bool, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendtypingrequest\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/divar\/chatsendtypingrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatsendtypingrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatsendtypingrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"path":"\/documentation\/divar\/chatsendtypingrequest\/typingstaus","title":"var typingStaus: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendtypingrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: ((Any) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsendtypingrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatsendtypingrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatsendtypingrequest","title":"ChatSendTypingRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatservice\/init(servicenetworkmanager:grpcnetworkmanager:dataprovider:user:userdefaults:socket:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol, grpcNetworkManager: GRPCNetworkManagerProtocol, dataProvider: DataProviderProtocol, user: User, userDefaults: UserDefaults, socket: ChatSocketProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatservice\/cache","title":"let cache: Cache<String, Request>","type":"property"},{"path":"\/documentation\/divar\/chatservice\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatservice\/userdefaults","title":"let userDefaults: UserDefaults","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatservice\/cancelcachedreuest(key:)","title":"func cancelCachedReuest(key: String)","type":"method"},{"path":"\/documentation\/divar\/chatservice\/chatupdateprofile(token:name:smsnotification:)","title":"func chatUpdateProfile(token: String, name: String, smsNotification: Bool) async -> Result<ChatProfileResultStructure, DError>","type":"method"},{"path":"\/documentation\/divar\/chatservice\/downloadchatfile(downloadurl:filename:shouldcache:progress:)","title":"func downloadChatFile(downloadURL: String?, fileName: String?, shouldCache: Bool, progress: ((Progress) -> Void)?) async throws","type":"method"},{"path":"\/documentation\/divar\/chatservice\/getcachedrequest(key:)","title":"func getCachedRequest(key: String) -> Request?","type":"method"},{"path":"\/documentation\/divar\/chatservice\/getchatinitapi(token:)","title":"func getChatInitAPI(token: String) async -> Result<ChatAPIInitStruct, Error>","type":"method"},{"path":"\/documentation\/divar\/chatservice\/getchatmeta()","title":"func getChatMeta() async -> Result<ChatStaticMeta, DError>","type":"method"},{"path":"\/documentation\/divar\/chatservice\/getinconversationwidget(conversationid:peerid:completion:)","title":"func getInConversationWidget(conversationID: String, peerID: String, completion: (Result<Widgets_BottomSheet, DError>) -> Void)","type":"method"},{"path":"\/documentation\/divar\/chatservice\/getpostchimessages(lastmessageid:pagesize:)","title":"func getPostchiMessages(lastMessageId: String?, pageSize: Int?) async -> Result<PostchiModel, Error>","type":"method"},{"path":"\/documentation\/divar\/chatservice\/sendpostchiseenrequest(seenmessageid:)","title":"func sendPostchiSeenRequest(seenMessageId: String) async throws","type":"method"},{"path":"\/documentation\/divar\/chatservice\/uploadchatfile(_:shouldcache:)","title":"func uploadChatFile(FileUploaderParameterStruct, shouldCache: Bool) async -> Result<ChatFileUploadResult, Error>?","type":"method"}],"path":"\/documentation\/divar\/chatservice","title":"ChatService","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/item\/init(title:value:type:)","title":"init(title: String, value: T, type: ChatSettingsController.SettingType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/item\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/divar\/chatsettingscontroller\/item\/type","title":"let type: SettingType","type":"property"},{"path":"\/documentation\/divar\/chatsettingscontroller\/item\/value","title":"let value: T","type":"property"}],"path":"\/documentation\/divar\/chatsettingscontroller\/item","title":"ChatSettingsController.Item","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/chatsettingscontroller\/init(container:)","title":"init(container: ChatSettingsControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/tableview","title":"var tableView: UITableView!","type":"property"},{"path":"\/documentation\/divar\/chatsettingscontroller\/widgets","title":"var widgets: [ChatSettingsController.ItemType]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/changechatnickname()","title":"func changeChatNickname()","type":"method"},{"path":"\/documentation\/divar\/chatsettingscontroller\/getstatefulcell(widget:)","title":"func getStatefulCell(widget: ItemType) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/chatsettingscontroller\/getswitchcell(widget:)","title":"func getSwitchCell(widget: ItemType) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/chatsettingscontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/chatsettingscontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/itemtype\/statefulrow(_:)","title":"case statefulRow(Item<String>)","type":"case"},{"path":"\/documentation\/divar\/chatsettingscontroller\/itemtype\/switchrow(_:)","title":"case switchRow(Item<Bool>)","type":"case"}],"path":"\/documentation\/divar\/chatsettingscontroller\/itemtype","title":"ChatSettingsController.ItemType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/settingtype\/blockedconversations","title":"case blockedConversations","type":"case"},{"path":"\/documentation\/divar\/chatsettingscontroller\/settingtype\/inappnotification","title":"case inAppNotification","type":"case"},{"path":"\/documentation\/divar\/chatsettingscontroller\/settingtype\/inactiveconversations","title":"case inactiveConversations","type":"case"},{"path":"\/documentation\/divar\/chatsettingscontroller\/settingtype\/nickname","title":"case nickname","type":"case"},{"path":"\/documentation\/divar\/chatsettingscontroller\/settingtype\/sms","title":"case sms","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/settingtype\/actionlogkey","title":"var actionLogKey: String?","type":"property"},{"path":"\/documentation\/divar\/chatsettingscontroller\/settingtype\/needsgetconversationlist","title":"var needsGetConversationList: Bool","type":"property"},{"path":"\/documentation\/divar\/chatsettingscontroller\/settingtype\/userdefaultskey","title":"var userDefaultsKey: UserDefaults.Keys","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/settingtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/settingtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatsettingscontroller\/settingtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatsettingscontroller\/settingtype","title":"ChatSettingsController.SettingType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/switchcell(_:switchvaluedidchange:)","title":"func switchCell(SwitchTableViewCell, switchValueDidChange: Bool)","type":"method"}],"path":"\/documentation\/divar\/chatsettingscontroller\/switchtableviewcelldelegate-implementations","title":"SwitchTableViewCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/chatsettingscontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/chatsettingscontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsettingscontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/chatsettingscontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"}],"path":"\/documentation\/divar\/chatsettingscontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatsettingscontroller","title":"ChatSettingsController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsharecontactrequest\/init(_:networkmanager:dataprovider:)","title":"init(ChatConversationMessageTable, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsharecontactrequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatsharecontactrequest\/message","title":"let message: ChatConversationMessageTable","type":"property"},{"path":"\/documentation\/divar\/chatsharecontactrequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatsharecontactrequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsharecontactrequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any?>, errorHandlingBlock: ((String) -> Void)?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsharecontactrequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatsharecontactrequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatsharecontactrequest","title":"ChatShareContactRequest","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocket\/isconnected","title":"var isConnected: Bool","type":"property"},{"path":"\/documentation\/divar\/chatsocket\/push","title":"var push: ThreadSafe<Push?>","type":"property"},{"path":"\/documentation\/divar\/chatsocket\/socket","title":"var socket: Socket?","type":"property"},{"path":"\/documentation\/divar\/chatsocket\/userchannel","title":"var userChannel: Channel?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocket\/receive(_:callback:)","title":"func receive(String, callback: (ChatSocketMessage) -> Void) -> ChatSocketProtocol","type":"method"},{"path":"\/documentation\/divar\/chatsocket\/send(_:payload:)","title":"func send(String, payload: ChatPayload) -> ChatSocketProtocol?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocket\/current","title":"static var current: ChatSocketProtocol","type":"property"}],"path":"\/documentation\/divar\/chatsocket","title":"ChatSocket","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocketerrorhandler\/init(topic:payload:reason:dataprovider:)","title":"init(topic: String, payload: ChatPayload, reason: ChatSocketMessage, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocketerrorhandler\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatsocketerrorhandler\/payload","title":"var payload: ChatPayload","type":"property"},{"path":"\/documentation\/divar\/chatsocketerrorhandler\/reason","title":"var reason: ChatSocketMessage","type":"property"},{"path":"\/documentation\/divar\/chatsocketerrorhandler\/topic","title":"var topic: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocketerrorhandler\/handleerror(onerror:onunmatchedtopicerror:)","title":"func handleError(onError: (String) -> Void, onUnmatchedTopicError: () -> Void)","type":"method"}],"path":"\/documentation\/divar\/chatsocketerrorhandler","title":"ChatSocketErrorHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/conversationid","title":"let conversationID: String?","type":"property"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/messageid","title":"let messageID: String?","type":"property"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/suggestionslist","title":"let suggestionsList: [Suggestion]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/conversationid","title":"case conversationID","type":"case"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/messageid","title":"case messageID","type":"case"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/suggestionslist","title":"case suggestionsList","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatsuggestioneventstructure\/innercodingkeys","title":"ChatSuggestionEventStructure.InnerCodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatsuggestioneventstructure","title":"ChatSuggestionEventStructure","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chattoastview\/bodylabel","title":"var bodyLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/chattoastview\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/divar\/chattoastview\/taphandler","title":"var tapHandler: (() -> Void)?","type":"property"},{"path":"\/documentation\/divar\/chattoastview\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chattoastview\/openconversation(_:)","title":"func openConversation(Any)","type":"method"}],"path":"\/documentation\/divar\/chattoastview","title":"ChatToastView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chattypingmessageeventhandler\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chattypingmessageeventhandler\/typingconversations","title":"static var typingConversations: [String : Date]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chattypingmessageeventhandler\/resetlongtypings()","title":"static func resetLongTypings()","type":"method"},{"path":"\/documentation\/divar\/chattypingmessageeventhandler\/toggletypingconversation(data:)","title":"static func toggleTypingConversation(data: ChatMessageTypingStructure)","type":"method"}],"path":"\/documentation\/divar\/chattypingmessageeventhandler","title":"ChatTypingMessageEventHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatupdateprofilehandler\/init(data:dataprovider:)","title":"init(data: ChatUserStructure, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatupdateprofilehandler\/data","title":"let data: ChatUserStructure","type":"property"},{"path":"\/documentation\/divar\/chatupdateprofilehandler\/dataprovider","title":"let dataProvider: DataProviderProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatupdateprofilehandler\/execute(completionblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any>) -> ResultType?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatupdateprofilehandler\/resulttype","title":"ChatUpdateProfileHandler.ResultType","type":"typealias"}],"path":"\/documentation\/divar\/chatupdateprofilehandler","title":"ChatUpdateProfileHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatupdateprofilerequest\/init(payload:networkmanager:dataprovider:)","title":"init(payload: ChatPayload, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatupdateprofilerequest\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatupdateprofilerequest\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatupdateprofilerequest\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatupdateprofilerequest\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: ((Any) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatupdateprofilerequest\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatupdateprofilerequest\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatupdateprofilerequest","title":"ChatUpdateProfileRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuploadrequest\/init(task:progress:)","title":"init(task: Task<ChatFileUploadResult, Error>, progress: (Progress) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuploadrequest\/progress","title":"var progress: (Progress) -> Void","type":"property"},{"path":"\/documentation\/divar\/chatuploadrequest\/task","title":"var task: Task<ChatFileUploadResult, Error>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuploadrequest\/cancelrequest()","title":"func cancelRequest()","type":"method"},{"path":"\/documentation\/divar\/chatuploadrequest\/downloadprogress(on:_:)","title":"func downloadProgress(on: DispatchQueue, (Progress) -> Void) -> ChatUploadRequest","type":"method"},{"path":"\/documentation\/divar\/chatuploadrequest\/uploadprogress(on:_:)","title":"func uploadProgress(on: DispatchQueue, (Progress) -> Void) -> ChatUploadRequest","type":"method"}],"path":"\/documentation\/divar\/chatuploadrequest","title":"ChatUploadRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergetevents\/init(payload:networkmanager:dataprovider:)","title":"init(payload: ChatPayload, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergetevents\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatusergetevents\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatusergetevents\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergetevents\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any>, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergetevents\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatusergetevents\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatusergetevents","title":"ChatUserGetEvents","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergeteventshandler\/init(data:networkmanager:dataprovider:)","title":"init(data: [ChatEventResponseStructure], networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergeteventshandler\/data","title":"let data: [ChatEventResponseStructure]","type":"property"},{"path":"\/documentation\/divar\/chatusergeteventshandler\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatusergeteventshandler\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergeteventshandler\/execute(completionblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any>) -> Void?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergeteventshandler\/resulttype","title":"ChatUserGetEventsHandler.ResultType","type":"typealias"}],"path":"\/documentation\/divar\/chatusergeteventshandler","title":"ChatUserGetEventsHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergetmessage\/init(payload:networkmanager:dataprovider:)","title":"init(payload: ChatPayload, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergetmessage\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatusergetmessage\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatusergetmessage\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergetmessage\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: ((ChatGetMessageStructure) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergetmessage\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatusergetmessage\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatusergetmessage","title":"ChatUserGetMessage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergetmessagehandler\/init(data:networkmanager:dataprovider:)","title":"init(data: [ChatMessageStructure], networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergetmessagehandler\/data","title":"let data: [ChatMessageStructure]","type":"property"},{"path":"\/documentation\/divar\/chatusergetmessagehandler\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatusergetmessagehandler\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergetmessagehandler\/execute(completionblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any?>) -> Void?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusergetmessagehandler\/resulttype","title":"ChatUserGetMessageHandler.ResultType","type":"typealias"}],"path":"\/documentation\/divar\/chatusergetmessagehandler","title":"ChatUserGetMessageHandler","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuseridentification\/id","title":"class var id: String?","type":"property"},{"path":"\/documentation\/divar\/chatuseridentification\/name","title":"class var name: String?","type":"property"}],"path":"\/documentation\/divar\/chatuseridentification","title":"ChatUserIdentification","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserprofilestructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserprofilestructure\/profile","title":"let profile: ChatUserStructure?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/profile","title":"case profile","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatuserprofilestructure\/innercodingkeys","title":"ChatUserProfileStructure.InnerCodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatuserprofilestructure","title":"ChatUserProfileStructure","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserrevokesession\/init(networkmanager:dataprovider:)","title":"init(networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserrevokesession\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatuserrevokesession\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatuserrevokesession\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserrevokesession\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: ((Any) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserrevokesession\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatuserrevokesession\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatuserrevokesession","title":"ChatUserRevokeSession","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/chatviewcontroller\/init(container:conversationid:isshowingpostchi:configuration:)","title":"init(container: ChatViewControllerDIContainer, conversationID: String, isShowingPostchi: Bool, configuration: IntroConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/advc","title":"var adVC: AdViewViewController","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/chattitleview","title":"var chatTitleView: ChatNavigationTitleView","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/configuration","title":"let configuration: IntroConfig","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/container","title":"let container: ChatViewControllerDIContainer","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/conversation","title":"var conversation: ChatConversationTable?","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/conversationdeactivatedcondition","title":"var conversationDeactivatedCondition: Bool","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/delegate","title":"var delegate: ChatViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/getstatusworkitem","title":"var getStatusWorkItem: DispatchWorkItem?","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/isblocked","title":"var isBlocked: Bool","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/isconversationnew","title":"var isConversationNew: Bool","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/isinpreviewmode","title":"var isInPreviewMode: Bool","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/isshowingpostchi","title":"var isShowingPostchi: Bool","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/messageinputareavc","title":"var messageInputAreaVC: InputAreaViewController","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/messagepreviewbarviewcontroller","title":"var messagePreviewBarViewController: MessagePreviewBarViewController","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/messagingvc","title":"var messagingVC: MessagingViewController","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/openningviewcontroller","title":"var openningViewController: UIViewController?","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/post","title":"var post: PostViewStructure?","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/previewingmessage","title":"var previewingMessage: ChatConversationMessageTable?","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/splitbar","title":"var splitBar: SplitButtonBarViewController","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/splitbarconfig","title":"var splitBarConfig: SplitButtonBarConfig","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/stackviewbottomconstraint","title":"var stackViewBottomConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/suggestions","title":"var suggestions: [Suggestion]?","type":"property"},{"path":"\/documentation\/divar\/chatviewcontroller\/suggestionsvc","title":"var suggestionsVC: TagListViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/userregisterationchanged()","title":"func UserRegisterationChanged()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/closemessagepreviewbar()","title":"func closeMessagePreviewBar()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/deleteconversation(conversationid:)","title":"func deleteConversation(conversationId: String)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/deletemessagerequest(_:completion:)","title":"func deleteMessageRequest(ChatConversationMessageTable, completion: CompletionHandlerType)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestdismissingkeyboard()","title":"func didRequestDismissingKeyboard()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/editmessagerequest(_:completion:)","title":"func editMessageRequest(ChatConversationMessageTable, completion: CompletionHandlerType)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/forwardmessage(forwardingmessage:)","title":"func forwardMessage(forwardingMessage: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/getforwardlistrequest(_:completion:)","title":"func getForwardListRequest(ChatConversationMessageTable, completion: (([ChatConversationStructure]?) -> Void))","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/getinitconversation()","title":"func getInitConversation()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/getonlinestatus(completion:)","title":"func getOnlineStatus(completion: RequestCompletionHandlerType<Bool>)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/getsuggesionrequest()","title":"func getSuggesionRequest()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/handleblockunblockevent()","title":"func handleBlockUnblockEvent()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/handlekeyboardstatus(_:)","title":"func handleKeyboardStatus(Notification)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/logmenuclickaction()","title":"func logMenuClickAction()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/logunblockaction()","title":"func logUnblockAction()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/makecallbuttonaction(_:)","title":"func makeCallButtonAction(UIBarButtonItem)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/pop()","title":"func pop()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/preparemessagepreview(_:fortype:)","title":"func prepareMessagePreview(ChatConversationMessageTable, forType: MessagePreviewBarViewController.MessagePreviewType)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/requestunblockuser()","title":"func requestUnblockUser()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/sendmessagerequest(message:image:filepath:location:completion:)","title":"func sendMessageRequest(message: ChatConversationMessageTable, image: UIImage?, filePath: URL?, location: Location?, completion: CompletionHandlerType)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/sendtypingevent(_:)","title":"func sendTypingEvent(Bool)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/setpeername()","title":"func setPeerName()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/setupchilds()","title":"func setupChilds()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/setupconnectionstatusprompt()","title":"func setupConnectionStatusPrompt()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/setupnavigationbaritems()","title":"func setupNavigationBarItems()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/setupobservers()","title":"func setupObservers()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/setupui()","title":"func setupUI()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/showfilesendconfirmationalert(forurl:)","title":"func showFileSendConfirmationAlert(forURL: URL)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/showoptions()","title":"func showOptions()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/showwarning(for:warning:)","title":"func showWarning(for: ChatConversationMessageTable, warning: String)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/showwarningifexists()","title":"func showWarningIfExists()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/toggleconnectionstatus()","title":"func toggleConnectionStatus()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/togglepeertypingstatus()","title":"func togglePeerTypingStatus()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/togglesplitbar()","title":"func toggleSplitBar()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/viewdidlayoutsubviews()","title":"func viewDidLayoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestopeningpost()","title":"func didRequestOpeningPost()","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/adviewviewcontrollerdelegate-implementations","title":"AdViewViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/blockuser(reason:)","title":"func blockUser(reason: String)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/getconfirmationondelete(conversationid:)","title":"func getConfirmationOnDelete(conversationId: String)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/showblockreasons()","title":"func showBlockReasons()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/showsupport()","title":"func showSupport()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/unblockuser()","title":"func unblockUser()","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/chatoptionactionprotocol-implementations","title":"ChatOptionActionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/didgetsuggesions(suggestions:)","title":"func didGetSuggesions(suggestions: [Suggestion])","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/getsuggestionprotocol-implementations","title":"GetSuggestionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/imagepicker(didselectimages:)","title":"func imagePicker(didSelectImages: [UIImage])","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/imagepickerdelegate-implementations","title":"ImagePickerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/mapselectorcontroller(_:didselectlocation:)","title":"func mapSelectorController(MapSelectorViewController, didSelectLocation: Location)","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/mapselectorviewcontrollerdelegate-implementations","title":"MapSelectorViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/adjustinputareaheightconstraint(height:)","title":"func adjustInputAreaHeightConstraint(height: CGFloat)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestchoosefile()","title":"func didRequestChooseFile()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestopencameracontroller()","title":"func didRequestOpenCameraController()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestopenimagepicker()","title":"func didRequestOpenImagePicker()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestopenlocationselector()","title":"func didRequestOpenLocationSelector()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestsendcontactinfo()","title":"func didRequestSendContactInfo()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestsendtextmessage(message:)","title":"func didRequestSendTextMessage(message: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestsendtypingevent(_:)","title":"func didRequestSendTypingEvent(Bool)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestsendvoice(voicepath:)","title":"func didRequestSendVoice(voicePath: URL)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestvideorecorder()","title":"func didRequestVideoRecorder()","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/messageinputarea(_:didrequesteditmessagewithtext:)","title":"func messageInputArea(InputAreaViewController, didRequestEditMessageWithText: String)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/startedrecordingaudio()","title":"func startedRecordingAudio()","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/messageinputareaviewcontrollerdelegate-implementations","title":"MessageInputAreaViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/closebuttondidclick(_:)","title":"func closeButtonDidClick(MessagePreviewBarViewController)","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/messagepreviewbarviewcontrollerdelegate-implementations","title":"MessagePreviewBarViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestasknickname(_:)","title":"func didRequestAskNickname(MessagingViewController)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestdeletemessage(_:)","title":"func didRequestDeleteMessage(ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequesteditmessage(_:)","title":"func didRequestEditMessage(ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestforwardmessage(_:)","title":"func didRequestForwardMessage(ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/didrequestreplytomessage(_:)","title":"func didRequestReplyToMessage(ChatConversationMessageTable)","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/messagingviewcontrollerdelegate-implementations","title":"MessagingViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/refreshdata()","title":"func refreshData()","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/refreshableprotocol-implementations","title":"RefreshableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/safariviewcontrollerdidfinish(_:)","title":"func safariViewControllerDidFinish(SFSafariViewController)","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/sfsafariviewcontrollerdelegate-implementations","title":"SFSafariViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/splitbuttonbarviewcontrollerdelegate-implementations","title":"SplitButtonBarViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/tagdidselect(tag:index:)","title":"func tagDidSelect(tag: TagListItem, index: Int)","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/taglistviewcontrollerdelegate-implementations","title":"TagListViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/documentpicker(_:didpickdocumentsat:)","title":"func documentPicker(UIDocumentPickerViewController, didPickDocumentsAt: [URL])","type":"method"},{"path":"\/documentation\/divar\/chatviewcontroller\/documentpickerwascancelled(_:)","title":"func documentPickerWasCancelled(UIDocumentPickerViewController)","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/uidocumentpickerdelegate-implementations","title":"UIDocumentPickerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/imagepickercontroller(_:didfinishpickingmediawithinfo:)","title":"func imagePickerController(UIImagePickerController, didFinishPickingMediaWithInfo: [UIImagePickerController.InfoKey : Any])","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/uiimagepickercontrollerdelegate-implementations","title":"UIImagePickerControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontroller\/previewcontroller(_:didconfirmvideowithurl:)","title":"func previewController(VideoPreviewController, didConfirmVideoWithURL: URL)","type":"method"}],"path":"\/documentation\/divar\/chatviewcontroller\/videopreviewcontrollerdelegate-implementations","title":"VideoPreviewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatviewcontroller","title":"ChatViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/checkabletableviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/checkabletableviewcell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/checkabletableviewcell\/row","title":"var row: CheckBoxRow","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/checkabletableviewcell\/fill(with:)-4syxt","title":"func fill(with: SingleMultiModel)","type":"method"},{"path":"\/documentation\/divar\/checkabletableviewcell\/fill(with:)-5cpty","title":"func fill(with: CheckableViewModel)","type":"method"},{"path":"\/documentation\/divar\/checkabletableviewcell\/setselected(_:animated:)","title":"func setSelected(Bool, animated: Bool)","type":"method"}],"path":"\/documentation\/divar\/checkabletableviewcell","title":"CheckableTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/checkboxgroupwidgetcell\/checkboxgroupwidget","title":"var checkBoxGroupWidget: CheckBoxGroupWidget!","type":"property"},{"path":"\/documentation\/divar\/checkboxgroupwidgetcell\/checkboxitems","title":"var checkBoxItems: [CheckBoxGroupWidgetItem]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/checkboxgroupwidgetcell\/checkboxgroupwidget(didselect:index:)","title":"func checkBoxGroupWidget(didSelect: CheckBoxGroupWidgetItem, index: Int)","type":"method"},{"path":"\/documentation\/divar\/checkboxgroupwidgetcell\/config(keys:values:)","title":"func config(keys: [String]?, values: [String]?)","type":"method"},{"path":"\/documentation\/divar\/checkboxgroupwidgetcell\/setvalue(items:)","title":"func setValue(items: [String])","type":"method"},{"path":"\/documentation\/divar\/checkboxgroupwidgetcell\/setup()","title":"func setup()","type":"method"}],"path":"\/documentation\/divar\/checkboxgroupwidgetcell","title":"CheckboxGroupWidgetCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: (CheckboxGroupWidgetCell, CheckboxGroupWidgetRow) -> Void)","type":"init"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/errorrowindex","title":"var errorRowIndex: ErrorRowIndexType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/checkboxgroupwidgetrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/checkboxgroupwidgetrow","title":"CheckboxGroupWidgetRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/chipviewcell\/propertytag","title":"var propertyTag: String?","type":"property"},{"path":"\/documentation\/divar\/chipviewcell\/secondarytitle","title":"var secondaryTitle: String?","type":"property"},{"path":"\/documentation\/divar\/chipviewcell\/title","title":"var title: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/chipviewcell\/update(by:)","title":"func update(by: [ChipViewCellItem])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewcell\/chipview(_:didremoveitemat:item:)","title":"func chipView<T>(ChipView<T>, didRemoveItemAt: Int, item: T)","type":"method"},{"path":"\/documentation\/divar\/chipviewcell\/chipview(_:didselectitemat:item:)","title":"func chipView<T>(ChipView<T>, didSelectItemAt: Int, item: T)","type":"method"}],"path":"\/documentation\/divar\/chipviewcell\/chipviewdelegate-implementations","title":"ChipViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chipviewcell","title":"ChipViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewrow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: (SegmentedControllerCell, SegmentedControllerRow) -> Void)","type":"init"},{"path":"\/documentation\/divar\/chipviewrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/chipviewrow\/init(tag:property:validationoption:onvalidationchanged:)","title":"init(tag: String, property: Schema, validationOption: ValidationOptions, onValidationChanged: (SegmentedControllerCell, SegmentedControllerRow) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/chipviewrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/chipviewrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/chipviewrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/chipviewrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/chipviewrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/chipviewrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/chipviewrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/chipviewrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/chipviewrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/chipviewrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/chipviewrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/chipviewrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chipviewrow","title":"ChipViewRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewrowcollectionviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/chipviewrowcollectionviewcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewrowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewrowcollectionviewcell\/chipview(_:didremoveitemat:item:)","title":"func chipView<T>(ChipView<T>, didRemoveItemAt: Int, item: T)","type":"method"},{"path":"\/documentation\/divar\/chipviewrowcollectionviewcell\/chipview(_:didselectitemat:item:)","title":"func chipView<T>(ChipView<T>, didSelectItemAt: Int, item: T)","type":"method"}],"path":"\/documentation\/divar\/chipviewrowcollectionviewcell\/chipviewdelegate-implementations","title":"ChipViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chipviewrowcollectionviewcell","title":"ChipViewRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/circularprogressbar\/bcakgroundfillcolor","title":"var bcakgroundFillColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/circularprogressbar\/fillcolor","title":"var fillColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/circularprogressbar\/linewidth","title":"var lineWidth: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/circularprogressbar\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/circularprogressbar\/hidebars()","title":"func hideBars()","type":"method"},{"path":"\/documentation\/divar\/circularprogressbar\/layoutsublayers(of:)","title":"func layoutSublayers(of: CALayer)","type":"method"},{"path":"\/documentation\/divar\/circularprogressbar\/resetprogress()","title":"func resetProgress()","type":"method"},{"path":"\/documentation\/divar\/circularprogressbar\/setprogress(to:)","title":"func setProgress(to: Double)","type":"method"}],"path":"\/documentation\/divar\/circularprogressbar","title":"CircularProgressBar","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/circularview\/frame","title":"var frame: CGRect","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/circularview\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/circularview\/tintcolordidchange()","title":"func tintColorDidChange()","type":"method"}],"path":"\/documentation\/divar\/circularview","title":"CircularView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterservice\/init(user:multicityenabled:)","title":"init(user: User, multiCityEnabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterservice\/cityids","title":"var cityIDs: [CityID]","type":"property"},{"path":"\/documentation\/divar\/cityfilterservice\/cityname","title":"var cityName: String","type":"property"},{"path":"\/documentation\/divar\/cityfilterservice\/isfilteredcityequaltousercity","title":"var isFilteredCityEqualToUserCity: Bool","type":"property"},{"path":"\/documentation\/divar\/cityfilterservice\/ismultiselectenabled","title":"let isMultiSelectEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/cityfilterservice\/requestpermissionforchangingcitiesbyclientpublisher","title":"var requestPermissionForChangingCitiesByClientPublisher: AnyPublisher<String, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterservice\/permissionresultforpendingcitieschanges(granted:)","title":"func permissionResultForPendingCitiesChanges(granted: Bool)","type":"method"},{"path":"\/documentation\/divar\/cityfilterservice\/save(change:)","title":"func save(change: CityFilterChangesInformation)","type":"method"},{"path":"\/documentation\/divar\/cityfilterservice\/save(cities:)","title":"func save(cities: [TitleValue<String, String>])","type":"method"}],"path":"\/documentation\/divar\/cityfilterservice","title":"CityFilterService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterview\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/cityfilterview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterview\/ontap","title":"var onTap: (() -> Void)?","type":"property"},{"path":"\/documentation\/divar\/cityfilterview\/title","title":"var title: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterview\/handletapgesture()","title":"func handleTapGesture()","type":"method"},{"path":"\/documentation\/divar\/cityfilterview\/setup()","title":"func setup()","type":"method"}],"path":"\/documentation\/divar\/cityfilterview","title":"CityFilterView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/init(container:defaultcities:)","title":"init(container: CityMultiSelectViewControllerDIContainer, defaultCities: [String])","type":"init"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/init(container:root:tree:config:)","title":"init(container: CityMultiSelectViewControllerDIContainer, root: MultiHierarchyNode, tree: MultiHierarchyNode, config: BrandMultiHierarchyConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/buttonbar","title":"var buttonBar: SplitButtonBarViewController","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/config","title":"var config: BrandMultiHierarchyConfig!","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/defaultcities","title":"var defaultCities: [String]","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/delegate","title":"var delegate: CityMultiSelectViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/presentingtree","title":"var presentingTree: MultiHierarchyNode!","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/root","title":"var root: MultiHierarchyNode!","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/stackviewbottomconstraint","title":"var stackViewBottomConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tableview","title":"var tableView: UITableView!","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/taglistvc","title":"var taglistVC: TagListViewController","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/taglistview","title":"var taglistView: UIView!","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tree","title":"var tree: MultiHierarchyNode!","type":"property"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/values","title":"var values: [UIOptionsDataStruct]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/addchilds()","title":"func addChilds()","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/enablebutton(_:)","title":"func enableButton(Bool)","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/getschema()","title":"func getSchema()","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/gettaglistsugestions()","title":"func getTaglistSugestions() -> [UIOptionsDataStruct]?","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/getvalues()","title":"func getValues() -> [TitleValue<String, String>]","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/setprimarytexttitle(isenabled:)","title":"func setPrimaryTextTitle(isEnabled: Bool)","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/setvalues(property:_:)","title":"func setValues(property: Schema?, [String])","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/setuppage(with:)","title":"func setupPage(with: Schema?)","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/setupsearchcontroller()","title":"func setupSearchController()","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/setuptableview()","title":"func setupTableView()","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/setuptaglistview()","title":"func setupTaglistView()","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/setupui()","title":"func setupUI()","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/updatetaglistview(animated:)","title":"func updateTaglistView(animated: Bool)","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/citymultiselectviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/citymultiselectviewcontroller\/splitbuttonbarviewcontrollerdelegate-implementations","title":"SplitButtonBarViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tagdidselect(tag:index:)","title":"func tagDidSelect(tag: TagListItem, index: Int)","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/taglistcell(_:tag:didremoveitematindex:)","title":"func taglistCell(TagListCell, tag: TagListItem, didRemoveItemAtIndex: Int)","type":"method"}],"path":"\/documentation\/divar\/citymultiselectviewcontroller\/taglistviewcontrollerdelegate-implementations","title":"TagListViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/citymultiselectviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tableview(_:diddeselectrowat:)","title":"func tableView(UITableView, didDeselectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/citymultiselectviewcontroller\/tableview(_:willselectrowat:)","title":"func tableView(UITableView, willSelectRowAt: IndexPath) -> IndexPath?","type":"method"}],"path":"\/documentation\/divar\/citymultiselectviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/citymultiselectviewcontroller","title":"CityMultiSelectViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/init(container:)","title":"init(container: CitySelectViewControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/delegate","title":"var delegate: CitySelectViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/isinsearch","title":"var isInSearch: Bool","type":"property"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/mainoptionlist","title":"var mainOptionList: Cities?","type":"property"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/nearbycity","title":"var nearbyCity: Place?","type":"property"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/numberoftopcities","title":"var numberOfTopCities: Int","type":"property"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/optionslist","title":"var optionsList: [Place]?","type":"property"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/selectedoption","title":"var selectedOption: Place?","type":"property"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview","title":"var tableView: UITableView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/didselect(city:selectiontype:)","title":"func didSelect(city: Place?, selectionType: CitySelectionType)","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/didselectnearby()","title":"func didSelectNearby()","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/cityselectviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/scrollviewshouldscrolltotop(_:)","title":"func scrollViewShouldScrollToTop(UIScrollView) -> Bool","type":"method"}],"path":"\/documentation\/divar\/cityselectviewcontroller\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/cityselectviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:heightforfooterinsection:)","title":"func tableView(UITableView, heightForFooterInSection: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:heightforheaderinsection:)","title":"func tableView(UITableView, heightForHeaderInSection: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:viewforheaderinsection:)","title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontroller\/tableview(_:willdisplay:forrowat:)","title":"func tableView(UITableView, willDisplay: UITableViewCell, forRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/cityselectviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/cityselectviewcontroller","title":"CitySelectViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactmessagecell\/menuoptions","title":"var menuOptions: [MessageCellOptions]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contactmessagecell\/fillmessageview()","title":"func fillMessageView()","type":"method"},{"path":"\/documentation\/divar\/contactmessagecell\/messageviewdidtapped()","title":"func messageViewDidTapped()","type":"method"}],"path":"\/documentation\/divar\/contactmessagecell","title":"ContactMessageCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contacttableviewcell\/contacttitle","title":"var contactTitle: UILabel!","type":"property"},{"path":"\/documentation\/divar\/contacttableviewcell\/indicatorimage","title":"var indicatorImage: SonnatImageView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contacttableviewcell\/fill(bookmark:isbookmarkedbefore:)","title":"func fill(bookmark: ContactBookmarkState, isBookmarkedBefore: Bool)","type":"method"},{"path":"\/documentation\/divar\/contacttableviewcell\/fill(contact:)","title":"func fill(contact: ContactItem)","type":"method"},{"path":"\/documentation\/divar\/contacttableviewcell\/fill(contact:isbookmarkedbefore:)","title":"func fill(contact: PostContactMethod, isBookmarkedBefore: Bool)","type":"method"}],"path":"\/documentation\/divar\/contacttableviewcell","title":"ContactTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationdeleteeventmodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationdeleteeventmodel\/conversationids","title":"let conversationIDs: [String]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/conversationids","title":"case conversationIDs","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/conversationdeleteeventmodel\/innercodingkeys","title":"ConversationDeleteEventModel.InnerCodingKeys","type":"enum"}],"path":"\/documentation\/divar\/conversationdeleteeventmodel","title":"ConversationDeleteEventModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationmessageobserver\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationmessageobserver\/delegate","title":"var delegate: ConversationMessageObserverDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationmessageobserver\/databasedidchange(with:)","title":"func databaseDidChange(with: DatabaseEvent)","type":"method"},{"path":"\/documentation\/divar\/conversationmessageobserver\/databasedidcommit(_:)","title":"func databaseDidCommit(Database)","type":"method"},{"path":"\/documentation\/divar\/conversationmessageobserver\/databasedidrollback(_:)","title":"func databaseDidRollback(Database)","type":"method"},{"path":"\/documentation\/divar\/conversationmessageobserver\/observes(eventsofkind:)","title":"func observes(eventsOfKind: DatabaseEventKind) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationmessageobserver\/databasewillcommit()","title":"func databaseWillCommit() throws","type":"method"},{"path":"\/documentation\/divar\/conversationmessageobserver\/stopobservingdatabasechangesuntilnexttransaction()","title":"func stopObservingDatabaseChangesUntilNextTransaction()","type":"method"}],"path":"\/documentation\/divar\/conversationmessageobserver\/transactionobserver-implementations","title":"TransactionObserver Implementations","type":"symbol"}],"path":"\/documentation\/divar\/conversationmessageobserver","title":"ConversationMessageObserver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationobserver\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationobserver\/delegate","title":"var delegate: ConversationObserverDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationobserver\/databasedidchange(with:)","title":"func databaseDidChange(with: DatabaseEvent)","type":"method"},{"path":"\/documentation\/divar\/conversationobserver\/databasedidcommit(_:)","title":"func databaseDidCommit(Database)","type":"method"},{"path":"\/documentation\/divar\/conversationobserver\/databasedidrollback(_:)","title":"func databaseDidRollback(Database)","type":"method"},{"path":"\/documentation\/divar\/conversationobserver\/observes(eventsofkind:)","title":"func observes(eventsOfKind: DatabaseEventKind) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationobserver\/databasewillcommit()","title":"func databaseWillCommit() throws","type":"method"},{"path":"\/documentation\/divar\/conversationobserver\/stopobservingdatabasechangesuntilnexttransaction()","title":"func stopObservingDatabaseChangesUntilNextTransaction()","type":"method"}],"path":"\/documentation\/divar\/conversationobserver\/transactionobserver-implementations","title":"TransactionObserver Implementations","type":"symbol"}],"path":"\/documentation\/divar\/conversationobserver","title":"ConversationObserver","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationrowcell\/conversationrow","title":"var conversationRow: ConversationRow!","type":"property"},{"path":"\/documentation\/divar\/conversationrowcell\/isselected","title":"var isSelected: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationrowcell\/fill(_:)","title":"func fill(ChatConversationTable)","type":"method"}],"path":"\/documentation\/divar\/conversationrowcell","title":"ConversationRowCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/init(container:postchienabled:)","title":"init(container: ConversationsViewControllerDIContainer, postchiEnabled: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/container","title":"let container: ConversationsViewControllerDIContainer","type":"property"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/delegate","title":"var delegate: ConversationsViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/emptydatasourcemessage","title":"var emptyDataSourceMessage: String?","type":"property"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/flowcontrol","title":"var flowControl: ChatFlowController?","type":"property"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/lastpostchimessage","title":"var lastPostchiMessage: ChatConversationMessageTable?","type":"property"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/postchienabled","title":"let postchiEnabled: Bool?","type":"property"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/postchilastseenid","title":"var postchiLastSeenID: String?","type":"property"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/tableview","title":"var tableView: AdvancedTableView!","type":"property"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/toggledconversations","title":"var toggledConversations: [ChatConversationTable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/viewwilldisappear(_:)","title":"func viewWillDisappear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/multideletevc(_:didrequestdeleteconversations:)","title":"func multiDeleteVC(MultiConversationDeleteViewController, didRequestDeleteConversations: [ChatConversationTable])","type":"method"}],"path":"\/documentation\/divar\/conversationsviewcontroller\/multiconversationdeletedelegate-implementations","title":"MultiConversationDeleteDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/conversationsviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"}],"path":"\/documentation\/divar\/conversationsviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/conversationsviewcontroller","title":"ConversationsViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/init(container:operatorid:)","title":"init(container: CreateAndEditOperatorViewControllerDIContainer, operatorId: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/successeditmessage","title":"var successEditMessage: String","type":"property"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/successsubmitmessage","title":"var successSubmitMessage: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/deleteagent()","title":"func deleteAgent()","type":"method"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/setupbarbuttonitem()","title":"func setupBarButtonItem()","type":"method"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/createandeditoperatorviewcontroller","title":"CreateAndEditOperatorViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customareacell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customareacell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/customareacell\/customconstraints()","title":"func customConstraints()","type":"method"},{"path":"\/documentation\/divar\/customareacell\/textview(_:shouldchangetextin:replacementtext:)","title":"func textView(UITextView, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/customareacell\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"}],"path":"\/documentation\/divar\/customareacell","title":"CustomAreaCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/custombuttoncell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/custombuttoncell\/button","title":"var button: UIButton!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custombuttoncell\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/custombuttoncell\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/divar\/custombuttoncell","title":"CustomButtonCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/custombuttonrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/custombuttonrow\/init(tag:title:)","title":"init(tag: String?, title: String?)","type":"init"},{"path":"\/documentation\/divar\/custombuttonrow\/init(tag:title:oncellselection:)","title":"init(tag: String, title: String?, onCellSelection: (CustomButtonCell, CustomButtonRow) -> Void)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custombuttonrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/custombuttonrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/custombuttonrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custombuttonrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/custombuttonrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/custombuttonrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/custombuttonrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/custombuttonrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/custombuttonrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/custombuttonrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/custombuttonrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/custombuttonrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/custombuttonrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/custombuttonrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/custombuttonrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/custombuttonrow","title":"CustomButtonRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/custombyteformatter\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/custombyteformatter\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custombyteformatter\/fractionalstring(frombytecount:total:)","title":"func fractionalString(fromByteCount: Int64, total: Int64) -> String","type":"method"},{"path":"\/documentation\/divar\/custombyteformatter\/string(frombytecount:)","title":"func string(fromByteCount: Int64) -> String","type":"method"}],"path":"\/documentation\/divar\/custombyteformatter","title":"CustomByteFormatter","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custommfmessagecomposeviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custommfmessagecomposeviewcontroller\/messagecomposeviewcontroller(_:didfinishwith:)","title":"func messageComposeViewController(MFMessageComposeViewController, didFinishWith: MessageComposeResult)","type":"method"}],"path":"\/documentation\/divar\/custommfmessagecomposeviewcontroller\/mfmessagecomposeviewcontrollerdelegate-implementations","title":"MFMessageComposeViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/custommfmessagecomposeviewcontroller","title":"CustomMFMessageComposeViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickercell\/handler","title":"var handler: CustomPickerHandler?","type":"property"},{"path":"\/documentation\/divar\/custompickercell\/isrowforfilter","title":"var isRowForFilter: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickercell\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/divar\/custompickercell\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/divar\/custompickercell","title":"CustomPickerCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickerhandler\/init(_:pickerrow:options:)","title":"init(UIPickerView, pickerRow: CustomPickerRow, options: [(id: String, name: String)]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickerhandler\/options","title":"var options: [(id: String, name: String)]?","type":"property"},{"path":"\/documentation\/divar\/custompickerhandler\/picker","title":"var picker: UIPickerView?","type":"property"},{"path":"\/documentation\/divar\/custompickerhandler\/pickerrow","title":"var pickerRow: CustomPickerRow?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickerhandler\/numberofcomponents(in:)","title":"func numberOfComponents(in: UIPickerView) -> Int","type":"method"},{"path":"\/documentation\/divar\/custompickerhandler\/pickerview(_:didselectrow:incomponent:)","title":"func pickerView(UIPickerView, didSelectRow: Int, inComponent: Int)","type":"method"},{"path":"\/documentation\/divar\/custompickerhandler\/pickerview(_:numberofrowsincomponent:)","title":"func pickerView(UIPickerView, numberOfRowsInComponent: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/custompickerhandler\/pickerview(_:titleforrow:forcomponent:)","title":"func pickerView(UIPickerView, titleForRow: Int, forComponent: Int) -> String?","type":"method"},{"path":"\/documentation\/divar\/custompickerhandler\/pickerview(_:viewforrow:forcomponent:reusing:)","title":"func pickerView(UIPickerView, viewForRow: Int, forComponent: Int, reusing: UIView?) -> UIView","type":"method"}],"path":"\/documentation\/divar\/custompickerhandler","title":"CustomPickerHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickerrow\/init(property:options:onvalidationchanged:)","title":"init(property: Schema, options: [String], onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/custompickerrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/custompickerrow\/init(tag:caption:options:)","title":"init(tag: String?, caption: String?, options: [(id: String, name: String)])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickerrow\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/custompickerrow\/selectedindex","title":"var selectedIndex: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickerrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/custompickerrow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickerrow\/validationchanged","title":"CustomPickerRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickerrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/custompickerrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickerrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickerrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/custompickerrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/custompickerrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/custompickerrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/custompickerrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/custompickerrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/custompickerrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/custompickerrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/custompickerrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/custompickerrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/custompickerrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/custompickerrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/custompickerrow","title":"CustomPickerRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customswitchcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/customswitchcell\/checkbox","title":"var checkBox: UIButton!","type":"property"},{"path":"\/documentation\/divar\/customswitchcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customswitchcell\/checkboxtapped()","title":"func checkBoxTapped()","type":"method"},{"path":"\/documentation\/divar\/customswitchcell\/seton(_:)","title":"func setOn(Bool)","type":"method"},{"path":"\/documentation\/divar\/customswitchcell\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/divar\/customswitchcell\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/divar\/customswitchcell","title":"CustomSwitchCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/customswitchrow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: (CustomSwitchCell, CustomSwitchRow) -> Void)","type":"init"},{"path":"\/documentation\/divar\/customswitchrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customswitchrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customswitchrow\/dividerview","title":"var dividerView: DividerView","type":"property"}],"path":"\/documentation\/divar\/customswitchrow\/dividerprotocol-implementations","title":"DividerProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customswitchrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/customswitchrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customswitchrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"}],"path":"\/documentation\/divar\/customswitchrow\/getablerow-implementations","title":"GetableRow Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/customswitchrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customswitchrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/customswitchrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/customswitchrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/customswitchrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/customswitchrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/customswitchrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customswitchrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/customswitchrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/customswitchrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/customswitchrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/customswitchrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/customswitchrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/customswitchrow","title":"CustomSwitchRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextarearow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/customtextarearow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/customtextarearow\/init(tag:title:)","title":"init(tag: String?, title: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextarearow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextarearow\/validationchanged","title":"CustomTextAreaRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextarearow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/customtextarearow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextarearow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextarearow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/customtextarearow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/customtextarearow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/customtextarearow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/customtextarearow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/customtextarearow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextarearow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/customtextarearow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/customtextarearow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/customtextarearow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/customtextarearow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/customtextarearow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/customtextarearow","title":"CustomTextAreaRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextfieldcell\/textfield","title":"var textField: TextField","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextfieldcell\/setup()","title":"func setup()","type":"method"}],"path":"\/documentation\/divar\/customtextfieldcell","title":"CustomTextFieldCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextfieldrow\/init(type:property:hidden:onvalidationchanged:)","title":"init(type: TextRowType, property: Schema, hidden: Bool, onValidationChanged: (CustomTextFieldCell, CustomTextFieldRow) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextfieldrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextfieldrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextfieldrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/customtextfieldrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/customtextfieldrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/customtextfieldrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/customtextfieldrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/customtextfieldrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextfieldrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/customtextfieldrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/customtextfieldrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/customtextfieldrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/customtextfieldrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/customtextfieldrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customtextfieldrow\/textview(_:shouldchangetextin:replacementtext:)","title":"func textView(UITextView, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/customtextfieldrow\/textviewdidbeginediting(_:)","title":"func textViewDidBeginEditing(UITextView)","type":"method"},{"path":"\/documentation\/divar\/customtextfieldrow\/textviewdidchange(_:)","title":"func textViewDidChange(UITextView)","type":"method"},{"path":"\/documentation\/divar\/customtextfieldrow\/textviewdidendediting(_:)","title":"func textViewDidEndEditing(UITextView)","type":"method"}],"path":"\/documentation\/divar\/customtextfieldrow\/textfielddelegate-implementations","title":"TextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/customtextfieldrow","title":"CustomTextFieldRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/customuiactivity\/init(title:image:performaction:)","title":"init(title: String, image: SonnatImages?, performAction: () -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customuiactivity\/activityimage","title":"var activityImage: UIImage?","type":"property"},{"path":"\/documentation\/divar\/customuiactivity\/activityname","title":"var activityName: String","type":"property"},{"path":"\/documentation\/divar\/customuiactivity\/activitysonnatimage","title":"var activitySonnatImage: SonnatImages?","type":"property"},{"path":"\/documentation\/divar\/customuiactivity\/activitytitle","title":"var activityTitle: String?","type":"property"},{"path":"\/documentation\/divar\/customuiactivity\/activitytype","title":"var activityType: UIActivity.ActivityType?","type":"property"},{"path":"\/documentation\/divar\/customuiactivity\/customactionwhentapped","title":"var customActionWhenTapped: () -> Void","type":"property"},{"path":"\/documentation\/divar\/customuiactivity\/customactivitytype","title":"var customActivityType: UIActivity.ActivityType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customuiactivity\/canperform(withactivityitems:)","title":"func canPerform(withActivityItems: [Any]) -> Bool","type":"method"},{"path":"\/documentation\/divar\/customuiactivity\/perform()","title":"func perform()","type":"method"},{"path":"\/documentation\/divar\/customuiactivity\/prepare(withactivityitems:)","title":"func prepare(withActivityItems: [Any])","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customuiactivity\/activitycategory","title":"class var activityCategory: UIActivity.Category","type":"property"}],"path":"\/documentation\/divar\/customuiactivity","title":"CustomUIActivity","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/init(container:activityitems:)","title":"init(container: CustomUIActivityViewControllerDIContainer, activityItems: [Any])","type":"init"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/init(container:activityitems:applicationactivities:)","title":"init(container: CustomUIActivityViewControllerDIContainer, activityItems: [Any], applicationActivities: [UIActivity]?)","type":"init"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/init(container:image:activities:)","title":"init(container: CustomUIActivityViewControllerDIContainer, image: UIImage, activities: [UIActivity]?)","type":"init"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/init(container:text:activities:)","title":"init(container: CustomUIActivityViewControllerDIContainer, text: String, activities: [UIActivity]?)","type":"init"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/init(container:url:activities:)","title":"init(container: CustomUIActivityViewControllerDIContainer, url: URL, activities: [UIActivity]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/fadeinduration","title":"var fadeInDuration: TimeInterval","type":"property"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/fadeoutduration","title":"var fadeOutDuration: TimeInterval","type":"property"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/posttoken","title":"var postToken: String?","type":"property"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/previewbottommargin","title":"var previewBottomMargin: CGFloat","type":"property"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/previewcornerradius","title":"var previewCornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/previewfont","title":"var previewFont: UIFont","type":"property"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/previewimagecornerradius","title":"var previewImageCornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/previewimagesidelength","title":"var previewImageSideLength: CGFloat","type":"property"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/previewlinkcolor","title":"var previewLinkColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/previewnumberoflines","title":"var previewNumberOfLines: Int","type":"property"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/previewpadding","title":"var previewPadding: CGFloat","type":"property"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/previewtopmargin","title":"var previewTopMargin: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/customuiactivityviewcontroller\/viewwilldisappear(_:)","title":"func viewWillDisappear(Bool)","type":"method"}],"path":"\/documentation\/divar\/customuiactivityviewcontroller","title":"CustomUIActivityViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dicontainer\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dicontainer\/actionlogservice","title":"var actionLogService: ActionLogServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/actionlogs","title":"var actionLogs: ActionLogs","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/addusertransactionservice","title":"var addUserTransactionService: AddUserTransactionServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/bookmarkservice","title":"var bookmarkService: BookmarkServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/brandservice","title":"var brandService: DealerBrandServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/businessservice","title":"var businessService: BusinessCoreServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/callobserver","title":"var callObserver: CallObserverService","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/caragentservice","title":"var carAgentService: CarAgentServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/carinspectionservice","title":"var carInspectionService: CarInspectionServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/chatflowcontroller","title":"var chatFlowController: ChatFlowController","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/chatservice","title":"var chatService: ChatServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/cityfilter","title":"var cityFilter: CityFilterServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/dataprovider","title":"var dataProvider: DataProviderProtocol!","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/dealerservice","title":"var dealerService: DealerServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/didebaanmonitoring","title":"var didebaanMonitoring: DidebaanMonitoring","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/didebaanservice","title":"var didebaanService: DidebaanServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/disablepageservice","title":"var disablePageService: DisablePageServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/feedbackservice","title":"var feedbackService: FeedBackProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/fileuploader","title":"var fileUploader: FileUploaderProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/formservice","title":"var formService: FormServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/grpcnetworkmanager","title":"var grpcNetworkManager: GRPCNetworkManagerProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/imageservice","title":"var imageService: ImageServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/jobsservice","title":"var jobsService: JobsServicesProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/landlineauthentication","title":"var landlineAuthentication: LandlineAuthenticationProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/locationmanager","title":"var locationManager: LocationManagerProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/locationservice","title":"var locationService: LocationServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/marketplaceservice","title":"var marketplaceService: MarketplaceServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/noteservice","title":"var noteService: NoteServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/paymentservice","title":"var paymentService: PaymentServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/performancemonitor","title":"var performanceMonitor: PerformanceMonitorProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/postcreateservice","title":"var postCreateService: PostCreateServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/postlistservice","title":"var postListService: PostListServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/postviewservice","title":"var postViewService: PostViewServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/pushservice","title":"var pushService: PushServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/rawplugservice","title":"var rawPlugService: RawPlugService","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/realestateservice","title":"var realEstateService: RealEstateServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/restwidgetbasedservice","title":"var restWidgetBasedService: RestWidgetBasedServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/schemaformservice","title":"var schemaFormService: SchemaFormServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/searchhistoryservice","title":"var searchHistoryService: SearchHistoryServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/searchservice","title":"var searchService: SearchSuggestionServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/searchsuggestionservice","title":"var searchSuggestionService: SearchSuggestionServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/servicenetworkmanager","title":"var serviceNetworkManager: ServiceNetworkManagerProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/shahkarservice","title":"var shahkarService: ShahkarService","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/smartsuggestionactionlog","title":"var smartSuggestionActionLog: SmartSuggestionActionLog","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/startupservice","title":"var startupService: StartupConfigurationServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/transactionservice","title":"var transactionService: TransactionServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/user","title":"var user: User","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/userdefaults","title":"var userDefaults: UserDefaults","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/userpostservice","title":"var userPostService: UserPostServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/userregisterationservice","title":"var userRegisterationService: UserRegisterationServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/videouploadservice","title":"var videoUploadService: VideoUploadServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/dicontainer\/widgetbasedservice","title":"var widgetBasedService: WidgetBasedServiceProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dicontainer\/getcityfilter(multicityenabled:)","title":"func getCityFilter(multiCityEnabled: Bool) -> CityFilterServiceProtocol","type":"method"},{"path":"\/documentation\/divar\/dicontainer\/getgrpcwidgetbasedservice(_:)","title":"func getGrpcWidgetBasedService<Request>(Request.Type) -> GRPCWidgetBasedServiceProtocol","type":"method"},{"path":"\/documentation\/divar\/dicontainer\/initialize()","title":"func initialize() throws","type":"method"}],"path":"\/documentation\/divar\/dicontainer","title":"DIContainer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/databaseconnection\/init(filename:inmemory:)","title":"init(filename: String?, inMemory: Bool) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/databaseconnection\/dbpool","title":"var dbPool: DatabasePool?","type":"property"},{"path":"\/documentation\/divar\/databaseconnection\/dbqueue","title":"var dbQueue: DatabaseQueue?","type":"property"},{"path":"\/documentation\/divar\/databaseconnection\/inmemory","title":"var inMemory: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/databaseconnection\/migrate(using:)","title":"func migrate(using: DatabaseMigrator) throws","type":"method"},{"path":"\/documentation\/divar\/databaseconnection\/observe(_:startimmediately:filter:onerror:onchange:)","title":"func observe<Entity>(Entity.Type, startImmediately: Bool, filter: QueryFilter?, onError: ((Error) -> Void), onChange: ([Entity]) -> Void) -> DatabaseCancellable","type":"method"},{"path":"\/documentation\/divar\/databaseconnection\/observe(_:startimmediately:filter:sorted:sortkey:onerror:onchange:)","title":"func observe<Entity>(Entity.Type, startImmediately: Bool, filter: QueryFilter?, sorted: QuerySortType, sortKey: String, onError: ((Error) -> Void), onChange: ([Entity]) -> Void) -> DatabaseCancellable","type":"method"},{"path":"\/documentation\/divar\/databaseconnection\/readtransaction(_:)","title":"func readTransaction<T>((Database) throws -> T) throws -> T","type":"method"},{"path":"\/documentation\/divar\/databaseconnection\/writetransaction(_:)","title":"func writeTransaction((Database) throws -> Void) throws","type":"method"}],"path":"\/documentation\/divar\/databaseconnection","title":"DatabaseConnection","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dateformat\/init()","title":"init()","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dateformat\/date(ofstring:)","title":"static func date(ofString: String) -> Date?","type":"method"},{"path":"\/documentation\/divar\/dateformat\/date(oftimestamp:)","title":"static func date(ofTimeStamp: Double) -> Date","type":"method"}],"path":"\/documentation\/divar\/dateformat","title":"DateFormat","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerbrandservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerbrandservice\/getbrandinfo(brandslug:)","title":"func getBrandInfo(brandSlug: String) async -> Result<BrandInfoStructure, DError>","type":"method"},{"path":"\/documentation\/divar\/dealerbrandservice\/getbrandreportreasons()","title":"func getBrandReportReasons() async -> Result<[BrandReportValueStructure], DError>","type":"method"},{"path":"\/documentation\/divar\/dealerbrandservice\/submitbrandfeedback(answer:question:brandslug:)","title":"func submitBrandFeedback(answer: String, question: String, brandSlug: String) async -> Result<Void, Error>","type":"method"},{"path":"\/documentation\/divar\/dealerbrandservice\/submitbrandreport(reasons:brandslug:)","title":"func submitBrandReport(reasons: [Int], brandSlug: String) async -> Result<Void, DError>","type":"method"},{"path":"\/documentation\/divar\/dealerbrandservice\/submitratefeedback(url:rate:text:)","title":"func submitRateFeedback(url: String, rate: Widgets_RateScore.Score, text: String?) async -> ExtractableResultValue","type":"method"}],"path":"\/documentation\/divar\/dealerbrandservice","title":"DealerBrandService","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerflowcontroller\/opendealershipregisterpage(_:)","title":"func openDealershipRegisterPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/dealerflowcontroller","title":"DealerFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/initialbusinessregisterviewcontroller()","title":"func initialBusinessRegisterViewController() -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/initialbusinessregisterviewcontroller(with:)","title":"func initialBusinessRegisterViewController(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/initialcarinspectionkarnamehregisterviewcontroller(with:)","title":"func initialCarInspectionKarnamehRegisterViewController(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/initialcarinspectionregisterviewcontroller(with:mngtoken:formdata:)","title":"func initialCarInspectionRegisterViewController(with: NavigationController, mngToken: String, formData: [String : Any]) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/initialcarinspectionregisterviewcontroller(with:posttoken:)","title":"func initialCarInspectionRegisterViewController(with: NavigationController, postToken: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/initialcarinspectionsubmitregister(with:formdata:)","title":"func initialCarInspectionSubmitRegister(with: NavigationController, formData: [String : Any]) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/initialdealercreateoperator(with:operatorid:)","title":"func initialDealerCreateOperator(with: NavigationController, operatorId: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/initialdealersubmitviewcontroller(editid:)","title":"func initialDealerSubmitViewController(editID: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/initialdealersubmitviewcontroller(with:editid:)","title":"func initialDealerSubmitViewController(with: NavigationController, editID: String?) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/carinspectionedit(_:)","title":"func carInspectionEdit(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/carinspectionkarnamehregisterform(_:)","title":"func carInspectionKarnamehRegisterForm(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/carinspectionregisterform(_:)","title":"func carInspectionRegisterForm(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/dealershipcreateoperator(_:)","title":"func dealershipCreateOperator(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/dealershipupdateoperator(_:)","title":"func dealershipUpdateOperator(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/opendealershippurchaseladdersubscription(_:)","title":"func openDealershipPurchaseLadderSubscription(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/openpostinbusiness(_:)","title":"func openPostInBusiness(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/dealerformflowcontroller\/opencarconciergesaleregisterfromsubmit(_:)","title":"func opencarConciergeSaleRegisterFromSubmit(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/dealerformflowcontroller\/carformactionhandler-implementations","title":"CarFormActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/divar\/dealerformflowcontroller","title":"DealerFormFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerservice\/businesssubscriptionplans()","title":"func businessSubscriptionPlans() async -> Result<CarBusiness_GetPlansResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/dealerservice\/buydealerbulkladderplans(model:)","title":"func buyDealerBulkLadderPlans(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/dealerservice\/dealersubscript(planid:)","title":"func dealerSubscript(planId: Int32) async -> Result<CarBusiness_CarDealerSubscribeResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/dealerservice\/dealershipconfirminvitation(confirm:)","title":"func dealershipConfirmInvitation(confirm: Bool) async -> Result<CarBusiness_MessageResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/dealerservice\/deleteoperator(operatorid:)","title":"func deleteOperator(operatorId: String) async -> Result<CarBusiness_MessageResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/dealerservice\/getdealersubmitpageschema(model:)","title":"func getDealerSubmitPageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/dealerservice\/getoperatormanagementschema(model:)","title":"func getOperatorManagementSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/dealerservice\/pricetoolsfeedbackform(model:submissionpayload:)","title":"func priceToolsFeedbackForm(model: SchemaRequestModel, submissionPayload: BooleanRateRowFeedBackPayload) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/dealerservice\/usedpriceform(model:)","title":"func usedPriceForm(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/dealerservice\/zeropricepage(pinned:query:infinitescrol:)","title":"func zeroPricePage(pinned: [String], query: String?, infiniteScrol: Widgets_InfiniteScrollResponse?) async -> Result<CarDetails_GetZeroPricePageResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/dealerservice","title":"DealerService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubmitviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/dealersubmitviewcontroller\/init(container:formid:editid:newschema:newdata:previousdata:)","title":"init(container: DealerSubmitViewControllerDIContainer, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubmitviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/dealersubmitviewcontroller\/container","title":"let container: DealerSubmitViewControllerDIContainer","type":"property"},{"path":"\/documentation\/divar\/dealersubmitviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/dealersubmitviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/dealersubmitviewcontroller\/needsresetbutton","title":"var needsResetButton: Bool","type":"property"},{"path":"\/documentation\/divar\/dealersubmitviewcontroller\/shoulddraft","title":"var shouldDraft: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubmitviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/dealersubmitviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/dealersubmitviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/dealersubmitviewcontroller","title":"DealerSubmitViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/init(container:model:username:)","title":"init(container: DealerSubscriptionDetailsViewControllerDIContainer, model: Widgets_PlanDetailsPayload, username: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/buttonbar","title":"var buttonBar: WideButtonViewController","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/delegate","title":"var delegate: DealerSubscriptionDetailsViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/maintable","title":"var mainTable: AbstractTableViewController","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/model","title":"var model: Widgets_PlanDetailsPayload","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/stackholder","title":"var stackHolder: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/username","title":"var username: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/setupchilds()","title":"func setupChilds()","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/setuptabledata()","title":"func setupTableData()","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/didstartinfinitescroll(_:scrollview:)","title":"func didStartInfiniteScroll(AbstractTableViewController, scrollView: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/didstartpulltorefresh(_:scrollview:)","title":"func didStartPullToRefresh(AbstractTableViewController, scrollView: UIScrollView?)","type":"method"}],"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/abstracttableviewcontrollerdelegate-implementations","title":"AbstractTableViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/buttonclicked(_:action:)","title":"func buttonClicked(WideButtonViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller\/widebuttonviewcontrollerdelegate-implementations","title":"WideButtonViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontroller","title":"DealerSubscriptionDetailsViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/init(container:)","title":"init(container: DealerSubscriptionViewControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/abstracttable","title":"var abstractTable: WidgetBasedCollectionViewController","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/currenttab","title":"var currentTab: Int","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/pagedata","title":"var pageData: [[Widgets_Widget]]","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/segmentedbar","title":"var segmentedBar: SegmentedBar","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/username","title":"var username: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/setupchilds()","title":"func setupChilds()","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/viewwilldisappear(_:)","title":"func viewWillDisappear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/segmentvaluechanged(_:selectedindex:)","title":"func segmentValueChanged(SegmentedBar, selectedIndex: Int)","type":"method"}],"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/segmentedbardelegate-implementations","title":"SegmentedBarDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/widgetbasedcollectionviewcontroller(_:didenddisplaying:forindexpath:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didEndDisplaying: Widgets_Widget, forIndexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartinfinitescroll:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartInfiniteScroll: AdvancedCollectionView?)","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartpulltorefresh:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/widgetbasedcollectionviewcontroller(_:willdisplay:forindexpath:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, willDisplay: Widgets_Widget, forIndexPath: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/dealersubscriptionviewcontroller\/widgetbasedcollectionviewcontrollerdelegate-implementations","title":"WidgetBasedCollectionViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/dealersubscriptionviewcontroller","title":"DealerSubscriptionViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealershipgetcontactflowcontroller\/dealershipgetcontact(_:)","title":"func dealershipGetContact(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/dealershipgetcontactflowcontroller\/dealershipmanagementgetcontact(_:)","title":"func dealershipManagementGetContact(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/dealershipgetcontactflowcontroller","title":"DealershipGetContactFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/deleteconversationhandler\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/deleteconversationhandler\/requestdeleteconversation(conversationids:dataprovider:)","title":"func requestDeleteConversation(conversationIDs: [String], dataProvider: DataProviderProtocol)","type":"method"}],"path":"\/documentation\/divar\/deleteconversationhandler","title":"DeleteConversationHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptioncellcontroller\/init(text:view:)","title":"init(text: String, view: UIView?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptioncellcontroller\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/divar\/descriptioncellcontroller\/view","title":"var view: UIView?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptioncellcontroller\/configureview(_:)","title":"func configureView(Sonnat.DescriptionText)","type":"method"},{"path":"\/documentation\/divar\/descriptioncellcontroller\/itemsheight()","title":"func itemsHeight() -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/descriptioncellcontroller\/shoulditemhasfullwidth()","title":"func shouldItemHasFullWidth() -> Bool","type":"method"}],"path":"\/documentation\/divar\/descriptioncellcontroller","title":"DescriptionCellController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/delegate","title":"var delegate: ConfigurableCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/indexpath","title":"var indexPath: IndexPath?","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/key","title":"var key: String?","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/minimumcharacters","title":"var minimumCharacters: Int?","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/placeholder","title":"var placeHolder: String?","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/required","title":"var required: Bool","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/textfield","title":"var textField: TextField!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/fill(with:indexpath:)","title":"func fill(with: DescriptionFieldModel, indexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/returndata()","title":"func returnData() -> String?","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/datatype","title":"DescriptionFieldTableViewCell.DataType","type":"typealias"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/returntype","title":"DescriptionFieldTableViewCell.ReturnType","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/textview(_:shouldchangetextin:replacementtext:)","title":"func textView(UITextView, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/textviewdidbeginediting(_:)","title":"func textViewDidBeginEditing(UITextView)","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/textviewdidchange(_:)","title":"func textViewDidChange(UITextView)","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/textviewdidendediting(_:)","title":"func textViewDidEndEditing(UITextView)","type":"method"}],"path":"\/documentation\/divar\/descriptionfieldtableviewcell\/textfielddelegate-implementations","title":"TextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/descriptionfieldtableviewcell","title":"DescriptionFieldTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/descriptionfieldview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldview\/placeholder","title":"var placeholder: String?","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldview\/textfield","title":"var textField: UITextView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldview\/config()","title":"func config()","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldview\/returndata()","title":"func returnData() -> String?","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldview\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldview\/textview(_:shouldchangetextin:replacementtext:)","title":"func textView(UITextView, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldview\/textviewdidbeginediting(_:)","title":"func textViewDidBeginEditing(UITextView)","type":"method"},{"path":"\/documentation\/divar\/descriptionfieldview\/textviewdidendediting(_:)","title":"func textViewDidEndEditing(UITextView)","type":"method"}],"path":"\/documentation\/divar\/descriptionfieldview\/uitextviewdelegate-implementations","title":"UITextViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/descriptionfieldview","title":"DescriptionFieldView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/delegate","title":"var delegate: ConfigurableCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/descriptiontext","title":"var descriptionText: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/endediting(_:)","title":"func endEditing(Bool) -> Bool","type":"method"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/fill(with:indexpath:)","title":"func fill(with: DescriptionModel, indexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/setediting(_:animated:)","title":"func setEditing(Bool, animated: Bool)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/datatype","title":"DescriptionPrimaryTableViewCell.DataType","type":"typealias"},{"path":"\/documentation\/divar\/descriptionprimarytableviewcell\/returntype","title":"DescriptionPrimaryTableViewCell.ReturnType","type":"typealias"}],"path":"\/documentation\/divar\/descriptionprimarytableviewcell","title":"DescriptionPrimaryTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/defaultheight","title":"var defaultHeight: CGFloat?","type":"property"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/delegate","title":"var delegate: ConfigurableCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/descriptiontext","title":"var descriptionText: UILabel!","type":"property"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/key","title":"var key: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/endediting(_:)","title":"func endEditing(Bool) -> Bool","type":"method"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/fill(with:indexpath:)","title":"func fill(with: DescriptionModel, indexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/setediting(_:animated:)","title":"func setEditing(Bool, animated: Bool)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/datatype","title":"DescriptionSecondaryTableViewCell.DataType","type":"typealias"},{"path":"\/documentation\/divar\/descriptionsecondarytableviewcell\/returntype","title":"DescriptionSecondaryTableViewCell.ReturnType","type":"typealias"}],"path":"\/documentation\/divar\/descriptionsecondarytableviewcell","title":"DescriptionSecondaryTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextrow\/descriptionview","title":"var descriptionView: DescriptionView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextrow\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/descriptiontextrow\/didtapexpand(_:)","title":"func didTapExpand(DescriptionView)","type":"method"},{"path":"\/documentation\/divar\/descriptiontextrow\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/descriptiontextrow","title":"DescriptionTextRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgetcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/descriptiontextwidgetcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgetcell\/fill(with:)","title":"func fill(with: DescriptionTextWidgetCellModel)","type":"method"}],"path":"\/documentation\/divar\/descriptiontextwidgetcell","title":"DescriptionTextWidgetCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/init(property:)","title":"init(property: Schema)","type":"init"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/options","title":"var options: [Schema]","type":"property"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/property","title":"var property: Schema?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/descriptiontextwidgetrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/descriptiontextwidgetrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/descriptiontextwidgetrow","title":"DescriptionTextWidgetRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/descriptionview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/delegate","title":"var delegate: DescriptionViewProtocol?","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/divider","title":"var divider: UIView!","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/hasdivider","title":"var hasDivider: Bool","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/isprimary","title":"var isPrimary: Bool","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/numberoflines","title":"var numberOfLines: Int","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/showmoreheightconstraint","title":"var showMoreHeightConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/showmorelabel","title":"var showMoreLabel: UIButton!","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/showmoretopconstraint","title":"var showMoreTopConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/text","title":"var text: String","type":"property"},{"path":"\/documentation\/divar\/descriptionview\/textlabel","title":"var textLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/descriptionview\/fill(text:isprimary:hasdivider:)","title":"func fill(text: String, isPrimary: Bool, hasDivider: Bool)","type":"method"},{"path":"\/documentation\/divar\/descriptionview\/morelabel(hidden:)","title":"func moreLabel(hidden: Bool)","type":"method"},{"path":"\/documentation\/divar\/descriptionview\/tappedonexpand(_:)","title":"func tappedOnExpand(Any)","type":"method"}],"path":"\/documentation\/divar\/descriptionview","title":"DescriptionView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionviewtableviewcell\/descriptionview","title":"var descriptionView: DescriptionView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionviewtableviewcell\/fill(with:backgroundcolor:)","title":"func fill(with: Widgets_DescriptionRowData, backgroundColor: SonnatColors)","type":"method"}],"path":"\/documentation\/divar\/descriptionviewtableviewcell","title":"DescriptionViewTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanmonitoring\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanmonitoring\/isrequesting","title":"var isRequesting: Bool","type":"property"},{"path":"\/documentation\/divar\/didebaanmonitoring\/maxdatabasesize","title":"var maxDatabaseSize: Int","type":"property"},{"path":"\/documentation\/divar\/didebaanmonitoring\/serialdatabasequeue","title":"var serialDatabaseQueue: DispatchQueue","type":"property"},{"path":"\/documentation\/divar\/didebaanmonitoring\/shouldlogevent","title":"var shouldLogEvent: Bool","type":"property"},{"path":"\/documentation\/divar\/didebaanmonitoring\/threshold","title":"var threshold: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanmonitoring\/initial(service:config:)","title":"func initial(service: DidebaanServiceProtocol, config: DidebaanConfig?)","type":"method"},{"path":"\/documentation\/divar\/didebaanmonitoring\/log(apicall:)","title":"func log(apiCall: ClientExporter_APICallReport)","type":"method"},{"path":"\/documentation\/divar\/didebaanmonitoring\/log(userevent:)","title":"func log(userEvent: ClientExporter_UserEvent.OneOf_Type)","type":"method"},{"path":"\/documentation\/divar\/didebaanmonitoring\/sendtoserver(_:)","title":"func sendToServer([ClientReportPOSO])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanmonitoring\/table","title":"DidebaanMonitoring.Table","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanmonitoring\/databasequeue","title":"static var databaseQueue: String","type":"property"},{"path":"\/documentation\/divar\/didebaanmonitoring\/shared","title":"static let shared: DidebaanMonitoring","type":"property"}],"path":"\/documentation\/divar\/didebaanmonitoring","title":"DidebaanMonitoring","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanservice\/init(grpcservice:)","title":"init(grpcService: GRPCNetworkManagerProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanservice\/grpcservice","title":"var grpcService: GRPCNetworkManagerProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanservice\/sendreports(reports:device:app:)","title":"func sendReports(reports: [ClientReportPOSO], device: ClientExporter_Device, app: ClientExporter_App) async -> Result<[String], DError>","type":"method"}],"path":"\/documentation\/divar\/didebaanservice","title":"DidebaanService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dimmedview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/dimmedview\/init(dimcolor:)","title":"init(dimColor: UIColor)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dimmedview\/didtap","title":"var didTap: ((_ recognizer: UIGestureRecognizer) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/dimmedview\/dimstate-swift.property","title":"var dimState: DimState","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/dimmedview\/dimstate-swift.enum\/max","title":"case max","type":"case"},{"path":"\/documentation\/divar\/dimmedview\/dimstate-swift.enum\/off","title":"case off","type":"case"},{"path":"\/documentation\/divar\/dimmedview\/dimstate-swift.enum\/percent(_:)","title":"case percent(CGFloat)","type":"case"}],"path":"\/documentation\/divar\/dimmedview\/dimstate-swift.enum","title":"DimmedView.DimState","type":"enum"}],"path":"\/documentation\/divar\/dimmedview","title":"DimmedView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/init(container:isenablepage:)","title":"init(container: DisableListViewControllerDIContainer, isEnablePage: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/delegate","title":"var delegate: DisableListViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/isenablepage","title":"let isEnablePage: Bool","type":"property"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/selectablepostslist","title":"var selectablePostsList: SelectablePostsListViewController<Widgets_SelectPostForLadderPayload>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/openalertquestion()","title":"func openAlertQuestion()","type":"method"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/setupselectablepostslist()","title":"func setupSelectablePostsList()","type":"method"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/refreshdata()","title":"func refreshData()","type":"method"}],"path":"\/documentation\/divar\/disablelistviewcontroller\/refreshableprotocol-implementations","title":"RefreshableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/defaultemptymessagetext","title":"var defaultEmptyMessageText: String","type":"property"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/defaulterrormessage","title":"var defaultErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/hasmaxseletablelimit","title":"var hasMaxSeletableLimit: Bool","type":"property"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/maxselectableitems","title":"var maxSelectableItems: Int32?","type":"property"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/pagination","title":"var pagination: Pagination","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/selectablepostslist(_:didstartinfinitescroll:)","title":"func selectablePostsList(WidgetBasedCollectionViewController, didStartInfiniteScroll: AdvancedCollectionView?)","type":"method"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/selectablepostslist(_:didstartpulltorefresh:)","title":"func selectablePostsList(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/textforsplitbuttonbar(number:)","title":"func textForSplitButtonBar(number: Int) -> String","type":"method"}],"path":"\/documentation\/divar\/disablelistviewcontroller\/selectablepostslistviewcontrollerdelegate-implementations","title":"SelectablePostsListViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/disablelistviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/disablelistviewcontroller\/splitbuttonbarviewcontrollerdelegate-implementations","title":"SplitButtonBarViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/disablelistviewcontroller","title":"DisableListViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/init(container:)","title":"init(container: DisablePageViewControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/navigationbaritems","title":"var navigationBarItems: [Int : Widgets_NavigationBar]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/barbuttonitembuttontapped(sender:)","title":"func barButtonItemButtonTapped(sender: UIBarButtonItem)","type":"method"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/barbuttonitemtapped(sender:)","title":"func barButtonItemTapped(sender: UIBarButtonItem)","type":"method"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/requestdata()","title":"func requestData()","type":"method"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/disablelist(_:statechanged:)","title":"func disableList<SelectableItem>(DisableListViewController, stateChanged: Set<SelectableItem>)","type":"method"}],"path":"\/documentation\/divar\/disablepageviewcontroller\/disablelistviewcontrollerdelegate-implementations","title":"DisableListViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/barbuttonitembuttontappedselector","title":"var barButtonItemButtonTappedSelector: Selector","type":"property"},{"path":"\/documentation\/divar\/disablepageviewcontroller\/barbuttonitemtappedselector","title":"var barButtonItemTappedSelector: Selector","type":"property"}],"path":"\/documentation\/divar\/disablepageviewcontroller\/widgetbasednavigationbarpresenterprotocol-implementations","title":"WidgetBasedNavigationBarPresenterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/divar\/disablepageviewcontroller","title":"DisablePageViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/districtannotation\/init(_:)","title":"init(Naghshe_FeatureProperites)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/districtannotation\/properties","title":"var properties: Naghshe_FeatureProperites","type":"property"}],"path":"\/documentation\/divar\/districtannotation","title":"DistrictAnnotation","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/districtannotationview\/init(annotation:reuseidentifier:)","title":"init(annotation: MKAnnotation?, reuseIdentifier: String?)","type":"init"},{"path":"\/documentation\/divar\/districtannotationview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/districtannotationview\/reuseidentifier","title":"var reuseIdentifier: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/districtannotationview\/fill(name:)","title":"func fill(name: String?)","type":"method"},{"path":"\/documentation\/divar\/districtannotationview\/prepare()","title":"func prepare()","type":"method"},{"path":"\/documentation\/divar\/districtannotationview\/prepareforreuse()","title":"func prepareForReuse()","type":"method"}],"path":"\/documentation\/divar\/districtannotationview","title":"DistrictAnnotationView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/districtmultipolygon\/init(districts:)","title":"init(districts: [DistrictPolygon])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/districtmultipolygon\/districts","title":"var districts: [DistrictPolygon]","type":"property"},{"path":"\/documentation\/divar\/districtmultipolygon\/isselected","title":"var isSelected: Bool","type":"property"}],"path":"\/documentation\/divar\/districtmultipolygon","title":"DistrictMultiPolygon","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/districtpolygon\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/divar\/districtpolygon\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/divar\/districtpolygon\/name","title":"var name: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/districtpolygon\/contains(_:)","title":"func contains(MKMapPoint) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/districtpolygon\/polygonforfeature(_:)","title":"static func polygonForFeature(Naghshe_Feature) -> DistrictPolygon","type":"method"}],"path":"\/documentation\/divar\/districtpolygon","title":"DistrictPolygon","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/init(response:selecteddata:)","title":"init(response: Naghshe_GetGeoJsonResponse, selectedData: [SingleMultiModel])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/delegate","title":"var delegate: DistrictedMapViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/mapview","title":"var mapView: MKMapView","type":"property"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/polygons","title":"var polygons: [DistrictPolygon]","type":"property"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/response","title":"var response: Naghshe_GetGeoJsonResponse","type":"property"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/selecteddata","title":"var selectedData: [SingleMultiModel]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/loadview()","title":"func loadView()","type":"method"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/mapview(_:rendererfor:)","title":"func mapView(MKMapView, rendererFor: MKOverlay) -> MKOverlayRenderer","type":"method"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/mapview(_:viewfor:)","title":"func mapView(MKMapView, viewFor: MKAnnotation) -> MKAnnotationView?","type":"method"},{"path":"\/documentation\/divar\/districtedmapviewcontroller\/mapviewdidchangevisibleregion(_:)","title":"func mapViewDidChangeVisibleRegion(MKMapView)","type":"method"}],"path":"\/documentation\/divar\/districtedmapviewcontroller\/mkmapviewdelegate-implementations","title":"MKMapViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/districtedmapviewcontroller","title":"DistrictedMapViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/divarsplashview\/init(bezierpath:backgroundcolor:logocolor:)","title":"init(bezierPath: UIBezierPath, backgroundColor: UIColor, logoColor: UIColor)","type":"init"},{"path":"\/documentation\/divar\/divarsplashview\/init(bezierpath:backgroundwithgradientfromtopcolor:bottomcolor:logocolor:)","title":"init(bezierPath: UIBezierPath, backgroundWithGradientFromTopColor: UIColor, bottomColor: UIColor, logoColor: UIColor)","type":"init"},{"path":"\/documentation\/divar\/divarsplashview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/divarsplashview\/animationcompletionhandler","title":"var animationCompletionHandler: (() -> Void)?","type":"property"},{"path":"\/documentation\/divar\/divarsplashview\/durationanimation","title":"var durationAnimation: CGFloat","type":"property"},{"path":"\/documentation\/divar\/divarsplashview\/gradientlayer","title":"var gradientLayer: CALayer","type":"property"},{"path":"\/documentation\/divar\/divarsplashview\/logoanimation","title":"var logoAnimation: CAAnimation","type":"property"},{"path":"\/documentation\/divar\/divarsplashview\/sizescale","title":"let sizeScale: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/divarsplashview\/animationdidstop(_:finished:)","title":"func animationDidStop(CAAnimation, finished: Bool)","type":"method"},{"path":"\/documentation\/divar\/divarsplashview\/configurelayerwithlogo(from:withgradientfromtopcolor:bottomcolor:)","title":"func configureLayerWithLogo(from: UIBezierPath, withGradientFromTopColor: UIColor, bottomColor: UIColor) -> CAGradientLayer","type":"method"},{"path":"\/documentation\/divar\/divarsplashview\/creategradientlayerwithgradient(fromtopcolor:bottomcolor:)","title":"func createGradientLayerWithGradient(fromTopColor: UIColor, bottomColor: UIColor) -> CAGradientLayer","type":"method"},{"path":"\/documentation\/divar\/divarsplashview\/getlayerfrom(_:)","title":"func getLayerFrom(UIBezierPath) -> CAShapeLayer","type":"method"},{"path":"\/documentation\/divar\/divarsplashview\/layersizerect()","title":"func layerSizeRect() -> CGRect","type":"method"},{"path":"\/documentation\/divar\/divarsplashview\/mutablelogopath()","title":"func mutableLogoPath() -> CGMutablePath","type":"method"},{"path":"\/documentation\/divar\/divarsplashview\/startanimation(completionhandler:)","title":"func startAnimation(completionHandler: (() -> Void)?)","type":"method"}],"path":"\/documentation\/divar\/divarsplashview","title":"DivarSplashView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dividerview\/init(parent:)","title":"init(parent: UIView)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dividerview\/bottomconstraint","title":"var bottomConstraint: NSLayoutConstraint?","type":"property"},{"path":"\/documentation\/divar\/dividerview\/heightconstraint","title":"var heightConstraint: NSLayoutConstraint?","type":"property"},{"path":"\/documentation\/divar\/dividerview\/leftconstraint","title":"var leftConstraint: NSLayoutConstraint?","type":"property"},{"path":"\/documentation\/divar\/dividerview\/rightconstraint","title":"var rightConstraint: NSLayoutConstraint?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dividerview\/setup(parent:)","title":"func setup(parent: UIView)","type":"method"}],"path":"\/documentation\/divar\/dividerview","title":"DividerView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/documenthelper\/init(filemanager:filename:)","title":"init(fileManager: FileManager, fileName: String)","type":"init"},{"path":"\/documentation\/divar\/documenthelper\/init(type:)","title":"init(type: DocumentHelperFileName)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/documenthelper\/deletedraft(completion:)","title":"func deleteDraft(completion: (Bool) -> Void)","type":"method"},{"path":"\/documentation\/divar\/documenthelper\/isdraftexist()","title":"func isDraftExist() -> Bool","type":"method"},{"path":"\/documentation\/divar\/documenthelper\/readdraftfromfile()","title":"func readDraftFromFile() -> [String : Any]","type":"method"},{"path":"\/documentation\/divar\/documenthelper\/saveformtofile(dictionary:completion:)","title":"func saveFormToFile(dictionary: [String : Any], completion: (Bool) -> Void)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/documenthelper\/business","title":"static var business: DocumentHelper","type":"property"},{"path":"\/documentation\/divar\/documenthelper\/businessregister","title":"static var businessRegister: DocumentHelper","type":"property"},{"path":"\/documentation\/divar\/documenthelper\/personal","title":"static var personal: DocumentHelper","type":"property"}],"path":"\/documentation\/divar\/documenthelper","title":"DocumentHelper","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/doublelabelcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/doublelabelcell\/mainlabel","title":"var mainLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/doublelabelcell\/sublabel","title":"var subLabel: UILabel!","type":"property"}],"path":"\/documentation\/divar\/doublelabelcell","title":"DoubleLabelCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/doublelabelrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/doublelabelrow\/selectrow()","title":"func selectRow()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/doublelabelrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/doublelabelrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/doublelabelrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/doublelabelrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/doublelabelrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/doublelabelrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/doublelabelrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/doublelabelrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/doublelabelrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/doublelabelrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/doublelabelrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/doublelabelrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/doublelabelrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/doublelabelrow","title":"DoubleLabelRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/durationcalculator\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/durationcalculator\/duration","title":"var duration: TimeInterval?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/durationcalculator\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/divar\/durationcalculator\/start()","title":"func start()","type":"method"}],"path":"\/documentation\/divar\/durationcalculator","title":"DurationCalculator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller\/init(container:section:formid:editid:newschema:newdata:previousdata:)","title":"init(container: EditMarketplaceStoreViewControllerDIContainer, section: Int32?, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller\/section","title":"var section: Int32?","type":"property"},{"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/editmarketplacestoreviewcontroller","title":"EditMarketplaceStoreViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/emptydataview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/emptydataview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/emptydataview\/title","title":"var title: String?","type":"property"}],"path":"\/documentation\/divar\/emptydataview","title":"EmptyDataView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/environment\/getlocation(action:)-swift.method","title":"func getLocation(action: ((CLLocationCoordinate2D) -> Void)?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/environment\/osname","title":"class var OSName: String","type":"property"},{"path":"\/documentation\/divar\/environment\/osversion","title":"class var OSVersion: String","type":"property"},{"path":"\/documentation\/divar\/environment\/appname","title":"class var appName: String","type":"property"},{"path":"\/documentation\/divar\/environment\/appstarttime","title":"class var appStartTime: Int64","type":"property"},{"path":"\/documentation\/divar\/environment\/buildnumber","title":"class var buildNumber: String","type":"property"},{"path":"\/documentation\/divar\/environment\/bundleidentifier","title":"class var bundleIdentifier: String","type":"property"},{"path":"\/documentation\/divar\/environment\/cachedlocation","title":"static var cachedLocation: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/divar\/environment\/careersinfo","title":"class var careersInfo: [ActionLog_ClientMetaInfo.MobileOperatorInfo]","type":"property"},{"path":"\/documentation\/divar\/environment\/devicmodel","title":"class var devicModel: String","type":"property"},{"path":"\/documentation\/divar\/environment\/devicebrand","title":"class var deviceBrand: String","type":"property"},{"path":"\/documentation\/divar\/environment\/deviceid","title":"class var deviceId: String","type":"property"},{"path":"\/documentation\/divar\/environment\/devicelocale","title":"class var deviceLocale: String","type":"property"},{"path":"\/documentation\/divar\/environment\/deviceresolution","title":"class var deviceResolution: String","type":"property"},{"path":"\/documentation\/divar\/environment\/divarversion","title":"class var divarVersion: String","type":"property"},{"path":"\/documentation\/divar\/environment\/freediskspaceinbytes","title":"class var freeDiskSpaceInBytes: Int64","type":"property"},{"path":"\/documentation\/divar\/environment\/freememoryinbytes","title":"class var freeMemoryInBytes: Int64","type":"property"},{"path":"\/documentation\/divar\/environment\/hascachedlocation","title":"static var hasCachedLocation: Bool","type":"property"},{"path":"\/documentation\/divar\/environment\/isdarkmode","title":"class var isDarkMode: Bool","type":"property"},{"path":"\/documentation\/divar\/environment\/islowmemorystate","title":"class var isLowMemoryState: Bool","type":"property"},{"path":"\/documentation\/divar\/environment\/isrooted","title":"class var isRooted: Bool","type":"property"},{"path":"\/documentation\/divar\/environment\/issimulator","title":"class var isSimulator: Bool","type":"property"},{"path":"\/documentation\/divar\/environment\/phoneiso","title":"class var phoneISO: [String]","type":"property"},{"path":"\/documentation\/divar\/environment\/screenppi","title":"class var screenPPI: Int32","type":"property"},{"path":"\/documentation\/divar\/environment\/timezone","title":"class var timezone: String","type":"property"},{"path":"\/documentation\/divar\/environment\/totaldiskspaceinbytes","title":"class var totalDiskSpaceInBytes: Int64","type":"property"},{"path":"\/documentation\/divar\/environment\/totaldiskspaceingb","title":"class var totalDiskSpaceInGB: String","type":"property"},{"path":"\/documentation\/divar\/environment\/totalmemoryinbytes","title":"class var totalMemoryInBytes: Int64","type":"property"},{"path":"\/documentation\/divar\/environment\/useddiskspaceinbytes","title":"class var usedDiskSpaceInBytes: Int64","type":"property"},{"path":"\/documentation\/divar\/environment\/usedmemoryinbytes","title":"class var usedMemoryInBytes: Int64","type":"property"},{"path":"\/documentation\/divar\/environment\/versionname","title":"class var versionName: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/environment\/getlocation(action:)-swift.type.method","title":"class func getLocation(action: ((CLLocationCoordinate2D) -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/environment\/useragent()","title":"class func userAgent() -> String","type":"method"}],"path":"\/documentation\/divar\/environment","title":"Environment","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/errorcollectionviewcell\/dviderview","title":"var dviderView: UIView!","type":"property"},{"path":"\/documentation\/divar\/errorcollectionviewcell\/isdividerhidden","title":"var isDividerHidden: Bool","type":"property"},{"path":"\/documentation\/divar\/errorcollectionviewcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/errorcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"}],"path":"\/documentation\/divar\/errorcollectionviewcell","title":"ErrorCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationrowcollectionviewcell\/priceview","title":"var priceView: EvaluationView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationrowcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/evaluationrowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/evaluationrowcollectionviewcell","title":"EvaluationRowCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/evaluationview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationview\/bottomstackview","title":"var bottomStackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/bounds","title":"var bounds: CGRect","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/indicatoricon","title":"var indicatorIcon: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/indicatorlabel","title":"var indicatorLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/indicatorverticalline","title":"var indicatorVerticalLine: UIView!","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/indicatorview","title":"var indicatorView: UIView!","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/iswidget","title":"var isWidget: Bool","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/leftviewconstraint","title":"var leftViewConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/model","title":"var model: PriceEvaluationModel","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/widgetdata","title":"var widgetData: Widgets_EvaluationRowData?","type":"property"},{"path":"\/documentation\/divar\/evaluationview\/widgetsections","title":"var widgetSections: [Widgets_EvaluationRowData.Section]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationview\/addbottomlabels()","title":"func addBottomLabels()","type":"method"},{"path":"\/documentation\/divar\/evaluationview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/evaluationview\/configlayouts()","title":"func configLayouts()","type":"method"},{"path":"\/documentation\/divar\/evaluationview\/fill(_:)","title":"func fill(PriceEvaluationModel)","type":"method"},{"path":"\/documentation\/divar\/evaluationview\/fill(with:)","title":"func fill(with: Widgets_EvaluationRowData)","type":"method"},{"path":"\/documentation\/divar\/evaluationview\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"}],"path":"\/documentation\/divar\/evaluationview","title":"EvaluationView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/divider","title":"var divider: UIView!","type":"property"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/imageview","title":"var imageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/indicatorimage","title":"var indicatorImage: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/subtitle","title":"var subtitle: UILabel!","type":"property"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/time","title":"var time: UILabel!","type":"property"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_EventRowData)","type":"method"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/eventrowcollectionviewcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"}],"path":"\/documentation\/divar\/eventrowcollectionviewcell","title":"EventRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/contentrightconstraint","title":"var contentRightConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/divider","title":"var divider: UIView!","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/dividerrightconstraint","title":"var dividerRightConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/imageview","title":"var imageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/imagewidthconstraint","title":"var imageWidthConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/indicatorimage","title":"var indicatorImage: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/ishighlighted","title":"var isHighlighted: Bool","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/leftconstraint","title":"var leftConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/rightconstraint","title":"var rightConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_FeatureRowData)","type":"method"},{"path":"\/documentation\/divar\/featurerowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/featurerowcollectionviewcell","title":"FeatureRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/featurewidgetcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/featurewidgetcell\/iconimageview","title":"var iconImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/featurewidgetcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/featurewidgetcell\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/divar\/featurewidgetcell","title":"FeatureWidgetCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/featurewidgetrow\/init(property:)","title":"init(property: Schema)","type":"init"},{"path":"\/documentation\/divar\/featurewidgetrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/featurewidgetrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/featurewidgetrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/featurewidgetrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/featurewidgetrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/featurewidgetrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/featurewidgetrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/featurewidgetrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/featurewidgetrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/featurewidgetrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/featurewidgetrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/featurewidgetrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/featurewidgetrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/featurewidgetrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/featurewidgetrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/featurewidgetrow","title":"FeatureWidgetRow","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/featuredpostsflowcontroller\/initialviewcontroller()","title":"func initialViewController() -> UIViewController","type":"method"}],"path":"\/documentation\/divar\/featuredpostsflowcontroller","title":"FeaturedPostsFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackhandler\/init(container:posttoken:)","title":"init(container: FeedBackHandlerDIContainer, postToken: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackhandler\/delegate","title":"var delegate: FeedBackViewProtocol?","type":"property"},{"path":"\/documentation\/divar\/feedbackhandler\/posttoken","title":"let postToken: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackhandler\/didanswer(postfeedbackmodel:answer:)-90814","title":"func didAnswer(postFeedBackModel: FeedBackDataStructure, answer: String) async","type":"method"},{"path":"\/documentation\/divar\/feedbackhandler\/savefeedback(config:)","title":"func saveFeedback(config: IntroConfig)","type":"method"},{"path":"\/documentation\/divar\/feedbackhandler\/shouldshowbuyerfeedback()","title":"func shouldShowBuyerFeedBack()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackhandler\/didanswer(postfeedbackmodel:answer:)-90nxw","title":"func didAnswer(postFeedBackModel: FeedBackDataStructure, answer: String)","type":"method"}],"path":"\/documentation\/divar\/feedbackhandler\/feedbackvcdelegate-implementations","title":"FeedBackVCDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/feedbackhandler","title":"FeedBackHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/init(title:allowtaptodismiss:allowdragtodismiss:)","title":"init(title: String, allowTapToDismiss: Bool, allowDragToDismiss: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/allowsdragtodismiss-4g799","title":"var allowsDragToDismiss: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/allowstaptodismiss-2ghe7","title":"var allowsTapToDismiss: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview","title":"var collectionView: UICollectionView!","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/cornerradius-74a4r","title":"var cornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/delegate","title":"var delegate: FeedbackAlertViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/isselected","title":"var isSelected: [Bool]","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/longformheight-37kgv","title":"var longFormHeight: PanModalHeight","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/numberofselectedstars","title":"var numberOfSelectedStars: Int","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/panscrollable","title":"var panScrollable: UIScrollView?","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/shouldroundtopcorners-2l5pq","title":"var shouldRoundTopCorners: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/submitbutton","title":"var submitButton: SecondaryButton!","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/allowsdragtodismiss-67arb","title":"var allowsDragToDismiss: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/allowsextendedpanscrolling","title":"var allowsExtendedPanScrolling: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/allowstaptodismiss-2eiqj","title":"var allowsTapToDismiss: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/anchormodaltolongform","title":"var anchorModalToLongForm: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/banner","title":"var banner: PanModalBannerCompatible?","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/cornerradius-3krc6","title":"var cornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/hasbanner","title":"var hasBanner: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/ishapticfeedbackenabled","title":"var isHapticFeedbackEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/isuserinteractionenabled","title":"var isUserInteractionEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/longformheight-83l51","title":"var longFormHeight: PanModalHeight","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/panmodalbackgroundcolor","title":"var panModalBackgroundColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/scrollindicatorinsets","title":"var scrollIndicatorInsets: UIEdgeInsets","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/shortformheight","title":"var shortFormHeight: PanModalHeight","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/shouldroundtopcorners-4m793","title":"var shouldRoundTopCorners: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/showdragindicator","title":"var showDragIndicator: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/springdamping","title":"var springDamping: CGFloat","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/topoffset","title":"var topOffset: CGFloat","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/transitionanimationoptions","title":"var transitionAnimationOptions: UIView.AnimationOptions","type":"property"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/transitionduration","title":"var transitionDuration: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/panmodalanimate(_:_:)","title":"func panModalAnimate(AnimationBlockType, AnimationCompletionType?)","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/panmodaldiddismiss()","title":"func panModalDidDismiss()","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/panmodalperformupdates(_:)","title":"func panModalPerformUpdates(() -> Void)","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/panmodalsetneedslayoutupdate()","title":"func panModalSetNeedsLayoutUpdate()","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/panmodaltransition(to:)","title":"func panModalTransition(to: PanModalPresentationController.PresentationState)","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/panmodalwilldismiss()","title":"func panModalWillDismiss()","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/shouldprioritize(panmodalgesturerecognizer:)","title":"func shouldPrioritize(panModalGestureRecognizer: UIPanGestureRecognizer) -> Bool","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/shouldrespond(to:)","title":"func shouldRespond(to: UIPanGestureRecognizer) -> Bool","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/shouldtransition(to:)","title":"func shouldTransition(to: PanModalPresentationController.PresentationState) -> Bool","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/willrespond(to:)","title":"func willRespond(to: UIPanGestureRecognizer)","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/willtransition(to:)","title":"func willTransition(to: PanModalPresentationController.PresentationState)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/animationblocktype","title":"FeedbackAlertViewController.AnimationBlockType","type":"typealias"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/animationcompletiontype","title":"FeedbackAlertViewController.AnimationCompletionType","type":"typealias"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/layouttype","title":"FeedbackAlertViewController.LayoutType","type":"typealias"}],"path":"\/documentation\/divar\/feedbackalertviewcontroller\/panmodalpresentable-implementations","title":"PanModalPresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/feedbackalertviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/feedbackalertviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview(_:layout:insetforsectionat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, insetForSectionAt: Int) -> UIEdgeInsets","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview(_:layout:minimuminteritemspacingforsectionat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/feedbackalertviewcontroller\/collectionview(_:layout:sizeforitemat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, sizeForItemAt: IndexPath) -> CGSize","type":"method"}],"path":"\/documentation\/divar\/feedbackalertviewcontroller\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"}],"path":"\/documentation\/divar\/feedbackalertviewcontroller","title":"FeedbackAlertViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackanswercell\/answertitle","title":"var answerTitle: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackanswercell\/fill(_:)","title":"func fill(FeedbackQAStruct)","type":"method"}],"path":"\/documentation\/divar\/feedbackanswercell","title":"FeedbackAnswerCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackservice\/postfeedbackanswer(payload:)","title":"func postFeedBackAnswer(payload: [String : Any]) async throws","type":"method"}],"path":"\/documentation\/divar\/feedbackservice","title":"FeedbackService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackstarcollectionviewcell\/didselect","title":"var didSelect: Bool?","type":"property"},{"path":"\/documentation\/divar\/feedbackstarcollectionviewcell\/starimageview","title":"var starImageView: SonnatImageView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackstarcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/feedbackstarcollectionviewcell\/fill(isselected:)","title":"func fill(isSelected: Bool)","type":"method"},{"path":"\/documentation\/divar\/feedbackstarcollectionviewcell\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"}],"path":"\/documentation\/divar\/feedbackstarcollectionviewcell","title":"FeedbackStarCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/fileinfo\/init(name:url:)","title":"init(name: String?, url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/fileinfo\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/divar\/fileinfo\/previewitemtitle","title":"var previewItemTitle: String?","type":"property"},{"path":"\/documentation\/divar\/fileinfo\/previewitemurl","title":"var previewItemURL: URL?","type":"property"},{"path":"\/documentation\/divar\/fileinfo\/url","title":"var url: URL","type":"property"}],"path":"\/documentation\/divar\/fileinfo","title":"FileInfo","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filemessagecell\/cacherequesthelper","title":"var cacheRequestHelper: ChatCacheRequestHelper?","type":"property"},{"path":"\/documentation\/divar\/filemessagecell\/delegate","title":"var delegate: FileMessageCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/filemessagecell\/menuoptions","title":"var menuOptions: [MessageCellOptions]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filemessagecell\/downloadbuttonaction()","title":"func downloadButtonAction()","type":"method"},{"path":"\/documentation\/divar\/filemessagecell\/downloadfailed()","title":"func downloadFailed()","type":"method"},{"path":"\/documentation\/divar\/filemessagecell\/downloadfinished()","title":"func downloadFinished()","type":"method"},{"path":"\/documentation\/divar\/filemessagecell\/fillmessageview()","title":"func fillMessageView()","type":"method"},{"path":"\/documentation\/divar\/filemessagecell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"},{"path":"\/documentation\/divar\/filemessagecell\/updateprogressbar(progress:completed:total:)","title":"func updateProgressBar(progress: Double, completed: Int64, total: Int64)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filemessagecell\/filemessagerow(_:didclickdownloadbuttonwithstate:)","title":"func fileMessageRow(FileMessageRow, didClickDownloadButtonWithState: FileMessageState)","type":"method"}],"path":"\/documentation\/divar\/filemessagecell\/filemessagerowdelegate-implementations","title":"FileMessageRowDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filemessagecell\/cachehelper","title":"var cacheHelper: ChatCacheRequestHelper?","type":"property"},{"path":"\/documentation\/divar\/filemessagecell\/downloadurl","title":"var downloadURL: String?","type":"property"},{"path":"\/documentation\/divar\/filemessagecell\/messageid","title":"var messageID: String?","type":"property"}],"path":"\/documentation\/divar\/filemessagecell\/messagecellrequestdatasource-implementations","title":"MessageCellRequestDataSource Implementations","type":"symbol"}],"path":"\/documentation\/divar\/filemessagecell","title":"FileMessageCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/fileuploader\/init(chatservice:dataprovider:)","title":"init(chatService: ChatServiceProtocol, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/fileuploader\/chatservice","title":"let chatService: ChatServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/fileuploader\/dataprovider","title":"let dataProvider: DataProviderProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fileuploader\/uploadfile(_:)","title":"func uploadFile(FileUploaderParameterStruct)","type":"method"}],"path":"\/documentation\/divar\/fileuploader","title":"FileUploader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/init(_:categories:parentcategoryslug:currentcategoryslug:isfiltering:)","title":"init(((UIViewController) -> Void)?, categories: [PostCategory], parentCategorySlug: String?, currentCategorySlug: String?, isFiltering: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/categories","title":"var categories: [PostCategory]?","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/categoryslugtree","title":"var categorySlugTree: [String]","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/currentcategoryslug","title":"var currentCategorySlug: String!","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/delegate","title":"var delegate: FilterCategorySelectorControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/isfiltering","title":"var isFiltering: Bool!","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/level","title":"var level: Int","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/parentcategoryslug","title":"var parentCategorySlug: String!","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/roottreshhold","title":"var rootTreshhold: String","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/row","title":"var row: RowOf<PostCategory>!","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/tableview","title":"var tableView: UITableView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/getchildren(for:)","title":"func getChildren(for: String) -> [PostCategory]?","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/getparentslug(_:)","title":"func getParentSlug(String) -> String","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/makecategoryslugtree(_:)","title":"func makeCategorySlugTree(String) -> [String]","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/filtercategoryselectorcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/filtercategoryselectorcontroller","title":"FilterCategorySelectorController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/init(tag:title:property:categories:value:onchange:)","title":"init(tag: String, title: String?, property: Schema, categories: [PostCategory], value: PostCategory?, onChange: (FilterCategorySelectorRow) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/categories","title":"var categories: [PostCategory]!","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/presenterrow","title":"FilterCategorySelectorRow.PresenterRow","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/categorylistviewcontrollerdidselectcategory(_:index:categories:currentslug:othercatselected:)","title":"func categoryListViewControllerDidSelectCategory(FilterCategorySelectorController, index: Int, categories: [PostCategory], currentSlug: String?, otherCatSelected: Bool)","type":"method"}],"path":"\/documentation\/divar\/filtercategoryselectorrow\/filtercategoryselectorcontrollerdelegate-implementations","title":"FilterCategorySelectorControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/filtercategoryselectorrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/filtercategoryselectorrow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/filtercategoryselectorrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/filtercategoryselectorrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/filtercategoryselectorrow","title":"FilterCategorySelectorRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/finalizemarketplaceregister\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/finalizemarketplaceregister\/init(container:request:landlineinfo:)","title":"init(container: WidgetViewControllerDIContainer, request: WidgetBasedRequest, landlineInfo: LandlineState?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/finalizemarketplaceregister\/codeverificationvc","title":"var codeVerificationVC: VerificationCodeInputViewController?","type":"property"},{"path":"\/documentation\/divar\/finalizemarketplaceregister\/landlineinfo","title":"var landlineInfo: LandlineState?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/finalizemarketplaceregister\/verificationcodeenteredsuccessfully(_:with:)","title":"func verificationCodeEnteredSuccessfully(VerificationCodeInputViewController, with: String)","type":"method"},{"path":"\/documentation\/divar\/finalizemarketplaceregister\/verifynumberifneeded()","title":"func verifyNumberIfNeeded()","type":"method"},{"path":"\/documentation\/divar\/finalizemarketplaceregister\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/finalizemarketplaceregister","title":"FinalizeMarketplaceRegister","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/init(container:)","title":"init(container: FirstTimeViewControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/delegate","title":"var delegate: FirstTimeViewControllerDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/viewwilldisappear(_:)","title":"func viewWillDisappear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/didrequestdismissingoptionformfieldcontroller(_:)","title":"func didRequestDismissingOptionFormFieldController(UIViewController)","type":"method"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/didselectoption(_:selectiontype:)","title":"func didSelectOption(Place, selectionType: CitySelectionType)","type":"method"}],"path":"\/documentation\/divar\/firsttimeviewcontroller\/cityselectviewcontrollerdelegate-implementations","title":"CitySelectViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/firsttimeviewcontroller\/widebuttonbar(didtap:)","title":"func wideButtonBar(didTap: WideButtonBar)","type":"method"}],"path":"\/documentation\/divar\/firsttimeviewcontroller\/widebuttonbardelegate-implementations","title":"WideButtonBarDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/firsttimeviewcontroller","title":"FirstTimeViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/forceupdateviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/forceupdateviewcontroller\/init(updateurl:)","title":"init(updateUrl: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/forceupdateviewcontroller\/blockingview","title":"var blockingView: BlockingView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/forceupdateviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/forceupdateviewcontroller\/didtap(onblockingview:)","title":"func didTap(onBlockingView: UIView)","type":"method"}],"path":"\/documentation\/divar\/forceupdateviewcontroller\/blockingviewdelegate-implementations","title":"BlockingViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/forceupdateviewcontroller","title":"ForceUpdateViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/formbooleanraterow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: (FormBooleanRateRowCell, FormBooleanRateRow) -> Void)","type":"init"},{"path":"\/documentation\/divar\/formbooleanraterow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/formbooleanraterow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formbooleanraterow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/formbooleanraterow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/formbooleanraterow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/formbooleanraterow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/formbooleanraterow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/formbooleanraterow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/formbooleanraterow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/formbooleanraterow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/formbooleanraterow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/formbooleanraterow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/formbooleanraterow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/formbooleanraterow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/formbooleanraterow","title":"FormBooleanRateRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/formbooleanraterowcell\/booleanrateview","title":"var booleanRateView: BooleanRateRow!","type":"property"},{"path":"\/documentation\/divar\/formbooleanraterowcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formbooleanraterowcell\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/divar\/formbooleanraterowcell\/statechanged(state:row:)","title":"func stateChanged(state: BooleanRateRowStatus, row: BooleanRateRow)","type":"method"},{"path":"\/documentation\/divar\/formbooleanraterowcell\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/divar\/formbooleanraterowcell","title":"FormBooleanRateRowCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/formflowcontroller\/init(container:documentforpersonal:documentfordealer:formid:)","title":"init(container: BaseFlowDIContainer, documentForPersonal: DocumentHelperProtocol, documentForDealer: DocumentHelperProtocol, formID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/formflowcontroller\/documentforbusiness","title":"var documentForBusiness: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/formflowcontroller\/documentforpersonal","title":"var documentForPersonal: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/formflowcontroller\/formid","title":"var formID: String","type":"property"},{"path":"\/documentation\/divar\/formflowcontroller\/ivflowdelegate","title":"var iVFlowDelegate: FormFlowControllerToIVFlowController?","type":"property"},{"path":"\/documentation\/divar\/formflowcontroller\/imagegeneratorservice","title":"var imageGeneratorService: IVPickedDataImageGeneratorService","type":"property"},{"path":"\/documentation\/divar\/formflowcontroller\/videoexportpresetpredictorservice","title":"var videoExportPresetPredictorService: IVVideoExportPresetPredictorService","type":"property"},{"path":"\/documentation\/divar\/formflowcontroller\/videoexporter","title":"var videoExporter: IVVideoExporterService","type":"property"},{"path":"\/documentation\/divar\/formflowcontroller\/videoinfoattainmentservice","title":"var videoInfoAttainmentService: IVVideoInfoAttainmentService","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formflowcontroller\/handleaction(action:)","title":"func handleAction(action: Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialaddusertransactionviewcontroller(with:payload:)","title":"func initialAddUserTransactionViewController(with: NavigationController, payload: Widgets_TransactionAddUserPayload) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialbuybulkladderviewcontroller(with:)","title":"func initialBuyBulkLadderViewController(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialcategoryselectorviewcontroller(property:delegate:)","title":"func initialCategorySelectorViewController(property: Schema, delegate: CategoryHierarchyControllerDelegate?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialofflineformviewcontroller(schema:data:)","title":"func initialOfflineFormViewController(schema: Schema?, data: [String : Any]) -> OfflineFormViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialpersonalsubmitviewcontroller(editid:)","title":"func initialPersonalSubmitViewController(editID: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialpersonalsubmitviewcontroller(with:editid:)","title":"func initialPersonalSubmitViewController(with: NavigationController, editID: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialschemapageviewcontroller(with:payload:)","title":"func initialSchemaPageViewController(with: NavigationController, payload: Widgets_OpenSchemaPagePayload) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialscreenwidgetviewcontroller(schema:data:)","title":"func initialScreenWidgetViewController(schema: Schema?, data: [String : Any]) -> ScreenWidgetViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialsearchfilterviewcontroller(filterset:inputsuggestionkey:delegate:)","title":"func initialSearchFilterViewController(filterSet: SearchFilterHistory, inputSuggestionKey: String?, delegate: SearchFilterViewControllerDelegate?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialsearchfilterviewcontroller(with:filterset:inputsuggestionkey:)","title":"func initialSearchFilterViewController(with: NavigationController, filterSet: SearchFilterHistory, inputSuggestionKey: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialviewcontroller()","title":"func initialViewController() -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialwidgetbasedfilterviewcontroller(schema:requestmodel:for:delegate:)","title":"func initialWidgetBasedFilterViewController(schema: Schema, requestModel: WidgetBasedFilterRequest, for: WidgetTag, delegate: WidgetBasedFilterViewControllerDelegate?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/initialwidgetbasedfilterviewcontroller(schema:worker:for:delegate:)","title":"func initialWidgetBasedFilterViewController(schema: Schema, worker: WidgetBasedWorkerProtocol, for: WidgetTag, delegate: WidgetBasedFilterViewControllerDelegate?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/opencaragentsubmitnextpage(_:)","title":"func openCarAgentSubmitNextPage(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/opencarconciergemanagement(_:)","title":"func openCarConciergeManagement(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openconfirmationtransactionoffer(_:)","title":"func openConfirmationTransactionOffer(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/opendealerregisternextpage(_:)","title":"func openDealerRegisterNextPage(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/opendealersubmitnextpage(_:)","title":"func openDealerSubmitNextPage(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/opendigitalregisteration(_:)","title":"func openDigitalRegisteration(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openivcollectionassetselectorviewcontroller(pickerdelegate:selectorviewmodelconfiguration:selecteditemviewmodelconfiguration:)","title":"func openIVCollectionAssetSelectorViewController(pickerDelegate: IVCollectionAssetSelectorViewModelDelegate, selectorViewModelConfiguration: IVCollectionAssetSelectorViewModelConfiguration, selectedItemViewModelConfiguration: IVCollectionAssetSelectorSelectedItemViewModelConfiguration)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openivcollectionselectorviewcontroller(configuration:delegate:)","title":"func openIVCollectionSelectorViewController(configuration: IVCollectionSelectorViewModelInitConfiguration, delegate: IVCollectionSelectorViewModelDelegate?)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openivvideorecorderviewcontroller(configuration:delegate:)","title":"func openIVVideoRecorderViewController(configuration: IVVideoRecorderViewModelConfiguration, delegate: IVVideoRecorderViewModelDelegate?)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openjobssubmitnextpage(_:)","title":"func openJobsSubmitNextPage(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openmarketplacefinalizeeditstore(_:)","title":"func openMarketplaceFinalizeEditStore(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openmarketplacefinalizeregister(_:)","title":"func openMarketplaceFinalizeRegister(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openmarketplaceregisterstorenextpage(_:)","title":"func openMarketplaceRegisterStoreNextPage(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openmarketplacesubmitnextpage(_:)","title":"func openMarketplaceSubmitNextPage(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openpersonalsubmitnextpage(_:)","title":"func openPersonalSubmitNextPage(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openpostmanagement(_:)","title":"func openPostManagement(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openpriceformnextpage(_:)","title":"func openPriceFormNextPage(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openrealestatesubmitnextpage(_:)","title":"func openRealEstateSubmitNextPage(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openrealestatesubscriptionpurchase(_:)","title":"func openRealEstateSubscriptionPurchase(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openregisterindependentagentnextpage(_:)","title":"func openRegisterIndependentAgentNextPage(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openschemapagenextpage(_:)","title":"func openSchemaPageNextPage(SubmitRequestStruct)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/performschemapageaction(_:)","title":"func performSchemaPageAction(SubmitRequestStruct)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formflowcontroller\/didfinishsubmit(_:successwithdata:)","title":"func didFinishSubmit(BaseFormViewProtocol, successWithData: SubmitRequestStruct)","type":"method"}],"path":"\/documentation\/divar\/formflowcontroller\/abstractformactiondelegate-implementations","title":"AbstractFormActionDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formflowcontroller\/openeditpost(_:)","title":"func openEditPost(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openpersonalsubmit(_:)","title":"func openPersonalSubmit(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/openschemapage(_:)","title":"func openSchemaPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/opentransactionadduserpage(_:)","title":"func openTransactionAddUserPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/formflowcontroller\/submitwithoutpromotion(_:)","title":"func submitWithoutPromotion(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/formflowcontroller\/formactionhandlerprotocol-implementations","title":"FormActionHandlerProtocol Implementations","type":"symbol"}],"path":"\/documentation\/divar\/formflowcontroller","title":"FormFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/formselectorrow\/init(property:onvalidationchanged:dataprovider:)","title":"init(property: Schema, onValidationChanged: ValidationChanged, dataProvider: DataProviderProtocol)","type":"init"},{"path":"\/documentation\/divar\/formselectorrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/formselectorrow\/init(tag:property:dataprovider:)","title":"init(tag: String?, property: Schema?, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/formselectorrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/formselectorrow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/formselectorrow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/formselectorrow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formselectorrow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/formselectorrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/formselectorrow\/selectrow()","title":"func selectRow()","type":"method"},{"path":"\/documentation\/divar\/formselectorrow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/formselectorrow\/presenterrow","title":"FormSelectorRow.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/formselectorrow\/validationchanged","title":"FormSelectorRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formselectorrow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/formselectorrow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/formselectorrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formselectorrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/formselectorrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/formselectorrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/formselectorrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/formselectorrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/formselectorrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/formselectorrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/formselectorrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/formselectorrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/formselectorrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/formselectorrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/formselectorrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/formselectorrow","title":"FormSelectorRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/formservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formservice\/hierarchycontentsearch(searchkey:query:source:field:)","title":"func hierarchyContentSearch(searchKey: String?, query: String, source: HierarchySearchSources, field: String) async -> Result<[UIOptionsDataStruct], Error>","type":"method"},{"path":"\/documentation\/divar\/formservice\/singlemultiselectcontentsearch(city:cities:searchkey:query:source:field:)","title":"func singleMultiSelectContentSearch(city: Int, cities: [String], searchKey: String?, query: String, source: HierarchySearchSources, field: String) async -> Result<SingleMultiModelResults, DError>","type":"method"},{"path":"\/documentation\/divar\/formservice\/validationcontent(url:text:)","title":"func validationContent(url: String, text: String) async -> Result<Widgets_CheckWidgetValueResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/formservice","title":"FormService","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/formatter\/date\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/formatter\/date\/iso8601","title":"static let iso8601: DateFormatter","type":"property"}],"path":"\/documentation\/divar\/formatter\/date","title":"Formatter.Date","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/formatter\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/formatter\/formatter","title":"let formatter: NumberFormatter","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formatter\/stringforvalue(_:axis:)","title":"func stringForValue(Double, axis: AxisBase?) -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/formatter\/withseparator","title":"static let withSeparator: NumberFormatter","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formatter\/getnewposition(forposition:intextinput:oldvalue:newvalue:)","title":"func getNewPosition(forPosition: UITextPosition, inTextInput: UITextInput, oldValue: String?, newValue: String?) -> UITextPosition","type":"method"}],"path":"\/documentation\/divar\/formatter\/formatterprotocol-implementations","title":"FormatterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/divar\/formatter","title":"Formatter","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardconversationcell\/adimage","title":"var adImage: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/forwardconversationcell\/adtitle","title":"var adTitle: UILabel!","type":"property"},{"path":"\/documentation\/divar\/forwardconversationcell\/lastmessagelabel","title":"var lastMessageLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/forwardconversationcell\/peername","title":"var peerName: UILabel!","type":"property"},{"path":"\/documentation\/divar\/forwardconversationcell\/rowno","title":"var rowNo: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardconversationcell\/filldata(conversation:)","title":"func fillData(conversation: ChatConversationStructure)","type":"method"}],"path":"\/documentation\/divar\/forwardconversationcell","title":"ForwardConversationCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/forwardviewcontroller\/init(conversations:message:)","title":"init(conversations: [ChatConversationStructure], message: ChatConversationMessageTable)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardviewcontroller\/conversations","title":"var conversations: [ChatConversationStructure]","type":"property"},{"path":"\/documentation\/divar\/forwardviewcontroller\/delegate","title":"var delegate: ForwardViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/forwardviewcontroller\/forwardingmessage","title":"var forwardingMessage: ChatConversationMessageTable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/forwardviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/forwardviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/forwardviewcontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"}],"path":"\/documentation\/divar\/forwardviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/forwardviewcontroller","title":"ForwardViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcasyncrequesttracer\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcasyncrequesttracer\/starttime","title":"var startTime: ThreadSafeDictionary<String, Date>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcasyncrequesttracer\/requestfailed(call:requestdata:error:)","title":"func requestFailed<Request, Response>(call: GRPCAsyncCallType<Request, Response>, requestData: Message?, error: Error)","type":"method"},{"path":"\/documentation\/divar\/grpcasyncrequesttracer\/requestfinished(call:requestdata:responsedata:)","title":"func requestFinished<Request, Response>(call: GRPCAsyncCallType<Request, Response>, requestData: Message?, responseData: Message?)","type":"method"},{"path":"\/documentation\/divar\/grpcasyncrequesttracer\/requestwillstart(call:)","title":"func requestWillStart<Request, Response>(call: GRPCAsyncCallType<Request, Response>)","type":"method"}],"path":"\/documentation\/divar\/grpcasyncrequesttracer","title":"GRPCAsyncRequestTracer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcnetworkmanager\/init(user:)","title":"init(user: User)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcnetworkmanager\/asynctracer","title":"var asyncTracer: GRPCAsyncRequestTracerProtcol","type":"property"},{"path":"\/documentation\/divar\/grpcnetworkmanager\/channel","title":"var channel: GRPCChannel","type":"property"},{"path":"\/documentation\/divar\/grpcnetworkmanager\/group","title":"var group: EventLoopGroup","type":"property"},{"path":"\/documentation\/divar\/grpcnetworkmanager\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/divar\/grpcnetworkmanager\/tracer","title":"var tracer: GRPCRequestTracerProtcol","type":"property"},{"path":"\/documentation\/divar\/grpcnetworkmanager\/user","title":"var user: User","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcnetworkmanager\/makecall(call:extraheaders:request:)","title":"func makeCall<Request, Response>(call: (Request, CallOptions) -> GRPCAsyncCallType<Request, Response>, extraHeaders: [String : String]?, request: Request) async -> Result<Response, DError>","type":"method"},{"path":"\/documentation\/divar\/grpcnetworkmanager\/makecall(call:extraheaders:request:completion:)","title":"func makeCall<Request, Response>(call: CallType<Request, Response>, extraHeaders: [String : String]?, request: Request, completion: GRPCResponseType<Response>) -> Cancellable?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcnetworkmanager\/didcatcherror(_:logger:file:line:)","title":"func didCatchError(Error, logger: Logger, file: StaticString, line: Int)","type":"method"}],"path":"\/documentation\/divar\/grpcnetworkmanager\/clienterrordelegate-implementations","title":"ClientErrorDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcnetworkmanager\/connectionstartedquiescing()","title":"func connectionStartedQuiescing()","type":"method"},{"path":"\/documentation\/divar\/grpcnetworkmanager\/connectivitystatedidchange(from:to:)","title":"func connectivityStateDidChange(from: ConnectivityState, to: ConnectivityState)","type":"method"}],"path":"\/documentation\/divar\/grpcnetworkmanager\/connectivitystatedelegate-implementations","title":"ConnectivityStateDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/grpcnetworkmanager","title":"GRPCNetworkManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcrequesttracer\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcrequesttracer\/starttime","title":"var startTime: ThreadSafeDictionary<String, Date>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcrequesttracer\/requestfailed(call:requestdata:error:)","title":"func requestFailed<Request, Response>(call: GRPCCallType<Request, Response>, requestData: Message?, error: Error)","type":"method"},{"path":"\/documentation\/divar\/grpcrequesttracer\/requestfinished(call:requestdata:responsedata:)","title":"func requestFinished<Request, Response>(call: GRPCCallType<Request, Response>, requestData: Message?, responseData: Message?)","type":"method"},{"path":"\/documentation\/divar\/grpcrequesttracer\/requestwillstart(call:)","title":"func requestWillStart<Request, Response>(call: GRPCCallType<Request, Response>)","type":"method"}],"path":"\/documentation\/divar\/grpcrequesttracer","title":"GRPCRequestTracer","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/collectionview","title":"var collectionView: UICollectionView!","type":"property"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/gaugechartsize","title":"var gaugeChartSize: GaugeChartRowSize!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/collectionviewconfig()","title":"func collectionViewConfig()","type":"method"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/fill(with:widget:)","title":"func fill(with: Widgets_GaugeChartRowData, widget: Widgets_Widget?)","type":"method"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/rotateaction()","title":"func rotateAction()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/collectionview(_:layout:sizeforitemat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, sizeForItemAt: IndexPath) -> CGSize","type":"method"}],"path":"\/documentation\/divar\/gaugechartcollectionviewcell\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"}],"path":"\/documentation\/divar\/gaugechartcollectionviewcell","title":"GaugeChartCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartitemcollectionviewcell\/indicatorview","title":"var indicatorView: GaugeView!","type":"property"},{"path":"\/documentation\/divar\/gaugechartitemcollectionviewcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartitemcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/gaugechartitemcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_GaugeChartRowData.ChartItem)","type":"method"}],"path":"\/documentation\/divar\/gaugechartitemcollectionviewcell","title":"GaugeChartItemCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartrowsize\/init(itemscount:screenwidth:)","title":"init(itemsCount: Int, screenWidth: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugechartrowsize\/issinglerow","title":"var isSingleRow: Bool","type":"property"},{"path":"\/documentation\/divar\/gaugechartrowsize\/itemheight","title":"var itemHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/gaugechartrowsize\/itemsize","title":"var itemSize: CGSize","type":"property"},{"path":"\/documentation\/divar\/gaugechartrowsize\/itemwidth","title":"var itemWidth: CGFloat","type":"property"},{"path":"\/documentation\/divar\/gaugechartrowsize\/itemscount","title":"var itemsCount: Int","type":"property"},{"path":"\/documentation\/divar\/gaugechartrowsize\/itemsspace","title":"var itemsSpace: CGFloat","type":"property"},{"path":"\/documentation\/divar\/gaugechartrowsize\/marginsize","title":"var marginSize: CGFloat","type":"property"},{"path":"\/documentation\/divar\/gaugechartrowsize\/rowscount","title":"var rowsCount: Int","type":"property"},{"path":"\/documentation\/divar\/gaugechartrowsize\/screenwidth","title":"var screenWidth: CGFloat","type":"property"},{"path":"\/documentation\/divar\/gaugechartrowsize\/sectionheight","title":"var sectionHeight: CGFloat","type":"property"}],"path":"\/documentation\/divar\/gaugechartrowsize","title":"GaugeChartRowSize","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugeview\/maxvalue","title":"var maxValue: Double","type":"property"},{"path":"\/documentation\/divar\/gaugeview\/minvalue","title":"var minValue: Double","type":"property"},{"path":"\/documentation\/divar\/gaugeview\/progressbackgroundcolor","title":"var progressBackgroundColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/gaugeview\/progresscolor","title":"var progressColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/gaugeview\/ringthickness","title":"var ringThickness: Double","type":"property"},{"path":"\/documentation\/divar\/gaugeview\/title","title":"var title: String","type":"property"},{"path":"\/documentation\/divar\/gaugeview\/titlefont","title":"var titleFont: UIFont","type":"property"},{"path":"\/documentation\/divar\/gaugeview\/titlelabel","title":"var titleLabel: UILabel","type":"property"},{"path":"\/documentation\/divar\/gaugeview\/titletextcolor","title":"var titleTextColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/gaugeview\/value","title":"var value: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/gaugeview\/draw(_:)","title":"func draw(CGRect)","type":"method"},{"path":"\/documentation\/divar\/gaugeview\/strokegauge()","title":"func strokeGauge()","type":"method"}],"path":"\/documentation\/divar\/gaugeview","title":"GaugeView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/init(container:request:submitrequest:)","title":"init(container: GeneralBulkLadderViewControllerDIContainer, request: FilterableBulkLadderRequest, submitRequest: BulkLadderSubmitRequest)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/delegate","title":"var delegate: GeneralBulkLadderViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/minchartosearch","title":"var minCharToSearch: Int","type":"property"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/predictionvc","title":"var predictionVC: WidgetViewController<Widgets_GeneralPageResponse>?","type":"property"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/schema","title":"var schema: Schema?","type":"property"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchhistoryvc","title":"var searchHistoryVC: SearchHistoryViewController","type":"property"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/state","title":"var state: ViewState","type":"property"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/taglistvc","title":"var taglistVC: TagListViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/handlebulkladderpulltorefreshresponse(_:vc:)","title":"func handleBulkLadderPullToRefreshResponse(ExtractableMessage, vc: WidgetBasedCollectionViewController)","type":"method"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/setupchilds()","title":"func setupChilds()","type":"method"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/viewstate\/history","title":"case history","type":"case"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/viewstate\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/viewstate\/prediction","title":"case prediction","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/viewstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/viewstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/viewstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/viewstate","title":"GeneralBulkLadderViewController.ViewState","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/hidesearchview()","title":"func hideSearchView()","type":"method"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/refreshwith(request:)","title":"func refreshWith(request: FilterableBulkLadderRequest)","type":"method"}],"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/generalbulkladderviewcontrollerprotocol-implementations","title":"GeneralBulkLadderViewControllerProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchhistoryviewmodel(_:didselecthistory:at:)","title":"func searchHistoryViewModel(SearchHistoryViewModelProtocol, didSelectHistory: SearchFilterHistory, at: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/searchhistoryviewmodeldelegate-implementations","title":"SearchHistoryViewModelDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/tagdidselect(tag:index:)","title":"func tagDidSelect(tag: TagListItem, index: Int)","type":"method"},{"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/taglistcell(_:tag:didremoveitematindex:)","title":"func taglistCell(TagListCell, tag: TagListItem, didRemoveItemAtIndex: Int)","type":"method"}],"path":"\/documentation\/divar\/generalbulkladderviewcontroller\/taglistviewcontrollerdelegate-implementations","title":"TagListViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/generalbulkladderviewcontroller","title":"GeneralBulkLadderViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/init(container:token:title:isbookmarked:fortype:)","title":"init(container: GetContactViewControllerDIContainer, token: String?, title: String?, isBookmarked: Bool, forType: UserType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/callobserver","title":"let callObserver: CXCallObserver","type":"property"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/delegate","title":"var delegate: GetContactViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/isbookmarked","title":"var isBookmarked: Bool","type":"property"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/tableview","title":"var tableView: UITableView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/addtobookmark()","title":"func addToBookmark()","type":"method"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/getheadercell()","title":"func getHeaderCell() -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/sendmail(_:subject:)","title":"func sendMail(String, subject: String?)","type":"method"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/viewwilltransition(to:with:)","title":"func viewWillTransition(to: CGSize, with: UIViewControllerTransitionCoordinator)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/bookmark","title":"case bookmark","type":"case"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/dismiss","title":"case dismiss","type":"case"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/email","title":"case email","type":"case"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/phone","title":"case phone","type":"case"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/sms","title":"case sms","type":"case"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/telephone","title":"case telephone","type":"case"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/undefined","title":"case undefined","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/contactinfotype","title":"GetContactViewController.ContactInfoType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/callobserver(_:callchanged:)","title":"func callObserver(CXCallObserver, callChanged: CXCall)","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/cxcallobserverdelegate-implementations","title":"CXCallObserverDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/mailcomposecontroller(_:didfinishwith:error:)","title":"func mailComposeController(MFMailComposeViewController, didFinishWith: MFMailComposeResult, error: Error?)","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/mfmailcomposeviewcontrollerdelegate-implementations","title":"MFMailComposeViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/messagecomposeviewcontroller(_:didfinishwith:)","title":"func messageComposeViewController(MFMessageComposeViewController, didFinishWith: MessageComposeResult)","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/mfmessagecomposeviewcontrollerdelegate-implementations","title":"MFMessageComposeViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/sourceview","title":"var sourceView: ActionLog_ScreenshotActionInfo.Source","type":"property"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/screenshotprotocol-implementations","title":"ScreenshotProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/getcontactviewcontroller","title":"GetContactViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getablesection\/ischeckboxgroupwidget","title":"var isCheckboxGroupWidget: Bool","type":"property"},{"path":"\/documentation\/divar\/getablesection\/isinlinewidget","title":"var isInlineWidget: Bool","type":"property"}],"path":"\/documentation\/divar\/getablesection","title":"GetableSection","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/groupfeaturerowcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/groupfeaturerowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_GroupFeatureRow)","type":"method"},{"path":"\/documentation\/divar\/groupfeaturerowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/groupfeaturerowcollectionviewcell\/groupfeaturerow(didselect:)","title":"func groupFeatureRow(didSelect: GroupFeatureRow)","type":"method"}],"path":"\/documentation\/divar\/groupfeaturerowcollectionviewcell\/groupfeaturerowdelegate-implementations","title":"GroupFeatureRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/groupfeaturerowcollectionviewcell","title":"GroupFeatureRowCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/groupinfoelementview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/groupinfoelementview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/groupinfoelementview\/bottomlabel","title":"var bottomLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/groupinfoelementview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/groupinfoelementview\/leftdivider","title":"var leftDivider: UIView!","type":"property"},{"path":"\/documentation\/divar\/groupinfoelementview\/toplabel","title":"var topLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/groupinfoelementview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/groupinfoelementview\/fill(toptext:bottomtext:hasleftdivider:)","title":"func fill(topText: String, bottomText: String, hasLeftDivider: Bool)","type":"method"}],"path":"\/documentation\/divar\/groupinfoelementview","title":"GroupInfoElementView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/groupinforowcollectionviewcell\/dividerview","title":"var dividerView: UIView!","type":"property"},{"path":"\/documentation\/divar\/groupinforowcollectionviewcell\/stackview","title":"var stackView: UIStackView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/groupinforowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_GroupInfoRow)","type":"method"},{"path":"\/documentation\/divar\/groupinforowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/groupinforowcollectionviewcell","title":"GroupInfoRowCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/headerbarviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/headerbarviewcontroller\/init(config:)","title":"init(config: HeaderBarConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/headerbarviewcontroller\/config","title":"let config: HeaderBarConfig","type":"property"},{"path":"\/documentation\/divar\/headerbarviewcontroller\/desc","title":"var desc: UILabel!","type":"property"},{"path":"\/documentation\/divar\/headerbarviewcontroller\/headertitle","title":"var headerTitle: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/headerbarviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/headerbarviewcontroller","title":"HeaderBarViewController","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/tableentry\/==(_:_:)","title":"static func == (TableEntry, TableEntry) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/tableentry\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/tableentry\/indexesinold","title":"var indexesInOld: [Int]","type":"property"},{"path":"\/documentation\/divar\/heckel\/tableentry\/newcounter","title":"var newCounter: Counter","type":"property"},{"path":"\/documentation\/divar\/heckel\/tableentry\/oldcounter","title":"var oldCounter: Counter","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/tableentry\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/tableentry\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/heckel\/tableentry\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/heckel\/tableentry","title":"Heckel.TableEntry","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/diff(old:new:)","title":"func diff(old: [T], new: [T]) -> [Change<T>]","type":"method"},{"path":"\/documentation\/divar\/heckel\/isequal(olditem:newitem:)","title":"func isEqual(oldItem: T, newItem: T) -> Bool","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/arrayentry\/indexinother(_:)","title":"case indexInOther(Int)","type":"case"},{"path":"\/documentation\/divar\/heckel\/arrayentry\/tableentry(_:)","title":"case tableEntry(TableEntry)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/arrayentry\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/arrayentry\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/heckel\/arrayentry\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/heckel\/arrayentry","title":"Heckel.ArrayEntry","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/counter\/many","title":"case many","type":"case"},{"path":"\/documentation\/divar\/heckel\/counter\/one","title":"case one","type":"case"},{"path":"\/documentation\/divar\/heckel\/counter\/zero","title":"case zero","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/counter\/increment()","title":"func increment() -> Counter","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/counter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/heckel\/counter\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/heckel\/counter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/heckel\/counter","title":"Heckel.Counter","type":"enum"}],"path":"\/documentation\/divar\/heckel","title":"Heckel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/hintview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/hintview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/hintview\/iconimageview","title":"var iconImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/hintview\/iconimageviewwidthconstraint","title":"var iconImageViewWidthConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/hintview\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/hintview\/set(hint:)","title":"func set(hint: HintType)","type":"method"}],"path":"\/documentation\/divar\/hintview","title":"HintView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/horizontalcollectionflowlayout\/flipshorizontallyinoppositelayoutdirection","title":"var flipsHorizontallyInOppositeLayoutDirection: Bool","type":"property"},{"path":"\/documentation\/divar\/horizontalcollectionflowlayout\/marginx","title":"var marginX: CGFloat","type":"property"},{"path":"\/documentation\/divar\/horizontalcollectionflowlayout\/paddingx","title":"var paddingX: CGFloat","type":"property"},{"path":"\/documentation\/divar\/horizontalcollectionflowlayout\/paddingy","title":"var paddingY: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/horizontalcollectionflowlayout\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/horizontalcollectionflowlayout\/prepare()","title":"func prepare()","type":"method"}],"path":"\/documentation\/divar\/horizontalcollectionflowlayout","title":"HorizontalCollectionFlowLayout","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivassetcollectionfetchserviceimpl\/init(photoassetcacheservice:)","title":"init(photoAssetCacheService: IVPHAssetCacheService?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivassetcollectionfetchserviceimpl\/fetchasset(with:assettype:options:)","title":"func fetchAsset(with: [String], assetType: [IVAssetFetchType], options: PHFetchOptions?) -> [PHAsset]?","type":"method"},{"path":"\/documentation\/divar\/ivassetcollectionfetchserviceimpl\/fetchasset(with:options:)","title":"func fetchAsset(with: String, options: PHFetchOptions?) -> PHAsset?","type":"method"},{"path":"\/documentation\/divar\/ivassetcollectionfetchserviceimpl\/fetchassets(from:with:fetchoptions:)","title":"func fetchAssets(from: PHAssetCollection, with: [IVAssetFetchType], fetchOptions: PHFetchOptions?) -> [PHAsset]","type":"method"},{"path":"\/documentation\/divar\/ivassetcollectionfetchserviceimpl\/fetchassets(incollectionwith:assettype:options:)","title":"func fetchAssets(inCollectionWith: String, assetType: [IVAssetFetchType], options: PHFetchOptions?) throws -> [PHAsset]","type":"method"},{"path":"\/documentation\/divar\/ivassetcollectionfetchserviceimpl\/fetchassetscount(from:with:fetchoptions:)","title":"func fetchAssetsCount(from: PHAssetCollection, with: [IVAssetFetchType], fetchOptions: PHFetchOptions?) -> Int","type":"method"}],"path":"\/documentation\/divar\/ivassetcollectionfetchserviceimpl","title":"IVAssetCollectionFetchServiceImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcacheserviceimpl\/init(filemanager:)","title":"init(fileManager: FileManager)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcacheserviceimpl\/rootcachedirectoryurl","title":"var rootCacheDirectoryURL: URL?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcacheserviceimpl\/cachedirectory(for:)","title":"func cacheDirectory(for: IVMediaType) throws -> URL","type":"method"},{"path":"\/documentation\/divar\/ivcacheserviceimpl\/clearcachedirectory(for:with:)","title":"func clearCacheDirectory(for: IVMediaType, with: String) throws","type":"method"},{"path":"\/documentation\/divar\/ivcacheserviceimpl\/emptycache()","title":"func emptyCache() throws","type":"method"},{"path":"\/documentation\/divar\/ivcacheserviceimpl\/removefileifexist(from:)","title":"func removeFileIfExist(from: URL) throws","type":"method"}],"path":"\/documentation\/divar\/ivcacheserviceimpl","title":"IVCacheServiceImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodelimpl\/init(appphotoservice:)","title":"init(appPhotoService: AppPhotoService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodelimpl\/delegate","title":"var delegate: IVCollectionAssetSelectorImageEditingViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodelimpl\/errormessagepublisher","title":"var errorMessagePublisher: AnyPublisher<String, Never>","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodelimpl\/openphotoeditorpublisher","title":"var openPhotoEditorPublisher: AnyPublisher<Data, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodelimpl\/editimage(with:at:)","title":"func editImage(with: Data, at: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodelimpl\/imageeditingfinished(with:)","title":"func imageEditingFinished(with: IVImageEditingResult) async -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodelimpl","title":"IVCollectionAssetSelectorImageEditingViewModelImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorsectionheaderreusableview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/ivcollectionassetselectorsectionheaderreusableview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorsectionheaderreusableview\/labeltext","title":"var labelText: String?","type":"property"}],"path":"\/documentation\/divar\/ivcollectionassetselectorsectionheaderreusableview","title":"IVCollectionAssetSelectorSectionHeaderReusableView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/init(configuration:selecteditemfinalizerservice:)","title":"init(configuration: IVCollectionAssetSelectorSelectedItemViewModelConfiguration, selectedItemFinalizerService: IVSelectedItemFinalizerService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/assets","title":"var assets: [IVCollectionAssetSelectorItems]","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/changeprimarybuttonstatepublisher","title":"var changePrimaryButtonStatePublisher: AnyPublisher<IVCollectionAssetSelectorSelectedItemViewModelPrimaryButtonState, Never>","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/delegate","title":"var delegate: IVCollectionAssetSelectorSelectedItemViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/errormessagepublisher","title":"var errorMessagePublisher: AnyPublisher<String, Never>","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/reloaditemafterselectionrequestpublisher","title":"var reloadItemAfterSelectionRequestPublisher: AnyPublisher<IVCollectionAssetSelectorItems, Never>","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/selectedimagecount","title":"var selectedImageCount: Int","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/selectedvideocount","title":"var selectedVideoCount: Int","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/totalselecteditems","title":"var totalSelectedItems: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/addeditedphotoasselecteditem(with:)","title":"func addEditedPhotoAsSelectedItem(with: ItemUniqueIdentifier)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/didrequestselectionofitem(at:)","title":"func didRequestSelectionOfItem(at: IndexPath) async","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/didrequesttoconfirmselectedassets()","title":"func didRequestToConfirmSelectedAssets() async","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl\/isitemselected(with:)","title":"func isItemSelected(with: ItemUniqueIdentifier) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelimpl","title":"IVCollectionAssetSelectorSelectedItemViewModelImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/init(viewmodel:)","title":"init(viewModel: IVCollectionAssetSelectorViewModel)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/openphotoeditorviewcontroller(for:)","title":"func openPhotoEditorViewController(for: UIImage?)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/photoeditor(_:didfinishwith:edited:)","title":"func photoEditor(PhotoEditorViewController, didFinishWith: UIImage, edited: Bool)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/photoeditor(didclose:edited:)","title":"func photoEditor(didClose: PhotoEditorViewController, edited: Bool)","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/photoeditordelegate-implementations","title":"PhotoEditorDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/splitbuttonbarviewcontrollerdelegate-implementations","title":"SplitButtonBarViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/collectionview(_:willdisplay:foritemat:)","title":"func collectionView(UICollectionView, willDisplay: UICollectionViewCell, forItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewcontroller","title":"IVCollectionAssetSelectorViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/init(configuration:collectionassetselectorselecteditemviewmodel:collectionassetselectorimageeditingviewmodel:imageassetresolveservice:videoassetresolveservice:fetchservice:itemselectorvalidationservice:phassettoivcollectionassetselectoritem-1df6p","title":"init(configuration: IVCollectionAssetSelectorViewModelConfiguration, collectionAssetSelectorSelectedItemViewModel: IVCollectionAssetSelectorSelectedItemViewModel, collectionAssetSelectorImageEditingViewModel: IVCollectionAssetSelectorImageEditingViewModel, imageAssetResolveService: IVImageAssetResolveService, videoAssetResolveService: IVVideoAssetResolveService, fetchService: IVAssetCollectionFetchService, itemSelectorValidationService: IVItemSelectorValidationService, phAssetToIVCollectionAssetSelectorItemsConvertorService: IVPHAssetToCollectionAssetSelectorItemsConverterService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/collectionassetselectorimageeditingviewmodel","title":"let collectionAssetSelectorImageEditingViewModel: IVCollectionAssetSelectorImageEditingViewModel","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/collectionassetselectorselecteditemviewmodel","title":"let collectionAssetSelectorSelectedItemViewModel: IVCollectionAssetSelectorSelectedItemViewModel","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/dismissnavigationcontrollerpublisher","title":"var dismissNavigationControllerPublisher: AnyPublisher<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/pagetitle","title":"var pageTitle: String?","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/pickerdelegate","title":"var pickerDelegate: IVCollectionAssetSelectorViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/reloaddatasource","title":"var reloadDataSource: AnyPublisher<[IVCollectionAssetSelectorItems], Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/fetchalbumitems()","title":"func fetchAlbumItems()","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/imagecellviewmodel(at:)","title":"func imageCellViewModel(at: Int) -> IVCollectionImageAssetSelectorCellViewModel?","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/reloadalbumitems()","title":"func reloadAlbumItems()","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/videocellviewmodel(at:)","title":"func videoCellViewModel(at: Int) -> IVCollectionVideoAssetSelectorCellViewModel?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/itemuniqueidentifier","title":"IVCollectionAssetSelectorViewModelImpl.ItemUniqueIdentifier","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/collectionassetselectorimageeditingviewmodel(_:didrequesttoinsert:at:)","title":"func collectionAssetSelectorImageEditingViewModel(IVCollectionAssetSelectorImageEditingViewModel, didRequestToInsert: IVCollectionAssetSelectorItems, at: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/collectionassetselectorimageeditingviewmodel(_:didrequesttoselect:)","title":"func collectionAssetSelectorImageEditingViewModel(IVCollectionAssetSelectorImageEditingViewModel, didRequestToSelect: String)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/collectionassetselectorimageeditingviewmodel(_:didrequesttovalidate:)","title":"func collectionAssetSelectorImageEditingViewModel(IVCollectionAssetSelectorImageEditingViewModel, didRequestToValidate: IVCollectionAssetSelectorItems) async -> IVItemSelectorValidationResult","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/collectionassetselectorimageeditingviewmodeldidrequesttoreloadcollection(_:)","title":"func collectionAssetSelectorImageEditingViewModelDidrequestToReloadCollection(IVCollectionAssetSelectorImageEditingViewModel)","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/ivcollectionassetselectorimageeditingviewmodeldelegate-implementations","title":"IVCollectionAssetSelectorImageEditingViewModelDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/collectionassetselectorselecteditemviewmodel(_:didfinilize:)","title":"func collectionAssetSelectorSelectedItemViewModel(IVCollectionAssetSelectorSelectedItemViewModel, didFinilize: [IVPickedData])","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/collectionassetselectorselecteditemviewmodel(_:didrequestcollectionassetat:)","title":"func collectionAssetSelectorSelectedItemViewModel(IVCollectionAssetSelectorSelectedItemViewModel, didRequestCollectionAssetAt: IndexPath) -> IVCollectionAssetSelectorItems?","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/collectionassetselectorselecteditemviewmodel(_:didrequesttovalidate:)","title":"func collectionAssetSelectorSelectedItemViewModel(IVCollectionAssetSelectorSelectedItemViewModel, didRequestToValidate: IVCollectionAssetSelectorItems) async -> IVItemSelectorValidationResult","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/collectionassetselectorselecteditemviewmodeldidrequestcollectionassets(_:)","title":"func collectionAssetSelectorSelectedItemViewModelDidRequestCollectionAssets(IVCollectionAssetSelectorSelectedItemViewModel) -> [IVCollectionAssetSelectorItems]","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/ivcollectionassetselectorselecteditemviewmodeldelegate-implementations","title":"IVCollectionAssetSelectorSelectedItemViewModelDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/albumimagecellviewmodel(_:didrequesteditfor:at:)","title":"func albumImageCellViewModel(IVCollectionImageAssetSelectorCellViewModel, didRequestEditFor: Data, at: Int) async","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl\/ivcollectionimageassetselectorcellviewmodeldelegate-implementations","title":"IVCollectionImageAssetSelectorCellViewModelDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelimpl","title":"IVCollectionAssetSelectorViewModelImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchserviceimpl\/init(assetcollectionfetchservice:)","title":"init(assetCollectionFetchService: IVAssetCollectionFetchService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchserviceimpl\/fetch(with:and:assettype:)","title":"func fetch(with: [IVCollectionFetchType], and: IVCollectionFetchSubType, assetType: [IVAssetFetchType]) -> [IVCollectionFetchResult]","type":"method"}],"path":"\/documentation\/divar\/ivcollectionfetchserviceimpl","title":"IVCollectionFetchServiceImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcell\/viewmodel","title":"var viewModel: IVCollectionImageAssetSelectorCellViewModel?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcell\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"}],"path":"\/documentation\/divar\/ivcollectionimageassetselectorcell","title":"IVCollectionImageAssetSelectorCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcellviewmodelimpl\/init(rowindex:imageassetresolveservice:fetchservice:isselected:item:)","title":"init(rowIndex: Int, imageAssetResolveService: IVImageAssetResolveService, fetchService: IVAssetCollectionFetchService, isSelected: Bool, item: IVCollectionAssetSelectorImageItem)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcellviewmodelimpl\/delegate","title":"var delegate: IVCollectionImageAssetSelectorCellViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcellviewmodelimpl\/isselected","title":"var isSelected: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcellviewmodelimpl\/requestthumbnailimagedata()","title":"func requestThumbnailImageData() async -> Data?","type":"method"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcellviewmodelimpl\/requesttoeditimage()","title":"func requestToEditImage() async","type":"method"}],"path":"\/documentation\/divar\/ivcollectionimageassetselectorcellviewmodelimpl","title":"IVCollectionImageAssetSelectorCellViewModelImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/ivcollectionselectorcell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorcell\/viewmodel","title":"var viewModel: IVCollectionSelectorCellViewModel?","type":"property"}],"path":"\/documentation\/divar\/ivcollectionselectorcell","title":"IVCollectionSelectorCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorcellviewmodelimpl\/init(indexpath:cellmodel:)","title":"init(indexPath: IndexPath, cellModel: IVCollectionSelectorCellModel)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorcellviewmodelimpl\/cellmodel","title":"var cellModel: IVCollectionSelectorCellModel","type":"property"},{"path":"\/documentation\/divar\/ivcollectionselectorcellviewmodelimpl\/delegate","title":"var delegate: IVCollectionSelectorCellViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/ivcollectionselectorcellviewmodelimpl\/indexpath","title":"var indexPath: IndexPath","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorcellviewmodelimpl\/requestimageplaceholder()","title":"func requestImagePlaceHolder() async -> Data","type":"method"}],"path":"\/documentation\/divar\/ivcollectionselectorcellviewmodelimpl","title":"IVCollectionSelectorCellViewModelImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/init(viewmodel:)","title":"init(viewModel: IVCollectionSelectorViewModel)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionselectorviewcontroller","title":"IVCollectionSelectorViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodelimpl\/init(configuration:collectionfetchservice:assetfetchservice:imageassetresolveservice:videoassetresolveservice:)","title":"init(configuration: IVCollectionSelectorViewModelInitConfiguration, collectionFetchService: IVCollectionFetchService, assetFetchService: IVAssetCollectionFetchService, imageAssetResolveService: IVImageAssetResolveService, videoAssetResolveService: IVVideoAssetResolveService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodelimpl\/datasourcepublisher","title":"var dataSourcePublisher: AnyPublisher<[IVCollectionFetchResult], Never>","type":"property"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodelimpl\/delegate","title":"var delegate: IVCollectionSelectorViewModelDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodelimpl\/cellviewmodel(at:)","title":"func cellViewModel(at: IndexPath) -> IVCollectionSelectorCellViewModel?","type":"method"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodelimpl\/didselectcollection(at:)","title":"func didSelectCollection(at: Int)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodelimpl\/numberofitems(at:)","title":"func numberOfItems(at: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodelimpl\/reloadlibrary()","title":"func reloadLibrary() async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodelimpl\/collectionselectorcellviewmodel(_:didrequestedimageplaceholderdataforrowat:)","title":"func collectionSelectorCellViewModel(IVCollectionSelectorCellViewModel, didRequestedImagePlaceHolderDataForRowAt: IndexPath) async -> Data?","type":"method"}],"path":"\/documentation\/divar\/ivcollectionselectorviewmodelimpl\/ivcollectionselectorcellviewmodeldelegate-implementations","title":"IVCollectionSelectorCellViewModelDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionselectorviewmodelimpl","title":"IVCollectionSelectorViewModelImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcell\/viewmodel","title":"var viewModel: IVCollectionVideoAssetSelectorCellViewModel?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcell\/fill()","title":"func fill()","type":"method"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"}],"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcell","title":"IVCollectionVideoAssetSelectorCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcellviewmodelimpl\/init(item:isselected:videoassetresolveservice:fetchservice:)","title":"init(item: IVCollectionAssetSelectorVideoItem, isSelected: Bool, videoAssetResolveService: IVVideoAssetResolveService, fetchService: IVAssetCollectionFetchService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcellviewmodelimpl\/delegate","title":"var delegate: IVCollectionVideoAssetSelectorCellViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcellviewmodelimpl\/isselected","title":"var isSelected: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcellviewmodelimpl\/requestthumbnailimagedata()","title":"func requestThumbnailImageData() async -> Data?","type":"method"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcellviewmodelimpl\/requestvideoduration()","title":"func requestVideoDuration() async -> String","type":"method"}],"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcellviewmodelimpl","title":"IVCollectionVideoAssetSelectorCellViewModelImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivflowcontroller\/init(container:filemanager:phimagemanager:phphotolibrary:)","title":"init(container: IVFlowDIContainer, fileManager: FileManager, phImageManager: PHImageManager, phPhotoLibrary: PHPhotoLibrary)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivflowcontroller\/initialivcollectionselectorviewcontroller(configuration:delegate:)","title":"func initialIVCollectionSelectorViewController(configuration: IVCollectionSelectorViewModelInitConfiguration, delegate: IVCollectionSelectorViewModelDelegate?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/ivflowcontroller\/initialivvideorecorderviewcontroller(configuration:delegate:)","title":"func initialIVVideoRecorderViewController(configuration: IVVideoRecorderViewModelConfiguration, delegate: IVVideoRecorderViewModelDelegate?) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivflowcontroller\/opencollectionassetselectorviewcontroller(pickerdelegate:selectorviewmodelconfiguration:selecteditemviewmodelconfiguration:)","title":"func openCollectionAssetSelectorViewController(pickerDelegate: IVCollectionAssetSelectorViewModelDelegate, selectorViewModelConfiguration: IVCollectionAssetSelectorViewModelConfiguration, selectedItemViewModelConfiguration: IVCollectionAssetSelectorSelectedItemViewModelConfiguration)","type":"method"}],"path":"\/documentation\/divar\/ivflowcontroller\/formflowcontrollertoivflowcontroller-implementations","title":"FormFlowControllerToIVFlowController Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivflowcontroller","title":"IVFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorvalidationserviceimpl\/init(assetcollectionfetchservice:)","title":"init(assetCollectionFetchService: IVAssetCollectionFetchService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorvalidationserviceimpl\/validateimage(imagedata:with:)","title":"func validateImage(imageData: Data?, with: [IVRule]) -> IVItemSelectorValidationResult","type":"method"},{"path":"\/documentation\/divar\/ivitemselectorvalidationserviceimpl\/validatevideo(videoinfo:with:)","title":"func validateVideo(videoInfo: IVVideoInfoAttainmentResponse?, with: [IVRule]) -> IVItemSelectorValidationResult","type":"method"}],"path":"\/documentation\/divar\/ivitemselectorvalidationserviceimpl","title":"IVItemSelectorValidationServiceImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivphassetcacheserviceimpl\/init(totalcostlimit:countlimit:)","title":"init(totalCostLimit: Int, countLimit: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivphassetcacheserviceimpl\/cache(asset:)","title":"func cache(asset: PHAsset)","type":"method"},{"path":"\/documentation\/divar\/ivphassetcacheserviceimpl\/emptycache()","title":"func emptyCache()","type":"method"},{"path":"\/documentation\/divar\/ivphassetcacheserviceimpl\/retrieveasset(with:)","title":"func retrieveAsset(with: String) -> PHAsset?","type":"method"}],"path":"\/documentation\/divar\/ivphassetcacheserviceimpl","title":"IVPHAssetCacheServiceImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivpickeddataimagegeneratorserviceimpl\/init(filemanager:)","title":"init(fileManager: FileManager)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivpickeddataimagegeneratorserviceimpl\/generateplaceholderimagedata(for:assettype:)","title":"func generatePlaceHolderImageData(for: URL, assetType: IVMediaType) async throws -> Data","type":"method"}],"path":"\/documentation\/divar\/ivpickeddataimagegeneratorserviceimpl","title":"IVPickedDataImageGeneratorServiceImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoaudioremoverimpl\/init(next:)","title":"init(next: IVCompostionManipulator?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoaudioremoverimpl\/next","title":"var next: IVCompostionManipulator?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoaudioremoverimpl\/manipulate(videoasset:composition:)","title":"func manipulate(videoAsset: AVAsset, composition: AVMutableComposition) async throws -> AVMutableComposition","type":"method"},{"path":"\/documentation\/divar\/ivvideoaudioremoverimpl\/removeaudiofrom(videoasset:)","title":"func removeAudioFrom(videoAsset: AVAsset) throws -> AVAsset","type":"method"}],"path":"\/documentation\/divar\/ivvideoaudioremoverimpl","title":"IVVideoAudioRemoverImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexporterserviceimpl\/init(filemanager:)","title":"init(fileManager: FileManager)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexporterserviceimpl\/exportvideo(asset:preset:filetype:videourl:saveinto:)","title":"func exportVideo(asset: AVAsset, preset: IVVideoExportPreset, fileType: IVFileType, videoURL: URL, saveInto: URL?) async throws -> IVVideoExportResult","type":"method"}],"path":"\/documentation\/divar\/ivvideoexporterserviceimpl","title":"IVVideoExporterServiceImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoportaitfix\/init(next:)","title":"init(next: IVCompostionManipulator?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoportaitfix\/next","title":"var next: IVCompostionManipulator?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoportaitfix\/manipulate(videoasset:composition:)","title":"func manipulate(videoAsset: AVAsset, composition: AVMutableComposition) async throws -> AVMutableComposition","type":"method"}],"path":"\/documentation\/divar\/ivvideoportaitfix","title":"IVVideoPortaitFix","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/init(viewmodel:)","title":"init(viewModel: IVVideoRecorderViewModel)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/viewwilldisappear(_:)","title":"func viewWillDisappear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/cameraoverlay(_:didrequestchangeflashstate:)","title":"func cameraOverlay(CameraOverlayView, didRequestChangeFlashState: Bool)","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/cameraoverlaydidrequestclose(_:)","title":"func cameraOverlayDidRequestClose(CameraOverlayView)","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/cameraoverlaydidrequeststartrecording(_:)","title":"func cameraOverlayDidRequestStartRecording(CameraOverlayView)","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/cameraoverlaydidrequeststoprecording(_:)","title":"func cameraOverlayDidRequestStopRecording(CameraOverlayView)","type":"method"}],"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/cameraoverlaydelegate-implementations","title":"CameraOverlayDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/imagepickercontroller(_:didfinishpickingmediawithinfo:)","title":"func imagePickerController(UIImagePickerController, didFinishPickingMediaWithInfo: [UIImagePickerController.InfoKey : Any])","type":"method"}],"path":"\/documentation\/divar\/ivvideorecorderviewcontroller\/uiimagepickercontrollerdelegate-implementations","title":"UIImagePickerControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivvideorecorderviewcontroller","title":"IVVideoRecorderViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/init(configuration:videoinfoattainmentservice:validationservice:)","title":"init(configuration: IVVideoRecorderViewModelConfiguration, videoInfoAttainmentService: IVVideoInfoAttainmentService, validationService: IVItemSelectorValidationService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/delegate","title":"var delegate: IVVideoRecorderViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/maximumvideoduration","title":"var maximumVideoDuration: Int","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/overlaydidrequestchangeflashstatepublisher","title":"var overlayDidRequestChangeFlashStatePublisher: AnyPublisher<Bool, Never>","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/overlaydidrequestclosepublisher","title":"var overlayDidRequestClosePublisher: AnyPublisher<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/overlaydidrequeststartrecordingpublisher","title":"var overlayDidRequestStartRecordingPublisher: AnyPublisher<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/overlaydidrequeststoprecordingpublisher","title":"var overlayDidRequestStopRecordingPublisher: AnyPublisher<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/resetvideorecorderduetounknownerrorpublisher","title":"var resetVideoRecorderDueToUnknownErrorPublisher: AnyPublisher<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/showerrormessagepublisher","title":"var showErrorMessagePublisher: AnyPublisher<String, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/changeflashstate(ison:)","title":"func changeFlashState(isOn: Bool)","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/didfinishrecordingvideo(to:)","title":"func didFinishRecordingVideo(to: URL)","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/errorocouredonrecordingvideo()","title":"func errorOcouredOnRecordingVideo()","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/requesttoclosecontroller()","title":"func requestToCloseController()","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/resetvideorecorderduetounknownerror()","title":"func resetVideoRecorderDueToUnknownError()","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/startrecording()","title":"func startRecording()","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl\/stoprecording()","title":"func stopRecording()","type":"method"}],"path":"\/documentation\/divar\/ivvideorecorderviewmodelimpl","title":"IVVideoRecorderViewModelImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/image\/init(asset:)","title":"init(asset: PHAsset)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/image\/asset","title":"let asset: PHAsset","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/image\/resolve(size:completion:)","title":"func resolve(size: CGSize, completion: (UIImage?) -> Void)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/image\/resolve(images:completion:)","title":"static func resolve(images: [Image], completion: ([UIImage?]) -> Void)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/image\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/image\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/image\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/image","title":"Image","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouselcell\/mainimage","title":"var mainImage: SonnatImageView!","type":"property"}],"path":"\/documentation\/divar\/imagecarouselcell","title":"ImageCarouselCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouselcollectionviewcell\/collection","title":"var collection: UICollectionView!","type":"property"},{"path":"\/documentation\/divar\/imagecarouselcollectionviewcell\/divider","title":"var divider: UIView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouselcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/imagecarouselcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_ImageCarouselRowData)","type":"method"},{"path":"\/documentation\/divar\/imagecarouselcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/imagecarouselcollectionviewcell","title":"ImageCarouselCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouseldatasource\/init(collection:observe:)","title":"init(collection: UICollectionView, observe: () -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouseldatasource\/data","title":"var data: Widgets_ImageCarouselRowData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouseldatasource\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/imagecarouseldatasource\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/imagecarouseldatasource\/collectionview(_:layout:sizeforitemat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, sizeForItemAt: IndexPath) -> CGSize","type":"method"},{"path":"\/documentation\/divar\/imagecarouseldatasource\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/imagecarouseldatasource\/showimagepreview(url:filenames:currentindex:)","title":"func showImagePreview(url: [String], fileNames: [String], currentIndex: Int)","type":"method"}],"path":"\/documentation\/divar\/imagecarouseldatasource","title":"ImageCarouselDataSource","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouseltableviewcell\/collection","title":"var collection: UICollectionView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouseltableviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/imagecarouseltableviewcell\/fill(with:)","title":"func fill(with: [String])","type":"method"}],"path":"\/documentation\/divar\/imagecarouseltableviewcell","title":"ImageCarouselTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/init(property:)","title":"init(property: Schema)","type":"init"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/imagecarouseltableviewrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/imagecarouseltableviewrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/imagecarouseltableviewrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/imagecarouseltableviewrow","title":"ImageCarouselTableViewRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepicker\/aspectratio","title":"var aspectRatio: String?","type":"property"},{"path":"\/documentation\/divar\/imagepicker\/delegate","title":"var delegate: ImagePickerDelegate?","type":"property"},{"path":"\/documentation\/divar\/imagepicker\/imagemaxsize","title":"var imageMaxSize: CGSize?","type":"property"},{"path":"\/documentation\/divar\/imagepicker\/imageminsize","title":"var imageMinSize: CGSize?","type":"property"},{"path":"\/documentation\/divar\/imagepicker\/maxlimit","title":"var maxLimit: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepicker\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/imagepicker\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/imagepicker\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/imagepicker\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/imagepicker\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/imagepicker","title":"ImagePicker","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselection\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/imagepickerimageselection\/init(title:images:maxlimit:minsize:maxsize:aspectratio:)","title":"init(title: String?, images: [Image], maxLimit: Int?, minSize: CGSize?, maxSize: CGSize?, aspectRatio: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview","title":"var collectionView: UICollectionView!","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselection\/imagepickerdelegate","title":"var imagePickerDelegate: ImagePickerDelegate?","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselection\/stackview","title":"var stackView: UIStackView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview(_:layout:minimuminteritemspacingforsectionat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview(_:layout:minimumlinespacingforsectionat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, minimumLineSpacingForSectionAt: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview(_:layout:sizeforitemat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, sizeForItemAt: IndexPath) -> CGSize","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/numberofsections(in:)","title":"func numberOfSections(in: UICollectionView) -> Int","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/showeditorviewcontroller(image:)","title":"func showEditorViewController(image: UIImage?)","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/validateimage(size:)","title":"func validateImage(size: CGSize) -> Bool","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselection\/imagepickerimageselectioncell(didrequesteditingfor:atindexpath:)","title":"func imagePickerImageSelectionCell(didRequestEditingFor: ImagePickerImageSelectionCell, atIndexPath: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/imagepickerimageselection\/imagepickerimageselectioncelldelegate-implementations","title":"ImagePickerImageSelectionCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselection\/photoeditor(_:didfinishwith:edited:)","title":"func photoEditor(PhotoEditorViewController, didFinishWith: UIImage, edited: Bool)","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselection\/photoeditor(didclose:edited:)","title":"func photoEditor(didClose: PhotoEditorViewController, edited: Bool)","type":"method"}],"path":"\/documentation\/divar\/imagepickerimageselection\/photoeditordelegate-implementations","title":"PhotoEditorDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselection\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/imagepickerimageselection\/splitbuttonbarviewcontrollerdelegate-implementations","title":"SplitButtonBarViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/imagepickerimageselection","title":"ImagePickerImageSelection","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/delegate","title":"var delegate: ImagePickerImageSelectionCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/editbtn","title":"var editBtn: UIButton!","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/imageview","title":"var imageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/indexpath","title":"var indexPath: IndexPath?","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/selectionicon","title":"var selectionIcon: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/selectionview","title":"var selectionView: UIView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/editaction(_:)","title":"func editAction(Any)","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/fill(delegate:indexpath:isselected:)","title":"func fill(delegate: ImagePickerImageSelectionCellDelegate?, indexPath: IndexPath?, isSelected: Bool)","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectioncell\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/divar\/imagepickerimageselectioncell","title":"ImagePickerImageSelectionCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/init(images:)","title":"init(images: [Image])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/maxsize","title":"var maxSize: CGSize?","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/numberofimages","title":"var numberOfImages: Int","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/numberofselectedimages","title":"var numberOfSelectedImages: Int","type":"property"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/suggestedmaxbytes","title":"var suggestedMaxBytes: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/addimage(image:withsize:completion:)","title":"func addImage(image: Image, withSize: CGSize, completion: ((UIImage?) -> Void))","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/editimage(at:completion:)","title":"func editImage(at: Int, completion: ((UIImage?) -> Void))","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/editingfinishedfor(image:completion:)","title":"func editingFinishedFor(image: UIImage, completion: (Int) -> Void)","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/getimagesizefor(index:)","title":"func getImageSizeFor(index: Int) -> CGSize","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/getimagethumbnailfor(index:size:completion:)","title":"func getImageThumbnailFor(index: Int, size: CGSize, completion: (UIImage?) -> Void)","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/getselectedimages(completion:)","title":"func getSelectedImages(completion: ([UIImage]) -> Void)","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/imagedeselectedat(index:)","title":"func imageDeselectedAt(index: Int)","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/imageisselected(at:)","title":"func imageIsSelected(at: Int) -> Bool","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/imageselectedat(index:)","title":"func imageSelectedAt(index: Int)","type":"method"},{"path":"\/documentation\/divar\/imagepickerimageselectionhelper\/resizeimage(_:)","title":"func resizeImage(UIImage?) -> UIImage?","type":"method"}],"path":"\/documentation\/divar\/imagepickerimageselectionhelper","title":"ImagePickerImageSelectionHelper","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerlistcell\/albumimagepreview","title":"var albumImagePreview: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/imagepickerlistcell\/countlabel","title":"var countLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/imagepickerlistcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerlistcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/imagepickerlistcell\/fill(title:count:)","title":"func fill(title: String?, count: Int)","type":"method"}],"path":"\/documentation\/divar\/imagepickerlistcell","title":"ImagePickerListCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imagerowitem\/init(image:uploadedurl:state:)","title":"init(image: UIImage?, uploadedURL: String?, state: ImageRowItemState)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagerowitem\/image","title":"var image: UIImage?","type":"property"},{"path":"\/documentation\/divar\/imagerowitem\/isfirstimage","title":"var isFirstImage: Bool","type":"property"},{"path":"\/documentation\/divar\/imagerowitem\/state","title":"var state: ImageRowItemState","type":"property"},{"path":"\/documentation\/divar\/imagerowitem\/uploadedurl","title":"var uploadedURL: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagerowitem\/changetoplaceholder()","title":"func changeToPlaceholder()","type":"method"},{"path":"\/documentation\/divar\/imagerowitem\/setimage(_:)","title":"func setImage(UIImage)","type":"method"}],"path":"\/documentation\/divar\/imagerowitem","title":"ImageRowItem","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorcell\/availableitems","title":"var availableItems: [ImageRowItem]","type":"property"},{"path":"\/documentation\/divar\/imageselectorcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/imageselectorcell\/delegate","title":"var delegate: ImageSelectorCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/imageselectorcell\/getunavailableitems","title":"var getUnavailableItems: [ImageRowItem]","type":"property"},{"path":"\/documentation\/divar\/imageselectorcell\/getuploadeditems","title":"var getUploadedItems: [ImageRowItem]","type":"property"},{"path":"\/documentation\/divar\/imageselectorcell\/imageselectionstartdate","title":"var imageSelectionStartDate: NSDate?","type":"property"},{"path":"\/documentation\/divar\/imageselectorcell\/placeholdercount","title":"var placeholderCount: Int","type":"property"},{"path":"\/documentation\/divar\/imageselectorcell\/placeholders","title":"var placeholders: [ImageSelectorRowPlaceholder]","type":"property"},{"path":"\/documentation\/divar\/imageselectorcell\/uploadingitemexists","title":"var uploadingItemExists: Bool","type":"property"},{"path":"\/documentation\/divar\/imageselectorcell\/value","title":"var value: [String]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorcell\/add(_:)","title":"func add([ImageRowItem])","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/changefirstavailableitemtofilled(imageurl:)","title":"func changeFirstAvailableItemToFilled(imageURL: String) -> ImageRowItem","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/changefirstavailableitemtouploading(image:)","title":"func changeFirstAvailableItemToUploading(image: UIImage) -> ImageRowItem","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/changeitemstate(item:to:image:uploadedurl:)","title":"func changeItemState(item: ImageRowItem, to: ImageRowItemState, image: UIImage?, uploadedURL: String?)","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/delete(item:)","title":"func delete(item: ImageRowItem)","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/logaddphotoactionlog(with:duration:)","title":"func logAddPhotoActionLog(with: String, duration: TimeInterval)","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/retryupload(item:)","title":"func retryUpload(item: ImageRowItem)","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/setplaceholders(placeholders:placeholdercount:)","title":"func setPlaceholders(placeholders: Any?, placeholderCount: Int)","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/settitle(_:)","title":"func setTitle(String?)","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/setuploadedimageurl(for:image:imageurl:)","title":"func setUploadedImageURL(for: ImageRowItem, image: UIImage, imageURL: String)","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/setuploadedimageurlfailed(for:image:)","title":"func setUploadedImageURLFailed(for: ImageRowItem, image: UIImage)","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/starttimer()","title":"func startTimer()","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/stoptimerandgetduration()","title":"func stopTimerAndGetDuration() -> TimeInterval","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/systemlayoutsizefitting(_:withhorizontalfittingpriority:verticalfittingpriority:)","title":"func systemLayoutSizeFitting(CGSize, withHorizontalFittingPriority: UILayoutPriority, verticalFittingPriority: UILayoutPriority) -> CGSize","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/updateimageselectorview()","title":"func updateImageSelectorView()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorcell\/imageselectmehtod\/camera","title":"case camera","type":"case"},{"path":"\/documentation\/divar\/imageselectorcell\/imageselectmehtod\/gallery","title":"case gallery","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorcell\/imageselectmehtod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorcell\/imageselectmehtod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorcell\/imageselectmehtod\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/imageselectorcell\/imageselectmehtod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorcell\/imageselectmehtod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorcell\/imageselectmehtod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/imageselectorcell\/imageselectmehtod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/imageselectorcell\/imageselectmehtod","title":"ImageSelectorCell.ImageSelectMehtod","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorcell\/imagepicker(didselectimages:)","title":"func imagePicker(didSelectImages: [UIImage])","type":"method"},{"path":"\/documentation\/divar\/imageselectorcell\/imagepickerdidstartresizingimages()","title":"func imagePickerDidStartResizingImages()","type":"method"}],"path":"\/documentation\/divar\/imageselectorcell\/imagepickerdelegate-implementations","title":"ImagePickerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorcell\/imageselectorrow(_:didselect:)","title":"func imageSelectorRow(Sonnat.ImageSelectorRow, didSelect: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/imageselectorcell\/imageselectorrowdelegate-implementations","title":"ImageSelectorRowDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorcell\/imagepickercontroller(_:didfinishpickingmediawithinfo:)","title":"func imagePickerController(UIImagePickerController, didFinishPickingMediaWithInfo: [UIImagePickerController.InfoKey : Any])","type":"method"}],"path":"\/documentation\/divar\/imageselectorcell\/uiimagepickercontrollerdelegate-implementations","title":"UIImagePickerControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/imageselectorcell","title":"ImageSelectorCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorrow\/init(property:isedit:service:onvalidationchanged:)","title":"init(property: Schema, isEdit: Bool, service: ImageServiceProtocol, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/imageselectorrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/imageselectorrow\/init(tag:service:)","title":"init(tag: String?, service: ImageServiceProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorrow\/delegate","title":"var delegate: ImageSelectorRowDelegate?","type":"property"},{"path":"\/documentation\/divar\/imageselectorrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/imageselectorrow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorrow\/compress(image:completion:)","title":"func compress(image: UIImage, completion: ((UIImage) -> Void))","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/getimageurl(for:isfromdraft:)","title":"func getImageURL(for: String, isFromDraft: Bool) -> String?","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/getitems(for:)","title":"func getItems(for: Schema) -> [ImageRowItem]","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/setplaceholders(for:)","title":"func setPlaceholders(for: Schema)","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorrow\/validationchanged","title":"ImageSelectorRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/imageselectorrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorrow\/imageselectorcell(_:didrequestchangesubmitbuttonstate:)","title":"func imageSelectorCell(ImageSelectorCell, didRequestChangeSubmitButtonState: Bool)","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/imageselectorcell(_:didrequestopencameracontroller:)","title":"func imageSelectorCell(ImageSelectorCell, didRequestOpenCameraController: ImagePicker)","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/imageselectorcell(_:didrequestretryimage:)","title":"func imageSelectorCell(ImageSelectorCell, didRequestRetryImage: ImageRowItem)","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/imageselectorcell(_:didrequestshowoptions:)","title":"func imageSelectorCell(ImageSelectorCell, didRequestShowOptions: [SheetItem])","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/imageselectorcell(_:didrequestuploadimages:)","title":"func imageSelectorCell(ImageSelectorCell, didRequestUploadImages: [UIImage])","type":"method"}],"path":"\/documentation\/divar\/imageselectorrow\/imageselectorcelldelegate-implementations","title":"ImageSelectorCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/imageselectorrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/imageselectorrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/imageselectorrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/imageselectorrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/imageselectorrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/imageselectorrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/imageselectorrow","title":"ImageSelectorRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imageservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageservice\/getimage(name:url:bucket:completion:)","title":"func getImage(name: String, url: String, bucket: String, completion: (_ result: UIImage?, _ error: Error?) -> Void)","type":"method"},{"path":"\/documentation\/divar\/imageservice\/removeimage(imagename:)","title":"func removeImage(imageName: String) async throws","type":"method"},{"path":"\/documentation\/divar\/imageservice\/uploadimage(url:bucket:image:shouldkeepresponsename:)","title":"func uploadImage(url: String, bucket: String, image: UIImage, shouldKeepResponseName: Bool) async -> (name: String?, error: Error?)","type":"method"}],"path":"\/documentation\/divar\/imageservice","title":"ImageService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageslidercell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageslidercell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/imageslidercell\/fill(with:)","title":"func fill(with: [String])","type":"method"}],"path":"\/documentation\/divar\/imageslidercell","title":"ImageSliderCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageslidercollectionviewcell\/mediaslider","title":"var mediaSlider: MediaSlider!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageslidercollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/imageslidercollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_ImageSliderRowData)","type":"method"},{"path":"\/documentation\/divar\/imageslidercollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageslidercollectionviewcell\/imageslider(didtaptooltip:)","title":"func imageSlider(didTapTooltip: Tooltip)","type":"method"}],"path":"\/documentation\/divar\/imageslidercollectionviewcell\/imagesliderdelegate-implementations","title":"ImageSliderDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/imageslidercollectionviewcell","title":"ImageSliderCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imagesliderrow\/init(property:)","title":"init(property: Schema)","type":"init"},{"path":"\/documentation\/divar\/imagesliderrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagesliderrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/imagesliderrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imagesliderrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagesliderrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/imagesliderrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/imagesliderrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/imagesliderrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/imagesliderrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/imagesliderrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagesliderrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/imagesliderrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/imagesliderrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/imagesliderrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/imagesliderrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/imagesliderrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/imagesliderrow","title":"ImageSliderRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imageslibrary\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageslibrary\/albums","title":"var albums: [Album]","type":"property"},{"path":"\/documentation\/divar\/imageslibrary\/albumsfetchresults","title":"var albumsFetchResults: [PHFetchResult<PHAssetCollection>]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageslibrary\/reload(_:)","title":"func reload(() -> Void)","type":"method"}],"path":"\/documentation\/divar\/imageslibrary","title":"ImagesLibrary","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/indexpathconverter\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/indexpathconverter\/convert(changes:section:)","title":"func convert<T>(changes: [Change<T>], section: Int) -> ChangeWithIndexPath","type":"method"}],"path":"\/documentation\/divar\/indexpathconverter","title":"IndexPathConverter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/infinityscroll\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/infinityscroll\/detectionboundary","title":"var detectionBoundary: CGFloat","type":"property"},{"path":"\/documentation\/divar\/infinityscroll\/enabled","title":"var enabled: Bool","type":"property"},{"path":"\/documentation\/divar\/infinityscroll\/indicatorcontainerheight","title":"var indicatorContainerHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/infinityscroll\/indicatorsize","title":"var indicatorSize: CGSize","type":"property"},{"path":"\/documentation\/divar\/infinityscroll\/oninfinityscroll","title":"var onInfinityScroll: ((_ scrollView: UIScrollView) -> Void)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/infinityscroll\/endinfinityscroll()","title":"func endInfinityScroll()","type":"method"},{"path":"\/documentation\/divar\/infinityscroll\/setup(scrollview:)","title":"func setup(scrollView: UIScrollView)","type":"method"}],"path":"\/documentation\/divar\/infinityscroll","title":"InfinityScroll","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowexpandablecollectionviewcell\/expandableview","title":"var expandableView: InfoRowExpandable!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowexpandablecollectionviewcell\/didtaptoexpnad(didtap:)","title":"func didTapToExpnad(didTap: InfoRowExpandable)","type":"method"},{"path":"\/documentation\/divar\/inforowexpandablecollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_InfoRowExpandable)","type":"method"},{"path":"\/documentation\/divar\/inforowexpandablecollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/inforowexpandablecollectionviewcell","title":"InfoRowExpandableCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowtableviewcell\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/inforowtableviewcell\/delegate","title":"var delegate: ConfigurableCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/inforowtableviewcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/inforowtableviewcell\/valuelabel","title":"var valueLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowtableviewcell\/endediting(_:)","title":"func endEditing(Bool) -> Bool","type":"method"},{"path":"\/documentation\/divar\/inforowtableviewcell\/fill(with:indexpath:)","title":"func fill(with: InfoRowModel, indexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/inforowtableviewcell\/setediting(_:animated:)","title":"func setEditing(Bool, animated: Bool)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowtableviewcell\/datatype","title":"InfoRowTableViewCell.DataType","type":"typealias"},{"path":"\/documentation\/divar\/inforowtableviewcell\/returntype","title":"InfoRowTableViewCell.ReturnType","type":"typealias"}],"path":"\/documentation\/divar\/inforowtableviewcell","title":"InfoRowTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowunexpandablecell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/inforowunexpandablecell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/inforowunexpandablecell\/titletext","title":"var titleText: String?","type":"property"},{"path":"\/documentation\/divar\/inforowunexpandablecell\/valuelabel","title":"var valueLabel: UILabel!","type":"property"}],"path":"\/documentation\/divar\/inforowunexpandablecell","title":"InfoRowUnExpandableCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/init(tag:data:property:)","title":"init(tag: String?, data: InfoRowUnExpandableEurekaData?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/options","title":"var options: [Schema]","type":"property"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/property","title":"var property: Schema?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/inforowunexpandablerow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/inforowunexpandablerow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/inforowunexpandablerow","title":"InfoRowUnExpandableRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/init(container:conversation:)","title":"init(container: InputAreaViewControllerDIContainer, conversation: ChatConversationTable?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/attachmentbutton","title":"var attachmentButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/conversation","title":"var conversation: ChatConversationTable?","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/delegate","title":"var delegate: MessageInputAreaViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/heightconstraint","title":"var heightConstraint: NSLayoutConstraint?","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/isattachingfileallowed","title":"var isAttachingFileAllowed: Bool","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/isattachingvideoallowed","title":"var isAttachingVideoAllowed: Bool","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/iseditingmessage","title":"var isEditingMessage: Bool","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/isrecording","title":"var isRecording: Bool","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/lastsendtypingeventdate","title":"var lastSendTypingeventDate: Date","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/messagevc","title":"var messageVC: MessagingViewController?","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/parentveiwcontroller","title":"var parentVeiwController: MessageHandlingType?","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/post","title":"var post: PostViewStructure?","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/recordingview","title":"var recordingView: UIView!","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/recordingviewcontroller","title":"var recordingViewController: VoiceRecorderViewController?","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbutton","title":"var sendButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/textview","title":"var textView: UITextView!","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/topdivider","title":"var topDivider: UIView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/attachmentbuttonaction(_:)","title":"func attachmentButtonAction(UIButton)","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/prepareforeditwarnedmessage(text:)","title":"func prepareForEditWarnedMessage(text: String)","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/prepareformessagepreviewbar(isshowingmessagepreview:message:type:)","title":"func prepareForMessagePreviewBar(isShowingMessagePreview: Bool, message: ChatConversationMessageTable?, type: MessagePreviewBarViewController.MessagePreviewType?)","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonaction(_:)","title":"func sendButtonAction(UIButton)","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/setheight(_:)","title":"func setHeight(CGFloat)","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/startrecording(_:)","title":"func startRecording(UIGestureRecognizer)","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/stoprecording()","title":"func stopRecording()","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonstate\/confirm","title":"case confirm","type":"case"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonstate\/send","title":"case send","type":"case"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonstate\/voice","title":"case voice","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonstate\/backgroundcolor","title":"var backgroundColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonstate\/imagecolor","title":"var imageColor: SonnatColors?","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonstate\/imagename","title":"var imageName: SonnatImages","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonstate\/recordingbackgroundcolor","title":"var recordingBackgroundColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonstate\/recordingimagecolor","title":"var recordingImageColor: SonnatColors","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/inputareaviewcontroller\/sendbuttonstate","title":"InputAreaViewController.SendButtonState","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/audiorecorderstartedrecordingaudio(_:)","title":"func audioRecorderStartedRecordingAudio(VoiceRecorderViewController)","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/audiorecorderviewcontrollerdismissed(withfileurl:)","title":"func audioRecorderViewControllerDismissed(withFileURL: URL?)","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/timerfinishedcounting()","title":"func timerFinishedCounting()","type":"method"}],"path":"\/documentation\/divar\/inputareaviewcontroller\/audiorecorderviewcontrollerdelegate-implementations","title":"AudioRecorderViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/choosefile()","title":"func chooseFile()","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/chooseimage()","title":"func chooseImage()","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/chooselocation()","title":"func chooseLocation()","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/getconfirmationonsendingphonenumber()","title":"func getConfirmationOnSendingPhoneNumber()","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/takephoto()","title":"func takePhoto()","type":"method"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/takevideo()","title":"func takeVideo()","type":"method"}],"path":"\/documentation\/divar\/inputareaviewcontroller\/chatattachmentactionoptionprotocol-implementations","title":"ChatAttachmentActionOptionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/gesturerecognizershouldbegin(_:)","title":"func gestureRecognizerShouldBegin(UIGestureRecognizer) -> Bool","type":"method"}],"path":"\/documentation\/divar\/inputareaviewcontroller\/uigesturerecognizerdelegate-implementations","title":"UIGestureRecognizerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inputareaviewcontroller\/textviewdidchange(_:)","title":"func textViewDidChange(UITextView)","type":"method"}],"path":"\/documentation\/divar\/inputareaviewcontroller\/uitextviewdelegate-implementations","title":"UITextViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/inputareaviewcontroller","title":"InputAreaViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/int64cell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/int64cell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/int64cell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/int64cell\/setup()","title":"func setup()","type":"method"}],"path":"\/documentation\/divar\/int64cell","title":"Int64Cell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/int64row\/init(property:onvalidationchanged:onchange:)","title":"init(property: Schema, onValidationChanged: (Int64Cell, Int64Row) -> Void, onChange: (Int64Row) -> Void)","type":"init"},{"path":"\/documentation\/divar\/int64row\/init(tag:type:property:validationoption:onvalidationchanged:onchange:)","title":"init(tag: String, type: Int64RowType, property: Schema, validationOption: ValidationOptions, onValidationChanged: (Int64Cell, Int64Row) -> Void, onChange: (Int64Row) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/int64row\/dividerview","title":"var dividerView: DividerView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/int64row\/checkdisabled()","title":"func checkDisabled()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/int64row\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/int64row\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/int64row\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/int64row\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/int64row\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/int64row\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/int64row\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/int64row\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/int64row\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/int64row\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/int64row\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/int64row\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/int64row\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/int64row\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/int64row\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/int64row","title":"Int64Row","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/jscorelocalstorage-swift.class\/init(urlsession:)","title":"init!(urlSession: URLSession!)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jscorelocalstorage-swift.class\/extend(_:)","title":"func extend(Any!)","type":"method"}],"path":"\/documentation\/divar\/jscorelocalstorage-swift.class","title":"JSCoreLocalStorage","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jscorewindow-swift.class\/extend(_:)","title":"func extend(Any!)","type":"method"}],"path":"\/documentation\/divar\/jscorewindow-swift.class","title":"JSCoreWindow","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsflowcontroller\/acceptjobstermsandconditionbeforeregister(_:)","title":"func acceptJobsTermsAndConditionBeforeRegister(BeforeRegisterTermsAndConditionsVC?)","type":"method"},{"path":"\/documentation\/divar\/jobsflowcontroller\/declinejobstermsansconditionbeforeregister(_:)","title":"func declineJobsTermsAnsConditionBeforeRegister(BeforeRegisterTermsAndConditionsVC)","type":"method"},{"path":"\/documentation\/divar\/jobsflowcontroller\/openjobsbulkladder(_:)","title":"func openJobsBulkLadder(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/jobsflowcontroller\/openjobsgetbusinesscontact(_:)","title":"func openJobsGetBusinessContact(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/jobsflowcontroller\/openjobsregister(_:)","title":"func openJobsRegister(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/jobsflowcontroller","title":"JobsFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsformflowcontroller\/initialjobssubmitviewcontroller(editid:)","title":"func initialJobsSubmitViewController(editID: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/jobsformflowcontroller\/initialjobssubmitviewcontroller(with:editid:)","title":"func initialJobsSubmitViewController(with: NavigationController, editID: String?) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsformflowcontroller\/openjobssubmit(_:)","title":"func openJobsSubmit(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/jobsformflowcontroller\/jobsformactionhandler-implementations","title":"JobsFormActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/divar\/jobsformflowcontroller","title":"JobsFormFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsservices\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsservices\/getjobssubmitpageschema(model:)","title":"func getJobsSubmitPageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/jobsservices\/registerbusiness()","title":"func registerBusiness() async throws","type":"method"}],"path":"\/documentation\/divar\/jobsservices","title":"JobsServices","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/jobssubmitviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/jobssubmitviewcontroller\/init(container:formid:editid:newschema:newdata:previousdata:)","title":"init(container: JobsSubmitViewControllerDIContainer, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/jobssubmitviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/jobssubmitviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/jobssubmitviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/jobssubmitviewcontroller\/needsresetbutton","title":"var needsResetButton: Bool","type":"property"},{"path":"\/documentation\/divar\/jobssubmitviewcontroller\/shoulddraft","title":"var shouldDraft: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jobssubmitviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/jobssubmitviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/jobssubmitviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/jobssubmitviewcontroller","title":"JobsSubmitViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsflowcontroller\/openmobileinfobrandpage(_:)","title":"func openMobileInfoBrandPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/kaladetailsflowcontroller\/openmobileinfohomepage(_:)","title":"func openMobileInfoHomePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/kaladetailsflowcontroller\/openmobileinfomodelpage(_:)","title":"func openMobileInfoModelPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/kaladetailsflowcontroller","title":"KalaDetailsFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landingpageflowcontroller\/initial(with:token:slug:type:)","title":"func initial(with: NavigationController, token: String?, slug: String?, type: ListDataActions?) throws -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/landingpageflowcontroller\/initialviewcontroller(token:)","title":"func initialViewController(token: String?) throws -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landingpageflowcontroller\/opendealershipmanagement(_:)","title":"func openDealershipManagement(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/landingpageflowcontroller\/openmarketplacelandingpage(_:)","title":"func openMarketplaceLandingPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/landingpageflowcontroller\/landingactionhandler-implementations","title":"LandingActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/divar\/landingpageflowcontroller","title":"LandingPageFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineauthenticationservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineauthenticationservice\/authenticatelandline(phonenumber:managetoken:)","title":"func authenticateLandline(phoneNumber: String, manageToken: String) async -> Result<UserPosts_LandlineAuthenticationResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/landlineauthenticationservice\/validatelandlinenumber(codenumber:phonenumber:managetoken:)","title":"func validateLandlineNumber(codeNumber: String, phoneNumber: String, manageToken: String) async -> Result<UserPosts_ValidateLandlineResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/landlineauthenticationservice","title":"LandlineAuthenticationService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationflowcontroller\/init(container:managetoken:)","title":"init(container: BaseFlowDIContainer, manageToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationflowcontroller\/delegate","title":"var delegate: LandlineVerificationFlowControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/landlineverificationflowcontroller\/managetoken","title":"let manageToken: String","type":"property"},{"path":"\/documentation\/divar\/landlineverificationflowcontroller\/phonenumberinput","title":"var phoneNumberInput: NumberInputProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationflowcontroller\/dismiss(animated:completion:)","title":"func dismiss(animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/landlineverificationflowcontroller\/initial(with:)","title":"func initial(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/landlineverificationflowcontroller\/initialviewcontroller()","title":"func initialViewController() -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationflowcontroller\/openlandlineverification()","title":"func openLandlineVerification()","type":"method"}],"path":"\/documentation\/divar\/landlineverificationflowcontroller\/landlineverificationactionhandler-implementations","title":"LandlineVerificationActionHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationflowcontroller\/numberenteredsuccessfully(_:with:needsverify:)","title":"func numberEnteredSuccessfully(NumberInputViewController, with: String, needsVerify: Bool)","type":"method"}],"path":"\/documentation\/divar\/landlineverificationflowcontroller\/numberinputviewcontrollerdelegate-implementations","title":"NumberInputViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationflowcontroller\/verificationcodeenteredsuccessfully(_:with:)","title":"func verificationCodeEnteredSuccessfully(VerificationCodeInputViewController, with: String)","type":"method"}],"path":"\/documentation\/divar\/landlineverificationflowcontroller\/verificationcodeinputviewcontrollerdelegate-implementations","title":"VerificationCodeInputViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/landlineverificationflowcontroller","title":"LandlineVerificationFlowController","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landscapewidgetbasedbuilder\/createviewcontroller(viewmodel:)","title":"class func createViewController(viewModel: WidgetViewModel) -> AdvancedWidgetViewController","type":"method"}],"path":"\/documentation\/divar\/landscapewidgetbasedbuilder","title":"LandscapeWidgetBasedBuilder","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/landscapewidgetviewcontroller\/defaultorientation","title":"var defaultOrientation: UIDeviceOrientation","type":"property"}],"path":"\/documentation\/divar\/landscapewidgetviewcontroller","title":"LandscapeWidgetViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/legacywidgetbasedsegmentedhandlerdicontainerimp\/init(widgetbasedservice:)","title":"init(widgetBasedService: WidgetBasedServiceProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/legacywidgetbasedsegmentedhandlerdicontainerimp\/widgetbasedservice","title":"var widgetBasedService: WidgetBasedServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/legacywidgetbasedsegmentedhandlerdicontainerimp","title":"LegacyWidgetBasedSegmentedHandlerDIContainerImp","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitlerow\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/legendtitlerow\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/legendtitlerow\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitlerow\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/legendtitlerow","title":"LegendTitleRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitlerowtableviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/legendtitlerowtableviewcell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitlerowtableviewcell\/fill(title:subtitle:icon:hasdivider:)","title":"func fill(title: String, subtitle: String, icon: ImageAsset, hasDivider: Bool)","type":"method"}],"path":"\/documentation\/divar\/legendtitlerowtableviewcell","title":"LegendTitleRowTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/delegate","title":"var delegate: ConfigurableCellDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/endediting(_:)","title":"func endEditing(Bool) -> Bool","type":"method"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/fill(with:indexpath:)","title":"func fill(with: LegendTitleModel, indexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/setediting(_:animated:)","title":"func setEditing(Bool, animated: Bool)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/datatype","title":"LegendTitleTableViewCell.DataType","type":"typealias"},{"path":"\/documentation\/divar\/legendtitletableviewcell\/returntype","title":"LegendTitleTableViewCell.ReturnType","type":"typealias"}],"path":"\/documentation\/divar\/legendtitletableviewcell","title":"LegendTitleTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/init(tag:property:)","title":"init(tag: String?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationservice","title":"var locationService: LocationServiceProtocol!","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/setvalues(_:vc:)","title":"func setValues([String : Any], vc: BaseFormViewController)","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/presenterrow","title":"LimitedLocationSelectorRow.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/validationchanged","title":"LimitedLocationSelectorRow.ValidationChanged","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationkeys\/city","title":"case city","type":"case"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationkeys\/latitude","title":"case latitude","type":"case"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationkeys\/longitude","title":"case longitude","type":"case"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationkeys\/neighborhood","title":"case neighborhood","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/limitedlocationselectorrow\/locationkeys","title":"LimitedLocationSelectorRow.LocationKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorrow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/limitedlocationselectorrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/limitedlocationselectorrow","title":"LimitedLocationSelectorRow","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/item\/init(data:type:)","title":"init(data: Any, type: LimitedLocationSelectorViewController.ItemType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/item\/data","title":"let data: Any","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/item\/type","title":"let type: ItemType","type":"property"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/item","title":"LimitedLocationSelectorViewController.Item","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/init(container:callback:property:)","title":"init(container: LimitedLocationSelectorViewControllerDIContainer, callback: ((UIViewController) -> Void)?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/city","title":"var city: Place","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/collectionview","title":"var collectionView: UICollectionView!","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/hasdistrict","title":"var hasDistrict: Bool","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/items","title":"var items: [Item]","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/row","title":"var row: RowOf<Location>!","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/shouldlimitcitychange","title":"var shouldLimitCityChange: Bool","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/widebutton","title":"let wideButton: WideButtonViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/generatedata()","title":"func generateData()","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/registercells()","title":"func registerCells()","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/setcityfromrow()","title":"func setCityFromRow() -> Bool","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/setcityfromservice()","title":"func setCityFromService() -> Bool","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/setcurrentcity()","title":"func setCurrentCity()","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/showvalidationerror(_:)","title":"func showValidationError(ItemType)","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/validatecity(city:)","title":"func validateCity(city: Place) -> Bool","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/validateform()","title":"func validateForm() -> Bool","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/itemtype\/approxmatemaprow","title":"case approxmateMapRow","type":"case"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/itemtype\/cityrow","title":"case cityRow","type":"case"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/itemtype\/districtrow","title":"case districtRow","type":"case"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/itemtype\/error","title":"case error","type":"case"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/itemtype\/maprow","title":"case mapRow","type":"case"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/itemtype\/subtitle","title":"case subtitle","type":"case"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/itemtype\/title","title":"case title","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/itemtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/itemtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/itemtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/itemtype","title":"LimitedLocationSelectorViewController.ItemType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/didrequestdismissingoptionformfieldcontroller(_:)","title":"func didRequestDismissingOptionFormFieldController(UIViewController)","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/didselectoption(_:selectiontype:)","title":"func didSelectOption(Place, selectionType: CitySelectionType)","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/cityselectviewcontrollerdelegate-implementations","title":"CitySelectViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/mapselectorcontroller(_:didselectlocation:)","title":"func mapSelectorController(MapSelectorViewController, didSelectLocation: Location)","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/mapselectorviewcontrollerdelegate-implementations","title":"MapSelectorViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/collectionview(_:layout:sizeforitemat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, sizeForItemAt: IndexPath) -> CGSize","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/buttonclicked(_:action:)","title":"func buttonClicked(WideButtonViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller\/widebuttonviewcontrollerdelegate-implementations","title":"WideButtonViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/limitedlocationselectorviewcontroller","title":"LimitedLocationSelectorViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/linechartrowcollectionviewcell\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/linechartrowcollectionviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/linechartrowcollectionviewcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/linechartrowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_LineChartRowData)","type":"method"},{"path":"\/documentation\/divar\/linechartrowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/linechartrowcollectionviewcell","title":"LineChartRowCollectionViewCell","type":"class"},{"path":"\/documentation\/divar\/linkflowcontroller","title":"LinkFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/linkhandler\/init()","title":"init()","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/linkhandler\/open(_:options:completionhandler:)","title":"class func open(URL, options: [UIApplication.OpenExternalURLOptionsKey : Any], completionHandler: ((Bool) -> Void)?)","type":"method"}],"path":"\/documentation\/divar\/linkhandler","title":"LinkHandler","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/listcategorycell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/listcategorycell\/circlerightconstraint","title":"var circleRightConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/listcategorycell\/iconimgview","title":"var iconImgView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/listcategorycell\/namelbl","title":"var nameLbl: UILabel!","type":"property"},{"path":"\/documentation\/divar\/listcategorycell\/redcircle","title":"var redCircle: UIView!","type":"property"},{"path":"\/documentation\/divar\/listcategorycell\/titlerightconstraint","title":"var titleRightConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/listcategorycell\/titlerighttoimageview","title":"var titleRightToImageView: NSLayoutConstraint?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/listcategorycell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/listcategorycell\/fill(cat:haschild:)","title":"func fill(cat: MainCategory, hasChild: Bool)","type":"method"},{"path":"\/documentation\/divar\/listcategorycell\/fill(cat:shouldshowredcircle:haschild:)","title":"func fill(cat: PostCategory, shouldShowRedCircle: Bool, hasChild: Bool)","type":"method"},{"path":"\/documentation\/divar\/listcategorycell\/sticktitlerighttoimage(_:)","title":"func stickTitleRightToImage(Bool)","type":"method"}],"path":"\/documentation\/divar\/listcategorycell","title":"ListCategoryCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/loadingtoast\/activityindicator","title":"var activityIndicator: UIActivityIndicatorView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/loadingtoast\/awakefromnib()","title":"func awakeFromNib()","type":"method"}],"path":"\/documentation\/divar\/loadingtoast","title":"LoadingToast","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/locationmanager\/authorizationstatus","title":"var authorizationStatus: CLAuthorizationStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationmanager\/locationmanager(_:didchangeauthorization:)","title":"func locationManager(CLLocationManager, didChangeAuthorization: CLAuthorizationStatus)","type":"method"},{"path":"\/documentation\/divar\/locationmanager\/locationmanager(_:didfailwitherror:)","title":"func locationManager(CLLocationManager, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/divar\/locationmanager\/locationmanager(_:didupdatelocations:)","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method"},{"path":"\/documentation\/divar\/locationmanager\/requestauthorize(completion:)","title":"func requestAuthorize(completion: ((CLLocation?, Error?) -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/locationmanager\/requestlocation(accuracy:completion:)","title":"func requestLocation(accuracy: CLLocationAccuracy, completion: ((CLLocation?, Error?) -> Void)?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/locationmanager\/sharedinstance","title":"static var sharedInstance: LocationManager","type":"property"}],"path":"\/documentation\/divar\/locationmanager","title":"LocationManager","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/locationmanagerhelper\/authorizationstatus","title":"var authorizationStatus: CLAuthorizationStatus","type":"property"},{"path":"\/documentation\/divar\/locationmanagerhelper\/locationenabled","title":"var locationEnabled: Bool","type":"property"}],"path":"\/documentation\/divar\/locationmanagerhelper","title":"LocationManagerHelper","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorrow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/locationselectorrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/locationselectorrow\/init(tag:property:)","title":"init(tag: String?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/locationselectorrow\/locationservice","title":"var locationService: LocationServiceProtocol!","type":"property"},{"path":"\/documentation\/divar\/locationselectorrow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/locationselectorrow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/locationselectorrow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorrow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/locationselectorrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/locationselectorrow\/setvalues(_:location:)","title":"func setValues([String : Any], location: Location)","type":"method"},{"path":"\/documentation\/divar\/locationselectorrow\/setvalues(_:vc:)","title":"func setValues([String : Any], vc: BaseFormViewController)","type":"method"},{"path":"\/documentation\/divar\/locationselectorrow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorrow\/presenterrow","title":"LocationSelectorRow.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/locationselectorrow\/validationchanged","title":"LocationSelectorRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/locationselectorrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorrow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/locationselectorrow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/locationselectorrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/locationselectorrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/locationselectorrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/locationselectorrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/locationselectorrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/locationselectorrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/locationselectorrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/locationselectorrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/locationselectorrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/locationselectorrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/locationselectorrow","title":"LocationSelectorRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/init(container:callback:property:)","title":"init(container: LocationSelectorViewControllerDIContainer, callback: ((UIViewController) -> Void)?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/city","title":"var city: Place","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/districtlesscitybutton","title":"var districtLessCityButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/districtlesscityview","title":"var districtLessCityView: UIView!","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/row","title":"var row: RowOf<Location>!","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchbartopviewheightconstraint","title":"var searchBarTopViewHeightConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchboxholderview","title":"var searchBoxHolderView: UIView!","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/shouldlimitcitychange","title":"var shouldLimitCityChange: Bool","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/tableview","title":"var tableView: UITableView!","type":"property"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/toptableview","title":"var topTableView: UITableView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/collapsesearchbartopview(_:)","title":"func collapseSearchBarTopView(Bool)","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/executeaction(for:)","title":"func executeAction(for: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/gettopcells(for:)","title":"func getTopCells(for: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/localsearch(_:)","title":"func localSearch(String)","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/selectcitywithoutdistrict(_:)","title":"func selectCityWithoutDistrict(Any)","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/setvaluewithoutmap()","title":"func setValueWithoutMap()","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/setupsearchbox()","title":"func setupSearchBox()","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/didrequestdismissingoptionformfieldcontroller(_:)","title":"func didRequestDismissingOptionFormFieldController(UIViewController)","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/didselectoption(_:selectiontype:)","title":"func didSelectOption(Place, selectionType: CitySelectionType)","type":"method"}],"path":"\/documentation\/divar\/locationselectorviewcontroller\/cityselectviewcontrollerdelegate-implementations","title":"CitySelectViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/mapselectorcontroller(_:didselectlocation:)","title":"func mapSelectorController(MapSelectorViewController, didSelectLocation: Location)","type":"method"}],"path":"\/documentation\/divar\/locationselectorviewcontroller\/mapselectorviewcontrollerdelegate-implementations","title":"MapSelectorViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/locationselectorviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/scrollviewwillenddragging(_:withvelocity:targetcontentoffset:)","title":"func scrollViewWillEndDragging(UIScrollView, withVelocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>)","type":"method"}],"path":"\/documentation\/divar\/locationselectorviewcontroller\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/locationselectorviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/locationselectorviewcontroller\/tableview(_:willselectrowat:)","title":"func tableView(UITableView, willSelectRowAt: IndexPath) -> IndexPath?","type":"method"}],"path":"\/documentation\/divar\/locationselectorviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/locationselectorviewcontroller","title":"LocationSelectorViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/locationservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationservice\/getcities()","title":"func getCities() async -> Result<Cities, DError>","type":"method"},{"path":"\/documentation\/divar\/locationservice\/getdistricts(city:)","title":"func getDistricts(city: Place) async -> Result<[Place], DError>","type":"method"},{"path":"\/documentation\/divar\/locationservice\/getdistrictsgeo(city:)","title":"func getDistrictsGeo(city: Place) async -> Result<Naghshe_GetGeoJsonResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/locationservice\/getlocationforedit(cityid:districtid:)","title":"func getLocationForEdit(cityId: Int, districtId: Int?) async -> Location?","type":"method"},{"path":"\/documentation\/divar\/locationservice\/getnearbylocation(lat:long:)","title":"func getNearbyLocation(lat: Double, long: Double) async -> Result<Location, DError>","type":"method"},{"path":"\/documentation\/divar\/locationservice\/locationwidgetsearch(searchkey:query:source:field:cityid:)","title":"func locationWidgetSearch(searchKey: String?, query: String, source: HierarchySearchSources, field: String, cityID: Int) async -> Result<[Place], Error>","type":"method"},{"path":"\/documentation\/divar\/locationservice\/searchstreets(city:query:)","title":"func searchStreets(city: Place, query: String) async -> Result<StreetListResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/locationservice","title":"LocationService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/loginactionloghelper\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/loginactionloghelper\/logloginenter()","title":"func logLoginEnter()","type":"method"},{"path":"\/documentation\/divar\/loginactionloghelper\/logloginsuccessfulevent()","title":"func logLoginSuccessfulEvent()","type":"method"}],"path":"\/documentation\/divar\/loginactionloghelper","title":"LoginActionLogHelper","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mfmessageflowcontroller\/opensendmessage(_:)","title":"func openSendMessage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/mfmessageflowcontroller","title":"MFMessageFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mainflowcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/mainflowcontroller\/init(container:introconfig:payload:personaldocumenthelper:businessdocumenthelper:)","title":"init(container: MainFlowControllerDIContainer, introConfig: IntroConfig, payload: UniversalPayload?, personalDocumentHelper: DocumentHelper, businessDocumentHelper: DocumentHelper)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mainflowcontroller\/businessdocumenthelper","title":"let businessDocumentHelper: DocumentHelper","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/chatflowcontroller","title":"var chatFlowController: ChatFlowController","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/checkforupdate","title":"var checkForUpdate: Void","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/configuser","title":"var configUser: Void","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/connectionchangehandler","title":"var connectionChangeHandler: (() -> Void)?","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/container","title":"let container: MainFlowControllerDIContainer","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/feedbackhandler","title":"var feedBackHandler: FeedBackHandler?","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/firstpass","title":"var firstPass: Bool","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/introconfig","title":"var introConfig: IntroConfig","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/notificationtoken","title":"var notificationToken: String?","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/payload","title":"var payload: UniversalPayload?","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/personaldocumenthelper","title":"let personalDocumentHelper: DocumentHelper","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/registerationhandler","title":"var registerationHandler: (() -> Void)?","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/servicenetwork","title":"var serviceNetwork: ServiceNetworkManagerProtocol","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/splashview","title":"var splashView: DivarSplashView?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mainflowcontroller\/changeselectedtab(to:distancevc:)","title":"func changeSelectedTab(to: Int, distanceVC: ((UIViewController?) -> Void))","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/currenttabname(for:)","title":"func currentTabName(for: Int) -> String","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/forceupdate(url:)","title":"func forceUpdate(url: URL)","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/handlechatnewmessage(_:)","title":"func handleChatNewMessage(Notification)","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/handlepayload(_:)","title":"func handlePayload(UniversalPayload)","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/observenotifications()","title":"func observeNotifications()","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/performaction(_:)","title":"func performAction(UniversalPayload)","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/reloadtabs()","title":"func reloadTabs()","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/socketconnectionchanged(_:)","title":"func socketConnectionChanged(Notification)","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/updateprofilebadge()","title":"func updateProfileBadge()","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/userregisterationchanged(notification:)","title":"func userRegisterationChanged(notification: NSNotification)","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/mainflowcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mainflowcontroller\/didrequestopeningfeedbackview(viewmodel:)","title":"func didRequestOpeningFeedBackView(viewModel: FeedBackDataStructure)","type":"method"}],"path":"\/documentation\/divar\/mainflowcontroller\/feedbackviewprotocol-implementations","title":"FeedBackViewProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mainflowcontroller\/firsttimevc(_:didselectcity:)","title":"func firstTimeVC(FirstTimeViewController, didSelectCity: Place)","type":"method"}],"path":"\/documentation\/divar\/mainflowcontroller\/firsttimeviewcontrollerdelegate-implementations","title":"FirstTimeViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mainflowcontroller\/loginrequiredprotocol","title":"var loginRequiredProtocol: LoginRequiredProtocol?","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/postchatnavigatorcontainer","title":"var postChatNavigatorContainer: PostChatNavigatorDIContainer","type":"property"},{"path":"\/documentation\/divar\/mainflowcontroller\/presentingnavigationcontroller","title":"var presentingNavigationController: NavigationController?","type":"property"}],"path":"\/documentation\/divar\/mainflowcontroller\/postchatnavigator-implementations","title":"PostChatNavigator Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mainflowcontroller\/tabbarcontroller(_:shouldselect:)","title":"func tabBarController(UITabBarController, shouldSelect: UIViewController) -> Bool","type":"method"}],"path":"\/documentation\/divar\/mainflowcontroller\/uitabbarcontrollerdelegate-implementations","title":"UITabBarControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mainflowcontroller","title":"MainFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/init(isapproximate:approximateradius:coordinate:)","title":"init(isApproximate: Bool, approximateRadius: Float, coordinate: CLLocationCoordinate2D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/approximateradius","title":"let approximateRadius: Float","type":"property"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/buttonaction","title":"var buttonAction: (() -> Void)?","type":"property"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/circle","title":"let circle: MKCircle","type":"property"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/coordinate","title":"let coordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/isapproximate","title":"let isApproximate: Bool","type":"property"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/mapview","title":"let mapView: MKMapView","type":"property"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/pin","title":"let pin: MKPointAnnotation","type":"property"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/stackview","title":"let stackView: UIStackView","type":"property"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/widebutton","title":"let wideButton: WideButtonViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/loadview()","title":"func loadView()","type":"method"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/mapview(_:rendererfor:)","title":"func mapView(MKMapView, rendererFor: MKOverlay) -> MKOverlayRenderer","type":"method"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/mapview(_:viewfor:)","title":"func mapView(MKMapView, viewFor: MKAnnotation) -> MKAnnotationView?","type":"method"}],"path":"\/documentation\/divar\/mapdetailsviewcontroller\/mkmapviewdelegate-implementations","title":"MKMapViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdetailsviewcontroller\/buttonclicked(_:action:)","title":"func buttonClicked(WideButtonViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/mapdetailsviewcontroller\/widebuttonviewcontrollerdelegate-implementations","title":"WideButtonViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mapdetailsviewcontroller","title":"MapDetailsViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/init(geojsonresponse:selecteddata:)","title":"init(geoJsonResponse: Naghshe_GetGeoJsonResponse, selectedData: [SingleMultiModel])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/buttonbar","title":"var buttonBar: SplitButtonBarViewController","type":"property"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/delegate","title":"var delegate: MapDistrictSelectorViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/geojsonresponse","title":"var geoJsonResponse: Naghshe_GetGeoJsonResponse","type":"property"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/mapvc","title":"var mapVC: DistrictedMapViewController","type":"property"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/selecteddata","title":"var selectedData: [SingleMultiModel]","type":"property"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/taglist","title":"var tagList: TagListViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/districtedmap(_:didchangeselecteddata:)","title":"func districtedMap(DistrictedMapViewController, didChangeSelectedData: [SingleMultiModel])","type":"method"}],"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/districtedmapviewcontrollerdelegate-implementations","title":"DistrictedMapViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/splitbuttonbarviewcontrollerdelegate-implementations","title":"SplitButtonBarViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/tagdidselect(tag:index:)","title":"func tagDidSelect(tag: TagListItem, index: Int)","type":"method"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/taglistcell(_:tag:didremoveitematindex:)","title":"func taglistCell(TagListCell, tag: TagListItem, didRemoveItemAtIndex: Int)","type":"method"}],"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller\/taglistviewcontrollerdelegate-implementations","title":"TagListViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mapdistrictselectorviewcontroller","title":"MapDistrictSelectorViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/maprowcollectionviewcell\/imageview","title":"var imageView: SonnatImageView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/maprowcollectionviewcell\/fill(urlstring:)","title":"func fill(urlString: String)","type":"method"},{"path":"\/documentation\/divar\/maprowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/maprowcollectionviewcell\/maprowaction(for:)","title":"static func mapRowAction(for: Google_Protobuf_Any) -> Widgets_Action?","type":"method"}],"path":"\/documentation\/divar\/maprowcollectionviewcell","title":"MapRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/activityindicator","title":"var activityIndicator: UIActivityIndicatorView!","type":"property"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/imageupload","title":"var imageUpload: WideImageUpload!","type":"property"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/imageview","title":"var imageView: SonnatImageView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/fill(with:)","title":"func fill(with: CLLocationCoordinate2D)","type":"method"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/resetcell()","title":"func resetCell()","type":"method"},{"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell\/shouldshowimageupload(_:)","title":"func shouldShowImageUpload(Bool)","type":"method"}],"path":"\/documentation\/divar\/mapselectorrowcollectionviewcell","title":"MapSelectorRowCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/init(container:location:shouldlimitcitychange:allowedcitiesanddistricts:)","title":"init(container: MapSelectorViewControllerDIContainer, location: Location?, shouldLimitCityChange: Bool, allowedCitiesAndDistricts: [CityAndDistrict])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/activityindicator","title":"var activityIndicator: UIActivityIndicatorView!","type":"property"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/allowedcitiesanddistricts","title":"var allowedCitiesAndDistricts: [CityAndDistrict]","type":"property"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/confirmlocationbutton","title":"var confirmLocationButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/delegate","title":"var delegate: MapSelectorViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/locationlabel","title":"var locationLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/mappin","title":"var mapPin: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/mapview","title":"var mapView: MKMapView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/applymapviewmemoryfix()","title":"func applyMapViewMemoryFix()","type":"method"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/confirmlocationaction(_:)","title":"func confirmLocationAction(UIButton)","type":"method"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapselectorviewcontroller\/mapview(_:regiondidchangeanimated:)","title":"func mapView(MKMapView, regionDidChangeAnimated: Bool)","type":"method"}],"path":"\/documentation\/divar\/mapselectorviewcontroller\/mkmapviewdelegate-implementations","title":"MKMapViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mapselectorviewcontroller","title":"MapSelectorViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mapsharehelper\/init(container:holder:popoverview:)","title":"init(container: MapShareHelperDIContainer, holder: UIViewController, popoverView: UIView?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mapsharehelper\/holder","title":"let holder: UIViewController","type":"property"},{"path":"\/documentation\/divar\/mapsharehelper\/popoverview","title":"let popoverView: UIView?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapsharehelper\/showmapactivity(coordinate:banner:posttoken:)","title":"func showMapActivity(coordinate: CLLocationCoordinate2D, banner: Banner?, postToken: String?)","type":"method"}],"path":"\/documentation\/divar\/mapsharehelper","title":"MapShareHelper","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/cancelpromotion(_:)","title":"func cancelPromotion(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/finalizemarketplaceeditstore(_:)","title":"func finalizeMarketplaceEditStore(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/finalizemarketplaceregisterstore(_:)","title":"func finalizeMarketplaceRegisterStore(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/marketplacefreesubscription(_:)","title":"func marketplaceFreeSubscription(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/marketplaceremoveassistant(_:)","title":"func marketplaceRemoveAssistant(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/openmakretplaceprize(_:)","title":"func openMakretplacePrize(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/openmarketplaceassistantpage(_:)","title":"func openMarketplaceAssistantPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/openmarketplacebulkladder(_:)","title":"func openMarketplaceBulkLadder(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/openmarketplacefeatureslist(_:)","title":"func openMarketplaceFeaturesList(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/openmarketplacegetcontact(_:)","title":"func openMarketplaceGetContact(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/openmarketplacepostfeedbackoptions(_:)","title":"func openMarketplacePostFeedbackOptions(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/openmarketplacepostsmanagementpage(_:)","title":"func openMarketplacePostsManagementPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/openmarketplaceregisterpage(_:)","title":"func openMarketplaceRegisterPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/openmarketplacestorestatspage(_:)","title":"func openMarketplaceStoreStatsPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/openmarketplacestoreslist(_:)","title":"func openMarketplaceStoresList(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/openmarketplacesubscriptionstatus(_:)","title":"func openMarketplaceSubscriptionStatus(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/openmarketplaceviewpostfeedbackpage(_:)","title":"func openMarketplaceViewPostFeedbackPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/postponeregisterstore(_:)","title":"func postponeRegisterStore(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceflowcontroller\/sharestorelanding(_:)","title":"func shareStoreLanding(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/marketplaceflowcontroller","title":"MarketPlaceFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller\/init(container:payload:formid:editid:newschema:newdata:previousdata:)","title":"init(container: MarketpalceFeedbackViewControllerDIContainer, payload: Widgets_MarketplaceSubmitPostFeedbackPayload, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller\/payload","title":"let payload: Widgets_MarketplaceSubmitPostFeedbackPayload","type":"property"},{"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/marketpalcefeedbackviewcontroller","title":"MarketpalceFeedbackViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller\/init(container:phonenumber:formid:editid:newschema:newdata:previousdata:)","title":"init(container: MarketplaceEditAssistantViewControllerDIContainer, phoneNumber: String, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller\/successsubmitmessage","title":"var successSubmitMessage: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/marketplaceeditassistantviewcontroller","title":"MarketplaceEditAssistantViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/initialmarketplaceaddsalesman(with:)","title":"func initialMarketplaceAddSalesman(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/initialmarketplaceaddstoremanager(with:)","title":"func initialMarketplaceAddStoreManager(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/initialmarketplaceeditassistant(with:phonenumber:)","title":"func initialMarketplaceEditAssistant(with: NavigationController, phoneNumber: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/initialmarketplaceeditstoreviewcontroller(with:section:)","title":"func initialMarketplaceEditStoreViewController(with: NavigationController, section: Int32) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/initialmarketplacequickeditpost(with:token:)","title":"func initialMarketplaceQuickEditPost(with: NavigationController, token: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/initialmarketplaceregisterviewcontroller(with:section:source:)","title":"func initialMarketplaceRegisterViewController(with: NavigationController, section: Int32, source: Widgets_MarketplaceRegisterStorePayload.Source) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/initialmarketplacesubmitpostfeedback(with:payload:)","title":"func initialMarketplaceSubmitPostFeedback(with: NavigationController, payload: Widgets_MarketplaceSubmitPostFeedbackPayload) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/initialmarketplacesubmitviewcontroller(editid:)","title":"func initialMarketplaceSubmitViewController(editID: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/initialmarketplacesubmitviewcontroller(with:editid:)","title":"func initialMarketplaceSubmitViewController(with: NavigationController, editID: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/initialmarketplacesubscriptionviewcontroller(with:purchasetype:categorytype:)","title":"func initialMarketplaceSubscriptionViewController(with: NavigationController, purchaseType: Int, categoryType: Int) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/openmarketplaceaddsalesman(_:)","title":"func openMarketplaceAddSalesman(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/openmarketplaceaddstoremanager(_:)","title":"func openMarketplaceAddStoreManager(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/openmarketplaceeditassistantpage(_:)","title":"func openMarketplaceEditAssistantPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/openmarketplaceeditstore(_:)","title":"func openMarketplaceEditStore(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/openmarketplacepurchasesubscription(_:)","title":"func openMarketplacePurchaseSubscription(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/openmarketplacequickeditpost(_:)","title":"func openMarketplaceQuickEditPost(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/openmarketplacesubmit(_:)","title":"func openMarketplaceSubmit(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformflowcontroller\/openmarketplacesubmitpostfeedback(_:)","title":"func openMarketplaceSubmitPostFeedback(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/marketplaceformflowcontroller\/marketplaceformactionhandler-implementations","title":"MarketplaceFormActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/divar\/marketplaceformflowcontroller","title":"MarketplaceFormFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepriceflowcontroller\/openmobilepricepage(_:)","title":"func openMobilePricePage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/marketplacepriceflowcontroller","title":"MarketplacePriceFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacequickeditpostflowcontroller\/openmarketplacequickeditpostslist(_:)","title":"func openMarketplaceQuickEditPostsList(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/marketplacequickeditpostflowcontroller","title":"MarketplaceQuickEditPostFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacequickeditpostvc\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/marketplacequickeditpostvc\/init(container:formid:managetoken:newschema:newdata:previousdata:)","title":"init(container: MarketplaceQuickEditPostVCDIContainer, formID: String?, manageToken: String, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacequickeditpostvc\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacequickeditpostvc\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/marketplacequickeditpostvc\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/marketplacequickeditpostvc\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/marketplacequickeditpostvc","title":"MarketplaceQuickEditPostVC","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceregisterflowcontroller\/initialregisterstoredetail(with:landlineinfo:)","title":"func initialRegisterStoreDetail(with: NavigationController, landlineInfo: LandlineState?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/marketplaceregisterflowcontroller\/openmarketplaceeditstoredetails(_:)","title":"func openMarketplaceEditStoreDetails(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceregisterflowcontroller\/openmarketplaceregisterdetailspage(_:)","title":"func openMarketplaceRegisterDetailsPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/marketplaceregisterflowcontroller","title":"MarketplaceRegisterFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceservice\/addsalesman(model:)","title":"func addSalesman(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/addstoremanager(model:)","title":"func addStoreManager(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/authenticatemarketplacelandlinenumber(number:)","title":"func authenticateMarketplaceLandlineNumber(number: String) async -> Result<MarketPlace_LandlineAuthenticationResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/cancelpromotion()","title":"func cancelPromotion() async -> Result<MarketPlace_CancelPromotionResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/editassitant(phonenumber:model:)","title":"func editAssitant(phoneNumber: String, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/editmarketplacestore(section:model:)","title":"func editMarketplaceStore(section: Int32?, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/finalizemarketplaceeditstore()","title":"func finalizeMarketplaceEditStore() async -> Result<MarketPlace_FinalizeEditStoreResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/finalizemarketplaceregisterstore()","title":"func finalizeMarketplaceRegisterStore() async -> Result<MarketPlace_FinalizeRegisterStoreResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/getmarketplacesubmitpageschema(model:)","title":"func getMarketplaceSubmitPageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/getmarketplacesubscriptionpurchasepageschema(purchasetype:categorytype:model:)","title":"func getMarketplaceSubscriptionPurchasePageSchema(purchaseType: Int, categoryType: Int, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/mobilezeropricepage(pinned:query:infinitescrol:)","title":"func mobileZeroPricePage(pinned: [String], query: String?, infiniteScrol: Widgets_InfiniteScrollResponse?) async -> Result<KalaDetails_GetMobilePricePageResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/quickeditmarketplacepost(mngtoken:model:)","title":"func quickEditMarketplacePost(mngToken: String, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/registermarketplacestore(section:model:)","title":"func registerMarketplaceStore(section: Int32?, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/registerstoreskipstep(section:model:)","title":"func registerStoreSkipStep(section: Int32?, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/removeassistant(phonenumber:)","title":"func removeAssistant(phoneNumber: String) async -> Result<MarketPlace_RemoveAssistantResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/startmarketplacefreesubscription()","title":"func startMarketplaceFreeSubscription() async -> Result<MarketPlace_ActivateFreeSubscriptionResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/submitmarketpalcepostfeedback(data:model:)","title":"func submitMarketpalcePostFeedback(data: Widgets_MarketplaceSubmitPostFeedbackPayload, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceservice\/validatemarketplacelandlinenumber(code:number:)","title":"func validateMarketplaceLandlineNumber(code: String, number: String) async -> Result<MarketPlace_ValidateLandlineResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/marketplaceservice","title":"MarketplaceService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/init(container:formid:editid:newschema:newdata:previousdata:actionloghelper:)","title":"init(container: MarketplaceSubmitViewControllerDIContainer, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any], actionLogHelper: PostSubmitActionLogHelper?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/actionloghelper","title":"var actionLogHelper: PostSubmitActionLogHelper","type":"property"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/needsresetbutton","title":"var needsResetButton: Bool","type":"property"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/shoulddraft","title":"var shouldDraft: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/dismiss(animated:completion:)","title":"func dismiss(animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/formcontroller(_:didgetlocalvalidationerrors:)","title":"func formController(AbstractFormViewController, didGetLocalValidationErrors: [BaseRow : [ValidationError]]?)","type":"method"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/handlesubmitformresponse(result:currentpage:currentdata:previousdata:refreshonerror:)","title":"func handleSubmitFormResponse(result: FormResultValue, currentPage: Int, currentData: [String : Any], previousData: [String : Any], refreshOnError: () -> Void)","type":"method"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/valuehasbeenchanged(_:for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontroller\/willmove(toparent:)","title":"func willMove(toParent: UIViewController?)","type":"method"}],"path":"\/documentation\/divar\/marketplacesubmitviewcontroller","title":"MarketplaceSubmitViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller\/init(container:purchasetype:newschema:newdata:previousdata:categorytype:)","title":"init(container: MarketplaceSubscriptionViewControllerDIContainer, purchaseType: Int, newSchema: Schema?, newData: [String : Any], previousData: [String : Any], categoryType: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller\/nextbuttontitle","title":"var nextButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller\/purchasetype","title":"let purchaseType: Int","type":"property"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller\/logpayment(orderid:)","title":"func logPayment(orderID: String?)","type":"method"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller\/valuehasbeenchanged(_:for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"}],"path":"\/documentation\/divar\/marketplacesubscriptionviewcontroller","title":"MarketplaceSubscriptionViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/messagecell\/cdnurl","title":"var cdnURL: String?","type":"property"},{"path":"\/documentation\/divar\/messagecell\/chatdata","title":"var chatData: ChatFillableCellStruct?","type":"property"},{"path":"\/documentation\/divar\/messagecell\/menuoptions","title":"var menuOptions: [MessageCellOptions]","type":"property"},{"path":"\/documentation\/divar\/messagecell\/message","title":"var message: ChatConversationMessageTable?","type":"property"},{"path":"\/documentation\/divar\/messagecell\/parent","title":"var parent: MessagingViewController?","type":"property"},{"path":"\/documentation\/divar\/messagecell\/reuseidentifier","title":"var reuseIdentifier: String?","type":"property"},{"path":"\/documentation\/divar\/messagecell\/row","title":"var row: Row","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecell\/fillmessageview()","title":"func fillMessageView()","type":"method"},{"path":"\/documentation\/divar\/messagecell\/layoutrowifneeded()","title":"func layoutRowIfNeeded()","type":"method"},{"path":"\/documentation\/divar\/messagecell\/messageviewdidtapped()","title":"func messageViewDidTapped()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecell\/messagerowdidlongpressrowwithdata(_:)","title":"func messageRowDidLongPressRowWithData(BaseMessageRow)","type":"method"},{"path":"\/documentation\/divar\/messagecell\/messagerowdidselectreplybardata(_:)","title":"func messageRowDidSelectReplyBarData(BaseMessageRow)","type":"method"},{"path":"\/documentation\/divar\/messagecell\/messagerowdidselectrowwithdata(_:)","title":"func messageRowDidSelectRowWithData(BaseMessageRow)","type":"method"}],"path":"\/documentation\/divar\/messagecell\/basemessagerowdelegate-implementations","title":"BaseMessageRowDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecell\/setmessagestate(_:)","title":"func setMessageState((ChatConversationMessageTable) -> Bool)","type":"method"}],"path":"\/documentation\/divar\/messagecell\/messagecellstateprotocol-implementations","title":"MessageCellStateProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecell\/contentid","title":"var contentID: String","type":"property"},{"path":"\/documentation\/divar\/messagecell\/isseen","title":"var isSeen: Bool","type":"property"}],"path":"\/documentation\/divar\/messagecell\/seenable-implementations","title":"Seenable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagecell","title":"MessageCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/init(container:conversation:)","title":"init(container: MessagePreviewBarViewControllerDIContainer, conversation: ChatConversationTable?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/closebutton","title":"var closeButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/conversation","title":"var conversation: ChatConversationTable?","type":"property"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/delegate","title":"var delegate: MessagePreviewBarViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/message","title":"var message: ChatConversationMessageTable?","type":"property"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/messagelabel","title":"var messageLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/namelabel","title":"var nameLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/type","title":"var type: MessagePreviewType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/closebuttonaction(_:)","title":"func closeButtonAction(UIButton)","type":"method"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/setmessage(_:type:)","title":"func setMessage(ChatConversationMessageTable?, type: MessagePreviewType)","type":"method"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/messagepreviewtype\/edit","title":"case edit","type":"case"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/messagepreviewtype\/reply","title":"case reply","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/messagepreviewtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/messagepreviewtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/messagepreviewtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagepreviewbarviewcontroller\/messagepreviewtype","title":"MessagePreviewBarViewController.MessagePreviewType","type":"enum"}],"path":"\/documentation\/divar\/messagepreviewbarviewcontroller","title":"MessagePreviewBarViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagetoast\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/divar\/messagetoast\/messagelabel","title":"var messageLabel: UILabel!","type":"property"}],"path":"\/documentation\/divar\/messagetoast","title":"MessageToast","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/messagingviewcontroller\/init(container:conversationid:configuration:)","title":"init(container: MessagingViewControllerDIContainer, conversationID: String, configuration: IntroConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/announcements","title":"var announcements: [ChatAnnouncementTable]","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/announcementsfilter","title":"var announcementsFilter: QueryFilter","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/audioplayer","title":"var audioPlayer: AudioPlayManager","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/changedcontentoffsety","title":"var changedContentOffsetY: CGFloat","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/configuration","title":"let configuration: IntroConfig","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/container","title":"let container: MessagingViewControllerDIContainer","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/conversation","title":"var conversation: ChatConversationTable?","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/conversationmessages","title":"var conversationMessages: [ChatConversationMessageTable]","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/datasource","title":"var dataSource: UITableViewDiffableDataSource<SectionType, CellType>","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/delegate","title":"var delegate: MessagingViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/filepreviewinfo","title":"var filePreviewInfo: FileInfo?","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/firstunreadmessage","title":"var firstUnreadMessage: ChatConversationMessageTable?","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/highlightingindexpath","title":"var highlightingIndexPath: IndexPath?","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/isallowedtorequestmoremessages","title":"var isAllowedToRequestMoreMessages: Bool","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/isconversationloaded","title":"var isConversationLoaded: Bool","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/isinpreviewmode","title":"var isInPreviewMode: Bool","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/isshowingpostchi","title":"var isShowingPostchi: Bool","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/loadmoredataworkitem","title":"var loadMoreDataWorkItem: DispatchWorkItem?","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/loadtimelastseentimeuuid","title":"var loadTimeLastSeenTimeUUID: String?","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/messageshouldgoto","title":"var messageShouldGoTo: ChatConversationMessageTable?","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/messagesfilter","title":"var messagesFilter: QueryFilter","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/parentveiwcontroller","title":"var parentVeiwController: MessageHandlingType?","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/playerstatus","title":"var playerStatus: AudioPlayerStatus","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/post","title":"var post: PostViewStructure?","type":"property"},{"path":"\/documentation\/divar\/messagingviewcontroller\/tableview","title":"let tableView: UITableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/cell(item:)","title":"func cell(item: CellType) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/cleardata()","title":"func clearData()","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/getlastreadmessage()","title":"func getLastReadMessage() -> ChatConversationMessageTable?","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/getmessagescompleted(_:)","title":"func getMessagesCompleted(Notification)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/gotoreplymessageifneeded()","title":"func goToReplyMessageIfNeeded()","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/gottomessage(id:)","title":"func gotToMessage(id: String)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/hidekeyboardoutsidetap()","title":"func hideKeyboardOutsideTap()","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/highlightcell(indexpath:)","title":"func highlightCell(indexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/loadmoremessagesifneeded(_:onconversationisloaded:)","title":"func loadMoreMessagesIfNeeded(RequestCompletionHandlerType<ChatGetMessageResponseStructure>, onConversationIsLoaded: CompletionHandlerType)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/previewfile(url:showsavebutton:title:)","title":"func previewFile(url: URL, showSaveButton: Bool, title: String?)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/registercells()","title":"func registerCells()","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/reloadmessagerow(for:animated:)","title":"func reloadMessageRow(for: ChatConversationMessageTable, animated: Bool)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/scrolltoendifneeded(extraheight:)","title":"func scrollToEndIfNeeded(extraHeight: CGFloat?)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/setneedsrefreshdata()","title":"func setNeedsRefreshData()","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/viewdiddisappear(_:)","title":"func viewDidDisappear(Bool)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/celltype\/content(_:)","title":"case content(Content)","type":"case"},{"path":"\/documentation\/divar\/messagingviewcontroller\/celltype\/privacy","title":"case privacy","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/celltype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/celltype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/celltype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagingviewcontroller\/celltype","title":"MessagingViewController.CellType","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/_(_:_:)-7bm5a","title":"static func < (MessagingViewController.Content, MessagingViewController.Content) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/announcement(_:)","title":"case announcement(ChatAnnouncementTable)","type":"case"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/message(_:)","title":"case message(ChatConversationMessageTable)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/timestamp","title":"var timestamp: TimeInterval","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/'...(_:)-367qn","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/'...(_:)-529qa","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/_(_:_:)-241ia","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/_=(_:_:)-1cmz8","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/_=(_:_:)-6zkaq","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/divar\/messagingviewcontroller\/content\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/content\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/content\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagingviewcontroller\/content","title":"MessagingViewController.Content","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/sectiontype\/messages","title":"case messages","type":"case"},{"path":"\/documentation\/divar\/messagingviewcontroller\/sectiontype\/privacy","title":"case privacy","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/sectiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/sectiontype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/sectiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagingviewcontroller\/sectiontype","title":"MessagingViewController.SectionType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/calllogcelldidrequesttomakecall(_:)","title":"func callLogCellDidRequestToMakeCall(CallLogMessageCell)","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/calllogcelldelegate-implementations","title":"CallLogCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/cachedrequest(forkey:)","title":"func cachedRequest(forKey: String) -> Request?","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/chatcacherequesthelper-implementations","title":"ChatCacheRequestHelper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/filemessagecell(_:didrequestcanceldownloadforfile:)","title":"func fileMessageCell(FileMessageCell, didRequestCancelDownloadForFile: ChatFileMessageStructure)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/filemessagecell(_:didrequestcanceluploadformessage:)","title":"func fileMessageCell(FileMessageCell, didRequestCancelUploadForMessage: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/filemessagecell(_:didrequestdownloadfileforfile:)","title":"func fileMessageCell(FileMessageCell, didRequestDownloadFileForFile: ChatFileMessageStructure)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/filemessagecell(_:didrequestopenfile:)","title":"func fileMessageCell(FileMessageCell, didRequestOpenFile: ChatFileMessageStructure)","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/filemessagecelldelegate-implementations","title":"FileMessageCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/photomessagecell(_:didrequesttoshowpreviewformessage:)","title":"func photoMessageCell(PhotoMessageCell, didRequestToShowPreviewForMessage: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/photomessagecell(_:triessendingimageformessage:)","title":"func photoMessageCell(PhotoMessageCell, triesSendingImageForMessage: ChatConversationMessageTable)","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/photomessagecelldelegate-implementations","title":"PhotoMessageCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/audiodownloaded(withfilename:)","title":"func audioDownloaded(withFileName: String?)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/audioplaystatus(status:)","title":"func audioPlayStatus(status: AudioPlayerStatus)","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/playaudiodelegate-implementations","title":"PlayAudioDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/privacycell(_:didtaponurl:)","title":"func privacyCell(PrivacyCell, didTapOnUrl: URL)","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/privacycelldelegate-implementations","title":"PrivacyCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/numberofpreviewitems(in:)","title":"func numberOfPreviewItems(in: QLPreviewController) -> Int","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/previewcontroller(_:previewitemat:)","title":"func previewController(QLPreviewController, previewItemAt: Int) -> QLPreviewItem","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/qlpreviewcontrollerdatasource-implementations","title":"QLPreviewControllerDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/previewcontrollerdiddismiss(_:)","title":"func previewControllerDidDismiss(QLPreviewController)","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/qlpreviewcontrollerdelegate-implementations","title":"QLPreviewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/refreshdata()","title":"func refreshData()","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/refreshableprotocol-implementations","title":"RefreshableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/textmessagecell(_:didtaponcensoredmessage:)","title":"func textMessageCell(TextMessageCell, didTapOnCensoredMessage: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/textmessagecell(_:didtaponurl:formessage:)","title":"func textMessageCell(TextMessageCell, didTapOnUrl: URL, forMessage: ChatConversationMessageTable)","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/textmessagecelldelegate-implementations","title":"TextMessageCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/scrollviewdidendscrollinganimation(_:)","title":"func scrollViewDidEndScrollingAnimation(UIScrollView)","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/tableview(_:willdisplay:forrowat:)","title":"func tableView(UITableView, willDisplay: UITableViewCell, forRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/videomessagecell(_:didrequestcanceldownloadforvideo:)","title":"func videoMessageCell(VideoMessageCell, didRequestCancelDownloadForVideo: ChatMediaDataStructure)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/videomessagecell(_:didrequestcanceluploadformessage:)","title":"func videoMessageCell(VideoMessageCell, didRequestCancelUploadForMessage: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/videomessagecell(_:didrequestdownloadvideoforvideo:)","title":"func videoMessageCell(VideoMessageCell, didRequestDownloadVideoForVideo: ChatMediaDataStructure)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/videomessagecell(_:didrequestopenvideo:)","title":"func videoMessageCell(VideoMessageCell, didRequestOpenVideo: ChatMediaDataStructure)","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/videomessagecelldelegate-implementations","title":"VideoMessageCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontroller\/celldidtapedvoicebutton(_:isplayingvoice:)","title":"func cellDidTapedVoiceButton(VoiceMessageCell, isPlayingVoice: Bool)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontroller\/cellretriestosendvoice(_:message:)","title":"func cellRetriesToSendVoice(VoiceMessageCell, message: ChatConversationMessageTable)","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontroller\/voicemessagecellprotocol-implementations","title":"VoiceMessageCellProtocol Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagingviewcontroller","title":"MessagingViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/metrickitconfiguration\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/metrickitconfiguration\/metricmanager","title":"var metricManager: MXMetricManager?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/metrickitconfiguration\/config(data:)","title":"func config(data: IntroConfig?)","type":"method"},{"path":"\/documentation\/divar\/metrickitconfiguration\/didreceive(_:)-86zt6","title":"func didReceive([MXMetricPayload])","type":"method"},{"path":"\/documentation\/divar\/metrickitconfiguration\/didreceive(_:)-z3jm","title":"func didReceive([MXDiagnosticPayload])","type":"method"}],"path":"\/documentation\/divar\/metrickitconfiguration","title":"MetricKitConfiguration","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/metrickitperformance\/eventchildfinished(eventcategory:eventname:reason:)","title":"func eventChildFinished(eventCategory: String, eventName: String, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/metrickitperformance\/eventchildstarted(eventcategory:eventname:description:)","title":"func eventChildStarted(eventCategory: String, eventName: String, description: String?)","type":"method"},{"path":"\/documentation\/divar\/metrickitperformance\/eventfinished(eventcategory:eventpayload:reason:)","title":"func eventFinished(eventCategory: String, eventPayload: [String : Any]?, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/metrickitperformance\/eventstarted(eventcategory:eventname:eventpayload:customdata:)","title":"func eventStarted(eventCategory: String, eventName: String, eventPayload: [String : Any]?, customData: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/metrickitperformance\/logevent(data:)","title":"func logEvent(data: Any)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/metrickitperformance\/shared","title":"static let shared: MetricKitPerformance","type":"property"}],"path":"\/documentation\/divar\/metrickitperformance","title":"MetricKitPerformance","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/init(marketplaceservice:dataprovider:)","title":"init(marketplaceService: MarketplaceServiceProtocol, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/marketplaceservice","title":"let marketplaceService: MarketplaceServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/stackholder","title":"var stackHolder: UIStackView?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/addelement(with:widget:)","title":"func addElement(with: String, widget: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/appendtopaginated(_:)","title":"func appendToPaginated([Widgets_Widget])","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/ispinned(with:)","title":"func isPinned(with: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/reloadneededcells(with:)","title":"func reloadNeededCells(with: String) -> [IndexPath]","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/removeelement(with:widget:)","title":"func removeElement(with: String, widget: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/sendchangestateactionlog(state:widget:)","title":"func sendChangeStateActionLog(state: Widgets_PriceRowData.SelectedState, widget: Widgets_Widget) throws","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/viewdiddisappear(_:)","title":"func viewDidDisappear(Bool)","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartinfinitescroll:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartInfiniteScroll: AdvancedCollectionView?)","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartpulltorefresh:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/widgetbasedcollectionviewcontroller(_:internalstatechangewith:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, internalStateChangeWith: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/widgetlist()","title":"func widgetList() -> [Widgets_Widget]","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/pinedslugs","title":"static var pinedSlugs: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/issearching","title":"var isSearching: Bool","type":"property"}],"path":"\/documentation\/divar\/mobilezeropriceviewcontroller\/widgetbasedcollectionviewsearchdelegate-implementations","title":"WidgetBasedCollectionViewSearchDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mobilezeropriceviewcontroller","title":"MobileZeroPriceViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/bottombar","title":"var bottomBar: SplitButtonBarViewController","type":"property"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/bottombartext","title":"var bottomBarText: String","type":"property"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/conversations","title":"var conversations: [ChatConversationTable]","type":"property"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/delegate","title":"var delegate: MultiConversationDeleteDelegate?","type":"property"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/ismaximumcountreached","title":"var isMaximumCountReached: Bool","type":"property"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/maxcount","title":"var maxCount: Int","type":"property"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/selectedconversations","title":"var selectedConversations: [ChatConversationTable]","type":"property"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/tableview","title":"var tableView: UITableView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/splitbuttonbarviewcontrollerdelegate-implementations","title":"SplitButtonBarViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/tableview(_:diddeselectrowat:)","title":"func tableView(UITableView, didDeselectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"}],"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/multiconversationdeleteviewcontroller","title":"MultiConversationDeleteViewController","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/multihierarchynode\/==(_:_:)","title":"static func == (MultiHierarchyNode, MultiHierarchyNode) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/multihierarchynode\/init(type:id:name:asset:)","title":"init(type: MultiHierarchyNodeType, id: String, name: String, asset: MultiURLImageAsset?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/multihierarchynode\/asset","title":"let asset: MultiURLImageAsset?","type":"property"},{"path":"\/documentation\/divar\/multihierarchynode\/children","title":"var children: [MultiHierarchyNode]?","type":"property"},{"path":"\/documentation\/divar\/multihierarchynode\/countchildren","title":"var countChildren: Int","type":"property"},{"path":"\/documentation\/divar\/multihierarchynode\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/divar\/multihierarchynode\/isfolder","title":"var isFolder: Bool","type":"property"},{"path":"\/documentation\/divar\/multihierarchynode\/isselectable","title":"var isSelectable: Bool","type":"property"},{"path":"\/documentation\/divar\/multihierarchynode\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/divar\/multihierarchynode\/istitle","title":"var isTitle: Bool","type":"property"},{"path":"\/documentation\/divar\/multihierarchynode\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/divar\/multihierarchynode\/parent","title":"var parent: MultiHierarchyNode?","type":"property"},{"path":"\/documentation\/divar\/multihierarchynode\/parentfolder","title":"var parentFolder: MultiHierarchyNode?","type":"property"},{"path":"\/documentation\/divar\/multihierarchynode\/type","title":"var type: MultiHierarchyNodeType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/multihierarchynode\/child(add:changeparent:)","title":"func child(add: MultiHierarchyNode, changeParent: Bool) -> Bool","type":"method"},{"path":"\/documentation\/divar\/multihierarchynode\/child(add:parent:)","title":"func child(add: MultiHierarchyNode, parent: MultiHierarchyNode) -> Bool","type":"method"},{"path":"\/documentation\/divar\/multihierarchynode\/child(at:)","title":"func child(at: Int) -> MultiHierarchyNode?","type":"method"},{"path":"\/documentation\/divar\/multihierarchynode\/findnode(with:root:where:)","title":"func findNode(with: String, root: MultiHierarchyNode, where: ((MultiHierarchyNode) -> Bool)?) -> MultiHierarchyNode?","type":"method"},{"path":"\/documentation\/divar\/multihierarchynode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/divar\/multihierarchynode\/installparent()","title":"func installParent() -> Bool","type":"method"},{"path":"\/documentation\/divar\/multihierarchynode\/normalize()","title":"func normalize()","type":"method"},{"path":"\/documentation\/divar\/multihierarchynode\/setselected(id:selected:)","title":"func setSelected(id: String, selected: Bool) -> Bool","type":"method"},{"path":"\/documentation\/divar\/multihierarchynode\/similarnods(with:)","title":"func similarNods(with: MultiHierarchyNode) -> [MultiHierarchyNode]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/multihierarchynode\/add(queue:to:)","title":"static func add(queue: inout [UIOptionsDataStruct], to: inout MultiHierarchyNode)","type":"method"},{"path":"\/documentation\/divar\/multihierarchynode\/getgenerictree(property:)","title":"static func getGenericTree(property: Schema) -> MultiHierarchyNode","type":"method"},{"path":"\/documentation\/divar\/multihierarchynode\/getsuggestionlist(root:)","title":"static func getSuggestionList(root: MultiHierarchyNode) -> [MultiHierarchyNode]","type":"method"},{"path":"\/documentation\/divar\/multihierarchynode\/gettree(property:)","title":"static func getTree(property: Schema) -> MultiHierarchyNode","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/multihierarchynode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/multihierarchynode\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/multihierarchynode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/multihierarchynode","title":"MultiHierarchyNode","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/initialbookmarkandnotesviewcontroller(with:)","title":"func initialBookmarkAndNotesViewController(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/initialmypostsviewcontroller(with:)","title":"func initialMyPostsViewController(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/initialrecentpostsviewcontroller(with:)","title":"func initialRecentPostsViewController(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/initialviewcontroller()","title":"func initialViewController() -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/presentbookmark()","title":"func presentBookmark() -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/presentmyposts()","title":"func presentMyPosts() -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/presentnotes()","title":"func presentNotes() -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/presentrecentposts()","title":"func presentRecentPosts() -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/bookmarksviewcontroller(didselectpostwith:managetoken:)","title":"func bookmarksViewController(didSelectPostWith: String, manageToken: String?)","type":"method"}],"path":"\/documentation\/divar\/mydivarholderflowcontroller\/bookmarksviewcontrollerdelegate-implementations","title":"BookmarksViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/logoutuser(_:)","title":"func logoutUser(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/openbookmarkandnotes(_:)","title":"func openBookmarkAndNotes(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/openloginuser(_:)","title":"func openLoginUser(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/openmyposts(_:)","title":"func openMyPosts(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/openrecentposts(_:)","title":"func openRecentPosts(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/mydivarholderflowcontroller\/mydivaractionhandler-implementations","title":"MyDivarActionHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/openaboutdivar(_:)","title":"func openAboutDivar(MyDivarHolderViewController)","type":"method"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/opensupportandterms(_:)","title":"func openSupportAndTerms(MyDivarHolderViewController)","type":"method"}],"path":"\/documentation\/divar\/mydivarholderflowcontroller\/mydivarholderviewcontrollerdelegate-implementations","title":"MyDivarHolderViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/mypostsviewcontroller(didselectpostwith:managetoken:)","title":"func myPostsViewController(didSelectPostWith: String, manageToken: String?)","type":"method"}],"path":"\/documentation\/divar\/mydivarholderflowcontroller\/mypostsviewcontrollerdelegate-implementations","title":"MyPostsViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/notesviewcontroller(didselectpostwith:managetoken:)","title":"func notesViewController(didSelectPostWith: String, manageToken: String?)","type":"method"}],"path":"\/documentation\/divar\/mydivarholderflowcontroller\/notesviewcontrollerdelegate-implementations","title":"NotesViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderflowcontroller\/recentvisitsviewcontroller(didselectpostwith:managetoken:)","title":"func recentVisitsViewController(didSelectPostWith: String, manageToken: String?)","type":"method"}],"path":"\/documentation\/divar\/mydivarholderflowcontroller\/recentvisitsviewcontrollerdelegate-implementations","title":"RecentVisitsViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mydivarholderflowcontroller","title":"MyDivarHolderFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/init(container:introconfig:)","title":"init(container: MyDivarHolderViewControllerDIContainer, introConfig: IntroConfig?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/caragentsview","title":"var carAgentsView: AdvancedWidgetViewController","type":"property"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/carbusinessview","title":"var carBusinessView: AdvancedWidgetViewController","type":"property"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/delegate","title":"var delegate: MyDivarHolderViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/jobspanelview","title":"var jobsPanelView: WidgetViewController<Widgets_Page>","type":"property"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/marketplaceview","title":"var marketplaceView: WidgetViewController<MarketPlace_MarketplacePageResponse>","type":"property"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/personalview","title":"var personalView: WidgetViewController<Widgets_GeneralPageResponse>","type":"property"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/realestateview","title":"var realEstateView: WidgetViewController<RealEstate_MyAgencyResponse>","type":"property"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/successfullogincompletionhander","title":"var successfulLoginCompletionHander: (() -> Void)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/refreshdata()","title":"func refreshData()","type":"method"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/resetviewcontrollers()","title":"func resetViewControllers()","type":"method"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/segmentselected(_:)","title":"func segmentSelected(UISegmentedControl)","type":"method"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/openaboutdivar()","title":"func openAboutDivar()","type":"method"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/opensupportandterms()","title":"func openSupportAndTerms()","type":"method"}],"path":"\/documentation\/divar\/mydivarholderviewcontroller\/personalaccountblockingviewdelegate-implementations","title":"PersonalAccountBlockingViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/safariviewcontrollerdidfinish(_:)","title":"func safariViewControllerDidFinish(SFSafariViewController)","type":"method"}],"path":"\/documentation\/divar\/mydivarholderviewcontroller\/sfsafariviewcontrollerdelegate-implementations","title":"SFSafariViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/userregisteredsuccessfully(in:with:)","title":"func userRegisteredSuccessfully(in: UserRegisterFlowController, with: String)","type":"method"}],"path":"\/documentation\/divar\/mydivarholderviewcontroller\/userregisterflowcontrollerdelegate-implementations","title":"UserRegisterFlowControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/perform(action:)","title":"func perform(action: Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/mydivarholderviewcontroller\/perform(custom:)","title":"func perform(custom: CustomAction)","type":"method"}],"path":"\/documentation\/divar\/mydivarholderviewcontroller\/widgetbasedactiondelegate-implementations","title":"WidgetBasedActionDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mydivarholderviewcontroller","title":"MyDivarHolderViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderviewcontrollerdicontainerimp\/init(widgetbasedservice:)","title":"init(widgetBasedService: WidgetBasedServiceProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderviewcontrollerdicontainerimp\/widgetbasedservice","title":"var widgetBasedService: WidgetBasedServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/mydivarholderviewcontrollerdicontainerimp","title":"MyDivarHolderViewControllerDIContainerImp","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mypostsviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/mypostsviewcontroller\/init(container:)","title":"init(container: MyPostsViewControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mypostsviewcontroller\/delegate","title":"var delegate: MyPostsViewControllerDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mypostsviewcontroller\/logopeningpost(index:token:)","title":"func logOpeningPost(index: Int, token: String)","type":"method"},{"path":"\/documentation\/divar\/mypostsviewcontroller\/refreshdata()","title":"func refreshData()","type":"method"},{"path":"\/documentation\/divar\/mypostsviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/mypostsviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mypostsviewcontroller\/sonnatcollectionview(_:didselectitemat:)","title":"func sonnatCollectionView(CollectionCellController, didSelectItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/mypostsviewcontroller\/sonnatcollectionviewdelegate-implementations","title":"SonnatCollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mypostsviewcontroller\/switchrow(didchangevalue:)","title":"func switchRow(didChangeValue: Bool)","type":"method"}],"path":"\/documentation\/divar\/mypostsviewcontroller\/switchrowdelegate-implementations","title":"SwitchRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mypostsviewcontroller","title":"MyPostsViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/nationalidverificationflowcontroller\/init(container:)","title":"init(container: BaseFlowDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/nationalidverificationflowcontroller\/delegate","title":"var delegate: NationalIdVerificationFlowControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/nationalidverificationflowcontroller\/handler","title":"var handler: NumberInputProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/nationalidverificationflowcontroller\/dismiss(animated:completion:)","title":"func dismiss(animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/nationalidverificationflowcontroller\/initial(with:)","title":"func initial(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/nationalidverificationflowcontroller\/initialviewcontroller()","title":"func initialViewController() -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/nationalidverificationflowcontroller\/numberenteredsuccessfully(_:with:needsverify:)","title":"func numberEnteredSuccessfully(NumberInputViewController, with: String, needsVerify: Bool)","type":"method"}],"path":"\/documentation\/divar\/nationalidverificationflowcontroller\/numberinputviewcontrollerdelegate-implementations","title":"NumberInputViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/nationalidverificationflowcontroller","title":"NationalIdVerificationFlowController","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/navigationcontroller\/stepdata\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/navigationcontroller\/stepdata\/init(flow:viewcontroller:)","title":"init(flow: BaseFlowController?, viewController: UIViewController?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/navigationcontroller\/stepdata\/flow","title":"var flow: BaseFlowController?","type":"property"},{"path":"\/documentation\/divar\/navigationcontroller\/stepdata\/viewcontroller","title":"var viewController: UIViewController?","type":"property"}],"path":"\/documentation\/divar\/navigationcontroller\/stepdata","title":"NavigationController.StepData","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/navigationcontroller\/init(rootviewcontroller:flowcontroller:)","title":"init(rootViewController: UIViewController, flowController: BaseFlowController?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/navigationcontroller\/isinformflow","title":"var isInFormFlow: Bool","type":"property"},{"path":"\/documentation\/divar\/navigationcontroller\/lastflow","title":"var lastFlow: BaseFlowController?","type":"property"},{"path":"\/documentation\/divar\/navigationcontroller\/steps","title":"var steps: [Step]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/navigationcontroller\/dropflow(_:)","title":"func dropFlow(Int) -> [UIViewController]","type":"method"},{"path":"\/documentation\/divar\/navigationcontroller\/poplast(_:animated:completion:)","title":"func popLast(Int, animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/navigationcontroller\/poptorootviewcontroller(animated:completion:)","title":"func popToRootViewController(animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/navigationcontroller\/pushstep(_:animated:)","title":"func pushStep(Step, animated: Bool)","type":"method"},{"path":"\/documentation\/divar\/navigationcontroller\/replacetopviewcontroller(with:animated:)-1pwhs","title":"func replaceTopViewController(with: UIViewController, animated: Bool)","type":"method"},{"path":"\/documentation\/divar\/navigationcontroller\/replacetopviewcontroller(with:animated:)-8n0jo","title":"func replaceTopViewController(with: Step, animated: Bool)","type":"method"},{"path":"\/documentation\/divar\/navigationcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/navigationcontroller\/step\/continueflow(_:)","title":"case continueFlow(StepData)","type":"case"},{"path":"\/documentation\/divar\/navigationcontroller\/step\/newflow(_:)","title":"case newFlow(StepData)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/navigationcontroller\/step\/flow","title":"var flow: BaseFlowController?","type":"property"},{"path":"\/documentation\/divar\/navigationcontroller\/step\/startsnewflow","title":"var startsNewFlow: Bool","type":"property"},{"path":"\/documentation\/divar\/navigationcontroller\/step\/viewcontroller","title":"var viewController: UIViewController?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/navigationcontroller\/step\/continueflow(flow:viewcontroller:)","title":"static func continueFlow(flow: BaseFlowController?, viewController: UIViewController?) -> NavigationController.Step","type":"method"},{"path":"\/documentation\/divar\/navigationcontroller\/step\/newflow(flow:viewcontroller:)","title":"static func newFlow(flow: BaseFlowController?, viewController: UIViewController?) -> NavigationController.Step","type":"method"}],"path":"\/documentation\/divar\/navigationcontroller\/step","title":"NavigationController.Step","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/navigationcontroller\/navigationcontroller(_:didshow:animated:)","title":"func navigationController(UINavigationController, didShow: UIViewController, animated: Bool)","type":"method"}],"path":"\/documentation\/divar\/navigationcontroller\/uinavigationcontrollerdelegate-implementations","title":"UINavigationControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/navigationcontroller","title":"NavigationController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearscongifuration\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearscongifuration\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearscongifuration\/fire()","title":"func fire()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearscongifuration\/defaultignorelist","title":"static let DefaultIgnoreList: [String]","type":"property"},{"path":"\/documentation\/divar\/netshearscongifuration\/userdefaultskey","title":"static let UserDefaultsKey: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearscongifuration\/filterbyurl(filteritems:request:)","title":"static func filterByUrl(filterItems: [String], request: NetShearsRequestModel) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearscongifuration\/netshears(exportrequestbodyfor:)","title":"func netShears(exportRequestBodyFor: NetShearsRequestModel) -> BodyExportType","type":"method"},{"path":"\/documentation\/divar\/netshearscongifuration\/netshears(exportresponsebodyfor:)","title":"func netShears(exportResponseBodyFor: NetShearsRequestModel) -> BodyExportType","type":"method"}],"path":"\/documentation\/divar\/netshearscongifuration\/bodyexporterdelegate-implementations","title":"BodyExporterDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/netshearscongifuration","title":"NetShearsCongifuration","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearsignorelistconfiguration\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearsignorelistconfiguration\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearsignorelistconfiguration\/fire()","title":"func fire()","type":"method"}],"path":"\/documentation\/divar\/netshearsignorelistconfiguration","title":"NetShearsIgnoreListConfiguration","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/tableview(_:caneditrowat:)","title":"func tableView(UITableView, canEditRowAt: IndexPath) -> Bool","type":"method"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/tableview(_:commit:forrowat:)","title":"func tableView(UITableView, commit: UITableViewCell.EditingStyle, forRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/tableview(_:editingstyleforrowat:)","title":"func tableView(UITableView, editingStyleForRowAt: IndexPath) -> UITableViewCell.EditingStyle","type":"method"}],"path":"\/documentation\/divar\/netshearsignorelistviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/netshearsignorelistviewcontroller","title":"NetShearsIgnoreListViewController","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/networklayer\/divarparameterlessrequestconvertible\/init(url:method:headers:)","title":"init(url: URLConvertible, method: HTTPMethod, headers: HTTPHeaders?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/networklayer\/divarparameterlessrequestconvertible\/headers","title":"let headers: HTTPHeaders?","type":"property"},{"path":"\/documentation\/divar\/networklayer\/divarparameterlessrequestconvertible\/method","title":"let method: HTTPMethod","type":"property"},{"path":"\/documentation\/divar\/networklayer\/divarparameterlessrequestconvertible\/url","title":"let url: URLConvertible","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/networklayer\/divarparameterlessrequestconvertible\/asurlrequest()","title":"func asURLRequest() throws -> URLRequest","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/networklayer\/divarparameterlessrequestconvertible\/urlrequest","title":"var urlRequest: URLRequest?","type":"property"}],"path":"\/documentation\/divar\/networklayer\/divarparameterlessrequestconvertible\/urlrequestconvertible-implementations","title":"URLRequestConvertible Implementations","type":"symbol"}],"path":"\/documentation\/divar\/networklayer\/divarparameterlessrequestconvertible","title":"NetworkLayer.DivarParameterlessRequestConvertible","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/networklayer\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/networklayer\/downloadfile(downloadurl:filepath:progress:)","title":"func downloadFile(downloadURL: String, filePath: URL, progress: ((Progress) -> Void)) async -> ResponseModel<Data, Error>","type":"method"},{"path":"\/documentation\/divar\/networklayer\/request(model:)","title":"func request(model: RequestModel) async -> ResponseModel<Data, Error>","type":"method"},{"path":"\/documentation\/divar\/networklayer\/upload(model:)","title":"func upload(model: DataRequestModel) async -> ResponseModel<Data, Error>","type":"method"},{"path":"\/documentation\/divar\/networklayer\/uploadfile(content:to:progress:)","title":"func uploadFile(content: [UploadModel], to: String, progress: ((Progress) -> Void)) async -> ResponseModel<Data, Error>","type":"method"},{"path":"\/documentation\/divar\/networklayer\/uploadvideo(model:completion:)","title":"func uploadVideo(model: VideoUploadModel, completion: (ResponseModel<Data, Error>) -> Void) -> Request?","type":"method"}],"path":"\/documentation\/divar\/networklayer","title":"NetworkLayer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/networkmonitoringconfiguration\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/networkmonitoringconfiguration\/ignoredurls","title":"var ignoredURLs: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/networkmonitoringconfiguration\/config(data:)","title":"func config(data: IntroConfig?)","type":"method"},{"path":"\/documentation\/divar\/networkmonitoringconfiguration\/isvalid(_:)","title":"func isValid(String) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/networkmonitoringconfiguration\/newrequestarrived(_:)","title":"func newRequestArrived(NetShearsRequestModel)","type":"method"}],"path":"\/documentation\/divar\/networkmonitoringconfiguration\/requestbroadcastdelegate-implementations","title":"RequestBroadcastDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/networkmonitoringconfiguration","title":"NetworkMonitoringConfiguration","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/init(container:)","title":"init(container: NickNameViewControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/actionbutton","title":"var actionButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/buttonenabled","title":"var buttonEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/completionblock","title":"var completionBlock: (() -> Void)?","type":"property"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/mainlabel","title":"var mainLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/nicknametextfield","title":"var nickNameTextField: UITextField!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/enterchat()","title":"func enterChat()","type":"method"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknameviewcontroller\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"func textField(UITextField, shouldChangeCharactersIn: NSRange, replacementString: String) -> Bool","type":"method"}],"path":"\/documentation\/divar\/nicknameviewcontroller\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/nicknameviewcontroller","title":"NickNameViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/nopreviewitem\/previewitemtitle","title":"var previewItemTitle: String?","type":"property"},{"path":"\/documentation\/divar\/nopreviewitem\/previewitemurl","title":"var previewItemURL: URL?","type":"property"}],"path":"\/documentation\/divar\/nopreviewitem","title":"NoPreviewItem","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/noterowcollectionviewcell\/descriptionview","title":"var descriptionView: DescriptionView!","type":"property"},{"path":"\/documentation\/divar\/noterowcollectionviewcell\/selectorview","title":"var selectorView: SelectorRow!","type":"property"},{"path":"\/documentation\/divar\/noterowcollectionviewcell\/titleview","title":"var titleView: TitleView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noterowcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/noterowcollectionviewcell\/fill(_:)","title":"func fill(Widgets_NoteData)","type":"method"},{"path":"\/documentation\/divar\/noterowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/noterowcollectionviewcell","title":"NoteRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/noterowtableviewcell\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/noterowtableviewcell\/delegate","title":"var delegate: ConfigurableCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/noterowtableviewcell\/notelabel","title":"var noteLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noterowtableviewcell\/fill(with:indexpath:)","title":"func fill(with: NoteRowModel, indexPath: IndexPath)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/noterowtableviewcell\/datatype","title":"NoteRowTableViewCell.DataType","type":"typealias"},{"path":"\/documentation\/divar\/noterowtableviewcell\/returntype","title":"NoteRowTableViewCell.ReturnType","type":"typealias"}],"path":"\/documentation\/divar\/noterowtableviewcell","title":"NoteRowTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/noteservice\/init(servicenetworkmanager:user:dataprovider:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol, user: User, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noteservice\/clearlocalnotes()","title":"func clearLocalNotes()","type":"method"},{"path":"\/documentation\/divar\/noteservice\/clearnotes()","title":"func clearNotes() async throws","type":"method"},{"path":"\/documentation\/divar\/noteservice\/deletenote(posttoken:)","title":"func deleteNote(postToken: String)","type":"method"},{"path":"\/documentation\/divar\/noteservice\/getlocalusernotes()","title":"func getLocalUserNotes() -> [UserPostListTable]?","type":"method"},{"path":"\/documentation\/divar\/noteservice\/getnote(for:)","title":"func getNote(for: String) -> String?","type":"method"},{"path":"\/documentation\/divar\/noteservice\/getusernote()","title":"func getUserNote() async -> Result<UserPostLists, DError>","type":"method"},{"path":"\/documentation\/divar\/noteservice\/setnote(posttoken:note:)","title":"func setNote(postToken: String, note: String)","type":"method"}],"path":"\/documentation\/divar\/noteservice","title":"NoteService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/noteviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/noteviewcontroller\/init(container:posttoken:notestring:)","title":"init(container: NoteViewControllerDIContainer, postToken: String, noteString: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/noteviewcontroller\/bottombarvc","title":"var bottomBarVC: TwinButtonsViewController","type":"property"},{"path":"\/documentation\/divar\/noteviewcontroller\/bottomconstraint","title":"var bottomConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/noteviewcontroller\/delegate","title":"var delegate: NoteViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/noteviewcontroller\/maintable","title":"var mainTable: AbstractTableViewController","type":"property"},{"path":"\/documentation\/divar\/noteviewcontroller\/notestring","title":"var noteString: String?","type":"property"},{"path":"\/documentation\/divar\/noteviewcontroller\/posttoken","title":"var postToken: String","type":"property"},{"path":"\/documentation\/divar\/noteviewcontroller\/stackholder","title":"var stackHolder: UIStackView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noteviewcontroller\/accessorytoolbar()","title":"func accessoryToolbar() -> UIView?","type":"method"},{"path":"\/documentation\/divar\/noteviewcontroller\/deletenote()","title":"func deleteNote()","type":"method"},{"path":"\/documentation\/divar\/noteviewcontroller\/handlekeyboardstatus(_:)","title":"func handleKeyboardStatus(Notification)","type":"method"},{"path":"\/documentation\/divar\/noteviewcontroller\/showdeletebutton()","title":"func showDeleteButton()","type":"method"},{"path":"\/documentation\/divar\/noteviewcontroller\/togglethebuttons()","title":"func toggleTheButtons()","type":"method"},{"path":"\/documentation\/divar\/noteviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noteviewcontroller\/didinnercell(_:with:change:value:)","title":"func didInnerCell(AbstractTableViewController, with: IndexPath?, change: ConfigurableCellEnum, value: Any)","type":"method"},{"path":"\/documentation\/divar\/noteviewcontroller\/didstartinfinitescroll(_:scrollview:)","title":"func didStartInfiniteScroll(AbstractTableViewController, scrollView: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/noteviewcontroller\/didstartpulltorefresh(_:scrollview:)","title":"func didStartPullToRefresh(AbstractTableViewController, scrollView: UIScrollView?)","type":"method"}],"path":"\/documentation\/divar\/noteviewcontroller\/abstracttableviewcontrollerdelegate-implementations","title":"AbstractTableViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noteviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/noteviewcontroller\/secondarybuttonclicked(_:action:)","title":"func secondaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/noteviewcontroller\/twinbuttonsviewcontrollerdelegate-implementations","title":"TwinButtonsViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/noteviewcontroller","title":"NoteViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/init(bottombarconfig:)","title":"init(bottomBarConfig: TwinButtonsConfig)","type":"init"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/bottombar","title":"var bottomBar: TwinButtonsViewController","type":"property"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/bottombarconfig","title":"let bottomBarConfig: TwinButtonsConfig","type":"property"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/bottomstackview","title":"var bottomStackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/delegate","title":"var delegate: NoteWithBottomBarDelegate?","type":"property"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/textview","title":"var textView: UITextView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/accessorytoolbar()","title":"func accessoryToolbar() -> UIView?","type":"method"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/secondarybuttonclicked(_:action:)","title":"func secondaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/twinbuttonsviewcontrollerdelegate-implementations","title":"TwinButtonsViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/textview(_:shouldchangetextin:replacementtext:)","title":"func textView(UITextView, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/textviewdidbeginediting(_:)","title":"func textViewDidBeginEditing(UITextView)","type":"method"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/textviewdidchange(_:)","title":"func textViewDidChange(UITextView)","type":"method"},{"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/textviewdidendediting(_:)","title":"func textViewDidEndEditing(UITextView)","type":"method"}],"path":"\/documentation\/divar\/notewithbottombarviewcontroller\/uitextviewdelegate-implementations","title":"UITextViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/notewithbottombarviewcontroller","title":"NoteWithBottomBarViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/notesviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/notesviewcontroller\/init(container:)","title":"init(container: NotesViewControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/notesviewcontroller\/delegate","title":"var delegate: NotesViewControllerDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notesviewcontroller\/deletenote(posttoken:)","title":"func deleteNote(postToken: String)","type":"method"},{"path":"\/documentation\/divar\/notesviewcontroller\/handlelongpress(gesturerecognizer:)","title":"func handleLongPress(gestureRecognizer: UILongPressGestureRecognizer)","type":"method"},{"path":"\/documentation\/divar\/notesviewcontroller\/logopeningpost(index:token:)","title":"func logOpeningPost(index: Int, token: String)","type":"method"},{"path":"\/documentation\/divar\/notesviewcontroller\/syncnotes(currentdata:)","title":"func syncNotes(currentData: [PostModel]?)","type":"method"},{"path":"\/documentation\/divar\/notesviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/notesviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notesviewcontroller\/sonnatcollectionview(_:didselectitemat:)","title":"func sonnatCollectionView(CollectionCellController, didSelectItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/notesviewcontroller\/sonnatcollectionviewdelegate-implementations","title":"SonnatCollectionViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/notesviewcontroller","title":"NotesViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/noticepreviewcollectionviewcell\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/noticepreviewcollectionviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/noticepreviewcollectionviewcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noticepreviewcollectionviewcell\/fill(text:imageurl:iconurl:)","title":"func fill(text: String, imageURL: String, iconURL: String?)","type":"method"},{"path":"\/documentation\/divar\/noticepreviewcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_NoticePreviewData)","type":"method"},{"path":"\/documentation\/divar\/noticepreviewcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/noticepreviewcollectionviewcell","title":"NoticePreviewCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/init(handler:)","title":"init(handler: NumberInputProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/actionloghelper","title":"var actionLogHelper: LoginActionLogHelper","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/bottomconstraint","title":"var bottomConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/bottomstack","title":"var bottomStack: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/delegate","title":"var delegate: NumberInputViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/descriptionview","title":"let descriptionView: DescriptionView","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/dummyheightconstraint","title":"var dummyHeightConstraint: NSLayoutConstraint?","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/dummyview","title":"let dummyView: UIView","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/mainscrollview","title":"var mainScrollView: ScrollingStackView!","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/phonenumberinput","title":"var phoneNumberInput: NumberInputProtocol","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/stickybutton","title":"var stickyButton: SplitButtonBarViewController","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/textfieldview","title":"let textFieldView: TextFieldView","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/titleview","title":"let titleView: TitleView","type":"property"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/tossubtitlerow","title":"let tosSubtitleRow: SubtitleRow","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/accessorytoolbar()","title":"func accessoryToolbar() -> UIView?","type":"method"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/handlekeyboardstatus(_:)","title":"func handleKeyboardStatus(Notification)","type":"method"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/textfieldvaluechanges(_:shouldchangecharactersin:replacementstring:)","title":"func textFieldValueChanges(UITextField, shouldChangeCharactersIn: NSRange, replacementString: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/numberinputviewcontroller\/splitbuttonbarviewcontrollerdelegate-implementations","title":"SplitButtonBarViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numberinputviewcontroller\/subtitlerow(_:didtaponurl:)","title":"func subtitleRow(SubtitleRow, didTapOnURL: URL)","type":"method"}],"path":"\/documentation\/divar\/numberinputviewcontroller\/subtitlerowdelegate-implementations","title":"SubtitleRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numberinputviewcontroller","title":"NumberInputViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numberstepper\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/numberstepper\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numberstepper\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/numberstepper\/delegate","title":"var delegate: NumberStepperDelegate?","type":"property"},{"path":"\/documentation\/divar\/numberstepper\/leftbutton","title":"var leftButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/numberstepper\/leftimage","title":"var leftImage: UIImage","type":"property"},{"path":"\/documentation\/divar\/numberstepper\/numberlabel","title":"var numberLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/numberstepper\/rightbutton","title":"var rightButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/numberstepper\/rightimage","title":"var rightImage: UIImage","type":"property"},{"path":"\/documentation\/divar\/numberstepper\/value","title":"var value: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numberstepper\/commoninit()","title":"func commonInit()","type":"method"}],"path":"\/documentation\/divar\/numberstepper","title":"NumberStepper","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/init(property:onvalidationchanged:onchange:)","title":"init(property: Schema, onValidationChanged: ValidationChanged, onChange: OnChange)","type":"init"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/init(tag:property:)","title":"init(tag: String?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/onchange","title":"NumberTextFieldDialogWidget.OnChange","type":"typealias"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/presenterrow","title":"NumberTextFieldDialogWidget.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/validationchanged","title":"NumberTextFieldDialogWidget.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/numbertextfielddialogwidget\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/numberdialogwidgetcontroller(_:didentered:)","title":"func numberDialogWidgetController(NumberTextFieldDialogWidgetController, didEntered: Int64?)","type":"method"}],"path":"\/documentation\/divar\/numbertextfielddialogwidget\/numbertextfielddialogwidgetcontrollerdelegate-implementations","title":"NumberTextFieldDialogWidgetControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/numbertextfielddialogwidget\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidget\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/numbertextfielddialogwidget\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numbertextfielddialogwidget","title":"NumberTextFieldDialogWidget","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/init(property:)","title":"init(property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/buttonbar","title":"var buttonBar: WideButtonViewController","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/delegate","title":"var delegate: NumberTextFieldDialogWidgetControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/finalvalue","title":"var finalValue: Int64?","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/isrequired","title":"var isRequired: Bool","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/row","title":"var row: RowOf<Int64>!","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/stackview","title":"var stackView: UIStackView","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/stackviewbottomconstraint","title":"var stackViewBottomConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/tableview","title":"var tableView: UITableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/accessorytoolbar()","title":"func accessoryToolbar() -> UIView?","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/changeinputvalidationstate(with:)","title":"func changeInputValidationState(with: InputValidationState)","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/extractseparatorpattern(from:or:)","title":"func extractSeparatorPattern(from: Schema?, or: String) -> String","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/formatrowtextfieldtext()","title":"func formatRowTextFieldText() -> String","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/getformattedsubtitle(input:)","title":"func getFormattedSubtitle(input: Int64?) -> String?","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/setupconstraints()","title":"func setupConstraints()","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/setupview()","title":"func setupView()","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/transformenglishnumbertoirrcurrencyformattedstring(from:seperator:maximumfractiondigits:)","title":"func transformEnglishNumberToIRRCurrencyFormattedString(from: NSNumber, seperator: String, maximumFractionDigits: Int) -> String?","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/updatetextfieldcellsubtitle(with:message:)","title":"func updateTextFieldCellSubtitle(with: UIColor, message: String?)","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/updatetextfieldtext(_:newprice:)","title":"func updateTextFieldText(UITextField, newPrice: Int64)","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/inputvalidationstate\/empty","title":"case empty","type":"case"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/inputvalidationstate\/invalid(errorkey:errorvalue:)","title":"case invalid(errorKey: String, errorValue: Int64)","type":"case"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/inputvalidationstate\/valid(validvalue:)","title":"case valid(validValue: Int64)","type":"case"}],"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/inputvalidationstate","title":"NumberTextFieldDialogWidgetController.InputValidationState","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/tableview(_:heightforheaderinsection:)","title":"func tableView(UITableView, heightForHeaderInSection: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/tableview(_:viewforheaderinsection:)","title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?","type":"method"}],"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"func textField(UITextField, shouldChangeCharactersIn: NSRange, replacementString: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/textfielddidbeginediting(_:)","title":"func textFieldDidBeginEditing(UITextField)","type":"method"}],"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/buttonclicked(_:action:)","title":"func buttonClicked(WideButtonViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller\/widebuttonviewcontrollerdelegate-implementations","title":"WideButtonViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontroller","title":"NumberTextFieldDialogWidgetController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/init(property:)","title":"init(property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/buttonbar","title":"var buttonBar: WideButtonViewController","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/delegate","title":"var delegate: NumberTextFieldPageControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/finalvalue","title":"var finalValue: Int64?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/ispriceperareaenabled","title":"var isPricePerAreaEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/isrequired","title":"var isRequired: Bool","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/row","title":"var row: RowOf<Int64>!","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/stackviewbottomconstraint","title":"var stackViewBottomConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableview","title":"var tableView: UITableView!","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableviewdatasource","title":"var tableviewDataSource: [NumberTextFieldPageCellModel]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/accessorytoolbar()","title":"func accessoryToolbar() -> UIView?","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/addareaunit(to:)","title":"func addAreaUnit(to: String) -> String","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/changeinputvalidationstate(with:)","title":"func changeInputValidationState(with: InputValidationState) -> Bool","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/deletepriceperarearowwithanimation()","title":"func deletePricePerAreaRowWithAnimation()","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/extractseparatorpattern(from:or:)","title":"func extractSeparatorPattern(from: Schema?, or: String) -> String","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/generatepricebasedonarea(from:)","title":"func generatePriceBasedOnArea(from: Double?) -> String?","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/insertpriceperarearowwithanimation()","title":"func insertPricePerAreaRowWithAnimation()","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/preparedatasource(onupdate:)","title":"func prepareDataSource(onUpdate: Bool)","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/setupview()","title":"func setupView()","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/shoulddeletepriceperarea(isdatavalidfortransforming:ispriceperareaenabled:)","title":"func shouldDeletePricePerArea(isDataValidForTransforming: Bool, isPricePerAreaEnabled: Bool) -> Bool","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/shouldinsertpriceperarea(isdatavalidfortransforming:ispriceperareaenabled:)","title":"func shouldInsertPricePerArea(isDataValidForTransforming: Bool, isPricePerAreaEnabled: Bool) -> Bool","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/transformenglishnumbertoirrcurrencyformattedstring(from:seperator:maximumfractiondigits:)","title":"func transformEnglishNumberToIRRCurrencyFormattedString(from: NSNumber, seperator: String, maximumFractionDigits: Int) -> String?","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/updatepriceperareacelltextwith(newprice:)","title":"func updatePricePerAreaCellTextWith(newPrice: Int64)","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/updatetextfieldcellsubtitle(with:message:)","title":"func updateTextFieldCellSubtitle(with: UIColor, message: String?)","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/updatetextfieldtext(_:newprice:)","title":"func updateTextFieldText(UITextField, newPrice: Int64)","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/inputvalidationstate\/empty","title":"case empty","type":"case"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/inputvalidationstate\/invalid(errorkey:errorvalue:)","title":"case invalid(errorKey: String, errorValue: Int64)","type":"case"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/inputvalidationstate\/valid(validvalue:)","title":"case valid(validValue: Int64)","type":"case"}],"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/inputvalidationstate","title":"NumberTextFieldPageController.InputValidationState","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableview(_:heightforheaderinsection:)","title":"func tableView(UITableView, heightForHeaderInSection: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/tableview(_:viewforheaderinsection:)","title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"func textField(UITextField, shouldChangeCharactersIn: NSRange, replacementString: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/textfielddidbeginediting(_:)","title":"func textFieldDidBeginEditing(UITextField)","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/buttonclicked(_:action:)","title":"func buttonClicked(WideButtonViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagecontroller\/widebuttonviewcontrollerdelegate-implementations","title":"WideButtonViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numbertextfieldpagecontroller","title":"NumberTextFieldPageController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/init(property:onvalidationchanged:onchange:)","title":"init(property: Schema, onValidationChanged: ValidationChanged, onChange: OnChange)","type":"init"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/init(tag:property:)","title":"init(tag: String?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/onchange","title":"NumberTextFieldPageWidget.OnChange","type":"typealias"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/presenterrow","title":"NumberTextFieldPageWidget.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/validationchanged","title":"NumberTextFieldPageWidget.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagewidget\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/numbertextfieldpagecontroller(_:didselect:)","title":"func numberTextFieldPageController(NumberTextFieldPageController, didSelect: Int64?)","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagewidget\/numbertextfieldpagecontrollerdelegate-implementations","title":"NumberTextFieldPageControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagewidget\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagewidget\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/numbertextfieldpagewidget\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numbertextfieldpagewidget","title":"NumberTextFieldPageWidget","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcell\/secondarytitle","title":"var secondaryTitle: UILabel!","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcell\/subtitle","title":"var subtitle: UILabel!","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcell\/subtitletext","title":"var subtitleText: String?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcell\/textfieldholder","title":"var textFieldHolder: UIView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcell\/fill(title:placeholder:subtitle:secondarytitle:)","title":"func fill(title: String?, placeholder: String?, subtitle: String?, secondaryTitle: String)","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcell\/fill(with:)","title":"func fill(with: NumberTextFieldWidgetCellModel)","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcell\/maketitle(title:titledescription:)","title":"func makeTitle(title: String?, titleDescription: String?) -> NSAttributedString","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcell\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldwidgetcell","title":"NumberTextFieldWidgetCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/init(tag:title:)","title":"init(tag: String?, title: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/validationchanged","title":"NumberTextFieldWidgetRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/numbertextfieldwidgetrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numbertextfieldwidgetrow","title":"NumberTextFieldWidgetRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertotextconverter\/init()","title":"init()","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertotextconverter\/convert(_:)","title":"class func convert(Int64?) -> String","type":"method"}],"path":"\/documentation\/divar\/numbertotextconverter","title":"NumberToTextConverter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/offlineformviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/offlineformviewcontroller\/init(container:schema:data:)","title":"init(container: OfflineFormViewControllerDIContainer, schema: Schema?, data: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/offlineformviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/offlineformviewcontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/offlineformviewcontroller\/row","title":"var row: RowOf<String>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/offlineformviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/offlineformviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/offlineformviewcontroller","title":"OfflineFormViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/init(localdata:)","title":"init(localData: Widgets_LoadPagePayload)","type":"init"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/init(page:)","title":"init(page: Widgets_Page?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/actionlogcoordinator","title":"var actionLogCoordinator: ActionLog_ActionLogCoordinator?","type":"property"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/delegate","title":"var delegate: OfflinePageViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/pagetitle","title":"var pageTitle: String","type":"property"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/stackholder","title":"var stackHolder: UIStackView?","type":"property"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/stickywidget","title":"var stickyWidget: Widgets_StickyWidget?","type":"property"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/widgetlist","title":"var widgetList: [Widgets_Widget]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/cleardata()","title":"func clearData()","type":"method"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/loaddata()","title":"func loadData()","type":"method"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/setdata(page:animated:)","title":"func setData(page: Widgets_Page, animated: Bool)","type":"method"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/offlinepageviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartpulltorefresh:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"}],"path":"\/documentation\/divar\/offlinepageviewcontroller","title":"OfflinePageViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/openpageflowcontroller\/initial(with:payload:)","title":"func initial(with: NavigationController, payload: Widgets_OpenPagePayload) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/openpageflowcontroller\/initialofflinepage(payload:)","title":"func initialOfflinePage(payload: Widgets_LoadPagePayload) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/openpageflowcontroller\/initialsinglepage(payload:)","title":"func initialSinglePage(payload: Widgets_OpenPagePayload) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/openpageflowcontroller\/loadofflinepage(_:)","title":"func loadOfflinePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/openpageflowcontroller\/openpage(_:)","title":"func openPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/openpageflowcontroller\/openpageactionhandler-implementations","title":"OpenPageActionHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/openpageflowcontroller\/widgetbasedfilterviewcontroller(_:data:tag:)","title":"func widgetBasedFilterViewController(WidgetBasedFilterViewController, data: [String : Any], tag: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/openpageflowcontroller\/widgetbasedfilterviewcontrollerdelegate-implementations","title":"WidgetBasedFilterViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/openpageflowcontroller\/widgetviewcontroller(shouldopenfilterwith:request:for:)","title":"func widgetViewController(shouldOpenFilterWith: Schema, request: WidgetBasedFilterRequest, for: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/openpageflowcontroller\/widgetviewcontrollerdelegate-implementations","title":"WidgetViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/openpageflowcontroller\/widgetviewmodel(shouldopenfilterwith:worker:for:)","title":"func widgetViewModel(shouldOpenFilterWith: Schema, worker: WidgetBasedWorkerProtocol, for: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/openpageflowcontroller\/widgetviewmodeldelegate-implementations","title":"WidgetViewModelDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/openpageflowcontroller","title":"OpenPageFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/operatormanagementflowcontroller\/dealershipconfirmoperatorinvitation(_:)","title":"func dealershipConfirmOperatorInvitation(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/operatormanagementflowcontroller\/dealershipdeleteoperator(_:)","title":"func dealershipDeleteOperator(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/operatormanagementflowcontroller\/dealershipoperatorsmanagement(_:)","title":"func dealershipOperatorsManagement(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/operatormanagementflowcontroller\/initialoperatormanagement(with:)","title":"func initialOperatorManagement(with: NavigationController) -> UIViewController","type":"method"}],"path":"\/documentation\/divar\/operatormanagementflowcontroller","title":"OperatorManagementFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/optioncell\/indicator","title":"var indicator: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/optioncell\/title","title":"var title: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/optioncell\/fill(_:)","title":"func fill(String)","type":"method"},{"path":"\/documentation\/divar\/optioncell\/setselected(_:animated:)","title":"func setSelected(Bool, animated: Bool)","type":"method"}],"path":"\/documentation\/divar\/optioncell","title":"OptionCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/outboxmessagehandler\/init(networkmanager:dataprovider:)","title":"init(networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/outboxmessagehandler\/sendoutboxmessages()","title":"func sendOutboxMessages()","type":"method"}],"path":"\/documentation\/divar\/outboxmessagehandler","title":"OutboxMessageHandler","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/packageselectioncell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/packageselectioncell\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/packageselectioncell\/selectedindex","title":"var selectedIndex: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/packageselectioncell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/packageselectioncell\/fill(with:)","title":"func fill(with: Schema)","type":"method"},{"path":"\/documentation\/divar\/packageselectioncell\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/packageselectioncell\/update()","title":"func update()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/packageselectioncell\/packageselectorrowdidtapped(_:)","title":"func packageSelectorRowDidTapped(PackageSelectionRow)","type":"method"}],"path":"\/documentation\/divar\/packageselectioncell\/packageselectorrowdelegate-implementations","title":"PackageSelectorRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/packageselectioncell","title":"PackageSelectionCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/selectedindex","title":"var selectedIndex: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/validationchanged","title":"PackageSelectionWidgetRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/packageselectionwidgetrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/packageselectionwidgetrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/packageselectionwidgetrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/packageselectionwidgetrow","title":"PackageSelectionWidgetRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pancontainerview\/init(presentedview:frame:)","title":"init(presentedView: UIView, frame: CGRect)","type":"init"}],"path":"\/documentation\/divar\/pancontainerview","title":"PanContainerView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationanimator\/init(transitionstyle:)","title":"init(transitionStyle: TransitionStyle)","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationanimator\/transitionstyle\/dismissal","title":"case dismissal","type":"case"},{"path":"\/documentation\/divar\/panmodalpresentationanimator\/transitionstyle\/presentation","title":"case presentation","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationanimator\/transitionstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationanimator\/transitionstyle\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/panmodalpresentationanimator\/transitionstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/panmodalpresentationanimator\/transitionstyle","title":"PanModalPresentationAnimator.TransitionStyle","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationanimator\/animatetransition(using:)","title":"func animateTransition(using: UIViewControllerContextTransitioning)","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationanimator\/transitionduration(using:)","title":"func transitionDuration(using: UIViewControllerContextTransitioning?) -> TimeInterval","type":"method"}],"path":"\/documentation\/divar\/panmodalpresentationanimator\/uiviewcontrolleranimatedtransitioning-implementations","title":"UIViewControllerAnimatedTransitioning Implementations","type":"symbol"}],"path":"\/documentation\/divar\/panmodalpresentationanimator","title":"PanModalPresentationAnimator","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/constants\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/constants\/dragindicatorsize","title":"static let dragIndicatorSize: CGSize","type":"property"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/constants\/indicatoryoffset","title":"static let indicatorYOffset: CGFloat","type":"property"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/constants\/snapmovementsensitivity","title":"static let snapMovementSensitivity: CGFloat","type":"property"}],"path":"\/documentation\/divar\/panmodalpresentationcontroller\/constants","title":"PanModalPresentationController.Constants","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/presentedview","title":"var presentedView: UIView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/containerviewwilllayoutsubviews()","title":"func containerViewWillLayoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/dismissaltransitionwillbegin()","title":"func dismissalTransitionWillBegin()","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/performupdates(_:)","title":"func performUpdates(() -> Void)","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/presentationtransitiondidend(_:)","title":"func presentationTransitionDidEnd(Bool)","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/presentationtransitionwillbegin()","title":"func presentationTransitionWillBegin()","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/setneedslayoutupdate()","title":"func setNeedsLayoutUpdate()","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/transition(to:)","title":"func transition(to: PresentationState)","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/viewwilltransition(to:with:)","title":"func viewWillTransition(to: CGSize, with: UIViewControllerTransitionCoordinator)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/presentationstate\/longform","title":"case longForm","type":"case"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/presentationstate\/shortform","title":"case shortForm","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/presentationstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/presentationstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/panmodalpresentationcontroller\/presentationstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/panmodalpresentationcontroller\/presentationstate","title":"PanModalPresentationController.PresentationState","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/gesturerecognizer(_:shouldberequiredtofailby:)","title":"func gestureRecognizer(UIGestureRecognizer, shouldBeRequiredToFailBy: UIGestureRecognizer) -> Bool","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationcontroller\/gesturerecognizer(_:shouldrecognizesimultaneouslywith:)","title":"func gestureRecognizer(UIGestureRecognizer, shouldRecognizeSimultaneouslyWith: UIGestureRecognizer) -> Bool","type":"method"}],"path":"\/documentation\/divar\/panmodalpresentationcontroller\/uigesturerecognizerdelegate-implementations","title":"UIGestureRecognizerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/panmodalpresentationcontroller","title":"PanModalPresentationController","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationdelegate\/default","title":"static var `default`: PanModalPresentationDelegate","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationdelegate\/adaptivepresentationstyle(for:traitcollection:)","title":"func adaptivePresentationStyle(for: UIPresentationController, traitCollection: UITraitCollection) -> UIModalPresentationStyle","type":"method"}],"path":"\/documentation\/divar\/panmodalpresentationdelegate\/uiadaptivepresentationcontrollerdelegate-implementations","title":"UIAdaptivePresentationControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentationdelegate\/animationcontroller(fordismissed:)","title":"func animationController(forDismissed: UIViewController) -> UIViewControllerAnimatedTransitioning?","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationdelegate\/animationcontroller(forpresented:presenting:source:)","title":"func animationController(forPresented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning?","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentationdelegate\/presentationcontroller(forpresented:presenting:source:)","title":"func presentationController(forPresented: UIViewController, presenting: UIViewController?, source: UIViewController) -> UIPresentationController?","type":"method"}],"path":"\/documentation\/divar\/panmodalpresentationdelegate\/uiviewcontrollertransitioningdelegate-implementations","title":"UIViewControllerTransitioningDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/panmodalpresentationdelegate","title":"PanModalPresentationDelegate","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentdetailcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/paymentdetailcell\/detaillabel","title":"var detailLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/paymentdetailcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"}],"path":"\/documentation\/divar\/paymentdetailcell","title":"PaymentDetailCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentdetailrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/paymentdetailrow\/init(tag:payment:)","title":"init(tag: String, payment: PostPaymentStructure)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentdetailrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/paymentdetailrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentdetailrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentdetailrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/paymentdetailrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/paymentdetailrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/paymentdetailrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/paymentdetailrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/paymentdetailrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentdetailrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/paymentdetailrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/paymentdetailrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/paymentdetailrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/paymentdetailrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/paymentdetailrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/paymentdetailrow","title":"PaymentDetailRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentpurchasecell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/paymentpurchasecell\/purchaseswitch","title":"var purchaseSwitch: UISwitch!","type":"property"},{"path":"\/documentation\/divar\/paymentpurchasecell\/redeembutton","title":"var redeemButton: RedeemButton!","type":"property"},{"path":"\/documentation\/divar\/paymentpurchasecell\/statelabel","title":"var stateLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentpurchasecell\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/divar\/paymentpurchasecell\/switchvaluechanged(_:)","title":"func switchValueChanged(UISwitch)","type":"method"},{"path":"\/documentation\/divar\/paymentpurchasecell\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/divar\/paymentpurchasecell","title":"PaymentPurchaseCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentpurchaserow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/paymentpurchaserow\/init(tag:payment:target:action:onchange:)","title":"init(tag: String, payment: PostPaymentStructure, target: BaseFormViewController, action: Selector, onChange: (PaymentPurchaseRow) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentpurchaserow\/userinfo","title":"var userInfo: PostPaymentStructure?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentpurchaserow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/paymentpurchaserow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentpurchaserow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentpurchaserow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/paymentpurchaserow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/paymentpurchaserow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/paymentpurchaserow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/paymentpurchaserow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/paymentpurchaserow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentpurchaserow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/paymentpurchaserow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/paymentpurchaserow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/paymentpurchaserow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/paymentpurchaserow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/paymentpurchaserow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/paymentpurchaserow","title":"PaymentPurchaseRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentservice\/init(servicenetworkmanager:user:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol, user: User)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentservice\/getorderid(requestpath:requestdata:)","title":"func getOrderId(requestPath: String, requestData: [String : Any]) async -> Result<Paymentcore_StartPaymentResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/paymentservice\/getpaymentform(username:costs:)","title":"func getPaymentForm(username: String, costs: [Int]) async -> Result<PostPaymentBankFormStructure, Error>","type":"method"},{"path":"\/documentation\/divar\/paymentservice\/getpaymentorderid(withtoken:costs:)","title":"func getPaymentOrderId(withToken: String, costs: [Int]) async -> Result<Payment_StartPostPaymentResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/paymentservice\/getpaymentstatus(orderid:)","title":"func getPaymentStatus(orderId: String) async -> Result<Paymentcore_GetPaymentStatusResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/paymentservice\/getpaymenturl(withorderid:)","title":"func getPaymentURL(withOrderId: String) async -> Result<Paymentcore_GetPaymentUrlResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/paymentservice\/getpostpaymenthistory(mngtoken:)","title":"func getPostPaymentHistory(mngToken: String) async -> Result<[PostPaymentHistoryStructure], DError>","type":"method"},{"path":"\/documentation\/divar\/paymentservice\/getpostpayments(mngtoken:)","title":"func getPostPayments(mngToken: String) async -> Result<[PostPaymentStructure], DError>","type":"method"},{"path":"\/documentation\/divar\/paymentservice\/redeemcode(code:cost:mngtoken:)","title":"func redeemCode(code: String, cost: Int, mngToken: String) async -> Result<Payment_RedeemGiftResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/paymentservice","title":"PaymentService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitor\/init(options:)","title":"init(options: [PerformanceMonitorProtocol])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitor\/eventchildfinished(eventcategory:eventname:reason:)","title":"func eventChildFinished(eventCategory: String, eventName: String, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/performancemonitor\/eventchildstarted(eventcategory:eventname:description:)","title":"func eventChildStarted(eventCategory: String, eventName: String, description: String?)","type":"method"},{"path":"\/documentation\/divar\/performancemonitor\/eventfinished(eventcategory:eventpayload:reason:)","title":"func eventFinished(eventCategory: String, eventPayload: [String : Any]?, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/performancemonitor\/eventstarted(eventcategory:eventname:eventpayload:customdata:)","title":"func eventStarted(eventCategory: String, eventName: String, eventPayload: [String : Any]?, customData: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/performancemonitor\/logevent(data:)","title":"func logEvent(data: Any)","type":"method"}],"path":"\/documentation\/divar\/performancemonitor","title":"PerformanceMonitor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/persiannumberformatter\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/persiannumberformatter\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/persiannumberformatter\/init(valueholder:)","title":"init(valueHolder: String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/persiannumberformatter\/getnewposition(forposition:intextinput:oldvalue:newvalue:)","title":"func getNewPosition(forPosition: UITextPosition, inTextInput: UITextInput, oldValue: String?, newValue: String?) -> UITextPosition","type":"method"},{"path":"\/documentation\/divar\/persiannumberformatter\/getobjectvalue(_:for:errordescription:)","title":"func getObjectValue(AutoreleasingUnsafeMutablePointer<AnyObject?>?, for: String, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"}],"path":"\/documentation\/divar\/persiannumberformatter","title":"PersianNumberFormatter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/personalaccountblockingview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/personalaccountblockingview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/personalaccountblockingview\/delegate","title":"var delegate: PersonalAccountBlockingViewDelegate?","type":"property"},{"path":"\/documentation\/divar\/personalaccountblockingview\/onreload","title":"var onReload: (() -> Void)?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/personalaccountblockingview\/selectorrowstag\/aboutdivar","title":"case aboutDivar","type":"case"},{"path":"\/documentation\/divar\/personalaccountblockingview\/selectorrowstag\/callsupportandterm","title":"case callSupportAndTerm","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/personalaccountblockingview\/selectorrowstag\/tag","title":"var tag: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/personalaccountblockingview\/selectorrowstag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/personalaccountblockingview\/selectorrowstag\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/personalaccountblockingview\/selectorrowstag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/personalaccountblockingview\/selectorrowstag","title":"PersonalAccountBlockingView.SelectorRowsTag","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/personalaccountblockingview\/progressrow(didselect:)","title":"func progressRow(didSelect: ProgressRow)","type":"method"}],"path":"\/documentation\/divar\/personalaccountblockingview\/progressrowdelegate-implementations","title":"ProgressRowDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/personalaccountblockingview\/selectorrow(didselect:)","title":"func selectorRow(didSelect: SelectorRow)","type":"method"}],"path":"\/documentation\/divar\/personalaccountblockingview\/selectorrowdelegate-implementations","title":"SelectorRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/personalaccountblockingview","title":"PersonalAccountBlockingView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/personalaccountservice\/personalaccountblockingviewdelegate","title":"var personalAccountBlockingViewDelegate: PersonalAccountBlockingViewDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/personalaccountservice\/map(error:)","title":"func map(error: DError) -> DError","type":"method"}],"path":"\/documentation\/divar\/personalaccountservice","title":"PersonalAccountService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/phonenumberconfiguration\/init(container:)","title":"init?(container: PhoneNumberConfigurationDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/phonenumberconfiguration\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/phonenumberconfiguration\/fire()","title":"func fire()","type":"method"}],"path":"\/documentation\/divar\/phonenumberconfiguration","title":"PhoneNumberConfiguration","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/photomessagecell\/delegate","title":"var delegate: PhotoMessageCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/photomessagecell\/mapurl","title":"var mapURL: String?","type":"property"},{"path":"\/documentation\/divar\/photomessagecell\/menuoptions","title":"var menuOptions: [MessageCellOptions]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/photomessagecell\/fillmessageview()","title":"func fillMessageView()","type":"method"},{"path":"\/documentation\/divar\/photomessagecell\/messageviewdidtapped()","title":"func messageViewDidTapped()","type":"method"},{"path":"\/documentation\/divar\/photomessagecell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"},{"path":"\/documentation\/divar\/photomessagecell\/retrysendingimage(_:)","title":"func retrySendingImage(ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/photomessagecell\/showimagepreview()","title":"func showImagePreview()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/photomessagecell\/photomessagerowdidselectretry(_:)","title":"func photoMessageRowDidSelectRetry(PhotoMessageRow)","type":"method"}],"path":"\/documentation\/divar\/photomessagecell\/photomessagerowdelegate-implementations","title":"PhotoMessageRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/photomessagecell","title":"PhotoMessageCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pickercell\/handler","title":"var handler: PickerHandler?","type":"property"},{"path":"\/documentation\/divar\/pickercell\/isrowforfilter","title":"var isRowForFilter: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pickercell\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/divar\/pickercell\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/divar\/pickercell","title":"PickerCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerhandler\/init(_:pickerrow:pickerenummodel:)","title":"init(UIPickerView, pickerRow: PickerRow, pickerEnumModel: PickerRowModel)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerhandler\/picker","title":"var picker: UIPickerView?","type":"property"},{"path":"\/documentation\/divar\/pickerhandler\/pickerenummodel","title":"var pickerEnumModel: PickerRowModel?","type":"property"},{"path":"\/documentation\/divar\/pickerhandler\/pickerrow","title":"var pickerRow: PickerRow?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerhandler\/numberofcomponents(in:)","title":"func numberOfComponents(in: UIPickerView) -> Int","type":"method"},{"path":"\/documentation\/divar\/pickerhandler\/pickerview(_:didselectrow:incomponent:)","title":"func pickerView(UIPickerView, didSelectRow: Int, inComponent: Int)","type":"method"},{"path":"\/documentation\/divar\/pickerhandler\/pickerview(_:numberofrowsincomponent:)","title":"func pickerView(UIPickerView, numberOfRowsInComponent: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/pickerhandler\/pickerview(_:titleforrow:forcomponent:)","title":"func pickerView(UIPickerView, titleForRow: Int, forComponent: Int) -> String?","type":"method"},{"path":"\/documentation\/divar\/pickerhandler\/pickerview(_:viewforrow:forcomponent:reusing:)","title":"func pickerView(UIPickerView, viewForRow: Int, forComponent: Int, reusing: UIView?) -> UIView","type":"method"}],"path":"\/documentation\/divar\/pickerhandler","title":"PickerHandler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrow\/init(property:onrowchange:onvalidationchanged:)","title":"init(property: Schema, onRowChange: (BaseRow) -> Void, onValidationChanged: (PickerCell, PickerRow) -> Void)","type":"init"},{"path":"\/documentation\/divar\/pickerrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/pickerrow\/init(tag:caption:pickerenummodel:isrowforfilter:)","title":"init(tag: String?, caption: String?, pickerEnumModel: PickerRowModel, isRowForFilter: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/pickerrow\/reloadcell()","title":"func reloadCell()","type":"method"},{"path":"\/documentation\/divar\/pickerrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/pickerrow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/pickerrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/pickerrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/pickerrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/pickerrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/pickerrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/pickerrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/pickerrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/pickerrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/pickerrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/pickerrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/pickerrow","title":"PickerRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/init(container:cancelpayload:)","title":"init(container: PostArchiveViewControllerDIContainer, cancelPayload: Widgets_CarInspectionCancellationPayload)","type":"init"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/init(container:post:type:slug:offlinedata:)","title":"init(container: PostArchiveViewControllerDIContainer, post: PostViewStructure?, type: ReportingType, slug: String?, offlineData: [SingleMultiModel]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/bottomconstraint","title":"var bottomConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/buttonbar","title":"var buttonBar: TwinButtonsViewController","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/carinspectiondescription","title":"var carInspectionDescription: String?","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/carinspectiontitle","title":"var carInspectionTitle: String?","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/delegate","title":"var delegate: PostArchiveViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/headervc","title":"var headerVC: HeaderBarViewController","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/managetoken","title":"var manageToken: String?","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/multiselectitem","title":"var multiSelectItem: [SingleMultiModel]?","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/offlinedata","title":"let offlineData: [SingleMultiModel]?","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/posttitle","title":"var postTitle: String?","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/reasonsvc","title":"var reasonsVC: SingleMultiBaseViewController","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/selecteditem","title":"var selectedItem: SingleMultiModel?","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/slug","title":"var slug: String?","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/token","title":"var token: String?","type":"property"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/type","title":"let type: ReportingType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/creatsmview(with:)","title":"func creatSMView(with: [SingleMultiModel])","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/dismiss(animated:completion:)","title":"func dismiss(animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/getbuttontitle()","title":"func getButtonTitle() -> String","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/getconfig()","title":"func getConfig() -> SingleMultiBaseViewControllerConfig","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/getdescstring()","title":"func getDescString() -> String","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/getheaderstring()","title":"func getHeaderString() -> String","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/handleactionafterlogin()","title":"func handleActionAfterLogin()","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/loaddata()","title":"func loadData()","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/logarchive(questiontag:answer:)","title":"func logArchive(questionTag: String?, answer: String?)","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/sendarchivereason(_:questiontag:answer:)","title":"func sendArchiveReason(String, questionTag: String?, answer: String?)","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/setdelegate(_:)","title":"func setDelegate(PostArchiveViewControllerDelegate)","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/setpagetitle()","title":"func setPageTitle()","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/willmove(toparent:)","title":"func willMove(toParent: UIViewController?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/didreportpost(_:)","title":"func didReportPost(PostReportDescriptionViewController)","type":"method"}],"path":"\/documentation\/divar\/postarchiveviewcontroller\/postreportdescriptionviewcontrollerdelegate-implementations","title":"PostReportDescriptionViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/requestshowchildren(_:children:)","title":"func requestShowChildren(SingleMultiBaseViewController, children: [SingleMultiModel])","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/valuechanges(_:)","title":"func valueChanges([SingleMultiModel])","type":"method"}],"path":"\/documentation\/divar\/postarchiveviewcontroller\/singlemultibaseviewcontrollerdelegate-implementations","title":"SingleMultiBaseViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/secondarybuttonclicked(_:action:)","title":"func secondaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/postarchiveviewcontroller\/twinbuttonsviewcontrollerdelegate-implementations","title":"TwinButtonsViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postarchiveviewcontroller\/userregisteredsuccessfully(in:with:)","title":"func userRegisteredSuccessfully(in: UserRegisterFlowController, with: String)","type":"method"}],"path":"\/documentation\/divar\/postarchiveviewcontroller\/userregisterflowcontrollerdelegate-implementations","title":"UserRegisterFlowControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postarchiveviewcontroller","title":"PostArchiveViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcell\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/divar\/postcell\/postrowview","title":"var postRowView: PostRow","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/postcell\/fill(post:)","title":"func fill(post: PostModel)","type":"method"},{"path":"\/documentation\/divar\/postcell\/fill(with:)","title":"func fill(with: Widgets_PostRowData)","type":"method"},{"path":"\/documentation\/divar\/postcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/postcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"}],"path":"\/documentation\/divar\/postcell","title":"PostCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postcellcontroller\/init(model:)","title":"init(model: PostModel)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcellcontroller\/model","title":"let model: PostModel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcellcontroller\/configureview(_:)","title":"func configureView(PostRow)","type":"method"},{"path":"\/documentation\/divar\/postcellcontroller\/itemsheight()","title":"func itemsHeight() -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/postcellcontroller\/shoulditemhasfullwidth()","title":"func shouldItemHasFullWidth() -> Bool","type":"method"}],"path":"\/documentation\/divar\/postcellcontroller","title":"PostCellController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postcreateservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcreateservice\/getpersonalsubmitpageschema(model:)","title":"func getPersonalSubmitPageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"}],"path":"\/documentation\/divar\/postcreateservice","title":"PostCreateService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/init(container:formid:editid:newschema:newdata:previousdata:actionloghelper:)","title":"init(container: PostCreateViewControllerDIContainer, formID: String, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any], actionLogHelper: PostSubmitActionLogHelper?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/actionloghelper","title":"var actionLogHelper: PostSubmitActionLogHelper","type":"property"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/delegate","title":"var delegate: PostCreateViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/needsresetbutton","title":"var needsResetButton: Bool","type":"property"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/shoulddraft","title":"var shouldDraft: Bool","type":"property"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/shouldshowsuccessmessage","title":"var shouldShowSuccessMessage: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/dismiss(animated:completion:)","title":"func dismiss(animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/enablebutton(_:)","title":"func enableButton(Bool)","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/formcontroller(_:didgetlocalvalidationerrors:)","title":"func formController(AbstractFormViewController, didGetLocalValidationErrors: [BaseRow : [ValidationError]]?)","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/handlesubmitformresponse(result:currentpage:currentdata:previousdata:refreshonerror:)","title":"func handleSubmitFormResponse(result: FormResultValue, currentPage: Int, currentData: [String : Any], previousData: [String : Any], refreshOnError: () -> Void)","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/savepost(token:posttype:)","title":"func savePost(token: String, postType: SavedPostListType)","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/valuehasbeenchanged(_:for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontroller\/willmove(toparent:)","title":"func willMove(toParent: UIViewController?)","type":"method"}],"path":"\/documentation\/divar\/postcreateviewcontroller","title":"PostCreateViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/initial(token:sourceview:)","title":"func initial(token: PostDetailsToken, sourceView: PostViewSource) -> NavigationController","type":"method"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/initial(with:token:sourceview:)","title":"func initial(with: NavigationController, token: PostDetailsToken, sourceView: PostViewSource) -> BaseViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/loginrequiredprotocol","title":"var loginRequiredProtocol: LoginRequiredProtocol?","type":"property"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/postchatnavigatorcontainer","title":"var postChatNavigatorContainer: PostChatNavigatorDIContainer","type":"property"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/presentingnavigationcontroller","title":"var presentingNavigationController: NavigationController?","type":"property"}],"path":"\/documentation\/divar\/postdetailsflowcontroller\/postchatnavigator-implementations","title":"PostChatNavigator Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/opencarinspectioncustomermanagepage(_:)","title":"func openCarInspectionCustomerManagePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/openmap(_:)","title":"func openMap(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/opennote(_:)","title":"func openNote(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/openpagepreview(_:)","title":"func openPagePreview(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/openpostchat(_:)","title":"func openPostChat(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/openpostgetcontact(_:)","title":"func openPostGetContact(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/openpostreport(_:)","title":"func openPostReport(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/openpostsuggestionpost(_:)","title":"func openPostSuggestionPost(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/openpostview(_:)","title":"func openPostView(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsflowcontroller\/openusersuggestionpage(_:)","title":"func openUserSuggestionPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/postdetailsflowcontroller\/postdetailsactionhandler-implementations","title":"PostDetailsActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postdetailsflowcontroller","title":"PostDetailsFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/init(container:postfeedbackmodel:)","title":"init(container: PostFeedBackViewControllerDIContainer, postFeedBackModel: FeedBackDataStructure)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/actionbutton","title":"var actionButton: [UIButton]!","type":"property"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/delegate","title":"var delegate: FeedBackVCDelegate?","type":"property"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/descriptionlabel","title":"var descriptionLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/feedbackimage","title":"var feedBackImage: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/headerlabel","title":"var headerLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/postfeedbackmodel","title":"var postFeedBackModel: FeedBackDataStructure!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/sendfeedback(_:)","title":"func sendFeedBack(UIButton)","type":"method"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/setupui()","title":"func setupUI()","type":"method"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/showcancelbutton()","title":"func showCancelButton()","type":"method"},{"path":"\/documentation\/divar\/postfeedbackviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/postfeedbackviewcontroller","title":"PostFeedBackViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactheadercell\/ourmessagedetails","title":"var ourMessageDetails: UILabel!","type":"property"},{"path":"\/documentation\/divar\/postgetcontactheadercell\/ourmessagetitle","title":"var ourMessageTitle: UILabel!","type":"property"},{"path":"\/documentation\/divar\/postgetcontactheadercell\/theirmessagedetails","title":"var theirMessageDetails: UILabel!","type":"property"},{"path":"\/documentation\/divar\/postgetcontactheadercell\/theirmessagetitle","title":"var theirMessageTitle: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactheadercell\/awakefromnib()","title":"func awakeFromNib()","type":"method"}],"path":"\/documentation\/divar\/postgetcontactheadercell","title":"PostGetContactHeaderCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/init(container:token:title:config:)","title":"init(container: PostGetContactsViewControllerDIContainer, token: String?, title: String?, config: ContactPageConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/callobserver","title":"let callObserver: CXCallObserver","type":"property"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/delegate","title":"var delegate: PostGetContactsViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/isbookmarked","title":"var isBookmarked: Bool","type":"property"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/tableview","title":"var tableView: UITableView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/addtobookmark()","title":"func addToBookmark()","type":"method"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/handleloaddataresponse(_:hasbookmark:)","title":"func handleLoadDataResponse(PostContactsStructure?, hasBookmark: Bool)","type":"method"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/sendmail(_:subject:)","title":"func sendMail(String, subject: String?)","type":"method"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/viewwilltransition(to:with:)","title":"func viewWillTransition(to: CGSize, with: UIViewControllerTransitionCoordinator)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/bookmark","title":"case bookmark","type":"case"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/dismiss","title":"case dismiss","type":"case"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/email","title":"case email","type":"case"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/phone","title":"case phone","type":"case"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/sms","title":"case sms","type":"case"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/telephone","title":"case telephone","type":"case"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/undefined","title":"case undefined","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/contactinfotype","title":"PostGetContactsViewController.ContactInfoType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/callobserver(_:callchanged:)","title":"func callObserver(CXCallObserver, callChanged: CXCall)","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/cxcallobserverdelegate-implementations","title":"CXCallObserverDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/mailcomposecontroller(_:didfinishwith:error:)","title":"func mailComposeController(MFMailComposeViewController, didFinishWith: MFMailComposeResult, error: Error?)","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/mfmailcomposeviewcontrollerdelegate-implementations","title":"MFMailComposeViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/messagecomposeviewcontroller(_:didfinishwith:)","title":"func messageComposeViewController(MFMessageComposeViewController, didFinishWith: MessageComposeResult)","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/mfmessagecomposeviewcontrollerdelegate-implementations","title":"MFMessageComposeViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/sourceview","title":"var sourceView: ActionLog_ScreenshotActionInfo.Source","type":"property"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/screenshotprotocol-implementations","title":"ScreenshotProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postgetcontactsviewcontroller","title":"PostGetContactsViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistflowcontroller\/openpostlistpage(_:)","title":"func openPostlistPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/postlistflowcontroller","title":"PostListFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistservice\/getpostlist(_:)","title":"func getPostList(GetPostListStruct) async -> Result<PostList, DError>","type":"method"}],"path":"\/documentation\/divar\/postlistservice","title":"PostListService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/init(viewmodel:postsviewcontrollerdelegate:scrollingdelegate:)","title":"init(viewModel: PostListTabbedViewModelProtocol, postsViewControllerDelegate: PostsViewControllerDelegate?, scrollingDelegate: ListScrollingDelegate?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/stackview","title":"var stackView: UIStackView","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/tooltipcancable","title":"var tooltipCancable: AnyCancellable?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/scrolltotop()","title":"func scrollToTop()","type":"method"},{"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/tabbedpageviewcontroller(_:didswitchto:presentingviewcontroller:)","title":"func tabbedPageViewController(TabbedPageViewController, didSwitchTo: Int, presentingViewController: UIViewController)","type":"method"}],"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/tabbedpageviewcontrollerdelegate-implementations","title":"TabbedPageViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/tooltippresenterview","title":"var tooltipPresenterView: UIView","type":"property"}],"path":"\/documentation\/divar\/postlisttabbedviewcontroller\/tooltippresenter-implementations","title":"TooltipPresenter Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postlisttabbedviewcontroller","title":"PostListTabbedViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/datasource","title":"var dataSource: PostListTabbedViewModelDataSource?","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/lastselectedtab","title":"var lastSelectedTab: Int","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/lasttabfilters","title":"var lastTabFilters: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/postsviewmodelfactory-swift.property","title":"var postsViewModelFactory: PostsViewModelFactory!","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/selectedtabindex","title":"var selectedTabIndex: Int","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/selectedtabindex$","title":"var selectedTabIndex$: AnyPublisher<Int, Never>","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/tabitems","title":"var tabItems: [TabData]","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/tabitems$","title":"var tabItems$: AnyPublisher<[TabData], Never>","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/tooltiptab$","title":"var tooltipTab$: AnyPublisher<TooltipTab?, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/filtersdidchange()","title":"func filtersDidChange()","type":"method"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/reload()","title":"func reload()","type":"method"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/selecttab(at:)","title":"func selectTab(at: Int)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/postsviewmodelfactory-swift.typealias","title":"PostListTabbedViewModel.PostsViewModelFactory","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/postsviewmodel(_:)","title":"func postsViewModel(PostModelsResultClosure)","type":"method"},{"path":"\/documentation\/divar\/postlisttabbedviewmodel\/postsviewmodel(page:offset:_:)","title":"func postsViewModel(page: Int, offset: CLongLong, PostModelsResultClosure)","type":"method"}],"path":"\/documentation\/divar\/postlisttabbedviewmodel\/postsviewmodeldatasource-implementations","title":"PostsViewModelDataSource Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postlisttabbedviewmodel","title":"PostListTabbedViewModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postlistviewcontroller\/init(viewmodel:)","title":"init(viewModel: PostListViewModelProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewcontroller\/carouselview","title":"var carouselView: CategoryCarouselBar","type":"property"},{"path":"\/documentation\/divar\/postlistviewcontroller\/chipview","title":"var chipView: ChipView<TagListSuggestion>!","type":"property"},{"path":"\/documentation\/divar\/postlistviewcontroller\/cityfilterview","title":"var cityFilterView: CityFilterView","type":"property"},{"path":"\/documentation\/divar\/postlistviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/postlistviewcontroller\/liststack","title":"var listStack: UIStackView","type":"property"},{"path":"\/documentation\/divar\/postlistviewcontroller\/postlisttabbedvc","title":"var postListTabbedVC: PostListTabbedViewController!","type":"property"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchstack","title":"var searchStack: UIStackView","type":"property"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchvc","title":"var searchVC: SearchViewController?","type":"property"},{"path":"\/documentation\/divar\/postlistviewcontroller\/stickycategories","title":"var stickyCategories: [StickyCategory]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewcontroller\/fillcategorycarousel(_:)","title":"func fillCategoryCarousel([StickyCategory])","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/handleupdate()","title":"func handleUpdate()","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/normalmode()","title":"func normalMode()","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/reload()","title":"func reload()","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/reload(filterset:isfromsearch:)","title":"func reload(filterSet: SearchFilterHistory, isFromSearch: Bool)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/scrolltotop()","title":"func scrollToTop()","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchboxsearchbuttonclicked(searchtext:)","title":"func searchBoxSearchButtonClicked(searchText: String)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchingmode()","title":"func searchingMode()","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/selectcarouselitem(_:)","title":"func selectCarouselItem(Schema)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/setupsearchcontroller()","title":"func setupSearchController()","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/showsmartsuggestions(_:forceexpand:)","title":"func showSmartSuggestions([TagListSuggestion], forceExpand: Bool)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/taglistdidselect(item:index:)","title":"func tagListDidSelect(item: TagListItem, index: Int)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/taglistdidremove(item:)","title":"func taglistDidRemove(item: TagListItem)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/updatenocatpage(_:)","title":"func updateNoCatPage(Bool)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/updatequery(_:)","title":"func updateQuery(String)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewcontroller\/categorycarouseldidscroll(_:isdecelerating:)","title":"func categoryCarouselDidScroll(CategoryCarouselBar, isDecelerating: Bool)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/didselectcategorycarouselitem(_:index:)","title":"func didSelectCategoryCarouselItem(CategoryCarouselBar, index: Int)","type":"method"}],"path":"\/documentation\/divar\/postlistviewcontroller\/categorycarouselbardelegate-implementations","title":"CategoryCarouselBarDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewcontroller\/chipview(_:didremoveitemat:item:)","title":"func chipView<T>(ChipView<T>, didRemoveItemAt: Int, item: T)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/chipview(_:didselectitemat:item:)","title":"func chipView<T>(ChipView<T>, didSelectItemAt: Int, item: T)","type":"method"}],"path":"\/documentation\/divar\/postlistviewcontroller\/chipviewdelegate-implementations","title":"ChipViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewcontroller\/listscrolling(_:didscrollto:)","title":"func listScrolling(UIViewController, didScrollTo: ScrollingDirection)","type":"method"}],"path":"\/documentation\/divar\/postlistviewcontroller\/listscrollingdelegate-implementations","title":"ListScrollingDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewcontroller\/scrollviewdidscroll(_:)","title":"func scrollViewDidScroll(UIScrollView)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/scrollviewshouldscrolltotop()","title":"func scrollViewShouldScrollToTop() -> Bool","type":"method"}],"path":"\/documentation\/divar\/postlistviewcontroller\/postsviewcontrollerdelegate-implementations","title":"PostsViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/postlistviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/postlistviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewcontroller\/didclose(_:)","title":"func didClose(UpdateViewController)","type":"method"}],"path":"\/documentation\/divar\/postlistviewcontroller\/updateviewcontrollerdelegate-implementations","title":"UpdateViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postlistviewcontroller","title":"PostListViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewmodel\/init(container:searchviewmodel:postlisttabbedviewmodel:)","title":"init(container: PostListViewModelDIContainer, searchViewModel: SearchViewModelProtocol, postListTabbedViewModel: PostListTabbedViewModelProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewmodel\/alertmessagetoaskpermissionforcitychanges","title":"var alertMessageToAskPermissionForCityChanges: String","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/carouselitems","title":"var carouselItems: [StickyCategory]?","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/carouselitems$","title":"var carouselItems$: AnyPublisher<[StickyCategory]?, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/cityname","title":"var cityName: String","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/cityname$","title":"var cityName$: AnyPublisher<String, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/delegate","title":"var delegate: PostListViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/error$","title":"var error$: AnyPublisher<(error: DError, onReload: (() -> Void)?), Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/errorsubject","title":"var errorSubject: PassthroughSubject<(error: DError, onReload: (() -> Void)?), Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/filterset","title":"var filterSet: SearchFilterHistory","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/ishidesearchboxleftviewsubject","title":"var isHideSearchBoxLeftViewSubject: PassthroughSubject<Bool, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/ismulticityenabled","title":"let isMultiCityEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/navigationtitle$","title":"var navigationTitle$: AnyPublisher<String?, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/navigationtitlesubject","title":"var navigationTitleSubject: PassthroughSubject<String?, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/nocatpage","title":"var noCatPage: Bool","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/postlisttabbedviewmodel","title":"let postListTabbedViewModel: PostListTabbedViewModelProtocol","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/reload$","title":"var reload$: AnyPublisher<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/reloadsubject","title":"var reloadSubject: PassthroughSubject<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/searchboxtext","title":"var searchBoxText: String","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/searchboxtext$","title":"var searchBoxText$: AnyPublisher<(String?, Bool), Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/searchboxtextsubject","title":"var searchBoxTextSubject: PassthroughSubject<(String?, Bool), Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/searchviewmodel","title":"let searchViewModel: SearchViewModelProtocol","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/selectedtabbarindex","title":"var selectedTabbarIndex: Int?","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/showalerttoaskpermissionforcitychanges$","title":"var showAlertToAskPermissionForCityChanges$: AnyPublisher<String, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/showtooltiponcitychanges$","title":"var showToolTipOnCityChanges$: AnyPublisher<String, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/showtooltiponcitychangessubject","title":"var showToolTipOnCityChangesSubject: PassthroughSubject<String, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/taglistsuggestion$","title":"var tagListsuggestion$: AnyPublisher<[TagListSuggestion]?, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/taglistsuggestionsubject","title":"var tagListsuggestionSubject: PassthroughSubject<[TagListSuggestion]?, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/viewstate$","title":"var viewState$: AnyPublisher<ViewState, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodel\/viewstatesubject","title":"var viewStateSubject: PassthroughSubject<ViewState, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewmodel\/didreceiveresult(didreceiveresultdatamodel:)","title":"func didReceiveResult(didReceiveResultDataModel: DidReceiveResultDataModel)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/handlebooleansuggestionaction(suggestion:index:)","title":"func handleBooleanSuggestionAction(suggestion: TagListSuggestion, index: Int)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/handlecategorysuggestionaction(suggestion:index:)","title":"func handleCategorySuggestionAction(suggestion: TagListSuggestion, index: Int)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/loadmore(page:offset:currenttabfilters:currenttabindex:_:)","title":"func loadMore(page: Int, offset: CLongLong, currentTabFilters: [String : Any]?, currentTabIndex: Int, PostModelsResultClosure)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/loadpostslist(with:type:_:ontabchange:)","title":"func loadPostsList(with: GetPostListStruct, type: PostListLoadType, PostModelsResultClosure, onTabChange: ((TabList?) -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/loghandlecategorysuggestion(suggestion:index:)","title":"func logHandleCategorySuggestion(suggestion: TagListSuggestion, index: Int)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/logloadpostpage(logloadpostpagemodel:)","title":"func logLoadPostPage(logLoadPostPageModel: LogLoadPostPageModel)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/logsearch(_:choices:)","title":"func logSearch(String, choices: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/logsearchedterm(text:index:)","title":"func logSearchedTerm(text: String, index: Int)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/logsuggestiondidselect(text:index:suggestiondic:filterdesc:)","title":"func logSuggestionDidSelect(text: String?, index: Int, suggestionDic: [String : Any], filterDesc: String)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/postsviewmodel(didselectpostwith:at:tabbarindex:)","title":"func postsViewModel(didSelectPostWith: String?, at: IndexPath, tabBarIndex: Int?) -> String","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/refresh(currenttabfilters:currenttabindex:_:ontabchange:)","title":"func refresh(currentTabFilters: [String : Any]?, currentTabIndex: Int, PostModelsResultClosure, onTabChange: ((TabList?) -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/reload(filterset:isfromsearch:)","title":"func reload(filterSet: SearchFilterHistory, isFromSearch: Bool?)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/reload(isfromsearch:)","title":"func reload(isFromSearch: Bool)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/selectcarouselitem(_:)","title":"func selectCarouselItem(Schema)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/setsearchboxtext()","title":"func setSearchBoxText()","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/updatehistory(with:)","title":"func updateHistory(with: PostList)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewmodel\/postlisttabbedviewmodel(_:page:offset:tabfilters:tabindex:onloadmore:)","title":"func postListTabbedViewModel(PostListTabbedViewModel, page: Int, offset: CLongLong, tabFilters: [String : Any]?, tabIndex: Int, onLoadMore: PostModelsResultClosure)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/postlisttabbedviewmodel(_:tabfilters:tabindex:onrefresh:ontabchange:)","title":"func postListTabbedViewModel(PostListTabbedViewModel, tabFilters: [String : Any]?, tabIndex: Int, onRefresh: PostModelsResultClosure, onTabChange: (TabList?) -> Void)","type":"method"}],"path":"\/documentation\/divar\/postlistviewmodel\/postlisttabbedviewmodeldatasource-implementations","title":"PostListTabbedViewModelDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewmodel\/searchboxsearchbuttonclicked(searchtext:)","title":"func searchBoxSearchButtonClicked(searchText: String)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/searchboxtextdidchange(_:)","title":"func searchBoxTextDidChange(String)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/selectcity()","title":"func selectCity()","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/taglistdidselect(item:index:)","title":"func tagListDidSelect(item: TagListItem, index: Int)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/taglistdidremove(item:)","title":"func taglistDidRemove(item: TagListItem)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/userpermissionresulttochangecities(granted:)","title":"func userPermissionResultToChangeCities(granted: Bool)","type":"method"}],"path":"\/documentation\/divar\/postlistviewmodel\/postlistviewmodelprotocol-implementations","title":"PostListViewModelProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewmodel\/postsviewmodel(_:didrequestperformwidgetaction:)","title":"func postsViewModel(PostsViewModelProtocol, didRequestPerformWidgetAction: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/postsviewmodel(_:didrequestperformwidgetaction:widget:actionlog:)","title":"func postsViewModel(PostsViewModelProtocol, didRequestPerformWidgetAction: Widgets_Action, widget: Widgets_Widget, actionLog: ActionLog_ActionLogCoordinator?)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/postsviewmodel(_:didrequstfilterpostswithfilter:isfromsearch:)","title":"func postsViewModel(PostsViewModelProtocol, didRequstFilterPostsWithFilter: [String : Any], isFromSearch: Bool)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/postsviewmodel(_:didselectpost:at:)","title":"func postsViewModel(PostsViewModelProtocol, didSelectPost: PostModel, at: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/postlistviewmodel\/postsviewmodeldelegate-implementations","title":"PostsViewModelDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewmodel\/searchviewmodel(_:didreceivesuggestionswithquery:choices:)","title":"func searchViewModel(SearchViewModelProtocol, didReceiveSuggestionsWithQuery: String, choices: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/searchviewmodel(_:didselecthistory:at:)","title":"func searchViewModel(SearchViewModelProtocol, didSelectHistory: SearchFilterHistory, at: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodel\/searchviewmodel(_:didselectsuggestion:at:suggestiondic:)","title":"func searchViewModel(SearchViewModelProtocol, didSelectSuggestion: SearchFilterHistory, at: IndexPath, suggestionDic: [String : Any]?)","type":"method"}],"path":"\/documentation\/divar\/postlistviewmodel\/searchviewmodeldelegate-implementations","title":"SearchViewModelDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postlistviewmodel","title":"PostListViewModel","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/initial(mngtoken:)","title":"func initial(mngToken: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/initial(with:mngtoken:)","title":"func initial(with: NavigationController, mngToken: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/initialdeletepost(postdata:)","title":"func initialDeletePost(postData: PostViewStructure) -> NavigationController","type":"method"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/initialpostpayment(with:managetoken:)","title":"func initialPostPayment(with: NavigationController, manageToken: String) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/nationalidconfirmedsuccessfully(in:)","title":"func nationalIdConfirmedSuccessfully(in: NationalIdVerificationFlowController)","type":"method"}],"path":"\/documentation\/divar\/postmanageflowcontroller\/nationalidverificationflowcontrollerdelegate-implementations","title":"NationalIdVerificationFlowControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/authnationalid(_:)","title":"func authNationalID(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/authtelephonenumber(_:)","title":"func authTelephoneNumber(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/claimpost(_:)","title":"func claimPost(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/openarchivepost(_:)","title":"func openArchivePost(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/openauthuser(_:)","title":"func openAuthUser(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/openmydivarpostmanage(_:)","title":"func openMyDivarPostManage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/openpaymenthistory(_:)","title":"func openPaymentHistory(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/openpostmanage(_:)","title":"func openPostManage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/openupgradepost(_:)","title":"func openUpgradePost(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/postmanageflowcontroller\/postmanageactionhandler-implementations","title":"PostManageActionHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/postpaymentdidrequestpaymenthistory(_:mngtoken:)","title":"func postPaymentDidRequestPaymentHistory(PostPaymentViewController, mngToken: String)","type":"method"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/postpaymentdidrequestshowingcoderedeem(_:mngtoken:payment:)","title":"func postPaymentDidRequestShowingCodeRedeem(PostPaymentViewController, mngToken: String, payment: PostPaymentStructure)","type":"method"}],"path":"\/documentation\/divar\/postmanageflowcontroller\/postpaymentviewcontrollerdelegate-implementations","title":"PostPaymentViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/redeemcodesucceded(vc:message:)","title":"func redeemCodeSucceded(vc: PostRedeemCodeController, message: String)","type":"method"}],"path":"\/documentation\/divar\/postmanageflowcontroller\/postredeemcodecontrollerdelegate-implementations","title":"PostRedeemCodeControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanageflowcontroller\/shahkarlandlineconfirmedsuccessfully(in:)","title":"func shahkarlandlineConfirmedSuccessfully(in: ShahkarLandlineVerificationFlowController)","type":"method"}],"path":"\/documentation\/divar\/postmanageflowcontroller\/shahkarlandlineverificationflowcontrollerdelegate-implementations","title":"ShahkarLandlineVerificationFlowControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postmanageflowcontroller","title":"PostManageFlowController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorycell\/orderid","title":"var orderID: UILabel!","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistorycell\/price","title":"var price: UILabel!","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistorycell\/time","title":"var time: UILabel!","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistorycell\/title","title":"var title: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorycell\/fill(_:)","title":"func fill(PostPaymentHistoryStructure)","type":"method"}],"path":"\/documentation\/divar\/postpaymenthistorycell","title":"PostPaymentHistoryCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/init(container:mngtoken:)","title":"init(container: PostPaymentHistoryViewControllerDIContainer, mngToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/mngtoken","title":"var mngToken: String","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/paymenthistory","title":"var paymentHistory: [PostPaymentHistoryStructure]","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/tableview","title":"var tableView: AdvancedTableView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/getdata()","title":"func getData()","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/reload()","title":"func reload()","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/setuppulltorefresh()","title":"func setupPullToRefresh()","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/postpaymenthistoryviewcontroller","title":"PostPaymentHistoryViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postpaymentviewcontroller\/init(container:mngtoken:)","title":"init(container: PostPaymentViewControllerDIContainer, mngToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentviewcontroller\/delegate","title":"var delegate: PostPaymentViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/postpaymentviewcontroller\/orderid","title":"var orderId: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentviewcontroller\/refreshdata()","title":"func refreshData()","type":"method"},{"path":"\/documentation\/divar\/postpaymentviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/postpaymentviewcontroller","title":"PostPaymentViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postredeemcodecontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postredeemcodecontroller\/init(container:payment:mngtoken:)","title":"init(container: PostRedeemCodeControllerDIContainer, payment: PostPaymentStructure, mngToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postredeemcodecontroller\/delegate","title":"var delegate: PostRedeemCodeControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/postredeemcodecontroller\/formaccessoryviewsttribute","title":"var formAccessoryViewSttribute: FormAccessoryViewAttribute","type":"property"},{"path":"\/documentation\/divar\/postredeemcodecontroller\/managetoken","title":"var manageToken: String","type":"property"},{"path":"\/documentation\/divar\/postredeemcodecontroller\/payment","title":"var payment: PostPaymentStructure","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postredeemcodecontroller\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/divar\/postredeemcodecontroller\/generateformforredeem(redeemcallback:)","title":"func generateFormForRedeem(redeemCallback: ((ButtonCellOf<String>, ButtonRow) -> Void)) -> Form","type":"method"},{"path":"\/documentation\/divar\/postredeemcodecontroller\/redeemcode(_:)","title":"func redeemCode(String?)","type":"method"},{"path":"\/documentation\/divar\/postredeemcodecontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/postredeemcodecontroller","title":"PostRedeemCodeController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/init(container:data:post:)","title":"init(container: PostReportDescriptionViewControllerDIContainer, data: SingleMultiModel, post: PostViewStructure?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/bottomconstraint","title":"var bottomConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/data","title":"let data: SingleMultiModel","type":"property"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/delegate","title":"var delegate: PostReportDescriptionViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/descriptionplaceholder","title":"var descriptionPlaceholder: String","type":"property"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/maintable","title":"var mainTable: AbstractTableViewController","type":"property"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/posttitle","title":"let postTitle: String","type":"property"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/stackholder","title":"var stackHolder: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/token","title":"let token: String","type":"property"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/twinbar","title":"var twinBar: TwinButtonsViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/accessorytoolbar()","title":"func accessoryToolbar() -> UIView?","type":"method"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/handlekeyboardstatus(_:)","title":"func handleKeyboardStatus(Notification)","type":"method"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/setupchilds()","title":"func setupChilds()","type":"method"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/setupwidgets()","title":"func setupWidgets()","type":"method"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/didinnercell(_:with:change:value:)","title":"func didInnerCell(AbstractTableViewController, with: IndexPath?, change: ConfigurableCellEnum, value: Any)","type":"method"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/didstartinfinitescroll(_:scrollview:)","title":"func didStartInfiniteScroll(AbstractTableViewController, scrollView: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/didstartpulltorefresh(_:scrollview:)","title":"func didStartPullToRefresh(AbstractTableViewController, scrollView: UIScrollView?)","type":"method"}],"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/abstracttableviewcontrollerdelegate-implementations","title":"AbstractTableViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/secondarybuttonclicked(_:action:)","title":"func secondaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/postreportdescriptionviewcontroller\/twinbuttonsviewcontrollerdelegate-implementations","title":"TwinButtonsViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postreportdescriptionviewcontroller","title":"PostReportDescriptionViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/init(formid:categoryslug:editid:businesstype:)","title":"init(formID: String, categorySlug: String, editID: String?, businessType: BusinessType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/usertappedback","title":"var userTappedBack: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/logcategorychange()","title":"func logCategoryChange()","type":"method"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/logentersubmit(categoryslug:isdraft:)","title":"func logEnterSubmit(categorySlug: String?, isDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/logexitsubmit(frompage:topage:issuccessful:token:)","title":"func logExitSubmit(fromPage: Int, toPage: Int, isSuccessful: Bool, token: String?)","type":"method"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/logsubmitnextpage(frompage:topage:previouspagedata:nextpagedata:)","title":"func logSubmitNextPage(fromPage: Int, toPage: Int, previousPageData: [String : Any], nextPageData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/logsubmitpreviouspagepage(frompage:topage:)","title":"func logSubmitPreviousPagePage(fromPage: Int, toPage: Int)","type":"method"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/logsubmitvalidationerror(fieldname:fieldvalue:errorreason:)","title":"func logSubmitValidationError(fieldName: String, fieldValue: Any, errorReason: String)","type":"method"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/setcategoryslug(to:)","title":"func setCategorySlug(to: String?)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/businesstype\/marketplace","title":"case marketplace","type":"case"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/businesstype\/personal","title":"case personal","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/businesstype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/businesstype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/businesstype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postsubmitactionloghelper\/businesstype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/businesstype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsubmitactionloghelper\/businesstype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postsubmitactionloghelper\/businesstype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postsubmitactionloghelper\/businesstype","title":"PostSubmitActionLogHelper.BusinessType","type":"enum"}],"path":"\/documentation\/divar\/postsubmitactionloghelper","title":"PostSubmitActionLogHelper","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewlistcell\/data","title":"var data: ListDataStructure?","type":"property"},{"path":"\/documentation\/divar\/postviewlistcell\/delegate","title":"var delegate: PostViewListCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/postviewlistcell\/separatorview","title":"var separatorView: UIView!","type":"property"},{"path":"\/documentation\/divar\/postviewlistcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/postviewlistcell\/valuelabel","title":"var valueLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewlistcell\/fill(_:)","title":"func fill(ListDataStructure)","type":"method"},{"path":"\/documentation\/divar\/postviewlistcell\/fill(title:value:)","title":"func fill(title: String?, value: String?)","type":"method"},{"path":"\/documentation\/divar\/postviewlistcell\/setselected(_:animated:)","title":"func setSelected(Bool, animated: Bool)","type":"method"}],"path":"\/documentation\/divar\/postviewlistcell","title":"PostViewListCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewservice\/contacts(path:)","title":"func contacts(path: String) async -> Result<GetContactWidgets, DError>","type":"method"},{"path":"\/documentation\/divar\/postviewservice\/getcontactbottomsheet(token:for:)","title":"func getContactBottomSheet(token: String, for: UserType) async -> Result<Widgets_BottomSheet, DError>","type":"method"},{"path":"\/documentation\/divar\/postviewservice\/getcontactwidgets(token:for:)","title":"func getContactWidgets(token: String?, for: UserType) async -> Result<WidgetGetContactWidgets, DError>","type":"method"},{"path":"\/documentation\/divar\/postviewservice\/getreportreasons()","title":"func getReportReasons() async -> Result<[ReportReason], DError>","type":"method"},{"path":"\/documentation\/divar\/postviewservice\/reportpost(posttoken:reason:description:phone:)","title":"func reportPost(postToken: String, reason: String, description: String?, phone: String?) async -> Result<Void, DError>","type":"method"}],"path":"\/documentation\/divar\/postviewservice","title":"PostViewService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postchitableviewcell\/message","title":"var message: ChatConversationMessageTable?","type":"property"},{"path":"\/documentation\/divar\/postchitableviewcell\/messageimageview","title":"var messageImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/postchitableviewcell\/messagesubtitlelabel","title":"var messageSubtitleLabel: MDHTMLLabel!","type":"property"},{"path":"\/documentation\/divar\/postchitableviewcell\/messagetitlelabel","title":"var messageTitleLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/postchitableviewcell\/postchilastseenid","title":"var postchiLastSeenID: String?","type":"property"},{"path":"\/documentation\/divar\/postchitableviewcell\/seenstatusimageview","title":"var seenStatusImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/postchitableviewcell\/timelabel","title":"var timeLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/postchitableviewcell\/title","title":"var title: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postchitableviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/postchitableviewcell\/fill(with:postchilastseenid:title:)","title":"func fill(with: ChatConversationMessageTable, postchiLastSeenID: String?, title: String?)","type":"method"},{"path":"\/documentation\/divar\/postchitableviewcell\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"}],"path":"\/documentation\/divar\/postchitableviewcell","title":"PostchiTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postfixtextfield\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postfixtextfield\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postfixtextfield\/postfix","title":"var postfix: String","type":"property"},{"path":"\/documentation\/divar\/postfixtextfield\/postfixdelegate","title":"var postfixDelegate: PostfixTextFieldProtocol?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postfixtextfield\/addpostfix()","title":"func addPostFix()","type":"method"},{"path":"\/documentation\/divar\/postfixtextfield\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/postfixtextfield\/originaltext()","title":"func originalText() -> String?","type":"method"},{"path":"\/documentation\/divar\/postfixtextfield\/removepostfix()","title":"func removePostFix()","type":"method"},{"path":"\/documentation\/divar\/postfixtextfield\/texthaschanged()","title":"func textHasChanged()","type":"method"}],"path":"\/documentation\/divar\/postfixtextfield","title":"PostfixTextField","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/postsviewcontroller\/init(viewmodel:)","title":"init(viewModel: PostsViewModelProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/delegate","title":"var delegate: PostsViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/postsviewcontroller\/scrollingdelegate","title":"var scrollingDelegate: ListScrollingDelegate?","type":"property"},{"path":"\/documentation\/divar\/postsviewcontroller\/setuppullandscroll","title":"var setupPullAndScroll: Void","type":"property"},{"path":"\/documentation\/divar\/postsviewcontroller\/setupui","title":"var setupUI: Void","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/append(_:)","title":"func append([PostModel])","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/clearall()","title":"func clearAll()","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/load(with:)","title":"func load(with: [PostModel])","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/makedatasource()","title":"func makeDataSource() -> UICollectionViewDiffableDataSource<Section, PostModel>","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/refresh()","title":"func refresh()","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/reload()","title":"func reload()","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/scrolltotop()","title":"func scrollToTop()","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/setupinfinitescroll()","title":"func setupInfiniteScroll()","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/setuppulltorefresh()","title":"func setupPullToRefresh()","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/section\/main","title":"case main","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/section\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/section\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postsviewcontroller\/section\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postsviewcontroller\/section","title":"PostsViewController.Section","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/collectionview(_:heightforitemat:)","title":"func collectionView(UICollectionView, heightForItemAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/collectionview(_:shoulditemhasfullwidthat:)","title":"func collectionView(UICollectionView, shouldItemHasFullWidthAt: IndexPath) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postsviewcontroller\/flowlayoutwithanimationsdelegate-implementations","title":"FlowLayoutWithAnimationsDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/postsviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/scrollviewdidscroll(_:)","title":"func scrollViewDidScroll(UIScrollView)","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/scrollviewshouldscrolltotop(_:)","title":"func scrollViewShouldScrollToTop(UIScrollView) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postsviewcontroller\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/scrollview(_:didchangeverticalscrolldirection:)","title":"func scrollView(UIScrollView, didChangeVerticalScrollDirection: VerticalScrollingDirection)","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/scrollviewdirectionchangesensitivity(_:)","title":"func scrollViewDirectionChangeSensitivity(UIScrollView) -> DirectionChangeSensitivity","type":"method"}],"path":"\/documentation\/divar\/postsviewcontroller\/uiscrollviewdirectiondelegate-implementations","title":"UIScrollViewDirectionDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewcontroller\/callparent(action:widget:)","title":"func callParent(action: CustomAction, widget: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/callparent(action:widget:actionlogcoordinator:)","title":"func callParent(action: Widgets_Action, widget: Widgets_Widget, actionLogCoordinator: ActionLog_ActionLogCoordinator?)","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/internalstatechanges(widget:parameters:)","title":"func internalStateChanges(widget: Widgets_Widget, parameters: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/postsviewcontroller\/reloadself(_:newwidget:)","title":"func reloadSelf(WidgetCell, newWidget: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/postsviewcontroller\/widgetcelldelegate-implementations","title":"WidgetCellDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postsviewcontroller","title":"PostsViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewmodel\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewmodel\/canloadmore","title":"var canLoadMore: Bool","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/datasource","title":"var dataSource: PostsViewModelDataSource?","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/delegate","title":"var delegate: PostsViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/emptystatemessage","title":"var emptyStateMessage: String?","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/isloading","title":"var isLoading: Bool","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/loadingstatus$","title":"var loadingStatus$: AnyPublisher<PostsLoadingStatus, Never>","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/loadingsubject","title":"var loadingSubject: PassthroughSubject<PostsLoadingStatus, Never>","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/offset","title":"var offset: CLongLong","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/page","title":"var page: Int","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/posts","title":"var posts: [PostModel]","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/posts$","title":"var posts$: AnyPublisher<[PostModel], Never>","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/postssubject","title":"var postsSubject: PassthroughSubject<[PostModel], Never>","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/poststoappend$","title":"var postsToAppend$: AnyPublisher<[PostModel], Never>","type":"property"},{"path":"\/documentation\/divar\/postsviewmodel\/poststoappendsubject","title":"var postsToAppendSubject: PassthroughSubject<[PostModel], Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewmodel\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/divar\/postsviewmodel\/filter(posts:_:)","title":"func filter(posts: [PostModel], ([PostModel]) -> Void)","type":"method"},{"path":"\/documentation\/divar\/postsviewmodel\/loadmore()","title":"func loadMore()","type":"method"},{"path":"\/documentation\/divar\/postsviewmodel\/refresh()","title":"func refresh()","type":"method"},{"path":"\/documentation\/divar\/postsviewmodel\/select(action:widget:actionlogcoordinator:)","title":"func select(action: Widgets_Action, widget: Widgets_Widget, actionLogCoordinator: ActionLog_ActionLogCoordinator?)","type":"method"},{"path":"\/documentation\/divar\/postsviewmodel\/select(post:at:)","title":"func select(post: PostModel, at: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/postsviewmodel","title":"PostsViewModel","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/priceestimationcollectionviewcell\/priceview","title":"var priceView: PriceEstimationView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/priceestimationcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/priceestimationcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/priceestimationcollectionviewcell","title":"PriceEstimationCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/priceestimationview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/priceestimationview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/priceestimationview\/bottomstackview","title":"var bottomStackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/priceestimationview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/priceestimationview\/leftlabel","title":"var leftLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/priceestimationview\/middlelabel","title":"var middleLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/priceestimationview\/rightlabel","title":"var rightLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/priceestimationview\/topleftlabel","title":"var topLeftLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/priceestimationview\/toprightlabel","title":"var topRightLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/priceestimationview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/priceestimationview\/fill(with:)","title":"func fill(with: Widgets_PriceEstimationRowData)","type":"method"}],"path":"\/documentation\/divar\/priceestimationview","title":"PriceEstimationView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/priceevaluationtableviewcell\/priceevaluationview","title":"var priceEvaluationView: EvaluationView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/priceevaluationtableviewcell\/fill(with:)","title":"func fill(with: PriceEvaluationModel)","type":"method"}],"path":"\/documentation\/divar\/priceevaluationtableviewcell","title":"PriceEvaluationTableViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/priceflowcontroller\/initialestimateusedprice(in:payload:)","title":"func initialEstimateUsedPrice(in: NavigationController, payload: BooleanRateRowFeedBackPayload) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/priceflowcontroller\/initialpricetools(in:)","title":"func initialPriceTools(in: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/priceflowcontroller\/initialusedprice(in:)","title":"func initialUsedPrice(in: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/priceflowcontroller\/initialzeroprice()","title":"func initialZeroPrice() -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/priceflowcontroller\/initialzeroprice(in:)","title":"func initialZeroPrice(in: NavigationController) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/priceflowcontroller\/lastpagecalled(with:)","title":"func lastPageCalled(with: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/priceflowcontroller\/usedpriceformviewcontrollerdelegate-implementations","title":"UsedPriceFormViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/priceflowcontroller","title":"PriceFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pricerowcollectioncell\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/pricerowcollectioncell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/pricerowcollectioncell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pricerowcollectioncell\/fill(with:)","title":"func fill(with: Widgets_PriceRowData)","type":"method"},{"path":"\/documentation\/divar\/pricerowcollectioncell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/pricerowcollectioncell\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pricerowcollectioncell\/pricerow(didselectpinin:)","title":"func priceRow(didSelectPinIn: PriceChangeRow)","type":"method"}],"path":"\/documentation\/divar\/pricerowcollectioncell\/pricerowdelegate-implementations","title":"PriceRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/pricerowcollectioncell","title":"PriceRowCollectionCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/primarybutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/primarybutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/primarybutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/primarybutton\/fill(data:)","title":"func fill(data: Widgets_WideButtonBarWidgetData.Button)","type":"method"}],"path":"\/documentation\/divar\/primarybutton","title":"PrimaryButton","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/primarybuttontableviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/primarybuttontableviewcell\/setselected(_:animated:)","title":"func setSelected(Bool, animated: Bool)","type":"method"}],"path":"\/documentation\/divar\/primarybuttontableviewcell","title":"PrimaryButtonTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/privacycell\/delegate","title":"var delegate: PrivacyCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/privacycell\/textmessage","title":"var textMessage: SonnatHTMLLabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/privacycell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/privacycell\/fill(_:ishtml:)","title":"func fill(String, isHTML: Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/privacycell\/htmllabel(_:didtaponurl:)","title":"func htmlLabel(SonnatHTMLLabel, didTapOnUrl: URL)","type":"method"}],"path":"\/documentation\/divar\/privacycell\/sonnathtmllabeldelegate-implementations","title":"SonnatHTMLLabelDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/privacycell","title":"PrivacyCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/privateactionlogactionbuilder\/click()","title":"func click() -> PrivateActionLogBuilder","type":"method"},{"path":"\/documentation\/divar\/privateactionlogactionbuilder\/load()","title":"func load() -> PrivateActionLogBuilder","type":"method"},{"path":"\/documentation\/divar\/privateactionlogactionbuilder\/search()","title":"func search() -> PrivateActionLogBuilder","type":"method"},{"path":"\/documentation\/divar\/privateactionlogactionbuilder\/secondaryclick()","title":"func secondaryClick() -> PrivateActionLogBuilder","type":"method"},{"path":"\/documentation\/divar\/privateactionlogactionbuilder\/view()","title":"func view() -> PrivateActionLogBuilder","type":"method"}],"path":"\/documentation\/divar\/privateactionlogactionbuilder","title":"PrivateActionLogActionBuilder","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/privateactionlogbuilder\/build()","title":"func build() -> ActionLog_ActionInfo","type":"method"}],"path":"\/documentation\/divar\/privateactionlogbuilder","title":"PrivateActionLogBuilder","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pushhandler\/application(_:didfinishlaunchingwithoptions:)","title":"func application(UIApplication, didFinishLaunchingWithOptions: [UIApplication.LaunchOptionsKey : Any]?)","type":"method"},{"path":"\/documentation\/divar\/pushhandler\/login(identifier:)","title":"func login(identifier: String)","type":"method"},{"path":"\/documentation\/divar\/pushhandler\/logout()","title":"func logout()","type":"method"},{"path":"\/documentation\/divar\/pushhandler\/manualregisterforremotenotifications()","title":"func manualRegisterForRemoteNotifications()","type":"method"},{"path":"\/documentation\/divar\/pushhandler\/setpushprovider(_:)","title":"func setPushProvider(PushProviders)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pushhandler\/shared","title":"static let shared: PushHandler","type":"property"}],"path":"\/documentation\/divar\/pushhandler","title":"PushHandler","type":"class"},{"path":"\/documentation\/divar\/pushretrypolicy","title":"PushRetryPolicy","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pushservice\/init(servicenetworkmanager:userdefaults:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol, userDefaults: UserDefaults)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pushservice\/subscribepush(data:)","title":"func subscribePush(data: PushSubscribeRequest) async -> Result<PushSubscribeResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/pushservice\/unsubscribepush(playerid:)","title":"func unsubscribePush(playerID: String) async throws","type":"method"}],"path":"\/documentation\/divar\/pushservice","title":"PushService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/qatableviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/qatableviewcontroller\/init(configs:)","title":"init(configs: QAConfigurations)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/qatableviewcontroller\/configs","title":"var configs: QAConfigurations","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/qatableviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/qatableviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/qatableviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/qatableviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/qatableviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/qatableviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/qatableviewcontroller","title":"QATableViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/qlvideocontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/qlvideocontroller\/viewdidlayoutsubviews()","title":"func viewDidLayoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/qlvideocontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/qlvideocontroller","title":"QLVideoController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/init(fileinfo:index:)","title":"init(fileInfo: [FileInfo], index: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/cachedirectory","title":"let cacheDirectory: URL","type":"property"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/fileinfo","title":"let fileInfo: [FileInfo]","type":"property"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/filestaticurls","title":"var fileStaticURLs: [URL?]","type":"property"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/index","title":"var index: Int","type":"property"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/loadingurl","title":"var loadingURL: URL?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/numberofpreviewitems(in:)","title":"func numberOfPreviewItems(in: QLPreviewController) -> Int","type":"method"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/previewcontroller(_:previewitemat:)","title":"func previewController(QLPreviewController, previewItemAt: Int) -> QLPreviewItem","type":"method"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/quicklookviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"}],"path":"\/documentation\/divar\/quicklookviewcontroller","title":"QuickLookViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rangecell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/rangecell\/secondarytitlelabel","title":"var secondaryTitleLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/rangecell\/tableview","title":"var tableView: UITableView!","type":"property"},{"path":"\/documentation\/divar\/rangecell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rangecell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/rangecell\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/divar\/rangecell\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/rangecell\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/rangecell\/update()","title":"func update()","type":"method"},{"path":"\/documentation\/divar\/rangecell\/updatecellbyselectedvalue(_:max:)","title":"func updateCellBySelectedValue(Int?, max: Int?)","type":"method"},{"path":"\/documentation\/divar\/rangecell\/updatecellbyselectedvalue(values:)","title":"func updateCellBySelectedValue(values: [String : Int])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rangecell\/rangecellvaluechanged(_:)","title":"func rangeCellValueChanged(RangeSelectTableViewCell)","type":"method"}],"path":"\/documentation\/divar\/rangecell\/rangeselectcelldelegate-implementations","title":"RangeSelectCellDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/rangecell","title":"RangeCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rangerow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: (RangeCell, RangeRow) -> Void)","type":"init"},{"path":"\/documentation\/divar\/rangerow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/rangerow\/init(tag:property:title:defaultvalue:imageurl:required:validationoption:onvalidationchanged:)","title":"init(tag: String, property: Schema, title: String?, defaultValue: RangeObject?, imageURL: String?, required: Bool?, validationOption: ValidationOptions, onValidationChanged: (RangeCell, RangeRow) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rangerow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/rangerow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rangerow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/rangerow\/selectrow()","title":"func selectRow()","type":"method"},{"path":"\/documentation\/divar\/rangerow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rangerow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rangerow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/rangerow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/rangerow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/rangerow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/rangerow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/rangerow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rangerow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/rangerow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/rangerow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/rangerow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/rangerow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/rangerow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/rangerow","title":"RangeRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/actionsheet","title":"var actionSheet: BottomSheetViewController?","type":"property"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/currentvalue","title":"var currentValue: RangeSelectValue","type":"property"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/delegate","title":"var delegate: RangeSelectCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/key","title":"var key: String?","type":"property"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/label","title":"var label: UILabel!","type":"property"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/othervaluestitle","title":"var otherValuesTitle: String?","type":"property"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/pricepostfixlabel","title":"var pricePostFixLabel: String?","type":"property"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/textfield","title":"var textField: PostfixTextField!","type":"property"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/titletextfieldconstraint","title":"var titleTextfieldConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/toolbartitle","title":"var toolbarTitle: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/bottomsheetcase(string:)","title":"func bottomSheetCase(string: String?) -> Any?","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/donepressed(_:)","title":"func donePressed(UIBarButtonItem)","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/isbottomsheetcase(string:)","title":"func isBottomSheetCase(string: String?) -> Bool","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/setupkeyboard(property:)","title":"func setupKeyboard(property: Schema?)","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/textfielddidchange(_:)","title":"func textFieldDidChange(UITextField)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/rangeselectvalue\/bottomsheet(display:value:)","title":"case bottomSheet(display: String, value: Any)","type":"case"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/rangeselectvalue\/manual(display:realvalue:)","title":"case manual(display: String, realValue: String)","type":"case"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/rangeselectvalue\/none","title":"case none","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/rangeselectvalue\/intvalue","title":"var intValue: Int?","type":"property"}],"path":"\/documentation\/divar\/rangeselecttableviewcell\/rangeselectvalue","title":"RangeSelectTableViewCell.RangeSelectValue","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/changetextforpostfix()","title":"func changeTextForPostFix() -> Bool","type":"method"}],"path":"\/documentation\/divar\/rangeselecttableviewcell\/postfixtextfieldprotocol-implementations","title":"PostfixTextFieldProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"func textField(UITextField, shouldChangeCharactersIn: NSRange, replacementString: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/textfielddidbeginediting(_:)","title":"func textFieldDidBeginEditing(UITextField)","type":"method"},{"path":"\/documentation\/divar\/rangeselecttableviewcell\/textfieldshouldclear(_:)","title":"func textFieldShouldClear(UITextField) -> Bool","type":"method"}],"path":"\/documentation\/divar\/rangeselecttableviewcell\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/rangeselecttableviewcell","title":"RangeSelectTableViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/raterowcollectionviewcell\/raterowview","title":"var rateRowView: RateRowView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/raterowcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/raterowcollectionviewcell\/config()","title":"func config()","type":"method"},{"path":"\/documentation\/divar\/raterowcollectionviewcell\/fill(with:widget:)","title":"func fill(with: Widgets_RateRowData, widget: Widgets_Widget?)","type":"method"},{"path":"\/documentation\/divar\/raterowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/raterowcollectionviewcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"}],"path":"\/documentation\/divar\/raterowcollectionviewcell","title":"RateRowCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/raterowview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/raterowview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/raterowview\/angryimageview","title":"var angryImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/raterowview\/didtaprate","title":"var didTapRate: ((Widgets_RateScore.Score) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/raterowview\/emojislistimageview","title":"var emojisListImageView: [SonnatImageView]!","type":"property"},{"path":"\/documentation\/divar\/raterowview\/happyimageview","title":"var happyImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/raterowview\/neutralimageview","title":"var neutralImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/raterowview\/sadimageview","title":"var sadImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/raterowview\/satisfiedimageview","title":"var satisfiedImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/raterowview\/selectrate","title":"var selectRate: Widgets_RateScore.Score?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/raterowview\/angryimagetap()","title":"func angryImageTap()","type":"method"},{"path":"\/documentation\/divar\/raterowview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/raterowview\/config()","title":"func config()","type":"method"},{"path":"\/documentation\/divar\/raterowview\/happyimagetap()","title":"func happyImageTap()","type":"method"},{"path":"\/documentation\/divar\/raterowview\/neutralimagetap()","title":"func neutralImageTap()","type":"method"},{"path":"\/documentation\/divar\/raterowview\/resetemoji()","title":"func resetEmoji()","type":"method"},{"path":"\/documentation\/divar\/raterowview\/sadimagetap()","title":"func sadImageTap()","type":"method"},{"path":"\/documentation\/divar\/raterowview\/satisfiedimagetap()","title":"func satisfiedImageTap()","type":"method"}],"path":"\/documentation\/divar\/raterowview","title":"RateRowView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rateviewcontroller\/init(brandservice:payload:)","title":"init(brandService: DealerBrandServiceProtocol, payload: RateRowPayload)","type":"init"},{"path":"\/documentation\/divar\/rateviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rateviewcontroller\/bottomconstraint","title":"var bottomConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/rateviewcontroller\/bottomstack","title":"var bottomStack: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/rateviewcontroller\/delegate","title":"var delegate: RateViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/rateviewcontroller\/dummyheightconstraint","title":"var dummyHeightConstraint: NSLayoutConstraint?","type":"property"},{"path":"\/documentation\/divar\/rateviewcontroller\/dummyview","title":"let dummyView: UIView","type":"property"},{"path":"\/documentation\/divar\/rateviewcontroller\/mainscrollview","title":"var mainScrollView: ScrollingStackView!","type":"property"},{"path":"\/documentation\/divar\/rateviewcontroller\/payload","title":"var payload: RateRowPayload","type":"property"},{"path":"\/documentation\/divar\/rateviewcontroller\/rateview","title":"let rateView: RateRowView","type":"property"},{"path":"\/documentation\/divar\/rateviewcontroller\/textfieldview","title":"let textFieldView: DescriptionFieldView","type":"property"},{"path":"\/documentation\/divar\/rateviewcontroller\/widebutton","title":"var wideButton: WideButtonViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rateviewcontroller\/accessorytoolbar()","title":"func accessoryToolbar() -> UIView?","type":"method"},{"path":"\/documentation\/divar\/rateviewcontroller\/config()","title":"func config()","type":"method"},{"path":"\/documentation\/divar\/rateviewcontroller\/configdummyview()","title":"func configDummyView()","type":"method"},{"path":"\/documentation\/divar\/rateviewcontroller\/configrateview()","title":"func configRateView()","type":"method"},{"path":"\/documentation\/divar\/rateviewcontroller\/configtextfieldview()","title":"func configTextFieldView()","type":"method"},{"path":"\/documentation\/divar\/rateviewcontroller\/configwidebutton()","title":"func configWideButton()","type":"method"},{"path":"\/documentation\/divar\/rateviewcontroller\/handlekeyboardstatus(_:)","title":"func handleKeyboardStatus(Notification)","type":"method"},{"path":"\/documentation\/divar\/rateviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rateviewcontroller\/buttonclicked(_:action:)","title":"func buttonClicked(WideButtonViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/rateviewcontroller\/widebuttonviewcontrollerdelegate-implementations","title":"WideButtonViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/rateviewcontroller","title":"RateViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ratewidgetcell\/rateview","title":"var rateView: RateRowView!","type":"property"}],"path":"\/documentation\/divar\/ratewidgetcell","title":"RateWidgetCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ratewidgetrow\/init(property:validationoption:onvalidationchanged:onchange:)","title":"init(property: Schema, validationOption: ValidationOptions, onValidationChanged: (RateWidgetCell, RateWidgetRow) -> Void, onChange: (RateWidgetRow) -> Void)","type":"init"},{"path":"\/documentation\/divar\/ratewidgetrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ratewidgetrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/ratewidgetrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ratewidgetrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ratewidgetrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/ratewidgetrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/ratewidgetrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/ratewidgetrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/ratewidgetrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/ratewidgetrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ratewidgetrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/ratewidgetrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/ratewidgetrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/ratewidgetrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/ratewidgetrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/ratewidgetrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ratewidgetrow","title":"RateWidgetRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugservice\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugservice\/clientinfo","title":"var clientInfo: [String : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugservice\/flushqueue(completion:)","title":"func flushQueue(completion: (Bool) -> Void)","type":"method"},{"path":"\/documentation\/divar\/rawplugservice\/initjscore(jsurl:clientinfoprovider:sessionconfig:)","title":"func initJSCore(jsURL: URL, clientInfoProvider: RawPlugClientInfoProviderProtocol, sessionConfig: URLSessionConfiguration?)","type":"method"},{"path":"\/documentation\/divar\/rawplugservice\/logevent(_:withparameters:completion:)","title":"func logEvent(RawPlugEventType, withParameters: [RawPlugConstant : Any], completion: (Bool) -> Void)","type":"method"},{"path":"\/documentation\/divar\/rawplugservice\/setcurrentstate(state:value:)","title":"func setCurrentState(state: RawPlugState, value: Any?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugservice\/shared","title":"static let shared: RawPlugService","type":"property"}],"path":"\/documentation\/divar\/rawplugservice","title":"RawPlugService","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatebulkladderflowcontroller\/initialbulkladderviewcontroller(with:)","title":"func initialBulkLadderViewController(with: NavigationController) -> UIViewController","type":"method"}],"path":"\/documentation\/divar\/realestatebulkladderflowcontroller","title":"RealEstateBulkLadderFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateflowcontroller\/answerpanelinvitation(_:)","title":"func answerPanelInvitation(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/openagencyinformation(_:)","title":"func openAgencyInformation(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/openagencypage(_:)","title":"func openAgencyPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/openagentmanagement(_:)","title":"func openAgentManagement(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/openagentusage(_:)","title":"func openAgentUsage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/openagentsusagelist(_:)","title":"func openAgentsUsageList(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/openbulkladder(_:)","title":"func openBulkLadder(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/openfaq(_:)","title":"func openFAQ(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/opengetcontact(_:)","title":"func openGetContact(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/openindependentagentonboardingpage(_:)","title":"func openIndependentAgentOnboardingPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/openpanelinvitationlist(_:)","title":"func openPanelInvitationList(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/openrealestatepaymenthistory(_:)","title":"func openRealEstatePaymentHistory(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/opensubscriptionstatus(_:)","title":"func openSubscriptionStatus(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateflowcontroller\/openviewvr(_:)","title":"func openViewVR(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/realestateflowcontroller","title":"RealEstateFlowController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/initialaddeditagentviewcontroller(editid:)","title":"func initialAddEditAgentViewController(editID: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/initialaddeditagentviewcontroller(with:editid:)","title":"func initialAddEditAgentViewController(with: NavigationController, editID: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/initialaddvrviewcontroller(with:managetoken:)","title":"func initialAddVRViewController(with: NavigationController, manageToken: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/initialbusinesssubscriptionviewcontroller(purchasetype:consumertype:)","title":"func initialBusinessSubscriptionViewController(purchaseType: String, consumerType: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/initialbusinesssubscriptionviewcontroller(with:purchasetype:consumertype:)","title":"func initialBusinessSubscriptionViewController(with: NavigationController, purchaseType: String, consumerType: String) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/initialrealestateindependentagentregisterpage(with:)","title":"func initialRealEstateIndependentAgentRegisterPage(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/initialrealestatesubmitviewcontroller(editid:submittype:)","title":"func initialRealEstateSubmitViewController(editID: String?, submitType: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/initialrealestatesubmitviewcontroller(with:submittype:editid:)","title":"func initialRealEstateSubmitViewController(with: NavigationController, submitType: String?, editID: String?) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/initialsendfeedbackviewcontroller()","title":"func initialSendFeedbackViewController() -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/initialsendfeedbackviewcontroller(with:)","title":"func initialSendFeedbackViewController(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/intialrealestatedigitalregisteration(with:editid:)","title":"func intialRealEstateDigitalRegisteration(with: NavigationController, editID: String?) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/openaddeditagent(_:)","title":"func openAddEditAgent(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/openaddvrform(_:)","title":"func openAddVRForm(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/openrealestatedigitalregistration(_:)","title":"func openRealEstateDigitalRegistration(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/openrealestateindependentagentregister(_:)","title":"func openRealEstateIndependentAgentRegister(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/openrealestatesubmit(_:)","title":"func openRealEstateSubmit(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/openrealestatesubscription(_:)","title":"func openRealEstateSubscription(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateformflowcontroller\/opensendfeedbackmessage(_:)","title":"func openSendFeedbackMessage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/realestateformflowcontroller\/realestateformactionhandler-implementations","title":"RealEstateFormActionHandler Implementations","type":"symbol"}],"path":"\/documentation\/divar\/realestateformflowcontroller","title":"RealEstateFormFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/init(tag:property:)","title":"init(tag: String?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/locationservice","title":"var locationService: LocationServiceProtocol!","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/setvalues(_:location:)","title":"func setValues([String : Any], location: Location)","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/setvalues(_:vc:)","title":"func setValues([String : Any], vc: BaseFormViewController)","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/presenterrow","title":"RealEstateLocationSelectorRow.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/validationchanged","title":"RealEstateLocationSelectorRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorrow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/realestatelocationselectorrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/realestatelocationselectorrow","title":"RealEstateLocationSelectorRow","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/item\/init(data:type:)","title":"init(data: Any, type: RealEstateLocationSelectorViewController.ItemType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/item\/data","title":"let data: Any","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/item\/type","title":"let type: ItemType","type":"property"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/item","title":"RealEstateLocationSelectorViewController.Item","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/init(container:callback:property:)","title":"init(container: RealEstateLocationSelectorViewControllerDIContainer, callback: ((UIViewController) -> Void)?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/city","title":"var city: Place","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/collectionview","title":"var collectionView: UICollectionView!","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/hasdistrict","title":"var hasDistrict: Bool","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/items","title":"var items: [Item]","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/row","title":"var row: RowOf<Location>!","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/shouldlimitcitychange","title":"var shouldLimitCityChange: Bool","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/stackview","title":"var stackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/widebutton","title":"let wideButton: WideButtonViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/generatedata()","title":"func generateData()","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/isstreetenabled(with:)","title":"func isStreetEnabled(with: Int) -> Bool","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/registercells()","title":"func registerCells()","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/itemtype\/approxmatemaprow","title":"case approxmateMapRow","type":"case"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/itemtype\/cityrow","title":"case cityRow","type":"case"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/itemtype\/districtrow","title":"case districtRow","type":"case"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/itemtype\/error","title":"case error","type":"case"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/itemtype\/maprow","title":"case mapRow","type":"case"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/itemtype\/streetrow","title":"case streetRow","type":"case"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/itemtype\/subtitle","title":"case subtitle","type":"case"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/itemtype\/title","title":"case title","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/itemtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/itemtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/itemtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/itemtype","title":"RealEstateLocationSelectorViewController.ItemType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/didrequestdismissingoptionformfieldcontroller(_:)","title":"func didRequestDismissingOptionFormFieldController(UIViewController)","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/didselectoption(_:selectiontype:)","title":"func didSelectOption(Place, selectionType: CitySelectionType)","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/cityselectviewcontrollerdelegate-implementations","title":"CitySelectViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/mapselectorcontroller(_:didselectlocation:)","title":"func mapSelectorController(MapSelectorViewController, didSelectLocation: Location)","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/mapselectorviewcontrollerdelegate-implementations","title":"MapSelectorViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/didrequestsearch(_:query:completion:)","title":"func didRequestSearch(SearchAndSelectStringViewController, query: String, completion: ([String]) -> Void)","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/didselectvalue(_:selected:)","title":"func didSelectValue(SearchAndSelectStringViewController, selected: String)","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/searchandselectstringviewcontrollerdelegate-implementations","title":"SearchAndSelectStringViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/collectionview(_:layout:sizeforitemat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, sizeForItemAt: IndexPath) -> CGSize","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/buttonclicked(_:action:)","title":"func buttonClicked(WideButtonViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller\/widebuttonviewcontrollerdelegate-implementations","title":"WideButtonViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/realestatelocationselectorviewcontroller","title":"RealEstateLocationSelectorViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/init(container:formid:editid:newschema:newdata:previousdata:)","title":"init(container: RealEstateRegistrationViewControllerDIContainer, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/needsresetbutton","title":"var needsResetButton: Bool","type":"property"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/shouldcloseonfinish","title":"var shouldCloseOnFinish: Bool","type":"property"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/shouldshowsuccessmessage","title":"var shouldShowSuccessMessage: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/realestateregistrationviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/realestateregistrationviewcontroller","title":"RealEstateRegistrationViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateservice\/init(servicenetworkmanager:grpcnetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol, grpcNetworkManager: GRPCNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateservice\/addvr(managetoken:model:)","title":"func addVR(manageToken: String, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/realestateservice\/deleterealestateagent(id:)","title":"func deleteRealEstateAgent(id: Int32) async -> Result<RealEstate_RemoveAgentResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/realestateservice\/getagentmanagementschema(model:)","title":"func getAgentManagementSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/realestateservice\/getfeedbackaftercall(for:_:)","title":"func getFeedbackAfterCall(for: String, GRPCResponseType<RealEstate_GetAfterCallFeedbackResponse>)","type":"method"},{"path":"\/documentation\/divar\/realestateservice\/getpurchasepageschema(purchasetype:consumertype:model:)","title":"func getPurchasePageSchema(purchaseType: String, consumerType: String, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/realestateservice\/getrealestatedigitalregistration(model:)","title":"func getRealEstateDigitalRegistration(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/realestateservice\/getregisterindependentagentschema(model:)","title":"func getRegisterIndependentAgentSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/realestateservice\/getsubmitpageschema(submittype:model:)","title":"func getSubmitPageSchema(submitType: String?, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/realestateservice\/sendfeedbackaftercallreason(reasonid:posttoken:_:)","title":"func sendFeedbackAfterCallReason(reasonId: Int32, postToken: String, GRPCResponseType<Google_Protobuf_Empty>)","type":"method"},{"path":"\/documentation\/divar\/realestateservice\/sendrealestatefeedbackmessage(model:)","title":"func sendRealEstateFeedbackMessage(model: SchemaRequestModel) async -> FormResultValue","type":"method"}],"path":"\/documentation\/divar\/realestateservice","title":"RealEstateService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatesubmitviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/realestatesubmitviewcontroller\/init(container:submittype:formid:editid:newschema:newdata:previousdata:)","title":"init(container: RealEstateSubmitViewControllerDIContainer, submitType: String?, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatesubmitviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/realestatesubmitviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/realestatesubmitviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/realestatesubmitviewcontroller\/needsresetbutton","title":"var needsResetButton: Bool","type":"property"},{"path":"\/documentation\/divar\/realestatesubmitviewcontroller\/shoulddraft","title":"var shouldDraft: Bool","type":"property"},{"path":"\/documentation\/divar\/realestatesubmitviewcontroller\/submittype","title":"let submitType: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatesubmitviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/realestatesubmitviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/realestatesubmitviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/realestatesubmitviewcontroller","title":"RealEstateSubmitViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/recentvisitsviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/recentvisitsviewcontroller\/init(container:)","title":"init(container: RecentVisitsViewControllerDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/recentvisitsviewcontroller\/delegate","title":"var delegate: RecentVisitsViewControllerDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/recentvisitsviewcontroller\/logopeningpost(index:token:)","title":"func logOpeningPost(index: Int, token: String)","type":"method"},{"path":"\/documentation\/divar\/recentvisitsviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/recentvisitsviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/recentvisitsviewcontroller\/sonnatcollectionview(_:didselectitemat:)","title":"func sonnatCollectionView(CollectionCellController, didSelectItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/recentvisitsviewcontroller\/sonnatcollectionviewdelegate-implementations","title":"SonnatCollectionViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/recentvisitsviewcontroller","title":"RecentVisitsViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/redeembutton\/userinfo","title":"var userInfo: PostPaymentStructure?","type":"property"}],"path":"\/documentation\/divar\/redeembutton","title":"RedeemButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/init(container:formid:editid:newschema:newdata:previousdata:)","title":"init(container: RegisterAgentViewControllerDIContainer, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/needsresetbutton","title":"var needsResetButton: Bool","type":"property"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/shouldcloseonfinish","title":"var shouldCloseOnFinish: Bool","type":"property"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/shouldshowsuccessmessage","title":"var shouldShowSuccessMessage: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/registeragentviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/registeragentviewcontroller","title":"RegisterAgentViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/registerdealerviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/registerdealerviewcontroller\/init(container:formid:editid:newschema:newdata:previousdata:)","title":"init(container: RegisterDealerViewControllerDIContainer, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/registerdealerviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/registerdealerviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/registerdealerviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/registerdealerviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/registerdealerviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/registerdealerviewcontroller","title":"RegisterDealerViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/registermarketplaceactionloghelper\/init(formid:rawplugservice:)","title":"init(formID: String, rawPlugService: RawPlugService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/registermarketplaceactionloghelper\/usertappedback","title":"var userTappedBack: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/registermarketplaceactionloghelper\/logapprovetermsandconditions(currentpage:)","title":"func logApproveTermsAndConditions(currentPage: String?)","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceactionloghelper\/logdeclinetermsandconditions(currentpage:)","title":"func logDeclineTermsAndConditions(currentPage: String?)","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceactionloghelper\/logpostponestep(currentpage:)","title":"func logPostponeStep(currentPage: String?)","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceactionloghelper\/logregisternextstep(currentpage:)","title":"func logRegisterNextStep(currentPage: String?)","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceactionloghelper\/logregisterpreviousstep(currentpage:)","title":"func logRegisterPreviousStep(currentPage: String?)","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceactionloghelper\/logvalidationerror(fieldname:fieldvalue:currentpage:)","title":"func logValidationError(fieldName: String, fieldValue: Any, currentPage: String?)","type":"method"}],"path":"\/documentation\/divar\/registermarketplaceactionloghelper","title":"RegisterMarketplaceActionLogHelper","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/init(container:section:source:formid:editid:newschema:newdata:previousdata:actionloghelper:)","title":"init(container: RegisterMarketplaceViewControllerDIContainer, section: Int32?, source: Widgets_MarketplaceRegisterStorePayload.Source, formID: String, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any], actionLogHelper: RegisterMarketplaceActionLogHelper?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/section","title":"var section: Int32?","type":"property"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/shouldcloseonfinish","title":"var shouldCloseOnFinish: Bool","type":"property"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/shouldshowsuccessmessage","title":"var shouldShowSuccessMessage: Bool","type":"property"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/source","title":"var source: Widgets_MarketplaceRegisterStorePayload.Source","type":"property"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/twinsecondarytitle","title":"var twinSecondaryTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/dismiss(animated:completion:)","title":"func dismiss(animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/formcontroller(_:didgetlocalvalidationerrors:)","title":"func formController(AbstractFormViewController, didGetLocalValidationErrors: [BaseRow : [ValidationError]]?)","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/secondarybuttonclicked(_:action:)","title":"func secondaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceviewcontroller\/willmove(toparent:)","title":"func willMove(toParent: UIViewController?)","type":"method"}],"path":"\/documentation\/divar\/registermarketplaceviewcontroller","title":"RegisterMarketplaceViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/registeredusergetcontactstrategy\/init(getcontactminthreshhold:getcontactmaxthreshhold:)","title":"init(getContactMinThreshhold: TimeInterval, getContactMaxThreshhold: TimeInterval)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/registeredusergetcontactstrategy\/canpresentfeedback()","title":"func canPresentFeedback() -> Bool","type":"method"},{"path":"\/documentation\/divar\/registeredusergetcontactstrategy\/didpresentedfeedback()","title":"func didPresentedFeedback()","type":"method"},{"path":"\/documentation\/divar\/registeredusergetcontactstrategy\/setenterbackground(date:)","title":"func setEnterBackground(date: Date)","type":"method"},{"path":"\/documentation\/divar\/registeredusergetcontactstrategy\/setexitbackground(date:)","title":"func setExitBackground(date: Date)","type":"method"}],"path":"\/documentation\/divar\/registeredusergetcontactstrategy","title":"RegisteredUserGetContactStrategy","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/dividerview","title":"var dividerView: DividerView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/rentsliderrowheight","title":"static var rentSliderRowHeight: CGFloat","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/slider(_:valuechanged:)","title":"func slider(Slider, valueChanged: Double)","type":"method"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/sliderdidbeginediting(_:)","title":"func sliderDidBeginEditing(Slider)","type":"method"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/sliderdidcancelediting(_:)","title":"func sliderDidCancelEditing(Slider)","type":"method"},{"path":"\/documentation\/divar\/rentslidercollectionviewcell\/sliderdidendediting(_:)","title":"func sliderDidEndEditing(Slider)","type":"method"}],"path":"\/documentation\/divar\/rentslidercollectionviewcell\/sliderdelegate-implementations","title":"SliderDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/rentslidercollectionviewcell","title":"RentSliderCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/reportbrandvcconfig\/init(data:selecteddata:cityids:)","title":"init(data: [SingleMultiModel], selectedData: [SingleMultiModel], cityIds: [Int])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/reportbrandvcconfig\/cityids","title":"var cityIds: [Int]","type":"property"},{"path":"\/documentation\/divar\/reportbrandvcconfig\/data","title":"var data: [SingleMultiModel]","type":"property"},{"path":"\/documentation\/divar\/reportbrandvcconfig\/ismultiselection","title":"var isMultiSelection: Bool","type":"property"},{"path":"\/documentation\/divar\/reportbrandvcconfig\/issearchenable","title":"var isSearchEnable: Bool","type":"property"},{"path":"\/documentation\/divar\/reportbrandvcconfig\/selecteddata","title":"var selectedData: [SingleMultiModel]","type":"property"}],"path":"\/documentation\/divar\/reportbrandvcconfig","title":"ReportBrandVCConfig","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/reportingvcconfig\/init(_:selecteddata:cityids:)","title":"init([SingleMultiModel], selectedData: [SingleMultiModel], cityIds: [Int])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/reportingvcconfig\/cityids","title":"var cityIds: [Int]","type":"property"},{"path":"\/documentation\/divar\/reportingvcconfig\/data","title":"var data: [SingleMultiModel]","type":"property"},{"path":"\/documentation\/divar\/reportingvcconfig\/ismultiselection","title":"var isMultiSelection: Bool","type":"property"},{"path":"\/documentation\/divar\/reportingvcconfig\/issearchenable","title":"var isSearchEnable: Bool","type":"property"},{"path":"\/documentation\/divar\/reportingvcconfig\/selecteddata","title":"var selectedData: [SingleMultiModel]","type":"property"}],"path":"\/documentation\/divar\/reportingvcconfig","title":"ReportingVCConfig","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sqliteprovider\/init(filename:inmemory:)","title":"init(filename: String?, inMemory: Bool) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sqliteprovider\/alltables","title":"let allTables: [SQLTableProtocol.Type]","type":"property"},{"path":"\/documentation\/divar\/sqliteprovider\/dbconnection","title":"let dbConnection: DatabaseConnectionProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sqliteprovider\/configuredatabase()","title":"func configureDatabase() throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/create(_:)","title":"func create(Codable.Type) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/delete(_:filter:completion:)","title":"func delete<Entity>(Entity.Type, filter: QueryFilter, completion: CompletionHandlerType) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/delete(_:forkey:completion:)","title":"func delete<Entity>(Entity.Type, forKey: String, completion: CompletionHandlerType) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/delete(object:completion:)","title":"func delete(object: SQLTableProtocol, completion: CompletionHandlerType) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/delete(objects:completion:)","title":"func delete(objects: [Codable], completion: CompletionHandlerType) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/deleteall(_:)","title":"func deleteAll(Codable.Type) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/deleteall(except:)","title":"func deleteAll(except: Codable.Type...) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/getobject(_:)","title":"func getObject<Entity>(Entity.Type) throws -> Entity?","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/getobject(_:filter:)","title":"func getObject<Entity>(Entity.Type, filter: QueryFilter) throws -> Entity?","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/getobject(_:forkey:)","title":"func getObject<Entity>(Entity.Type, forKey: String) throws -> Entity?","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/getobjects(_:filter:)","title":"func getObjects<Entity>(Entity.Type, filter: QueryFilter?) throws -> [Entity]","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/getobjects(_:filter:sorted:sortkey:)","title":"func getObjects<Entity>(Entity.Type, filter: QueryFilter?, sorted: QuerySortType, sortKey: String) throws -> [Entity]","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/insert(_:update:)","title":"func insert([Codable], update: Bool) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/insert(object:update:)","title":"func insert(object: SQLTableProtocol, update: Bool) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/objectstillexists(_:filter:)","title":"func objectStillExists<Entity>(Entity.Type, filter: QueryFilter) -> Bool","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/objectstillexists(_:forkey:)","title":"func objectStillExists<Entity>(Entity.Type, forKey: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/observe(_:startimmediately:filter:onerror:onchange:)","title":"func observe<Entity>(Entity.Type, startImmediately: Bool, filter: QueryFilter?, onError: ((Error) -> Void), onChange: ([Entity]) -> Void) -> DatabaseCancellable","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/observe(_:startimmediately:filter:sorted:sortkey:onerror:onchange:)","title":"func observe<Entity>(Entity.Type, startImmediately: Bool, filter: QueryFilter?, sorted: QuerySortType, sortKey: String, onError: ((Error) -> Void), onChange: ([Entity]) -> Void) -> DatabaseCancellable","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/runtransaction(action:)","title":"func runTransaction(action: () throws -> Void) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/runtransactionafterinsert(_:update:completion:)","title":"func runTransactionAfterInsert([Codable], update: Bool, completion: CompletionHandlerType) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/runtransactionbeforeinsert(_:update:completion:)","title":"func runTransactionBeforeInsert([Codable], update: Bool, completion: CompletionHandlerType) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/update(object:)","title":"func update(object: Codable) throws","type":"method"},{"path":"\/documentation\/divar\/sqliteprovider\/writetransaction(_:)","title":"func writeTransaction((Database) throws -> Void) throws","type":"method"}],"path":"\/documentation\/divar\/sqliteprovider","title":"SQLiteProvider","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/saleassistantflowcontroller\/openmarketplaceassitantmanagementpage(_:)","title":"func openMarketplaceAssitantManagementPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/saleassistantflowcontroller","title":"SaleAssistantFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaformservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaformservice\/getschemapageschema(model:requestpath:additionaldata:)","title":"func getSchemaPageSchema(model: SchemaRequestModel, requestPath: String, additionalData: [String : Any]?) async -> FormResultValue","type":"method"}],"path":"\/documentation\/divar\/schemaformservice","title":"SchemaFormService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/init(container:requestpath:additionaldata:newschema:newdata:previousdata:)","title":"init(container: SchemaFormViewControllerDIContainer, requestPath: String, additionalData: [String : Any]?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/additionaldata","title":"let additionalData: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/closeform","title":"var closeForm: Bool","type":"property"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/nextbuttontitle","title":"var nextButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/requestpath","title":"let requestPath: String","type":"property"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/shouldcloseonfinish","title":"var shouldCloseOnFinish: Bool","type":"property"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/shouldshowsuccessmessage","title":"var shouldShowSuccessMessage: Bool","type":"property"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/successsubmitmessage","title":"var successSubmitMessage: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/getsubmissionmessage(schemaresponse:)","title":"func getSubmissionMessage(schemaResponse: SchemaResponseModel?) -> String","type":"method"},{"path":"\/documentation\/divar\/schemaformviewcontroller\/valuehasbeenchanged(_:for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"}],"path":"\/documentation\/divar\/schemaformviewcontroller","title":"SchemaFormViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowcollectionviewcell\/ishighlighted","title":"var isHighlighted: Bool","type":"property"},{"path":"\/documentation\/divar\/scorerowcollectionviewcell\/scorerowview","title":"var scoreRowView: ScoreRowView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/scorerowcollectionviewcell","title":"ScoreRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowtableviewcell\/scorerowview","title":"var scoreRowView: ScoreRowView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowtableviewcell\/fill(with:backgroundcolor:)","title":"func fill(with: Widgets_ScoreRowData, backgroundColor: SonnatColors)","type":"method"},{"path":"\/documentation\/divar\/scorerowtableviewcell\/sethighlighted(_:animated:)","title":"func setHighlighted(Bool, animated: Bool)","type":"method"}],"path":"\/documentation\/divar\/scorerowtableviewcell","title":"ScoreRowTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/scorerowview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowview\/contentrightconstraint","title":"var contentRightConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/dividerview","title":"var dividerView: UIView!","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/hasaction","title":"var hasAction: Bool","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/imageview","title":"var imageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/imagewidthconstaint","title":"var imageWidthConstaint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/indicatorimage","title":"var indicatorImage: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/leftconstraint","title":"var leftConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/scoretitle","title":"var scoreTitle: UILabel!","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/scoreview","title":"var scoreView: ScoreView!","type":"property"},{"path":"\/documentation\/divar\/scorerowview\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scorerowview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/scorerowview\/fill(with:)","title":"func fill(with: Widgets_ScoreRowData)","type":"method"},{"path":"\/documentation\/divar\/scorerowview\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"}],"path":"\/documentation\/divar\/scorerowview","title":"ScoreRowView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/scoreview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/scoreview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scoreview\/maxscore","title":"var maxScore: Int","type":"property"},{"path":"\/documentation\/divar\/scoreview\/score","title":"var score: Int","type":"property"},{"path":"\/documentation\/divar\/scoreview\/scorecolor","title":"var scoreColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/scoreview\/stackview","title":"var stackView: UIStackView?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scoreview\/addscoreviews(with:)","title":"func addScoreViews(with: Int)","type":"method"},{"path":"\/documentation\/divar\/scoreview\/calculatearray(with:partcount:)","title":"func calculateArray(with: Int, partCount: Int) -> [CGFloat]","type":"method"},{"path":"\/documentation\/divar\/scoreview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/scoreview\/updatescoreviews()","title":"func updateScoreViews()","type":"method"}],"path":"\/documentation\/divar\/scoreview","title":"ScoreView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/scoreviewslices\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/scoreviewslices\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scoreviewslices\/emptypart","title":"var emptyPart: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scoreviewslices\/draw(_:)","title":"func draw(CGRect)","type":"method"}],"path":"\/documentation\/divar\/scoreviewslices","title":"ScoreViewSlices","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetrow\/init(property:onvalidationchanged:dataprovider:)","title":"init(property: Schema, onValidationChanged: ValidationChanged, dataProvider: DataProviderProtocol)","type":"init"},{"path":"\/documentation\/divar\/screenwidgetrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/screenwidgetrow\/init(tag:property:dataprovider:)","title":"init(tag: String?, property: Schema?, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/screenwidgetrow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/screenwidgetrow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/screenwidgetrow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetrow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/screenwidgetrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/screenwidgetrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/screenwidgetrow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetrow\/presenterrow","title":"ScreenWidgetRow.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/screenwidgetrow\/validationchanged","title":"ScreenWidgetRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/screenwidgetrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetrow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/screenwidgetrow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/screenwidgetrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/screenwidgetrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/screenwidgetrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/screenwidgetrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/screenwidgetrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/screenwidgetrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/screenwidgetrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/screenwidgetrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/screenwidgetrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/screenwidgetrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/screenwidgetrow","title":"ScreenWidgetRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/screenwidgetviewcontroller\/init(container:property:prefilldata:)","title":"init(container: BaseFormControllerDIContainer, property: Schema?, prefillData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/screenwidgetviewcontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/screenwidgetviewcontroller\/row","title":"var row: RowOf<ScreenWidgetData>!","type":"property"},{"path":"\/documentation\/divar\/screenwidgetviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/screenwidgetviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/screenwidgetviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/screenwidgetviewcontroller","title":"ScreenWidgetViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/screenshotlogger\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/screenshotlogger\/observe()","title":"func observe()","type":"method"}],"path":"\/documentation\/divar\/screenshotlogger","title":"ScreenshotLogger","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/centerdots","title":"var centerDots: Int","type":"property"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/currentpage","title":"var currentPage: Int","type":"property"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/delegate","title":"var delegate: ScrollingPageControlDelegate?","type":"property"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/dotcolor","title":"var dotColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/dotsize","title":"var dotSize: CGFloat","type":"property"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/isrtl","title":"var isRTL: Bool","type":"property"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/maxdots","title":"var maxDots: Int","type":"property"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/numberofpages","title":"var numberOfPages: Int","type":"property"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/selectedcolor","title":"var selectedColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/slideduration","title":"var slideDuration: TimeInterval","type":"property"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/spacing","title":"var spacing: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingpagecontrol\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/divar\/scrollingpagecontrol","title":"ScrollingPageControl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingstackview\/init(arrangedsubviews:axis:)","title":"init(arrangedSubviews: [UIView], axis: NSLayoutConstraint.Axis)","type":"init"},{"path":"\/documentation\/divar\/scrollingstackview\/init(axis:)","title":"init(axis: NSLayoutConstraint.Axis)","type":"init"},{"path":"\/documentation\/divar\/scrollingstackview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/scrollingstackview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingstackview\/alignment","title":"var alignment: UIStackView.Alignment","type":"property"},{"path":"\/documentation\/divar\/scrollingstackview\/arrangedsubviews","title":"var arrangedSubviews: [UIView]","type":"property"},{"path":"\/documentation\/divar\/scrollingstackview\/axis","title":"var axis: NSLayoutConstraint.Axis","type":"property"},{"path":"\/documentation\/divar\/scrollingstackview\/directionallayoutmargins","title":"var directionalLayoutMargins: NSDirectionalEdgeInsets","type":"property"},{"path":"\/documentation\/divar\/scrollingstackview\/distribution","title":"var distribution: UIStackView.Distribution","type":"property"},{"path":"\/documentation\/divar\/scrollingstackview\/isbaselinerelativearrangement","title":"var isBaselineRelativeArrangement: Bool","type":"property"},{"path":"\/documentation\/divar\/scrollingstackview\/islayoutmarginsrelativearrangement","title":"var isLayoutMarginsRelativeArrangement: Bool","type":"property"},{"path":"\/documentation\/divar\/scrollingstackview\/layoutmargins","title":"var layoutMargins: UIEdgeInsets","type":"property"},{"path":"\/documentation\/divar\/scrollingstackview\/spacing","title":"var spacing: CGFloat","type":"property"},{"path":"\/documentation\/divar\/scrollingstackview\/stackview","title":"var stackView: UIStackView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingstackview\/addarrangedsubview(_:)","title":"func addArrangedSubview(UIView)","type":"method"},{"path":"\/documentation\/divar\/scrollingstackview\/customspacing(after:)","title":"func customSpacing(after: UIView) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/scrollingstackview\/insertarrangedsubview(_:at:)","title":"func insertArrangedSubview(UIView, at: Int)","type":"method"},{"path":"\/documentation\/divar\/scrollingstackview\/removearrangedsubview(_:)","title":"func removeArrangedSubview(UIView)","type":"method"},{"path":"\/documentation\/divar\/scrollingstackview\/setcustomspacing(_:after:)","title":"func setCustomSpacing(CGFloat, after: UIView)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingstackview\/spacingusedefault","title":"class var spacingUseDefault: CGFloat","type":"property"},{"path":"\/documentation\/divar\/scrollingstackview\/spacingusesystem","title":"class var spacingUseSystem: CGFloat","type":"property"}],"path":"\/documentation\/divar\/scrollingstackview","title":"ScrollingStackView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/delegate","title":"var delegate: SearchAndSelectStringViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/minimumcharactersofeligiblequery","title":"var minimumCharactersOfEligibleQuery: Int","type":"property"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"}],"path":"\/documentation\/divar\/searchandselectstringviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/searchandselectstringviewcontroller","title":"SearchAndSelectStringViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/init(container:filterset:configuration:inputsuggestionkey:)","title":"init(container: SearchFilterViewControllerDIContainer, filterSet: SearchFilterHistory, configuration: IntroConfig, inputSuggestionKey: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/currentfilterset","title":"var currentFilterSet: SearchFilterHistory","type":"property"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/delegate","title":"var delegate: SearchFilterViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/filterset","title":"var filterSet: SearchFilterHistory","type":"property"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/inputsuggestionkey","title":"var inputSuggestionKey: String?","type":"property"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/needsresetbutton","title":"var needsResetButton: Bool","type":"property"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/reloadformtitle","title":"var reloadFormTitle: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/resetform(_:)","title":"func resetForm(UIBarButtonItem)","type":"method"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/valuehasbeenchanged(_:for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"},{"path":"\/documentation\/divar\/searchfilterviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/searchfilterviewcontroller","title":"SearchFilterViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryrowtablecell\/delegate","title":"var delegate: SearchHistoryRowTableCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/searchhistoryrowtablecell\/searchhistoryrow","title":"var searchHistoryRow: SearchHistoryRow!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryrowtablecell\/fill(_:viewwidth:)","title":"func fill(SearchFilterHistory, viewWidth: CGFloat)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryrowtablecell\/searchhistoryrow(_:didclose:)","title":"func searchHistoryRow(SearchHistoryRow, didClose: UIButton)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryrowtablecell\/searchhistoryrow(_:didtappin:)","title":"func searchHistoryRow(SearchHistoryRow, didTapPin: UIButton)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryrowtablecell\/setselected(_:animated:)","title":"func setSelected(Bool, animated: Bool)","type":"method"}],"path":"\/documentation\/divar\/searchhistoryrowtablecell","title":"SearchHistoryRowTableCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryservice\/init(dataprovider:user:)","title":"init(dataProvider: DataProviderProtocol, user: User)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryservice\/filtersetexistsinhistory(_:)","title":"func filterSetExistsInHistory(SearchFilterHistory) -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchhistoryservice\/loadsearchhistory(pageidentifier:)","title":"func loadSearchHistory(pageIdentifier: String) -> [SearchFilterHistory]?","type":"method"},{"path":"\/documentation\/divar\/searchhistoryservice\/removefiltersetfromhistory(_:completion:)","title":"func removeFilterSetFromHistory(SearchFilterHistory, completion: () -> Void)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryservice\/savefilterhistory(_:)","title":"func saveFilterHistory(SearchFilterHistory)","type":"method"}],"path":"\/documentation\/divar\/searchhistoryservice","title":"SearchHistoryService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/init(nibname:bundle:)","title":"init(nibName: String?, bundle: Bundle?)","type":"init"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/init(viewmodel:)","title":"init(viewModel: SearchHistoryViewModelProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/updatehistories()","title":"func updateHistories()","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/pincell(_:)","title":"func pinCell(UITableViewCell)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/removefromhistorycell(_:)","title":"func removeFromHistoryCell(UITableViewCell)","type":"method"}],"path":"\/documentation\/divar\/searchhistoryviewcontroller\/searchhistoryrowtablecelldelegate-implementations","title":"SearchHistoryRowTableCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/searchhistoryviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/searchhistoryviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/searchhistoryviewcontroller","title":"SearchHistoryViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewmodel\/init(container:pageidentifier:)","title":"init(container: SearchHistoryViewModelDIContainer, pageIdentifier: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewmodel\/delegate","title":"var delegate: SearchHistoryViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/searchhistoryviewmodel\/histories","title":"var histories: [SearchFilterHistory]","type":"property"},{"path":"\/documentation\/divar\/searchhistoryviewmodel\/historiesresult","title":"var historiesResult: AnyPublisher<[SearchFilterHistory], Never>","type":"property"},{"path":"\/documentation\/divar\/searchhistoryviewmodel\/historiessubject","title":"var historiesSubject: PassthroughSubject<[SearchFilterHistory], Never>","type":"property"},{"path":"\/documentation\/divar\/searchhistoryviewmodel\/sourcepageidentifier","title":"let sourcePageIdentifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewmodel\/didselecthistory(at:)","title":"func didSelectHistory(at: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewmodel\/pin(at:onupdate:)","title":"func pin(at: IndexPath, onUpdate: () -> Void) -> (filter: SearchFilterHistory, pinnedCount: Int)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewmodel\/removefromhistory(at:onupdate:)","title":"func removeFromHistory(at: IndexPath, onUpdate: () -> Void)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewmodel\/savefilterhistory(_:)","title":"func saveFilterHistory(SearchFilterHistory)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewmodel\/update()","title":"func update()","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewmodel\/updatefiltertosave(filter:)","title":"func updateFilterToSave(filter: SearchFilterHistory) -> SearchFilterHistory","type":"method"}],"path":"\/documentation\/divar\/searchhistoryviewmodel","title":"SearchHistoryViewModel","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchresultcollectionviewcell\/searchresultview","title":"var searchResultView: SearchResultRow!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchresultcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_SearchResultRowWidgetData)","type":"method"},{"path":"\/documentation\/divar\/searchresultcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/searchresultcollectionviewcell","title":"SearchResultCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchresultrowtablecell\/searchresultview","title":"var searchResultView: SearchResultRow!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchresultrowtablecell\/fill(with:)","title":"func fill(with: SearchFilterHistory)","type":"method"},{"path":"\/documentation\/divar\/searchresultrowtablecell\/setselected(_:animated:)","title":"func setSelected(Bool, animated: Bool)","type":"method"}],"path":"\/documentation\/divar\/searchresultrowtablecell","title":"SearchResultRowTableCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionrowcell\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/searchsuggestionrowcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/searchsuggestionrowcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionrowcell\/fill(with:)","title":"func fill(with: SearchSuggestionDataModel)","type":"method"}],"path":"\/documentation\/divar\/searchsuggestionrowcell","title":"SearchSuggestionRowCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionservice\/init(servicenetworkmanager:user:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol, user: User)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionservice\/getcitymultiselectschema(cities:)","title":"func getCityMultiSelectSchema(cities: [String]) async -> Result<Schema, DError>","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionservice\/getjli(path:)","title":"func getJLI(path: String) async -> Result<SearchFilterHistory, Error>","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionservice\/getsearchfilterschema(model:)","title":"func getSearchFilterSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionservice\/getsearchsuggestion(query:filteredcities:pageidentifier:)","title":"func getSearchSuggestion(query: String, filteredCities: [String], pageIdentifier: String) async -> (result: Result<[SearchFilterHistory], Error>, jsonDict: [String : Any]?)","type":"method"}],"path":"\/documentation\/divar\/searchsuggestionservice","title":"SearchSuggestionService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/init(viewmodel:)","title":"init(viewModel: SearchSuggestionsViewModelProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/updatequery(_:)","title":"func updateQuery(SearchQuery)","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/updatequery(_:filteredcities:)","title":"func updateQuery(String, filteredCities: [String])","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/searchsuggestionsviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/searchsuggestionsviewcontroller","title":"SearchSuggestionsViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodel\/init(container:pageidentifier:)","title":"init(container: SearchSuggestionsViewModelDIContainer, pageIdentifier: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodel\/delegate","title":"var delegate: SearchSuggestionsViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodel\/isloading$","title":"var isLoading$: AnyPublisher<Published<Bool>.Publisher.Output, Published<Bool>.Publisher.Failure>","type":"property"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodel\/suggestions$","title":"var suggestions$: AnyPublisher<[SearchFilterHistory]?, Never>","type":"property"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodel\/suggestionssubject","title":"let suggestionsSubject: PassthroughSubject<[SearchFilterHistory]?, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodel\/isqueryvalidtosearch(_:)","title":"func isQueryValidToSearch(String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodel\/querydidchange(query:)","title":"func queryDidChange(query: SearchQuery)","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodel\/removeduplicates(prev:current:)","title":"func removeDuplicates(prev: SearchQuery, current: SearchQuery) -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodel\/searchpublisher(query:)","title":"func searchPublisher(query: SearchQuery) -> AnyPublisher<SearchSuggestionResult?, Never>","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodel\/select(suggestion:at:)","title":"func select(suggestion: SearchFilterHistory, at: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodel\/updatequery(_:)","title":"func updateQuery(SearchQuery)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodel\/searchsuggestionresult","title":"SearchSuggestionsViewModel.SearchSuggestionResult","type":"typealias"}],"path":"\/documentation\/divar\/searchsuggestionsviewmodel","title":"SearchSuggestionsViewModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/searchviewcontroller\/init(viewmodel:)","title":"init(viewModel: SearchViewModelProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchviewcontroller\/clearqueryandreload()","title":"func clearQueryAndReload()","type":"method"},{"path":"\/documentation\/divar\/searchviewcontroller\/updatehistory()","title":"func updateHistory()","type":"method"},{"path":"\/documentation\/divar\/searchviewcontroller\/updatequery(_:)","title":"func updateQuery(SearchQuery)","type":"method"},{"path":"\/documentation\/divar\/searchviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/searchviewcontroller","title":"SearchViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchviewmodel\/init(suggestionsviewmodel:historyviewmodel:)","title":"init(suggestionsViewModel: SearchSuggestionsViewModelProtocol, historyViewModel: SearchHistoryViewModelProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchviewmodel\/delegate","title":"var delegate: SearchViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/searchviewmodel\/historyviewmodel","title":"let historyViewModel: SearchHistoryViewModelProtocol","type":"property"},{"path":"\/documentation\/divar\/searchviewmodel\/issearching$","title":"var isSearching$: AnyPublisher<Published<Bool>.Publisher.Output, Published<Bool>.Publisher.Failure>","type":"property"},{"path":"\/documentation\/divar\/searchviewmodel\/suggestionsviewmodel","title":"let suggestionsViewModel: SearchSuggestionsViewModelProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchviewmodel\/updatequery(_:)","title":"func updateQuery(SearchQuery)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchviewmodel\/searchhistoryviewmodel(_:didselecthistory:at:)","title":"func searchHistoryViewModel(SearchHistoryViewModelProtocol, didSelectHistory: SearchFilterHistory, at: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/searchviewmodel\/searchhistoryviewmodeldelegate-implementations","title":"SearchHistoryViewModelDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchviewmodel\/searchsuggestionsviewmodel(_:didreceiveresult:with:)","title":"func searchSuggestionsViewModel(SearchSuggestionsViewModelProtocol, didReceiveResult: [String : Any]?, with: String)","type":"method"},{"path":"\/documentation\/divar\/searchviewmodel\/searchsuggestionsviewmodel(_:didselect:at:choices:)","title":"func searchSuggestionsViewModel(SearchSuggestionsViewModelProtocol, didSelect: SearchFilterHistory, at: IndexPath, choices: [String : Any]?)","type":"method"}],"path":"\/documentation\/divar\/searchviewmodel\/searchsuggestionsviewmodeldelegate-implementations","title":"SearchSuggestionsViewModelDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/searchviewmodel","title":"SearchViewModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/secondarybutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/secondarybutton\/ishighlighted","title":"var isHighlighted: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/secondarybutton\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/secondarybutton\/fill(data:)","title":"func fill(data: Widgets_WideButtonBarWidgetData.Button)","type":"method"}],"path":"\/documentation\/divar\/secondarybutton","title":"SecondaryButton","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttoncollectionviewcell\/secondarybutton","title":"var secondaryButton: SecondaryButton!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttoncollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/secondarybuttoncollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/secondarybuttoncollectionviewcell","title":"SecondaryButtonCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttontableviewcell\/delegate","title":"var delegate: SecondaryButtonTableViewCellProtocol?","type":"property"},{"path":"\/documentation\/divar\/secondarybuttontableviewcell\/secondarybutton","title":"var secondaryButton: SecondaryButton!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttontableviewcell\/fill(with:backgroundcolor:)","title":"func fill(with: SecondaryButtonModel, backgroundColor: SonnatColors)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttontableviewcell\/awakefromnib()","title":"class func awakeFromNib()","type":"method"}],"path":"\/documentation\/divar\/secondarybuttontableviewcell","title":"SecondaryButtonTableViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sectiondividercollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/sectiondividercollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/sectiondividercollectionviewcell","title":"SectionDividerCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbar\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/segmentedbar\/init(items:_:)","title":"init(items: [String], Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbar\/delegate","title":"var delegate: SegmentedBarDelegate?","type":"property"},{"path":"\/documentation\/divar\/segmentedbar\/segmentcontrol","title":"var segmentControl: UISegmentedControl?","type":"property"},{"path":"\/documentation\/divar\/segmentedbar\/sticktoedges","title":"var stickToEdges: Bool","type":"property"},{"path":"\/documentation\/divar\/segmentedbar\/toolbar","title":"var toolbar: UIToolbar!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbar\/positionforbar(bar:)","title":"func positionForBar(bar: UIBarPositioning) -> UIBarPosition","type":"method"},{"path":"\/documentation\/divar\/segmentedbar\/removesegment()","title":"func removeSegment()","type":"method"},{"path":"\/documentation\/divar\/segmentedbar\/segmentvaluechanged()","title":"func segmentValueChanged()","type":"method"},{"path":"\/documentation\/divar\/segmentedbar\/settitles(_:)","title":"func setTitles([String])","type":"method"},{"path":"\/documentation\/divar\/segmentedbar\/setupsegmentedcontrol()","title":"func setupSegmentedControl()","type":"method"},{"path":"\/documentation\/divar\/segmentedbar\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/segmentedbar","title":"SegmentedBar","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/init(container:tabrequest:pagerequest:submitrequest:)","title":"init(container: SegmentedBulkLadderViewControllerDIContainer, tabRequest: SegmentedBulkLadderRequest, pageRequest: BulkLadderRequest, submitRequest: BulkLadderSubmitRequest)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/current","title":"var current: BulkLadderViewController<SinglePage, SubmitResponseType>?","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/navigationbaritems","title":"var navigationBarItems: [Int : Widgets_NavigationBar]","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/pagerequest","title":"var pageRequest: BulkLadderRequest","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/submitrequest","title":"var submitRequest: BulkLadderSubmitRequest","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/tabrequest","title":"let tabRequest: TabularWidgetBasedRequest","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/barbuttonitembuttontapped(sender:)","title":"func barButtonItemButtonTapped(sender: UIBarButtonItem)","type":"method"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/barbuttonitemtapped(sender:)","title":"func barButtonItemTapped(sender: UIBarButtonItem)","type":"method"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/requestdata()","title":"func requestData()","type":"method"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/barbuttonitembuttontappedselector","title":"var barButtonItemButtonTappedSelector: Selector","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/barbuttonitemtappedselector","title":"var barButtonItemTappedSelector: Selector","type":"property"}],"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller\/widgetbasednavigationbarpresenterprotocol-implementations","title":"WidgetBasedNavigationBarPresenterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/divar\/segmentedbulkladderviewcontroller","title":"SegmentedBulkLadderViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollercell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/segmentedcontrollercell\/propertytag","title":"var propertyTag: String?","type":"property"},{"path":"\/documentation\/divar\/segmentedcontrollercell\/segmentedcontroller","title":"var segmentedController: UISegmentedControl!","type":"property"},{"path":"\/documentation\/divar\/segmentedcontrollercell\/subtitlelabel","title":"var subtitleLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/segmentedcontrollercell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollercell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/segmentedcontrollercell\/config(keys:values:default:)","title":"func config(keys: [String]?, values: [String]?, default: String?)","type":"method"},{"path":"\/documentation\/divar\/segmentedcontrollercell\/segmentvaluechanged()","title":"func segmentValueChanged()","type":"method"},{"path":"\/documentation\/divar\/segmentedcontrollercell\/setvalue(key:)","title":"func setValue(key: String)","type":"method"},{"path":"\/documentation\/divar\/segmentedcontrollercell\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/divar\/segmentedcontrollercell\/updatecellbyselectedvalue(_:)","title":"func updateCellBySelectedValue(String?)","type":"method"}],"path":"\/documentation\/divar\/segmentedcontrollercell","title":"SegmentedControllerCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: (SegmentedControllerCell, SegmentedControllerRow) -> Void)","type":"init"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/init(tag:property:title:validationoption:onvalidationchanged:)","title":"init(tag: String, property: Schema, title: String?, validationOption: ValidationOptions, onValidationChanged: (SegmentedControllerCell, SegmentedControllerRow) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/segmentedcontrollerrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/segmentedcontrollerrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/segmentedcontrollerrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/segmentedcontrollerrow","title":"SegmentedControllerRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/init(title:splitbuttonbarconfig:)","title":"init(title: String, splitButtonBarConfig: SplitButtonBarConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/delegate","title":"var delegate: (SelectablePostsListViewControllerDelegate & SplitButtonBarViewControllerDelegate)?","type":"property"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/maintable","title":"var mainTable: WidgetBasedCollectionViewController","type":"property"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/selectedposts","title":"var selectedPosts: Set<SelectableItemType>","type":"property"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/splitbuttonbar","title":"var splitButtonBar: SplitButtonBarViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/observenotifications()","title":"func observeNotifications()","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/prepareforreloading()","title":"func prepareForReloading()","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/resetselection()","title":"func resetSelection()","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/selectitems()","title":"func selectItems()","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/selectionchanged()","title":"func selectionChanged()","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/setneedsrefresh()","title":"func setNeedsRefresh()","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/setupchilds()","title":"func setupChilds()","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/setuptable()","title":"func setupTable()","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/updateerrordata(by:)","title":"func updateErrorData(by: ExtractableMessage?)","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/refreshdata()","title":"func refreshData()","type":"method"}],"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/refreshableprotocol-implementations","title":"RefreshableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/widgetbasedcollectionviewcontroller(_:diddeselectitemat:withdata:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didDeselectItemAt: IndexPath, withData: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/widgetbasedcollectionviewcontroller(_:didenddisplaying:forindexpath:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didEndDisplaying: Widgets_Widget, forIndexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/widgetbasedcollectionviewcontroller(_:didselectitemat:withdata:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didSelectItemAt: IndexPath, withData: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartinfinitescroll:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartInfiniteScroll: AdvancedCollectionView?)","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartpulltorefresh:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/widgetbasedcollectionviewcontroller(_:shouldselectitemat:withdata:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, shouldSelectItemAt: IndexPath, withData: Widgets_Widget) -> Bool","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/widgetbasedcollectionviewcontroller(_:willdisplay:forindexpath:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, willDisplay: Widgets_Widget, forIndexPath: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/selectablepostslistviewcontroller\/widgetbasedcollectionviewcontrollerdelegate-implementations","title":"WidgetBasedCollectionViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/selectablepostslistviewcontroller","title":"SelectablePostsListViewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/actionsheet","title":"var actionSheet: BottomSheetViewController?","type":"property"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/currentvalue","title":"var currentValue: SelectValue","type":"property"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/key","title":"var key: String?","type":"property"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/textfield","title":"var textField: UITextField!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/bottomsheetcase(string:)","title":"func bottomSheetCase(string: String?) -> Any?","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/donepressed(_:)","title":"func donePressed(UIBarButtonItem)","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/isbottomsheetcase(string:)","title":"func isBottomSheetCase(string: String?) -> Bool","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/setupkeyboard(property:)","title":"func setupKeyboard(property: Schema?)","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/textfielddidchange(_:)","title":"func textFieldDidChange(UITextField)","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/textfielddidtap()","title":"func textFieldDidTap()","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/updatecellbyselectedvalue(value:)","title":"func updateCellBySelectedValue(value: Int)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/selectvalue\/bottomsheet(display:value:)","title":"case bottomSheet(display: String, value: Any)","type":"case"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/selectvalue\/manual(display:realvalue:)","title":"case manual(display: String, realValue: String)","type":"case"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/selectvalue\/none","title":"case none","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/selectvalue\/intvalue","title":"var intValue: Int?","type":"property"}],"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/selectvalue","title":"SelectableTextFieldWidgetCell.SelectValue","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"func textField(UITextField, shouldChangeCharactersIn: NSRange, replacementString: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/textfieldshouldclear(_:)","title":"func textFieldShouldClear(UITextField) -> Bool","type":"method"}],"path":"\/documentation\/divar\/selectabletextfieldwidgetcell\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/selectabletextfieldwidgetcell","title":"SelectableTextFieldWidgetCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: (SelectableTextFieldWidgetCell, SelectableTextFieldWidgetRow) -> Void)","type":"init"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/init(property:required:validationoption:onvalidationchanged:)","title":"init(property: Schema, required: Bool?, validationOption: ValidationOptions, onValidationChanged: (SelectableTextFieldWidgetCell, SelectableTextFieldWidgetRow) -> Void)","type":"init"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/reloadrow()","title":"func reloadRow()","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/selectabletextfieldwidgetrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/selectabletextfieldwidgetrow","title":"SelectableTextFieldWidgetRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowcollectionviewcell\/ishighlighted","title":"var isHighlighted: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/selectorrowcollectionviewcell","title":"SelectorRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowtableviewcell\/action","title":"var action: SelectorRowAction","type":"property"},{"path":"\/documentation\/divar\/selectorrowtableviewcell\/selectorview","title":"var selectorView: SelectorRow","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowtableviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/selectorrowtableviewcell\/fill(title:icon:hasindicator:hasdivider:action:)","title":"func fill(title: String, icon: SonnatImages?, hasIndicator: Bool, hasDivider: Bool, action: SelectorRowAction)","type":"method"},{"path":"\/documentation\/divar\/selectorrowtableviewcell\/fill(with:)","title":"func fill(with: SelectorRowModel)","type":"method"},{"path":"\/documentation\/divar\/selectorrowtableviewcell\/startloading()","title":"func startLoading()","type":"method"},{"path":"\/documentation\/divar\/selectorrowtableviewcell\/stoploading()","title":"func stopLoading()","type":"method"}],"path":"\/documentation\/divar\/selectorrowtableviewcell","title":"SelectorRowTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/init(options:selectedoption:title:)","title":"init(options: [Option], selectedOption: Option?, title: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/callback","title":"var callBack: (_ option: Option, _ selectionType: OptionSelectionType) -> Void","type":"property"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/filteredoptions","title":"var filteredOptions: [Option]","type":"property"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/options","title":"var options: [Option]","type":"property"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/selectedoption","title":"var selectedOption: Option?","type":"property"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/tableview","title":"let tableView: UITableView","type":"property"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/tableviewcellidentifier","title":"let tableViewCellIdentifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/setuptableview()","title":"func setupTableView()","type":"method"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/selectorwithsearchbarviewcontroller","title":"SelectorWithSearchBarViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/init(container:formid:editid:newschema:newdata:previousdata:)","title":"init(container: SendFeedbackViewControllerDIContainer, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/documenthelper","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/needsresetbutton","title":"var needsResetButton: Bool","type":"property"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/successsubmitmessage","title":"var successSubmitMessage: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/sendfeedbackviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/sendfeedbackviewcontroller","title":"SendFeedbackViewController","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sentryperformance\/eventchildfinished(eventcategory:eventname:reason:)","title":"func eventChildFinished(eventCategory: String, eventName: String, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/sentryperformance\/eventchildstarted(eventcategory:eventname:description:)","title":"func eventChildStarted(eventCategory: String, eventName: String, description: String?)","type":"method"},{"path":"\/documentation\/divar\/sentryperformance\/eventfinished(eventcategory:eventpayload:reason:)","title":"func eventFinished(eventCategory: String, eventPayload: [String : Any]?, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/sentryperformance\/eventstarted(eventcategory:eventname:eventpayload:customdata:)","title":"func eventStarted(eventCategory: String, eventName: String, eventPayload: [String : Any]?, customData: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/sentryperformance\/logevent(data:)","title":"func logEvent(data: Any)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sentryperformance\/shared","title":"static let shared: SentryPerformance","type":"property"}],"path":"\/documentation\/divar\/sentryperformance","title":"SentryPerformance","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/servicenetworkmanager\/init(user:networklayer:userdefaults:performancemonitor:)","title":"init(user: User, networkLayer: NetworkLayerProtocol, userDefaults: UserDefaults, performanceMonitor: PerformanceMonitorProtocol?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/servicenetworkmanager\/lastwidgetbasedrequest","title":"var lastWidgetBasedRequest: Cancellable?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/servicenetworkmanager\/authenticatedphonenumber()","title":"func authenticatedPhoneNumber() -> String?","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanager\/downloadfile(downloadurl:filepath:progress:)","title":"func downloadFile(downloadURL: String, filePath: URL, progress: ((Progress) -> Void)) async -> ResponseModel<Data, Error>","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanager\/getauthenticationtoken()","title":"func getAuthenticationToken() -> String?","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanager\/isauthenticated()","title":"func isAuthenticated() -> Bool","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanager\/jsonrequestwithoctetstreamresponse(model:)","title":"func jsonRequestWithOctetStreamResponse(model: RequestModel) async -> ResponseModel<Data, DError>","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanager\/logoutuser()","title":"func logoutUser()","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanager\/octetstreamrequest(model:)","title":"func octetStreamRequest(model: DataRequestModel) async -> ResponseModel<Data, DError>","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanager\/removeauthentication()","title":"func removeAuthentication()","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanager\/request(model:)","title":"func request(model: RequestModel) async -> ResponseModel<Data, DError>","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanager\/setauthenticationtoken(_:)","title":"func setAuthenticationToken(String?)","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanager\/uploadfile(content:to:progress:)","title":"func uploadFile(content: [UploadModel], to: String, progress: ((Progress) -> Void)) async -> ResponseModel<Data, Error>","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanager\/uploadimage(model:)","title":"func uploadImage(model: DataRequestModel) async -> ResponseModel<Data, DError>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/servicenetworkmanager\/header(for:extras:)","title":"func header(for: RequestType, extras: [String : String]?) -> [String : String]","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanager\/uploadvideo(model:completion:)","title":"func uploadVideo(model: VideoUploadModel, completion: (ResponseModel<Data, DError>) -> Void) -> Request?","type":"method"}],"path":"\/documentation\/divar\/servicenetworkmanager\/servicenetworkmanagerprotocol-implementations","title":"ServiceNetworkManagerProtocol Implementations","type":"symbol"}],"path":"\/documentation\/divar\/servicenetworkmanager","title":"ServiceNetworkManager","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsflowcontroller\/initial()","title":"func initial() -> UINavigationController","type":"method"},{"path":"\/documentation\/divar\/settingsflowcontroller\/initial(with:)","title":"func initial(with: NavigationController) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsflowcontroller\/didrequestdismissingoptionformfieldcontroller(_:)","title":"func didRequestDismissingOptionFormFieldController(UIViewController)","type":"method"},{"path":"\/documentation\/divar\/settingsflowcontroller\/didselectoption(_:selectiontype:)","title":"func didSelectOption(Place, selectionType: CitySelectionType)","type":"method"}],"path":"\/documentation\/divar\/settingsflowcontroller\/cityselectviewcontrollerdelegate-implementations","title":"CitySelectViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsflowcontroller\/opensettings(_:)","title":"func openSettings(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/settingsflowcontroller\/settingsactionhandler-implementations","title":"SettingsActionHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsflowcontroller\/settingsviewcontroller(didselectcityselect:)","title":"func settingsViewController(didSelectCitySelect: SettingsViewController)","type":"method"},{"path":"\/documentation\/divar\/settingsflowcontroller\/settingsviewcontroller(didselectlogin:)","title":"func settingsViewController(didSelectLogin: SettingsViewController)","type":"method"},{"path":"\/documentation\/divar\/settingsflowcontroller\/settingsviewcontroller(didselectlogout:)","title":"func settingsViewController(didSelectLogout: SettingsViewController)","type":"method"}],"path":"\/documentation\/divar\/settingsflowcontroller\/settingsviewcontrollerdelegate-implementations","title":"SettingsViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/settingsflowcontroller","title":"SettingsFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/settingsviewcontroller\/init(user:userpostservice:bookmarkservice:noteservice:dataprovider:)","title":"init(user: User, userPostService: UserPostServiceProtocol, bookmarkService: BookmarkServiceProtocol, noteService: NoteServiceProtocol, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsviewcontroller\/bookmarkservice","title":"let bookmarkService: BookmarkServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/settingsviewcontroller\/dataprovider","title":"let dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/settingsviewcontroller\/delegate","title":"var delegate: SettingsViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/settingsviewcontroller\/noteservice","title":"let noteService: NoteServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/settingsviewcontroller\/user","title":"let user: User","type":"property"},{"path":"\/documentation\/divar\/settingsviewcontroller\/userpostservice","title":"let userPostService: UserPostServiceProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsviewcontroller\/refreshdata()","title":"func refreshData()","type":"method"},{"path":"\/documentation\/divar\/settingsviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsviewcontroller\/scrollview","title":"var scrollView: UIScrollView","type":"property"},{"path":"\/documentation\/divar\/settingsviewcontroller\/stackview","title":"var stackView: UIStackView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsviewcontroller\/append(_:)","title":"func append(UIView)","type":"method"},{"path":"\/documentation\/divar\/settingsviewcontroller\/append(contentsof:)","title":"func append(contentsOf: [UIView])","type":"method"},{"path":"\/documentation\/divar\/settingsviewcontroller\/configverticalviewarranger()","title":"func configVerticalViewArranger() -> (stackView: UIStackView, scrollView: UIScrollView)","type":"method"},{"path":"\/documentation\/divar\/settingsviewcontroller\/insert(_:at:)","title":"func insert(UIView, at: Int)","type":"method"},{"path":"\/documentation\/divar\/settingsviewcontroller\/remove(_:)","title":"func remove(UIView)","type":"method"},{"path":"\/documentation\/divar\/settingsviewcontroller\/remove(at:)","title":"func remove(at: Int)","type":"method"},{"path":"\/documentation\/divar\/settingsviewcontroller\/removeall()","title":"func removeAll()","type":"method"}],"path":"\/documentation\/divar\/settingsviewcontroller\/sonnatverticalviewarranger-implementations","title":"SonnatVerticalViewArranger Implementations","type":"symbol"}],"path":"\/documentation\/divar\/settingsviewcontroller","title":"SettingsViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontroller\/init(container:)","title":"init(container: BaseFlowDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontroller\/delegate","title":"var delegate: ShahkarLandlineVerificationFlowControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontroller\/phonenumberinput","title":"var phoneNumberInput: NumberInputProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontroller\/dismiss(animated:completion:)","title":"func dismiss(animated: Bool, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontroller\/initial(with:)","title":"func initial(with: NavigationController) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontroller\/initialviewcontroller()","title":"func initialViewController() -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontroller\/numberenteredsuccessfully(_:with:needsverify:)","title":"func numberEnteredSuccessfully(NumberInputViewController, with: String, needsVerify: Bool)","type":"method"}],"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontroller\/numberinputviewcontrollerdelegate-implementations","title":"NumberInputViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontroller\/verificationcodeenteredsuccessfully(_:with:)","title":"func verificationCodeEnteredSuccessfully(VerificationCodeInputViewController, with: String)","type":"method"}],"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontroller\/verificationcodeinputviewcontrollerdelegate-implementations","title":"VerificationCodeInputViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontroller","title":"ShahkarLandlineVerificationFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarservice\/callauthmethod(code:)","title":"func callAuthMethod(code: String) async -> Result<Authentication_ConfirmResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/shahkarservice\/callauthmethod(telephone:)","title":"func callAuthMethod(telephone: String) async -> Result<Authentication_AuthenticateResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/shahkarservice\/validatenationalcode(phone:nationalid:)","title":"func validateNationalCode(phone: String, nationalId: String) async -> Result<Authentication_ValidateNationalCodeResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/shahkarservice","title":"ShahkarService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sharedenvironment\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sharedenvironment\/connectiontype-swift.type.property","title":"class var connectionType: ConnectionType","type":"property"},{"path":"\/documentation\/divar\/sharedenvironment\/getipaddress","title":"class var getIPAddress: String?","type":"property"},{"path":"\/documentation\/divar\/sharedenvironment\/isconnected","title":"class var isConnected: Bool","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/sharedenvironment\/connectiontype-swift.enum\/cellular","title":"case cellular","type":"case"},{"path":"\/documentation\/divar\/sharedenvironment\/connectiontype-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/divar\/sharedenvironment\/connectiontype-swift.enum\/wifi","title":"case wifi","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sharedenvironment\/connectiontype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/sharedenvironment\/connectiontype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sharedenvironment\/connectiontype-swift.enum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/sharedenvironment\/connectiontype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sharedenvironment\/connectiontype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sharedenvironment\/connectiontype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/sharedenvironment\/connectiontype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/sharedenvironment\/connectiontype-swift.enum","title":"SharedEnvironment.ConnectionType","type":"enum"}],"path":"\/documentation\/divar\/sharedenvironment","title":"SharedEnvironment","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/simplecell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/simplecell\/hintlabel","title":"var hintLabel: UILabel!","type":"property"}],"path":"\/documentation\/divar\/simplecell","title":"SimpleCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/simplerow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/simplerow\/init(tag:type:hintstring:)","title":"init(tag: String?, type: HintRowType, hintString: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/simplerow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/simplerow\/hint","title":"var hint: String?","type":"property"},{"path":"\/documentation\/divar\/simplerow\/options","title":"var options: [Schema]","type":"property"},{"path":"\/documentation\/divar\/simplerow\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/simplerow\/type","title":"var type: HintRowType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/simplerow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/simplerow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/simplerow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/simplerow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/simplerow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/simplerow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/simplerow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/simplerow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/simplerow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/simplerow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/simplerow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/simplerow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/simplerow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/simplerow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/simplerow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/simplerow","title":"SimpleRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/init(container:property:hierarchydata:type:header:suggestion:legendpayload:shortcutchildren:prevoiusesuggestionitems:previoussources:)","title":"init(container: SingleHierarchyBaseControllerDIContainer, property: Schema?, hierarchyData: [UIOptionsDataStruct]?, type: HierarchyType, header: String?, suggestion: UIOptionBrandSuggestion?, legendPayload: UIOptionLegendTitle?, shortcutChildren: [UIOptionBrandShortcut]?, prevoiuseSuggestionItems: [UIOptionSuggestionItem], previousSources: [ActionLog_SingleSelectedHierarchyItemSelectionActionInfo.Source])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/hierarchydata","title":"var hierarchyData: [UIOptionsDataStruct]?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/legendtitlepayload","title":"var legendTitlePayload: UIOptionLegendTitle?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/mainhierarchydata","title":"var mainHierarchyData: [UIOptionsDataStruct]?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/previoussources","title":"var previousSources: [ActionLog_SingleSelectedHierarchyItemSelectionActionInfo.Source]","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/prevoiusesuggestionitems","title":"var prevoiuseSuggestionItems: [UIOptionSuggestionItem]","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/shortcutchildren","title":"var shortcutChildren: [UIOptionsDataStruct]?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/suggestion","title":"var suggestion: UIOptionBrandSuggestion?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview","title":"var tableView: UITableView!","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/type","title":"var type: HierarchyType","type":"property"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/viewstate-swift.property","title":"var viewState: ViewState","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/branddidselect(item:source:)","title":"func brandDidSelect(item: UIOptionsDataStruct, source: ActionLog_SingleSelectedHierarchyItemSelectionActionInfo.Source)","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/createcategorycell(indexpath:)","title":"func createCategoryCell(indexPath: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/createshortcutcell(indexpath:)","title":"func createShortcutCell(indexPath: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/createsuggestioncell(indexpath:)","title":"func createSuggestionCell(indexPath: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/findshortcut(data:shortcut:)","title":"func findShortCut(data: UIOptionsDataStruct, shortCut: UIOptionBrandShortcut) -> UIOptionsDataStruct?","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/registercell()","title":"func registerCell()","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/search(with:)","title":"func search(with: String)","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/setupsearchcontroller()","title":"func setupSearchController()","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/setuptableview()","title":"func setupTableView()","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/hierarchytype\/category","title":"case category","type":"case"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/hierarchytype\/expandedcategory","title":"case expandedCategory","type":"case"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/hierarchytype\/other","title":"case other","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/hierarchytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/hierarchytype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/singlehierarchybasecontroller\/hierarchytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlehierarchybasecontroller\/hierarchytype","title":"SingleHierarchyBaseController.HierarchyType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/viewstate-swift.enum\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/viewstate-swift.enum\/searching","title":"case searching","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/viewstate-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/viewstate-swift.enum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/singlehierarchybasecontroller\/viewstate-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlehierarchybasecontroller\/viewstate-swift.enum","title":"SingleHierarchyBaseController.ViewState","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/singlehierarchybasecontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/actiondidtap(view:)","title":"func actionDidTap(view: SuggestionRow)","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/didselectitem(index:view:)","title":"func didSelectItem(index: Int, view: SuggestionRow)","type":"method"}],"path":"\/documentation\/divar\/singlehierarchybasecontroller\/suggestionrowprotocol-implementations","title":"SuggestionRowProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/singlehierarchybasecontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:heightforheaderinsection:)","title":"func tableView(UITableView, heightForHeaderInSection: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:viewforheaderinsection:)","title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?","type":"method"},{"path":"\/documentation\/divar\/singlehierarchybasecontroller\/tableview(_:willdisplay:forrowat:)","title":"func tableView(UITableView, willDisplay: UITableViewCell, forRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/singlehierarchybasecontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlehierarchybasecontroller","title":"SingleHierarchyBaseController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchycontroller\/delegate","title":"var delegate: SingleHierarchyControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchycontroller\/row","title":"var row: RowOf<String>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchycontroller\/branddidselect(item:source:)","title":"func brandDidSelect(item: UIOptionsDataStruct, source: ActionLog_SingleSelectedHierarchyItemSelectionActionInfo.Source)","type":"method"},{"path":"\/documentation\/divar\/singlehierarchycontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/singlehierarchycontroller","title":"SingleHierarchyController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchyrow\/init(property:onvalidationchanged:onchange:)","title":"init(property: Schema, onValidationChanged: ValidationChanged, onChange: OnChange)","type":"init"},{"path":"\/documentation\/divar\/singlehierarchyrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/singlehierarchyrow\/init(tag:property:)","title":"init(tag: String?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchyrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/singlehierarchyrow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchyrow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchyrow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchyrow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/singlehierarchyrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/singlehierarchyrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/singlehierarchyrow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchyrow\/onchange","title":"SingleHierarchyRow.OnChange","type":"typealias"},{"path":"\/documentation\/divar\/singlehierarchyrow\/presenterrow","title":"SingleHierarchyRow.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/singlehierarchyrow\/validationchanged","title":"SingleHierarchyRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchyrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/singlehierarchyrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchyrow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/singlehierarchyrow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchyrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchyrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlehierarchyrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlehierarchyrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlehierarchyrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlehierarchyrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlehierarchyrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchyrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchyrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchyrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchyrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlehierarchyrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/singlehierarchyrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchyrow\/singlehierarchyvc(_:didselectitem:source:)","title":"func singleHierarchyVC(SingleHierarchyController, didSelectItem: UIOptionsDataStruct, source: ActionLog_SingleSelectedHierarchyItemSelectionActionInfo.Source)","type":"method"}],"path":"\/documentation\/divar\/singlehierarchyrow\/singlehierarchycontrollerdelegate-implementations","title":"SingleHierarchyControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlehierarchyrow","title":"SingleHierarchyRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/init(config:formservice:)","title":"init(config: SingleMultiBaseViewControllerConfig, formService: FormServiceProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/config","title":"var config: SingleMultiBaseViewControllerConfig","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/data","title":"var data: [SingleMultiModel]","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/delegate","title":"var delegate: SingleMultiBaseViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/pagestackview","title":"var pageStackView: UIStackView","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/searchboxholderview","title":"var searchBoxHolderView: UIView","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/sectionofdata","title":"var sectionOfData: Int","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/selecteddata","title":"var selectedData: [SingleMultiModel]","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/tableview","title":"var tableView: AdvancedTableView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/addvaluetorow(_:)","title":"func addValuetoRow(SingleMultiModel)","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/changestate()","title":"func changeState()","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/removevaluefromrow(_:)","title":"func removeValueFromRow(SingleMultiModel)","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/setupsearchbox()","title":"func setupSearchBox()","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/setupstackview()","title":"func setupStackView()","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/setuptableview()","title":"func setupTableView()","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/setupui()","title":"func setupUI()","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/updateselectedrows()","title":"func updateSelectedRows()","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/tableview(_:diddeselectrowat:)","title":"func tableView(UITableView, didDeselectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/singlemultibaseviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlemultibaseviewcontroller","title":"SingleMultiBaseViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/init(property:)","title":"init(property: Schema)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/cities","title":"var cities: Schema?","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/defaulttag","title":"var defaultTag: String","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/iconurl","title":"var iconUrl: String?","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/items","title":"var items: [SingleMultiModel]","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/property","title":"var property: Schema","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/propertykey","title":"var propertyKey: String","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/required","title":"var required: Bool?","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/switchlabel","title":"var switchLabel: String","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/views","title":"var views: [SingleMultiSubviews]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/getvalue(selecteditems:)","title":"func getValue(selectedItems: [SingleMultiModel]) -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/setvalue(value:)","title":"func setValue(value: [String : Any]) -> [SingleMultiModel]?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/displayvaluefor(_:)","title":"func displayValueFor([SingleMultiModel]) -> String","type":"method"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/getnamefordefault(_:)","title":"func getNameForDefault([SingleMultiModel]) -> String","type":"method"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/getnameforforone(_:)","title":"func getNameForForOne([SingleMultiModel]) -> String","type":"method"},{"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/getnameforforzero(_:)","title":"func getNameForForZero([SingleMultiModel]) -> String","type":"method"}],"path":"\/documentation\/divar\/singlemultibrandeurekaconfig\/brandbuttonlabelhelper-implementations","title":"BrandButtonLabelHelper Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlemultibrandeurekaconfig","title":"SingleMultiBrandEurekaConfig","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibrandviewcontrollerconfig\/init(_:selecteddata:cityids:)","title":"init([SingleMultiModel], selectedData: [SingleMultiModel], cityIds: [Int])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibrandviewcontrollerconfig\/cityids","title":"var cityIds: [Int]","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandviewcontrollerconfig\/data","title":"var data: [SingleMultiModel]","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandviewcontrollerconfig\/ismultiselection","title":"var isMultiSelection: Bool","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandviewcontrollerconfig\/issearchenable","title":"var isSearchEnable: Bool","type":"property"},{"path":"\/documentation\/divar\/singlemultibrandviewcontrollerconfig\/selecteddata","title":"var selectedData: [SingleMultiModel]","type":"property"}],"path":"\/documentation\/divar\/singlemultibrandviewcontrollerconfig","title":"SingleMultiBrandViewControllerConfig","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/init(formviewcontroller:config:onvalidationchanged:)","title":"init(formViewController: BaseFormViewController, config: SingleMultiEurekaConfig, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/config","title":"var config: SingleMultiEurekaConfig","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/presenterrow","title":"SingleMultiEurekaAbstractRow.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/validationchanged","title":"SingleMultiEurekaAbstractRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/singlemultieurekaabstractrow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlemultieurekaabstractrow","title":"SingleMultiEurekaAbstractRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/init(formviewcontroller:config:onvalidationchanged:)","title":"init(formViewController: BaseFormViewController, config: SingleMultiEurekaConfig, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekalocationrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/singlemultieurekalocationrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlemultieurekalocationrow","title":"SingleMultiEurekaLocationRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekalocationviewcontroller\/isselectinmapenabled","title":"var isSelectInMapEnabled: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekalocationviewcontroller\/setupchildviewcontroller()","title":"func setupChildViewController()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekalocationviewcontroller\/selecteddatadidchanged(_:selecteddata:)","title":"func selectedDataDidChanged(MapDistrictSelectorViewController, selectedData: [SingleMultiModel])","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekalocationviewcontroller\/submitbuttondidtapped(_:)","title":"func submitButtonDidTapped(MapDistrictSelectorViewController)","type":"method"}],"path":"\/documentation\/divar\/singlemultieurekalocationviewcontroller\/mapdistrictselectorviewcontrollerdelegate-implementations","title":"MapDistrictSelectorViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekalocationviewcontroller\/didrequestselectinmap(_:)","title":"func didRequestSelectInMap(SingleMultiLocationViewController)","type":"method"}],"path":"\/documentation\/divar\/singlemultieurekalocationviewcontroller\/singlemultilocationviewcontrollerdelegate-implementations","title":"SingleMultiLocationViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlemultieurekalocationviewcontroller","title":"SingleMultiEurekaLocationViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekarow\/init(formviewcontroller:config:onvalidationchanged:)","title":"init(formViewController: BaseFormViewController, config: SingleMultiEurekaConfig, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/singlemultieurekarow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekarow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekarow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekarow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekarow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekarow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekarow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekarow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekarow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekarow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekarow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekarow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekarow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/singlemultieurekarow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlemultieurekarow","title":"SingleMultiEurekaRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/init(config:callback:formservice:)","title":"init(config: SingleMultiEurekaViewControllerConfig<T>, callback: ((UIViewController) -> Void)?, formService: FormServiceProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/buttonbar","title":"var buttonBar: SplitButtonBarViewController","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/childview","title":"var childView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/childviewcontroller","title":"var childViewController: SingleMultiBaseViewController?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/config","title":"var config: SingleMultiEurekaViewControllerConfig<T>","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/formservice","title":"let formService: FormServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/row","title":"var row: RowOf<[SingleMultiModel]>!","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/switchbar","title":"var switchBar: SwitchBarViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/addchild()","title":"func addChild()","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/reloadbutton(with:)","title":"func reloadButton(with: [SingleMultiModel])","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/reloadchangenearby(for:)","title":"func reloadChangeNearby(for: inout [SingleMultiModel])","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/setupchildviewcontroller()","title":"func setupChildViewController()","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/switchvaluechanged(_:newvalue:)","title":"func switchValueChanged(SwitchBarViewController, newValue: Bool)","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/valuechanges(_:)","title":"func valueChanges([SingleMultiModel])","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/singlemultieurekaviewcontroller","title":"SingleMultiEurekaViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/init(property:)","title":"init(property: Schema)","type":"init"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/init(property:properties:)","title":"init(property: Schema, properties: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/cities","title":"var cities: Schema?","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/defaulttag","title":"var defaultTag: String","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/iconurl","title":"var iconUrl: String?","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/isselectinmapenabled","title":"var isSelectInMapEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/items","title":"var items: [SingleMultiModel]","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/property","title":"var property: Schema","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/propertykey","title":"var propertyKey: String","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/required","title":"var required: Bool?","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/switchlabel","title":"var switchLabel: String","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/views","title":"var views: [SingleMultiSubviews]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/getvalue(selecteditems:)","title":"func getValue(selectedItems: [SingleMultiModel]) -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationeurekaconfig\/setvalue(value:)","title":"func setValue(value: [String : Any]) -> [SingleMultiModel]?","type":"method"}],"path":"\/documentation\/divar\/singlemultilocationeurekaconfig","title":"SingleMultiLocationEurekaConfig","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/isselectinmapenabled","title":"var isSelectInMapEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/locationdelegate","title":"var locationDelegate: SingleMultiLocationViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/sectionofdata","title":"var sectionOfData: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/setselectinmapbuttonenable(_:)","title":"func setSelectInMapButtonEnable(Bool)","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/singlemultilocationviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/singlemultilocationviewcontroller","title":"SingleMultiLocationViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultilocationviewcontrollerconfig\/init(_:selecteddata:cityids:)","title":"init([SingleMultiModel], selectedData: [SingleMultiModel], cityIds: [Int])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultilocationviewcontrollerconfig\/cityids","title":"var cityIds: [Int]","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationviewcontrollerconfig\/data","title":"var data: [SingleMultiModel]","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationviewcontrollerconfig\/ismultiselection","title":"var isMultiSelection: Bool","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationviewcontrollerconfig\/issearchenable","title":"var isSearchEnable: Bool","type":"property"},{"path":"\/documentation\/divar\/singlemultilocationviewcontrollerconfig\/selecteddata","title":"var selectedData: [SingleMultiModel]","type":"property"}],"path":"\/documentation\/divar\/singlemultilocationviewcontrollerconfig","title":"SingleMultiLocationViewControllerConfig","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlepushselectorcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/singlepushselectorcell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlepushselectorcell\/fill(with:)","title":"func fill(with: SingleMultiModel)","type":"method"}],"path":"\/documentation\/divar\/singlepushselectorcell","title":"SinglePushSelectorCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionactionlog\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionactionlog\/serialdatabasequeue","title":"var serialDatabaseQueue: DispatchQueue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionactionlog\/addcontactlog(_:)","title":"func addContactLog(SmartSuggestionItem)","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionactionlog\/addpostlistlog(_:)","title":"func addPostListLog(SmartSuggestionItem)","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionactionlog\/addpostlog(_:)","title":"func addPostLog(SmartSuggestionItem)","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionactionlog\/getvalues()","title":"func getValues() -> [String : Any]","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionactionlog\/initial(dataprovider:config:)","title":"func initial(dataProvider: DataProviderProtocol, config: SmartSuggestion?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionactionlog\/databasequeue","title":"static var databaseQueue: String","type":"property"}],"path":"\/documentation\/divar\/smartsuggestionactionlog","title":"SmartSuggestionActionLog","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/socketconnectivityloghelper\/init(didebaanmonitoring:)","title":"init(didebaanMonitoring: DidebaanMonitoring)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/socketconnectivityloghelper\/logdisconnect()","title":"func logDisconnect()","type":"method"},{"path":"\/documentation\/divar\/socketconnectivityloghelper\/logendsession()","title":"func logEndSession()","type":"method"},{"path":"\/documentation\/divar\/socketconnectivityloghelper\/logreconnect()","title":"func logReconnect()","type":"method"},{"path":"\/documentation\/divar\/socketconnectivityloghelper\/logstartsession()","title":"func logStartSession()","type":"method"}],"path":"\/documentation\/divar\/socketconnectivityloghelper","title":"SocketConnectivityLogHelper","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/socketrequestloghelper\/init(topic:didebaanmonitoring:)","title":"init(topic: ClientExporter_Topic, didebaanMonitoring: DidebaanMonitoring)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/socketrequestloghelper\/logrequest()","title":"func logRequest()","type":"method"},{"path":"\/documentation\/divar\/socketrequestloghelper\/logresponse()","title":"func logResponse()","type":"method"}],"path":"\/documentation\/divar\/socketrequestloghelper","title":"SocketRequestLogHelper","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sonnatsuggestionrowtableviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/sonnatsuggestionrowtableviewcell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sonnatsuggestionrowtableviewcell\/delegate","title":"var delegate: Sonnat.SuggestionRowProtocol?","type":"property"},{"path":"\/documentation\/divar\/sonnatsuggestionrowtableviewcell\/suggestionrow","title":"let suggestionRow: Sonnat.SuggestionRow","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sonnatsuggestionrowtableviewcell\/fill(title:description:actionbuttontitle:items:)","title":"func fill(title: String, description: String?, actionButtonTitle: String?, items: [Sonnat.SuggestionItem])","type":"method"},{"path":"\/documentation\/divar\/sonnatsuggestionrowtableviewcell\/prepare()","title":"func prepare()","type":"method"}],"path":"\/documentation\/divar\/sonnatsuggestionrowtableviewcell","title":"SonnatSuggestionRowTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/init(config:)","title":"init(config: SplitButtonBarConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/delegate","title":"var delegate: SplitButtonBarViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/isprimaryenabled","title":"var isPrimaryEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/primarytext","title":"var primaryText: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/primarybuttontapped()","title":"func primaryButtonTapped()","type":"method"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/setconfig(_:)","title":"func setConfig(SplitButtonBarConfig)","type":"method"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/setconfig(stickywidget:)","title":"func setConfig(stickyWidget: StickyWidgetActionWrapper)","type":"method"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/setlabeltext(_:)","title":"func setLabelText(String)","type":"method"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/splitbuttonbarviewcontroller","title":"SplitButtonBarViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/startupconfigurationservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/startupconfigurationservice\/getstartupconfigurations(phonenumber:)","title":"func getStartupConfigurations(phoneNumber: String?) async -> Result<(IntroConfig, Bool), Error>","type":"method"}],"path":"\/documentation\/divar\/startupconfigurationservice","title":"StartupConfigurationService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/statefulrowcollectionviewcell\/divider","title":"var divider: UIView!","type":"property"},{"path":"\/documentation\/divar\/statefulrowcollectionviewcell\/ishighlighted","title":"var isHighlighted: Bool","type":"property"},{"path":"\/documentation\/divar\/statefulrowcollectionviewcell\/statefulview","title":"var statefulView: StatefulView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/statefulrowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_StatefulRowData)","type":"method"},{"path":"\/documentation\/divar\/statefulrowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/statefulrowcollectionviewcell","title":"StatefulRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/statefultableviewcell\/statefulview","title":"var statefulView: StatefulView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/statefultableviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/statefultableviewcell\/fill(title:value:titlecolor:valuecolor:)","title":"func fill(title: String, value: String, titleColor: UIColor?, valueColor: UIColor?)","type":"method"}],"path":"\/documentation\/divar\/statefultableviewcell","title":"StatefulTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/statefulview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/statefulview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/statefulview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/statefulview\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/statefulview\/valuelabel","title":"var valueLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/statefulview\/fill(title:value:titlecolor:valuecolor:)","title":"func fill(title: String, value: String, titleColor: UIColor?, valueColor: UIColor?)","type":"method"}],"path":"\/documentation\/divar\/statefulview","title":"StatefulView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbar\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/stepindicatorbar\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbar\/defaultstepcolor","title":"var defaultStepColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/stepindicatorbar\/initialstep","title":"var initialStep: Int32","type":"property"},{"path":"\/documentation\/divar\/stepindicatorbar\/stepcolor","title":"var stepColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/stepindicatorbar\/stepsnumber","title":"var stepsNumber: Int32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbar\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/stepindicatorbar\/fill(currentstep:totalstep:)","title":"func fill(currentStep: Int32, totalStep: Int32)","type":"method"},{"path":"\/documentation\/divar\/stepindicatorbar\/updatesteps()","title":"func updateSteps()","type":"method"},{"path":"\/documentation\/divar\/stepindicatorbar\/updatestepscolor()","title":"func updateStepsColor()","type":"method"}],"path":"\/documentation\/divar\/stepindicatorbar","title":"StepIndicatorBar","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbarcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/stepindicatorbarcell\/stepindicatorbar","title":"var stepIndicatorBar: StepIndicatorBar!","type":"property"}],"path":"\/documentation\/divar\/stepindicatorbarcell","title":"StepIndicatorBarCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/init(tag:data:)","title":"init(tag: String?, data: StepIndicatorBarEurekaData?)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/stepindicatorbarrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/stepindicatorbarrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/stepindicatorbarrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/stepindicatorbarrow","title":"StepIndicatorBarRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorrowcollectionviewcell\/label","title":"var label: UILabel!","type":"property"},{"path":"\/documentation\/divar\/stepindicatorrowcollectionviewcell\/stepindicatorbar","title":"var stepIndicatorBar: StepIndicatorBar!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorrowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_StepIndicatorRowData)","type":"method"},{"path":"\/documentation\/divar\/stepindicatorrowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/stepindicatorrowcollectionviewcell","title":"StepIndicatorRowCollectionViewCell","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/submitpromotionflowcontroller\/initcarconcieragepromotion(action:)","title":"func initCarConcieragePromotion(action: Widgets_Action) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/submitpromotionflowcontroller\/initsalepromotion(with:saletoken:)","title":"func initSalePromotion(with: NavigationController, saleToken: String) -> UIViewController","type":"method"}],"path":"\/documentation\/divar\/submitpromotionflowcontroller","title":"SubmitPromotionFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell\/indicatoricon","title":"var indicatorIcon: SonnatImageView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_SubscriptionRowData)","type":"method"},{"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell\/subscriptionrow(didselectselectorin:)","title":"func subscriptionRow(didSelectSelectorIn: SubscriptionRow)","type":"method"}],"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell\/subscriptionrowdelegate-implementations","title":"SubscriptionRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/subscriptionrowcollectionviewcell","title":"SubscriptionRowCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/subtitlerowcollectionviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/subtitlerowcollectionviewcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/subtitlerowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_SubtitleRowData)","type":"method"},{"path":"\/documentation\/divar\/subtitlerowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/subtitlerowcollectionviewcell","title":"SubtitleRowCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/subtitlewidgetcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/subtitlewidgetcell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/subtitlewidgetcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/subtitlewidgetcell\/text","title":"var text: String?","type":"property"},{"path":"\/documentation\/divar\/subtitlewidgetcell\/textcolor","title":"var textColor: UIColor?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/subtitlewidgetcell\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/divar\/subtitlewidgetcell","title":"SubtitleWidgetCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/init(property:)","title":"init(property: Schema)","type":"init"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/options","title":"var options: [Schema]","type":"property"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/property","title":"var property: Schema?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/subtitlewidgetrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/subtitlewidgetrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/subtitlewidgetrow","title":"SubtitleWidgetRow","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestioncollectionviewcell\/collection","title":"var collection: UICollectionView!","type":"property"},{"path":"\/documentation\/divar\/suggestioncollectionviewcell\/divider","title":"var divider: UIView!","type":"property"}],"path":"\/documentation\/divar\/suggestioncollectionviewcell","title":"SuggestionCollectionViewCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionitemcell\/headerimage","title":"var headerImage: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/suggestionitemcell\/lasttitle","title":"var lastTitle: UILabel!","type":"property"},{"path":"\/documentation\/divar\/suggestionitemcell\/primaytitle","title":"var primayTitle: UILabel!","type":"property"},{"path":"\/documentation\/divar\/suggestionitemcell\/secondarytitle","title":"var secondaryTitle: UILabel!","type":"property"}],"path":"\/documentation\/divar\/suggestionitemcell","title":"SuggestionItemCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionrowcollectionviewcell\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/suggestionrowcollectionviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/suggestionrowcollectionviewcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionrowcollectionviewcell\/fill(with:widget:)","title":"func fill(with: Widgets_SuggestionRowData, widget: Widgets_Widget?)","type":"method"},{"path":"\/documentation\/divar\/suggestionrowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionrowcollectionviewcell\/suggestionrowheight(data:)","title":"static func suggestionRowHeight(data: Widgets_SuggestionRowData) -> CGFloat","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionrowcollectionviewcell\/actiondidtap(view:)","title":"func actionDidTap(view: SuggestionRow)","type":"method"},{"path":"\/documentation\/divar\/suggestionrowcollectionviewcell\/didselectitem(index:view:)","title":"func didSelectItem(index: Int, view: SuggestionRow)","type":"method"}],"path":"\/documentation\/divar\/suggestionrowcollectionviewcell\/suggestionrowprotocol-implementations","title":"SuggestionRowProtocol Implementations","type":"symbol"}],"path":"\/documentation\/divar\/suggestionrowcollectionviewcell","title":"SuggestionRowCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/swiftcountdowntimer\/init(interval:times:queue:handler:)","title":"init(interval: DispatchTimeInterval, times: Int, queue: DispatchQueue, handler: (SwiftCountDownTimer, _ leftTimes: Int) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/swiftcountdowntimer\/recountdown()","title":"func reCountDown()","type":"method"},{"path":"\/documentation\/divar\/swiftcountdowntimer\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/divar\/swiftcountdowntimer\/suspend()","title":"func suspend()","type":"method"}],"path":"\/documentation\/divar\/swiftcountdowntimer","title":"SwiftCountDownTimer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/swifttimer\/init(interval:repeats:leeway:queue:handler:)","title":"init(interval: DispatchTimeInterval, repeats: Bool, leeway: DispatchTimeInterval, queue: DispatchQueue, handler: SwiftTimerHandler)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/swifttimer\/repeats","title":"let repeats: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/swifttimer\/fire()","title":"func fire()","type":"method"},{"path":"\/documentation\/divar\/swifttimer\/reschedulehandler(handler:)","title":"func rescheduleHandler(handler: SwiftTimerHandler)","type":"method"},{"path":"\/documentation\/divar\/swifttimer\/reschedulerepeating(interval:)","title":"func rescheduleRepeating(interval: DispatchTimeInterval)","type":"method"},{"path":"\/documentation\/divar\/swifttimer\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/divar\/swifttimer\/suspend()","title":"func suspend()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/swifttimer\/swifttimerhandler","title":"SwiftTimer.SwiftTimerHandler","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/swifttimer\/cancelthrottlingtimer(identifier:)","title":"static func cancelThrottlingTimer(identifier: String)","type":"method"},{"path":"\/documentation\/divar\/swifttimer\/debounce(interval:identifier:queue:handler:)","title":"static func debounce(interval: DispatchTimeInterval, identifier: String, queue: DispatchQueue, handler: () -> Void)","type":"method"},{"path":"\/documentation\/divar\/swifttimer\/repeatictimer(interval:leeway:queue:handler:)","title":"static func repeaticTimer(interval: DispatchTimeInterval, leeway: DispatchTimeInterval, queue: DispatchQueue, handler: SwiftTimerHandler) -> SwiftTimer","type":"method"},{"path":"\/documentation\/divar\/swifttimer\/throttle(interval:identifier:queue:handler:)","title":"static func throttle(interval: DispatchTimeInterval, identifier: String, queue: DispatchQueue, handler: () -> Void)","type":"method"}],"path":"\/documentation\/divar\/swifttimer","title":"SwiftTimer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/init(config:)","title":"init(config: SwitchBarConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/barswitch","title":"var barSwitch: UISwitch!","type":"property"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/config","title":"let config: SwitchBarConfig","type":"property"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/delegate","title":"var delegate: SwitchBarViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/ison","title":"var isOn: Bool","type":"property"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/setupui()","title":"func setupUI()","type":"method"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/switchchangedaction(_:)","title":"func switchChangedAction(UISwitch)","type":"method"},{"path":"\/documentation\/divar\/switchbarviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/switchbarviewcontroller","title":"SwitchBarViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/switchtableviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/switchtableviewcell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/switchtableviewcell\/data","title":"var data: Any?","type":"property"},{"path":"\/documentation\/divar\/switchtableviewcell\/delegate","title":"var delegate: SwitchTableViewCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/switchtableviewcell\/switchview","title":"var switchView: Sonnat.SwitchRow","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/switchtableviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/switchtableviewcell\/fill(title:ison:state:isdividerhidden:)","title":"func fill(title: String, isOn: Bool, state: Sonnat.SwitchRowStates, isDividerHidden: Bool)","type":"method"},{"path":"\/documentation\/divar\/switchtableviewcell\/fill(with:)","title":"func fill(with: SwitchTableViewCellModel)","type":"method"},{"path":"\/documentation\/divar\/switchtableviewcell\/seton(_:animated:)","title":"func setOn(Bool, animated: Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/switchtableviewcell\/switchrow(didchangevalue:)","title":"func switchRow(didChangeValue: Bool)","type":"method"}],"path":"\/documentation\/divar\/switchtableviewcell\/switchrowdelegate-implementations","title":"SwitchRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/switchtableviewcell","title":"SwitchTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/switchview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/switchview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/switchview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/switchview\/ison","title":"var isOn: Bool","type":"property"},{"path":"\/documentation\/divar\/switchview\/switchlabel","title":"var switchLabel: UILabel!","type":"property"},{"path":"\/documentation\/divar\/switchview\/switchoutlet","title":"var switchOutlet: UISwitch!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/switchview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/switchview\/fill(ison:label:labelcolor:valuechanged:)","title":"func fill(isOn: Bool, label: String, labelColor: UIColor, valueChanged: ((Bool) -> Void))","type":"method"},{"path":"\/documentation\/divar\/switchview\/seton(_:animated:)","title":"func setOn(Bool, animated: Bool)","type":"method"},{"path":"\/documentation\/divar\/switchview\/switchvaluecahnged(_:)","title":"func switchValueCahnged(UISwitch)","type":"method"}],"path":"\/documentation\/divar\/switchview","title":"SwitchView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/tabbedlinechartcollectionviewcell\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/tabbedlinechartcollectionviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/tabbedlinechartcollectionviewcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tabbedlinechartcollectionviewcell\/fill(with:selectedtabindex:)","title":"func fill(with: Widgets_TabbedLineChartRowData, selectedTabIndex: Int)","type":"method"},{"path":"\/documentation\/divar\/tabbedlinechartcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tabbedlinechartcollectionviewcell\/tabbedlinechartrow(_:didselecttabat:)","title":"func tabbedLineChartRow(TabbedLineChartRow, didSelectTabAt: Int)","type":"method"}],"path":"\/documentation\/divar\/tabbedlinechartcollectionviewcell\/tabbedlinechartrowdelegate-implementations","title":"TabbedLineChartRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/tabbedlinechartcollectionviewcell","title":"TabbedLineChartCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/init(items:defaultselecteditemindex:)","title":"init(items: [(segmentedControlItem: String, viewController: ComponentViewContorller)], defaultSelectedItemIndex: Int)","type":"init"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/init(viewcontroller:)","title":"init(viewController: ComponentViewContorller)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/contentstackview","title":"var contentStackView: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/delegate","title":"var delegate: TabbedPageViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/hidetabsonscroll","title":"var hideTabsOnScroll: Bool","type":"property"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/issinglecontroller","title":"var isSingleController: Bool","type":"property"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/tabsviewholder","title":"var tabsViewHolder: UIToolbar!","type":"property"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/tabsviewholderheight","title":"var tabsViewHolderHeight: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/viewcontrollers","title":"var viewControllers: [ComponentViewContorller]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/segmentvaluechanged()","title":"func segmentValueChanged()","type":"method"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/set(items:defaultselecteditemindex:)","title":"func set(items: [(segmentedControlItem: String, viewController: ComponentViewContorller)], defaultSelectedItemIndex: Int)","type":"method"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/set(viewcontroller:)","title":"func set(viewController: ComponentViewContorller)","type":"method"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/showtabs(_:)","title":"func showTabs(Bool)","type":"method"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tabbedpageviewcontroller\/position(for:)","title":"func position(for: UIBarPositioning) -> UIBarPosition","type":"method"}],"path":"\/documentation\/divar\/tabbedpageviewcontroller\/uibarpositioningdelegate-implementations","title":"UIBarPositioningDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/tabbedpageviewcontroller","title":"TabbedPageViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/tablecellconfigurator\/init(item:widget:)-3ujsl","title":"init(item: DataType, widget: AbstractTableType)","type":"init"},{"path":"\/documentation\/divar\/tablecellconfigurator\/init(item:widget:)-7ax2h","title":"init(item: DataType, widget: Widgets_Widget.TypeEnum?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tablecellconfigurator\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/tablecellconfigurator\/protowidgettyoe","title":"var protoWidgetTyoe: Widgets_Widget.TypeEnum?","type":"property"},{"path":"\/documentation\/divar\/tablecellconfigurator\/widgettype","title":"var widgetType: AbstractTableType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tablecellconfigurator\/configure(cell:indexpath:delegate:)","title":"func configure(cell: UITableViewCell, indexPath: IndexPath, delegate: ConfigurableCellDelegate?)","type":"method"},{"path":"\/documentation\/divar\/tablecellconfigurator\/model(_:)","title":"func model<E>(E.Type) -> E?","type":"method"},{"path":"\/documentation\/divar\/tablecellconfigurator\/returndata(_:)","title":"func returnData<T>(T.Type) -> T?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tablecellconfigurator\/reuseid","title":"static var reuseId: String","type":"property"}],"path":"\/documentation\/divar\/tablecellconfigurator","title":"TableCellConfigurator","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistcell\/closebutton","title":"var closeButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/taglistcell\/delegate","title":"var delegate: TagListCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/taglistcell\/iconimageview","title":"var iconImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/taglistcell\/id","title":"var id: Int?","type":"property"},{"path":"\/documentation\/divar\/taglistcell\/isfilled","title":"var isFilled: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistcell\/titlecenterxconstraint","title":"var titleCenterXConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/taglistcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/balancetitlexconstraint()","title":"func balanceTitleXConstraint()","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/closebuttonclicked(_:)","title":"func closeButtonClicked(UIButton)","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/fill(with:)","title":"func fill(with: TagListItem)","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/inverttagcolors(_:)","title":"func invertTagColors(Bool)","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/showicon()","title":"func showIcon()","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/showremovebutton(_:)","title":"func showRemoveButton(Bool)","type":"method"},{"path":"\/documentation\/divar\/taglistcell\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"}],"path":"\/documentation\/divar\/taglistcell","title":"TagListCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistcollectionviewcell\/taglistview","title":"var tagListView: TagListView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_TagListRowData)","type":"method"},{"path":"\/documentation\/divar\/taglistcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistcollectionviewcell\/heightforcollection(_:datas:)","title":"static func heightForCollection(CGFloat, datas: [Base_Tag]) -> CGFloat","type":"method"}],"path":"\/documentation\/divar\/taglistcollectionviewcell","title":"TagListCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistdelegateanddatasource\/init(with:cellfont:ismultiline:)","title":"init(with: UICollectionView, cellFont: UIFont, isMultiline: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistdelegateanddatasource\/list","title":"var list: [Base_Tag]","type":"property"},{"path":"\/documentation\/divar\/taglistdelegateanddatasource\/marginx","title":"let marginX: CGFloat","type":"property"},{"path":"\/documentation\/divar\/taglistdelegateanddatasource\/paddingx","title":"let paddingX: CGFloat","type":"property"},{"path":"\/documentation\/divar\/taglistdelegateanddatasource\/paddingy","title":"let paddingY: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistdelegateanddatasource\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/taglistdelegateanddatasource\/collectionview(_:layout:sizeforitemat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, sizeForItemAt: IndexPath) -> CGSize","type":"method"},{"path":"\/documentation\/divar\/taglistdelegateanddatasource\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/taglistdelegateanddatasource","title":"TagListDelegateAndDataSource","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistflowlayout\/previoussize","title":"var previousSize: CGSize","type":"property"},{"path":"\/documentation\/divar\/taglistflowlayout\/textfont","title":"var textFont: UIFont","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistflowlayout\/prepare()","title":"func prepare()","type":"method"}],"path":"\/documentation\/divar\/taglistflowlayout","title":"TagListFlowLayout","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/cellheight","title":"var cellHeight: CGFloat?","type":"property"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/cellspacing","title":"let cellSpacing: CGFloat","type":"property"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/flipshorizontallyinoppositelayoutdirection","title":"var flipsHorizontallyInOppositeLayoutDirection: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/marginx","title":"var marginX: CGFloat","type":"property"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/paddingx","title":"var paddingX: CGFloat","type":"property"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/paddingy","title":"var paddingY: CGFloat","type":"property"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/previoussize","title":"var previousSize: CGSize","type":"property"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/textfont","title":"var textFont: UIFont","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/layoutattributesforelements(in:)","title":"func layoutAttributesForElements(in: CGRect) -> [UICollectionViewLayoutAttributes]?","type":"method"},{"path":"\/documentation\/divar\/taglistmultilineflowlayout\/prepare()","title":"func prepare()","type":"method"}],"path":"\/documentation\/divar\/taglistmultilineflowlayout","title":"TagListMultilineFlowLayout","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/taglistview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistview\/collectionview","title":"var collectionView: UICollectionView!","type":"property"},{"path":"\/documentation\/divar\/taglistview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/taglistview\/delegateanddatasource","title":"var delegateAndDataSource: TagListDelegateAndDataSource?","type":"property"},{"path":"\/documentation\/divar\/taglistview\/dividerview","title":"var dividerView: UIView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/taglistview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/taglistview\/fill(with:)","title":"func fill(with: Widgets_TagListRowData)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistview\/bottompadding","title":"static let bottomPadding: CGFloat","type":"property"},{"path":"\/documentation\/divar\/taglistview\/leftpadding","title":"static let leftPadding: CGFloat","type":"property"},{"path":"\/documentation\/divar\/taglistview\/rightpadding","title":"static let rightPadding: CGFloat","type":"property"},{"path":"\/documentation\/divar\/taglistview\/toppadding","title":"static let topPadding: CGFloat","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistview\/heightforcollection(_:datas:)","title":"static func heightForCollection(CGFloat, datas: [Base_Tag]) -> CGFloat","type":"method"}],"path":"\/documentation\/divar\/taglistview","title":"TagListView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistviewcontroller\/collectionview","title":"var collectionView: UICollectionView!","type":"property"},{"path":"\/documentation\/divar\/taglistviewcontroller\/delegate","title":"var delegate: TagListViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/taglistviewcontroller\/items","title":"var items: [TagListItem]","type":"property"},{"path":"\/documentation\/divar\/taglistviewcontroller\/marginx","title":"let marginX: CGFloat","type":"property"},{"path":"\/documentation\/divar\/taglistviewcontroller\/paddingx","title":"let paddingX: CGFloat","type":"property"},{"path":"\/documentation\/divar\/taglistviewcontroller\/paddingy","title":"let paddingY: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistviewcontroller\/scrolltotop(_:)","title":"func scrollToTop(Bool)","type":"method"},{"path":"\/documentation\/divar\/taglistviewcontroller\/setuplayout()","title":"func setupLayout()","type":"method"},{"path":"\/documentation\/divar\/taglistviewcontroller\/setupui()","title":"func setupUI()","type":"method"},{"path":"\/documentation\/divar\/taglistviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistviewcontroller\/taglistcell(_:didselectclosebuttonwithid:)","title":"func tagListCell(TagListCell, didSelectCloseButtonWithId: Int)","type":"method"}],"path":"\/documentation\/divar\/taglistviewcontroller\/taglistcelldelegate-implementations","title":"TagListCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistviewcontroller\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/taglistviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/taglistviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistviewcontroller\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/taglistviewcontroller\/collectionview(_:willdisplay:foritemat:)","title":"func collectionView(UICollectionView, willDisplay: UICollectionViewCell, forItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/taglistviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistviewcontroller\/collectionview(_:layout:sizeforitemat:)","title":"func collectionView(UICollectionView, layout: UICollectionViewLayout, sizeForItemAt: IndexPath) -> CGSize","type":"method"}],"path":"\/documentation\/divar\/taglistviewcontroller\/uicollectionviewdelegateflowlayout-implementations","title":"UICollectionViewDelegateFlowLayout Implementations","type":"symbol"}],"path":"\/documentation\/divar\/taglistviewcontroller","title":"TagListViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/tagview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/tagview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tagview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/tagview\/labelrightconstraint","title":"var labelRightConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/tagview\/labelrighttoimageconstraint","title":"var labelRightToImageConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/tagview\/mainimage","title":"var mainImage: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/tagview\/mainlabel","title":"var mainLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tagview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/tagview\/fill(_:)-2iu56","title":"func fill(String)","type":"method"},{"path":"\/documentation\/divar\/tagview\/fill(_:)-8b1n7","title":"func fill(Base_Tag)","type":"method"},{"path":"\/documentation\/divar\/tagview\/fill(_:imageurl:imagecolor:)","title":"func fill(String, imageUrl: String, imageColor: SonnatColors?)","type":"method"},{"path":"\/documentation\/divar\/tagview\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tagview\/height","title":"static var height: CGFloat","type":"property"},{"path":"\/documentation\/divar\/tagview\/leftpadding","title":"static var leftPadding: CGFloat","type":"property"},{"path":"\/documentation\/divar\/tagview\/rightpadding","title":"static var rightPadding: CGFloat","type":"property"},{"path":"\/documentation\/divar\/tagview\/rightpaddingwithimage","title":"static var rightPaddingWithImage: CGFloat","type":"property"}],"path":"\/documentation\/divar\/tagview","title":"TagView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tagviewcollectionviewcell\/tagview","title":"var tagView: TagView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tagviewcollectionviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"}],"path":"\/documentation\/divar\/tagviewcollectionviewcell","title":"TagViewCollectionViewCell","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/taskdisposebag\/taskcollector\/init()","title":"init()","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taskdisposebag\/taskcollector\/buildblock(_:)","title":"static func buildBlock<Sucess, Failure>(Task<Sucess, Failure>...) -> [CancelableTask]","type":"method"}],"path":"\/documentation\/divar\/taskdisposebag\/taskcollector","title":"TaskDisposeBag.TaskCollector","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/taskdisposebag\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taskdisposebag\/add(_:)","title":"func add(CancelableTask)","type":"method"},{"path":"\/documentation\/divar\/taskdisposebag\/cancelall()","title":"func cancelAll()","type":"method"},{"path":"\/documentation\/divar\/taskdisposebag\/collect(_:)-87npb","title":"func collect(CancelableTask...)","type":"method"},{"path":"\/documentation\/divar\/taskdisposebag\/collect(_:)-8945d","title":"func collect(() -> [CancelableTask])","type":"method"},{"path":"\/documentation\/divar\/taskdisposebag\/performdisposabletask(with:_:)","title":"func performDisposableTask(with: TaskPriority?, () async -> Void)","type":"method"}],"path":"\/documentation\/divar\/taskdisposebag","title":"TaskDisposeBag","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/testphonenumberflowcontroller\/testphonenumberrequest\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/testphonenumberflowcontroller\/testphonenumberrequest\/init(defaultpagination:pagination:path:)","title":"init(defaultPagination: Pagination, pagination: Pagination, path: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/testphonenumberflowcontroller\/testphonenumberrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/testphonenumberflowcontroller\/testphonenumberrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/testphonenumberflowcontroller\/testphonenumberrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/testphonenumberflowcontroller\/testphonenumberrequest","title":"TestPhoneNumberFlowController.TestPhoneNumberRequest","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/testphonenumberflowcontroller\/initialviewcontroller()","title":"func initialViewController() -> UIViewController","type":"method"}],"path":"\/documentation\/divar\/testphonenumberflowcontroller","title":"TestPhoneNumberFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldhintview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/textfieldhintview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldhintview\/delegate","title":"var delegate: TextFieldHintViewDelegate?","type":"property"},{"path":"\/documentation\/divar\/textfieldhintview\/handler","title":"var handler: TextFieldHintViewHandler?","type":"property"},{"path":"\/documentation\/divar\/textfieldhintview\/hintview","title":"var hintView: HintView!","type":"property"},{"path":"\/documentation\/divar\/textfieldhintview\/textfieldtext","title":"var textFieldText: String?","type":"property"},{"path":"\/documentation\/divar\/textfieldhintview\/textfieldview","title":"var textFieldView: TextFieldView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldhintview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/textfieldhintview\/set(delegate:)","title":"func set(delegate: TextFieldHintViewDelegate?)","type":"method"},{"path":"\/documentation\/divar\/textfieldhintview\/set(hint:)","title":"func set(hint: HintType)","type":"method"},{"path":"\/documentation\/divar\/textfieldhintview\/set(textfield:)","title":"func set(textField: TextFieldConfig)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldhintview\/textfielddidchangeselection(_:)","title":"func textFieldDidChangeSelection(UITextField)","type":"method"},{"path":"\/documentation\/divar\/textfieldhintview\/textfieldvaluechanges(_:shouldchangecharactersin:replacementstring:)","title":"func textFieldValueChanges(UITextField, shouldChangeCharactersIn: NSRange, replacementString: String) -> Bool","type":"method"}],"path":"\/documentation\/divar\/textfieldhintview\/textfieldviewdelegate-implementations","title":"TextFieldViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/textfieldhintview","title":"TextFieldHintView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/delegate","title":"var delegate: ConfigurableCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/indexpath","title":"var indexPath: IndexPath?","type":"property"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/iseditable","title":"var isEditable: Bool","type":"property"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/textfield","title":"var textField: TextField!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/fill(with:indexpath:)","title":"func fill(with: TextFieldModel, indexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/returndata()","title":"func returnData() -> String?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/datatype","title":"TextFieldTableViewCell.DataType","type":"typealias"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/returntype","title":"TextFieldTableViewCell.ReturnType","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/textview(_:shouldchangetextin:replacementtext:)","title":"func textView(UITextView, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/textviewdidbeginediting(_:)","title":"func textViewDidBeginEditing(UITextView)","type":"method"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/textviewdidchange(_:)","title":"func textViewDidChange(UITextView)","type":"method"},{"path":"\/documentation\/divar\/textfieldtableviewcell\/textviewdidendediting(_:)","title":"func textViewDidEndEditing(UITextView)","type":"method"}],"path":"\/documentation\/divar\/textfieldtableviewcell\/textfielddelegate-implementations","title":"TextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/textfieldtableviewcell","title":"TextFieldTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/textfieldview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/textfieldview\/delegate","title":"var delegate: TextFieldViewDelegate?","type":"property"},{"path":"\/documentation\/divar\/textfieldview\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/divar\/textfieldview\/text","title":"var text: String?","type":"property"},{"path":"\/documentation\/divar\/textfieldview\/textfield","title":"var textField: UITextField!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/textfieldview\/set(textfield:placeholder:_:)","title":"func set(textField: String?, placeholder: String?, UIKeyboardType)","type":"method"},{"path":"\/documentation\/divar\/textfieldview\/textfielddidchange(_:)","title":"func textFieldDidChange(UITextField)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldview\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"func textField(UITextField, shouldChangeCharactersIn: NSRange, replacementString: String) -> Bool","type":"method"}],"path":"\/documentation\/divar\/textfieldview\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/textfieldview","title":"TextFieldView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textmessagecell\/delegate","title":"var delegate: TextMessageCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/textmessagecell\/menuoptions","title":"var menuOptions: [MessageCellOptions]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textmessagecell\/fillmessageview()","title":"func fillMessageView()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textmessagecell\/textmessagerow(_:didclickonurl:)","title":"func textMessageRow(TextMessageRow, didClickOnUrl: URL)","type":"method"},{"path":"\/documentation\/divar\/textmessagecell\/textmessagerowdidclickcensoredmessage(_:)","title":"func textMessageRowDidClickCensoredMessage(TextMessageRow)","type":"method"}],"path":"\/documentation\/divar\/textmessagecell\/textmessagerowdelegate-implementations","title":"TextMessageRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/textmessagecell","title":"TextMessageCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/threadsafe\/init(_:)","title":"init(A)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/threadsafe\/value","title":"var value: A","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/threadsafe\/atomically(_:)","title":"func atomically((inout A) -> Void)","type":"method"}],"path":"\/documentation\/divar\/threadsafe","title":"ThreadSafe","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/threadsafedictionary\/init()","title":"init()","type":"init"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/divar\/threadsafedictionary\/subscript(_:)","title":"subscript(K) -> V?","type":"subscript"}],"path":"\/documentation\/divar\/threadsafedictionary","title":"ThreadSafeDictionary","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/throttler\/init(delay:)","title":"init(delay: TimeInterval)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/throttler\/go(queue:_:)","title":"func go(queue: DispatchQueue, () -> Void)","type":"method"}],"path":"\/documentation\/divar\/throttler","title":"Throttler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/tinytooltipview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/tinytooltipview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tinytooltipview\/backgroundview","title":"var backgroundView: UIView!","type":"property"},{"path":"\/documentation\/divar\/tinytooltipview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/tinytooltipview\/imagewidthconstraint","title":"var imageWidthConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/tinytooltipview\/mainimage","title":"var mainImage: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/tinytooltipview\/mainlabel","title":"var mainLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tinytooltipview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/tinytooltipview\/fill(_:)","title":"func fill(String)","type":"method"},{"path":"\/documentation\/divar\/tinytooltipview\/fill(_:icon:)","title":"func fill(String, icon: Base_Icon)","type":"method"},{"path":"\/documentation\/divar\/tinytooltipview\/fill(_:imageurl:imagecolor:)","title":"func fill(String, imageUrl: String, imageColor: SonnatColors?)","type":"method"}],"path":"\/documentation\/divar\/tinytooltipview","title":"TinyTooltipView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/titlerowcollectionviewcell\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/titlerowcollectionviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/titlerowcollectionviewcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/titlerowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_TitleRowData)","type":"method"},{"path":"\/documentation\/divar\/titlerowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/titlerowcollectionviewcell","title":"TitleRowCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/titlerowtableviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/titlerowtableviewcell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/titlerowtableviewcell\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/titlerowtableviewcell\/delegate","title":"var delegate: ConfigurableCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/titlerowtableviewcell\/text","title":"var text: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/titlerowtableviewcell\/endediting(_:)","title":"func endEditing(Bool) -> Bool","type":"method"},{"path":"\/documentation\/divar\/titlerowtableviewcell\/fill(with:indexpath:)","title":"func fill(with: TitleRowModel, indexPath: IndexPath)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/titlerowtableviewcell\/datatype","title":"TitleRowTableViewCell.DataType","type":"typealias"},{"path":"\/documentation\/divar\/titlerowtableviewcell\/returntype","title":"TitleRowTableViewCell.ReturnType","type":"typealias"}],"path":"\/documentation\/divar\/titlerowtableviewcell","title":"TitleRowTableViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/titleview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/titleview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/titleview\/text","title":"var text: String","type":"property"},{"path":"\/documentation\/divar\/titleview\/textcolor","title":"var textColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/titleview\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/titleview\/set(title:titlehint:)","title":"func set(title: String?, titleHint: String?)","type":"method"}],"path":"\/documentation\/divar\/titleview","title":"TitleView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgetcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/titlewidgetcell\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgetcell\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/divar\/titlewidgetcell","title":"TitleWidgetCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgetrow\/init(property:)","title":"init(property: Schema)","type":"init"},{"path":"\/documentation\/divar\/titlewidgetrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgetrow\/options","title":"var options: [Schema]","type":"property"},{"path":"\/documentation\/divar\/titlewidgetrow\/property","title":"var property: Schema?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgetrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgetrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/titlewidgetrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/titlewidgetrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/titlewidgetrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/titlewidgetrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/titlewidgetrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgetrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/titlewidgetrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/titlewidgetrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/titlewidgetrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/titlewidgetrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/titlewidgetrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"}],"path":"\/documentation\/divar\/titlewidgetrow","title":"TitleWidgetRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/toolboxcollectionviewcell\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/toolboxcollectionviewcell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/toolboxcollectionviewcell\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/toolboxcollectionviewcell\/fill(with:widget:)","title":"func fill(with: Widgets_ToolboxRowData, widget: Widgets_Widget?)","type":"method"},{"path":"\/documentation\/divar\/toolboxcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/toolboxcollectionviewcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/toolboxcollectionviewcell\/toolbox(_:didselectitemat:)","title":"func toolBox(ToolBoxRow, didSelectItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/toolboxcollectionviewcell\/toolboxrowdelegate-implementations","title":"ToolBoxRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/toolboxcollectionviewcell","title":"ToolboxCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltipcontainerview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/tooltipcontainerview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltipcontainerview\/alignment","title":"var alignment: Sonnat.TooltipView.TriangleHorizontalPlace","type":"property"},{"path":"\/documentation\/divar\/tooltipcontainerview\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/divar\/tooltipcontainerview\/targetrect","title":"var targetRect: CGRect","type":"property"},{"path":"\/documentation\/divar\/tooltipcontainerview\/userdefaultskey","title":"var userDefaultsKey: UserDefaults.Keys?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltipcontainerview\/dismisstooltip()","title":"func dismissTooltip()","type":"method"},{"path":"\/documentation\/divar\/tooltipcontainerview\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/tooltipcontainerview\/point(inside:with:)","title":"func point(inside: CGPoint, with: UIEvent?) -> Bool","type":"method"},{"path":"\/documentation\/divar\/tooltipcontainerview\/presenttooltip()","title":"func presentTooltip()","type":"method"}],"path":"\/documentation\/divar\/tooltipcontainerview","title":"TooltipContainerView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltipview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/tooltipview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltipview\/backgroundview","title":"var backgroundView: UIView!","type":"property"},{"path":"\/documentation\/divar\/tooltipview\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/tooltipview\/imagewidthconstraint","title":"var imageWidthConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/tooltipview\/mainimage","title":"var mainImage: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/tooltipview\/mainlabel","title":"var mainLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltipview\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/tooltipview\/fill(_:)","title":"func fill(String)","type":"method"},{"path":"\/documentation\/divar\/tooltipview\/fill(_:icon:)","title":"func fill(String, icon: Base_Icon)","type":"method"},{"path":"\/documentation\/divar\/tooltipview\/fill(_:icon:iconcolor:)","title":"func fill(String, icon: SonnatImages, iconColor: SonnatColors)","type":"method"},{"path":"\/documentation\/divar\/tooltipview\/fill(_:imageurl:imagecolor:)","title":"func fill(String, imageUrl: String, imageColor: SonnatColors?)","type":"method"},{"path":"\/documentation\/divar\/tooltipview\/theme(backgroundcolor:textcolor:)","title":"func theme(backgroundColor: SonnatColors, textColor: SonnatColors)","type":"method"}],"path":"\/documentation\/divar\/tooltipview","title":"TooltipView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transactionflowcontroller\/initialtransactioncancellation(with:action:)","title":"func initialTransactionCancellation(with: NavigationController, action: Widgets_Action) -> UIViewController?","type":"method"},{"path":"\/documentation\/divar\/transactionflowcontroller\/initialtransactionconfirmationoffer(with:action:)","title":"func initialTransactionConfirmationOffer(with: NavigationController, action: Widgets_Action) -> AlertViewController?","type":"method"},{"path":"\/documentation\/divar\/transactionflowcontroller\/initialtransactionfinalconfirmation(with:action:)","title":"func initialTransactionFinalConfirmation(with: NavigationController, action: Widgets_Action) -> UIViewController?","type":"method"},{"path":"\/documentation\/divar\/transactionflowcontroller\/initialtransactionopenuserauthenticationpage(payload:)","title":"func initialTransactionOpenUserAuthenticationPage(payload: Widgets_TransactionOpenUserAuthenticationPagePayload) -> UIViewController?","type":"method"},{"path":"\/documentation\/divar\/transactionflowcontroller\/initialtransactionstatuspage(transactiontoken:)","title":"func initialTransactionStatusPage(transactionToken: String) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transactionflowcontroller\/opencreatetransaction(_:)","title":"func openCreateTransaction(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionflowcontroller\/opentransactioncancellation(_:)","title":"func openTransactionCancellation(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionflowcontroller\/opentransactionfinalconfirm(_:)","title":"func openTransactionFinalConfirm(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionflowcontroller\/opentransactionopenuserauthenticationpage(_:)","title":"func openTransactionOpenUserAuthenticationPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionflowcontroller\/opentransactionstatuspage(_:)","title":"func openTransactionStatusPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionflowcontroller\/transactionmanagepost(_:)","title":"func transactionManagePost(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionflowcontroller\/transactionreportproblem(_:)","title":"func transactionReportProblem(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionflowcontroller\/transactionsellerconfirmation(_:)","title":"func transactionSellerConfirmation(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionflowcontroller\/transactionstartpayment(_:)","title":"func transactionStartPayment(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/transactionflowcontroller\/transactionactionhandlerprotcol-implementations","title":"TransactionActionHandlerProtcol Implementations","type":"symbol"}],"path":"\/documentation\/divar\/transactionflowcontroller","title":"TransactionFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transactionservice\/init(grpcservice:)","title":"init(grpcService: GRPCNetworkManagerProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transactionservice\/grpcservice","title":"let grpcService: GRPCNetworkManagerProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transactionservice\/createtransaction(posttoken:)","title":"func createTransaction(postToken: String) async -> Result<DivarTransaction_CreateTransactionResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/transactionservice\/transactioncanellation(transactiontoken:sourcepage:)","title":"func transactionCanellation(transactionToken: String, sourcePage: Widgets_DivarTransactionCancellationSourcePage.Page) async -> Result<DivarTransaction_CancelTransactionResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/transactionservice\/transactionfinalconfirmation(transactiontoken:)","title":"func transactionFinalConfirmation(transactionToken: String) async -> Result<Google_Protobuf_Empty, DError>","type":"method"},{"path":"\/documentation\/divar\/transactionservice\/transactionmanagepost(payload:)","title":"func transactionManagePost(payload: Widgets_ManagePostTransactionPayload) async -> Result<DivarTransaction_MessageResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/transactionservice\/transactionreportproblem(transactiontoken:)","title":"func transactionReportProblem(transactionToken: String) async -> Result<DivarTransaction_ReportProblemResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/transactionservice\/transactionsellerconfirmation(transactiontoken:)","title":"func transactionSellerConfirmation(transactionToken: String) async -> Result<Google_Protobuf_Empty, DError>","type":"method"},{"path":"\/documentation\/divar\/transactionservice\/transactionstartpayment(transactiontoken:)","title":"func transactionStartPayment(transactionToken: String) async -> Result<DivarTransaction_StartPaymentResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/transactionservice","title":"TransactionService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricecell\/cellstack","title":"var cellStack: UIStackView","type":"property"},{"path":"\/documentation\/divar\/transformablepricecell\/creditviewextracted","title":"var creditViewExtracted: Sonnat.StatefulRow?","type":"property"},{"path":"\/documentation\/divar\/transformablepricecell\/newstate","title":"var newState: TransformablePrice.Model.CellViewStates?","type":"property"},{"path":"\/documentation\/divar\/transformablepricecell\/rentviewextracted","title":"var rentViewExtracted: Sonnat.StatefulRow?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricecell\/changestate(to:)","title":"func changeState(to: TransformablePrice.Model.CellViewStates)","type":"method"},{"path":"\/documentation\/divar\/transformablepricecell\/setmodel(mode:)","title":"func setModel(mode: TransformablePrice.Model.CellData)","type":"method"},{"path":"\/documentation\/divar\/transformablepricecell\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/divar\/transformablepricecell\/systemlayoutsizefitting(_:withhorizontalfittingpriority:verticalfittingpriority:)","title":"func systemLayoutSizeFitting(CGSize, withHorizontalFittingPriority: UILayoutPriority, verticalFittingPriority: UILayoutPriority) -> CGSize","type":"method"}],"path":"\/documentation\/divar\/transformablepricecell","title":"TransformablePriceCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricerow\/init(property:onvalidationchanged:onchange:)","title":"init(property: Schema, onValidationChanged: ValidationChanged, onChange: OnChange)","type":"init"},{"path":"\/documentation\/divar\/transformablepricerow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/transformablepricerow\/init(tag:property:)","title":"init(tag: String?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricerow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/transformablepricerow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/transformablepricerow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/transformablepricerow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricerow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/transformablepricerow\/formatnumbertoshortforminterval(lowerbound:upperbound:seperator:intervalseperator:)","title":"func formatNumberToShortFormInterval(lowerBound: Int64?, upperBound: Int64?, seperator: String, intervalSeperator: String) -> String?","type":"method"},{"path":"\/documentation\/divar\/transformablepricerow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/transformablepricerow\/mutatestate(from:)","title":"func mutateState(from: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/transformablepricerow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"path":"\/documentation\/divar\/transformablepricerow\/transformenglishnumbertoirrcurrencyformattedstring(from:seperator:)","title":"func transformEnglishNumberToIRRCurrencyFormattedString(from: NSNumber, seperator: String) -> String?","type":"method"},{"path":"\/documentation\/divar\/transformablepricerow\/updatecell()","title":"func updateCell()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricerow\/onchange","title":"TransformablePriceRow.OnChange","type":"typealias"},{"path":"\/documentation\/divar\/transformablepricerow\/presenterrow","title":"TransformablePriceRow.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/transformablepricerow\/validationchanged","title":"TransformablePriceRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricerow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/transformablepricerow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricerow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/transformablepricerow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricerow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricerow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/transformablepricerow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/transformablepricerow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/transformablepricerow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/transformablepricerow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/transformablepricerow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricerow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/transformablepricerow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/transformablepricerow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/transformablepricerow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/transformablepricerow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/transformablepricerow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricerow\/transformablepriceviewcontroller(_:didentered:)","title":"func transformablePriceViewController(TransformablePriceViewController, didEntered: [String : Int64?])","type":"method"}],"path":"\/documentation\/divar\/transformablepricerow\/transformablepriceviewcontrollerdelegate-implementations","title":"TransformablePriceViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/transformablepricerow","title":"TransformablePriceRow","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/init(schema:)","title":"init(schema: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/creditandrentbothzeromessage","title":"var creditAndRentBothZeroMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/creditandrentdecreasederrormessage","title":"var creditAndRentDecreasedErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/creditandrentincreasederrormessage","title":"var creditAndRentIncreasedErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/creditmaximumerrormessage","title":"var creditMaximumErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/creditminimumerrormessage","title":"var creditMinimumErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/creditnotchangederrormessage","title":"var creditNotChangedErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/credituiminimum","title":"var creditUIMinimum: Int64?","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/descriptiodisabledinvalidrentorcredit","title":"var descriptioDisabledInvalidRentOrCredit: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/descriptiondisabledemptyrentorcredit","title":"var descriptionDisabledEmptyRentOrCredit: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/descriptionenabledinactive","title":"var descriptionEnabledInactive: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/invalidrateerrormessage","title":"var invalidRateErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/maxtransformrate","title":"var maxTransformrate: Int64?","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/mintransformrate","title":"var minTransformrate: Int64?","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/rentmaximumerrormessage","title":"var rentMaximumErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/rentminimumerrormessage","title":"var rentMinimumErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/rentnotchangederrormessage","title":"var rentNotChangedErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/rentuiminimum","title":"var rentUIMinimum: Int64?","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/transformedcreditrequirederrormessage","title":"var transformedCreditRequiredErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher\/transformedrentrequirederrormessage","title":"var transformedRentRequiredErrorMessage: String","type":"property"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller\/datadispatcher","title":"TransformablePriceViewController.DataDispatcher","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/switchstateworkitemkey\/init(shoulddisable:workitem:)","title":"init(shouldDisable: Bool, workItem: () -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/switchstateworkitemkey\/shoulddisable","title":"let shouldDisable: Bool","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/switchstateworkitemkey\/workitem","title":"let workItem: () -> Void","type":"property"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller\/switchstateworkitemkey","title":"TransformablePriceViewController.SwitchStateWorkItemKey","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/init(property:)","title":"init(property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/buttonbar","title":"var buttonBar: WideButtonViewController","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/delegate","title":"var delegate: TransformablePriceViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/finalvalue","title":"var finalValue: [String : Int64?]","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/istransformedcellexpanded","title":"var isTransformedCellExpanded: Bool","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/row","title":"var row: RowOf<[String : Int64?]>!","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/schema","title":"var schema: Schema?","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/stackview","title":"var stackView: UIStackView","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/submitstate","title":"var submitState: TransformablePrice.States.SubmitState","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/switchstate","title":"var switchState: TransformablePrice.States.SwitchState","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/switchstatewotkitems","title":"var switchStateWotkItems: [SwitchStateWorkItemKey]","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview","title":"var tableView: UITableView","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableviewdatasource","title":"var tableViewDataSource: [TransformablePrice.Model.DataSource]","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/uncheckedfinalvalue","title":"var uncheckedFinalValue: [TransformablePrice.Model.Identifiers : Int64?]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/accessorytoolbar()","title":"func accessoryToolbar() -> UIView?","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/beginvalidation(showerror:)","title":"func beginValidation(showError: Bool)","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/bound(for:)","title":"func bound(for: String) -> TransformablePrice.Validator.Bound","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/cell(for:)","title":"func cell<T>(for: TransformablePrice.Model.Identifiers) -> T?","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/disableswitch(diduserdisabledtransforming:isonfieldempty:disablerow:shoulddisableswitch:)","title":"func disableSwitch(didUserDisabledTransforming: Bool, isOnFieldEmpty: Bool, disableRow: Bool, shouldDisableSwitch: Bool)","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/enableswitch(diduserenabledtransforming:)","title":"func enableSwitch(didUserEnabledTransforming: Bool)","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/errormessages(dispacher:)","title":"func errorMessages(dispacher: DataDispatcher) -> TransformablePrice.Validator.ErrorMessages","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/errornumberformatter(decimalseparator:)","title":"func errorNumberFormatter(decimalSeparator: String) -> NumberFormatter","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/expandtranformablecells()","title":"func expandTranformableCells()","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/finddatasourceindexbyidentifier(indentifier:)","title":"func findDataSourceIndexByIdentifier(indentifier: TransformablePrice.Model.Identifiers) -> Int?","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/formatnumberwithschemavalueholder(for:number:)","title":"func formatNumberWithSchemaValueHolder(for: TransformablePrice.Model.Identifiers, number: Int64) -> String","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/generatedatasourcefordefaultcells(switchenabled:iscellenabled:)","title":"func generateDataSourceForDefaultCells(switchEnabled: Bool, isCellEnabled: Bool) -> [TransformablePrice.Model.DataSource]","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/generatedatasourceforexchangedcells()","title":"func generateDataSourceForExchangedCells() -> [TransformablePrice.Model.DataSource]","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/generatedisabledtransformdescription(isonfieldempty:)","title":"func generateDisabledTransformDescription(isOnFieldEmpty: Bool) -> TransformablePrice.Model.DataSource","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/generateinitialdatasource()","title":"func generateInitialDataSource() -> [TransformablePrice.Model.DataSource]","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/inferswitchvisibiltystatefromfinalvalues()","title":"func inferSwitchVisibiltyStateFromFinalValues() -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/mergefinalvalueswithuncheckedvalues()","title":"func mergeFinalValuesWithUncheckedValues()","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/mergeuncheckedvalueswithfinalvalues()","title":"func mergeUncheckedValuesWithFinalValues()","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/removetransformedvalues()","title":"func removeTransformedValues()","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/shouldgeneratetransformedcells()","title":"func shouldGenerateTransformedCells() -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/transformenglishnumbertoirrcurrencyformattedstring(from:seperator:)","title":"func transformEnglishNumberToIRRCurrencyFormattedString(from: NSNumber, seperator: String) -> String?","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/unexpandtranformablecells(isonfieldempty:)","title":"func unExpandTranformableCells(isOnFieldEmpty: Bool)","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/updateswitchdescriptiontransformeddisabled(message:)","title":"func updateSwitchDescriptionTransformedDisabled(message: String)","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/updatetextfieldcellsubtitle(for:with:)","title":"func updateTextFieldCellSubtitle(for: TransformablePrice.Model.Identifiers, with: TextFieldSubtitleError)","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/updatetextfieldtext(for:textfield:newprice:)","title":"func updateTextFieldText(for: TransformablePrice.Model.Identifiers, textField: UITextField, newPrice: String)","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/validaterentandcredit(istransformableenabled:rentvalue:creditvalue:showerror:)","title":"func validateRentAndCredit(isTransformableEnabled: Bool, rentValue: Int64?, creditValue: Int64?, showError: Bool) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/validatetransformeddependency(rentvalue:creditvalue:transformedrentvalue:transformedcreditvalue:showerror:)","title":"func validateTransformedDependency(rentValue: Int64?, creditValue: Int64?, transformedRentValue: Int64?, transformedCreditValue: Int64?, showError: Bool)","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/validatetransformedrentandtransformedcredit(rentvalue:creditvalue:transformedrentvalue:transformedcreditvalue:showerror:)","title":"func validateTransformedRentAndTransformedCredit(rentValue: Int64?, creditValue: Int64?, transformedRentValue: Int64?, transformedCreditValue: Int64?, showError: Bool) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/textfieldsubtitleerror\/error(message:)","title":"case error(message: String)","type":"case"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/textfieldsubtitleerror\/valid(message:)","title":"case valid(message: String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/textfieldsubtitleerror\/iserror","title":"var isError: Bool","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/textfieldsubtitleerror\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/textfieldsubtitleerror\/textcolor","title":"var textColor: UIColor","type":"property"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller\/textfieldsubtitleerror","title":"TransformablePriceViewController.TextFieldSubtitleError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/switchcell(_:switchvaluedidchange:)","title":"func switchCell(SwitchTableViewCell, switchValueDidChange: Bool)","type":"method"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller\/switchtableviewcelldelegate-implementations","title":"SwitchTableViewCellDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller\/uitableviewdatasource-implementations","title":"UITableViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview(_:heightforheaderinsection:)","title":"func tableView(UITableView, heightForHeaderInSection: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview(_:heightforrowat:)","title":"func tableView(UITableView, heightForRowAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview(_:viewforheaderinsection:)","title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?","type":"method"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/tableview(_:willdisplay:forrowat:)","title":"func tableView(UITableView, willDisplay: UITableViewCell, forRowAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/textfield(_:shouldchangecharactersin:replacementstring:)","title":"func textField(UITextField, shouldChangeCharactersIn: NSRange, replacementString: String) -> Bool","type":"method"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller\/uitextfielddelegate-implementations","title":"UITextFieldDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontroller\/buttonclicked(_:action:)","title":"func buttonClicked(WideButtonViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller\/widebuttonviewcontrollerdelegate-implementations","title":"WideButtonViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/transformablepriceviewcontroller","title":"TransformablePriceViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/init(config:)","title":"init(config: TwinButtonsConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/delegate","title":"var delegate: TwinButtonsViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/isprimaryenabled","title":"var isPrimaryEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/issecondaryenabled","title":"var isSecondaryEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/primarybutton","title":"var primaryButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/primaryenabled","title":"var primaryEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/secondarybutton","title":"var secondaryButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/secondaryenabled","title":"var secondaryEnabled: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/primarybuttonaction(_:)","title":"func primaryButtonAction(UIButton)","type":"method"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/secondarybuttonaction(_:)","title":"func secondaryButtonAction(UIButton)","type":"method"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/setconfig(_:)","title":"func setConfig(TwinButtonsConfig)","type":"method"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/setconfig(stickywidget:)","title":"func setConfig(stickyWidget: StickyWidgetActionWrapper)","type":"method"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"path":"\/documentation\/divar\/twinbuttonsviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/twinbuttonsviewcontroller","title":"TwinButtonsViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/unregisteredusergetcontactstrategy\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/unregisteredusergetcontactstrategy\/canpresentfeedback()","title":"func canPresentFeedback() -> Bool","type":"method"},{"path":"\/documentation\/divar\/unregisteredusergetcontactstrategy\/didpresentedfeedback()","title":"func didPresentedFeedback()","type":"method"},{"path":"\/documentation\/divar\/unregisteredusergetcontactstrategy\/setenterbackground(date:)","title":"func setEnterBackground(date: Date)","type":"method"},{"path":"\/documentation\/divar\/unregisteredusergetcontactstrategy\/setexitbackground(date:)","title":"func setExitBackground(date: Date)","type":"method"}],"path":"\/documentation\/divar\/unregisteredusergetcontactstrategy","title":"UnRegisteredUserGetContactStrategy","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/unexpandablerowcollectionviewcell\/fill(title:value:hasaction:hasdivider:)","title":"func fill(title: String, value: String, hasAction: Bool, hasDivider: Bool)","type":"method"},{"path":"\/documentation\/divar\/unexpandablerowcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_UnexpandableRowData)","type":"method"},{"path":"\/documentation\/divar\/unexpandablerowcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/unexpandablerowcollectionviewcell","title":"UnexpandableRowCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/updateviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/updateviewcontroller\/init(updatepayload:)","title":"init(updatePayload: SoftHardUpdatePayload)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/updateviewcontroller\/delegate","title":"var delegate: UpdateViewControllerDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/updateviewcontroller\/noticepreview(didtap:)","title":"func noticePreview(didTap: NoticePreview)","type":"method"},{"path":"\/documentation\/divar\/updateviewcontroller\/noticepreviewclose(didtap:)","title":"func noticePreviewClose(didTap: NoticePreview)","type":"method"},{"path":"\/documentation\/divar\/updateviewcontroller\/updateui()","title":"func updateUi()","type":"method"}],"path":"\/documentation\/divar\/updateviewcontroller","title":"UpdateViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/init(container:)","title":"init(container: UsedPriceFormViewControllerDIContainer)","type":"init"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/init(container:paymentservice:dataprovider:formid:editid:newschema:newdata:previousdata:)","title":"init(container: UsedPriceFormViewControllerDIContainer, paymentService: PaymentServiceProtocol, dataProvider: DataProviderProtocol, formID: String?, editID: String?, newSchema: Schema?, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/usedpricedelegate","title":"var usedPriceDelegate: UsedPriceFormViewControllerDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/didsetuptableview(_:for:)","title":"func didSetupTableView(AbstractFormViewController, for: UITableView)","type":"method"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/usedpriceformviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/usedpriceformviewcontroller","title":"UsedPriceFormViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/user\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/user\/init(email:authenticationtoken:city:region:phone:)","title":"init(email: String?, authenticationToken: String?, city: Place, region: Place?, phone: String?)","type":"init"},{"path":"\/documentation\/divar\/user\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/user\/authenticationtoken","title":"var authenticationToken: String?","type":"property"},{"path":"\/documentation\/divar\/user\/city","title":"var city: Place","type":"property"},{"path":"\/documentation\/divar\/user\/email","title":"var email: String?","type":"property"},{"path":"\/documentation\/divar\/user\/isauthenticated","title":"var isAuthenticated: Bool","type":"property"},{"path":"\/documentation\/divar\/user\/isdefaultcity","title":"var isDefaultCity: Bool?","type":"property"},{"path":"\/documentation\/divar\/user\/isnotauthenticated","title":"var isNotAuthenticated: Bool","type":"property"},{"path":"\/documentation\/divar\/user\/issaved","title":"var isSaved: Bool","type":"property"},{"path":"\/documentation\/divar\/user\/phone","title":"var phone: String?","type":"property"},{"path":"\/documentation\/divar\/user\/region","title":"var region: Place?","type":"property"},{"path":"\/documentation\/divar\/user\/usertype","title":"var userType: UserType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/user\/authenticatedphonenumber()","title":"func authenticatedPhoneNumber() -> String?","type":"method"},{"path":"\/documentation\/divar\/user\/getauthenticationtoken()","title":"func getAuthenticationToken() -> String?","type":"method"},{"path":"\/documentation\/divar\/user\/logoutuser(shouldconfigprofiletab:)","title":"func logoutUser(shouldConfigProfileTab: Bool?)","type":"method"},{"path":"\/documentation\/divar\/user\/save()","title":"func save()","type":"method"},{"path":"\/documentation\/divar\/user\/setauthenticationtoken(_:)","title":"func setAuthenticationToken(String?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/user\/current","title":"static var current: User","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/user\/usertypeof(token:)","title":"static func userTypeOf(token: String) -> UserType","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/user\/codingkeys\/authenticationtoken","title":"case authenticationToken","type":"case"},{"path":"\/documentation\/divar\/user\/codingkeys\/city","title":"case city","type":"case"},{"path":"\/documentation\/divar\/user\/codingkeys\/email","title":"case email","type":"case"},{"path":"\/documentation\/divar\/user\/codingkeys\/phone","title":"case phone","type":"case"},{"path":"\/documentation\/divar\/user\/codingkeys\/region","title":"case region","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/user\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/user\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/user\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/user\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/user\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/user\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/user\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/user\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/user\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/user\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/user\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/user\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/user\/codingkeys","title":"User.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/user","title":"User","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostservice\/deletepost(mngtoken:resaon:questiontag:answer:)","title":"func deletePost(mngToken: String, resaon: String, questionTag: String?, answer: String?) async -> Result<PostResult, DError>","type":"method"},{"path":"\/documentation\/divar\/userpostservice\/getarchivereasons(mngtoken:)","title":"func getArchiveReasons(mngToken: String) async -> Result<[ArchiveReasons], DError>","type":"method"},{"path":"\/documentation\/divar\/userpostservice\/getpostlistwithtokens(tokenlist:)","title":"func getPostListWithTokens(tokenList: [String]) async -> Result<UserPostLists, DError>","type":"method"},{"path":"\/documentation\/divar\/userpostservice\/gettokenlistforlist(posttype:dataprovider:)","title":"func getTokenListForList(postType: SavedPostListType, dataProvider: DataProviderProtocol) -> [String]?","type":"method"},{"path":"\/documentation\/divar\/userpostservice\/getuserpostlist()","title":"func getUserPostList() async -> Result<UserPostLists, DError>","type":"method"},{"path":"\/documentation\/divar\/userpostservice\/ispostinlist(token:posttype:dataprovider:)","title":"func isPostInList(token: String, postType: SavedPostListType, dataProvider: DataProviderProtocol) -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostservice\/removepostfromlist(token:posttype:dataprovider:)","title":"func removePostFromList(token: String, postType: SavedPostListType, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/userpostservice\/resetlist(posttype:dataprovider:)","title":"func resetList(postType: SavedPostListType, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/userpostservice\/resetsavedpostneedsupdatestate(posttype:dataprovider:)","title":"func resetSavedPostNeedsUpdateState(postType: SavedPostListType, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/userpostservice\/savepost(token:posttype:dataprovider:)","title":"func savePost(token: String, postType: SavedPostListType, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/userpostservice\/savedpostlistneedsupdate(posttype:)","title":"func savedPostListNeedsUpdate(postType: SavedPostListType) -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostservice\/validatepost(managementtoken:)","title":"func validatePost(managementToken: String) async -> Result<Post_MovePostFromVerificationStateResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/userpostservice","title":"UserPostService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/userregisterflowcontroller\/init(container:source:)","title":"init(container: BaseFlowDIContainer, source: ActionLog_LoginSource)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userregisterflowcontroller\/delegate","title":"var delegate: UserRegisterFlowControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/userregisterflowcontroller\/phonenumberinput","title":"var phoneNumberInput: NumberInputProtocol!","type":"property"},{"path":"\/documentation\/divar\/userregisterflowcontroller\/shouldconfigprofiletab","title":"var shouldConfigProfileTab: Bool","type":"property"},{"path":"\/documentation\/divar\/userregisterflowcontroller\/shouldpostregistrationchangednotif","title":"var shouldPostRegistrationChangedNotif: Bool","type":"property"},{"path":"\/documentation\/divar\/userregisterflowcontroller\/successfulregisterhandler","title":"var successfulRegisterHandler: (() -> Void)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userregisterflowcontroller\/dismiss(animated:complition:)","title":"func dismiss(animated: Bool, complition: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/userregisterflowcontroller\/initial(with:source:)","title":"func initial(with: NavigationController, source: ActionLog_LoginSource) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/userregisterflowcontroller\/initialviewcontroller()","title":"func initialViewController() -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/userregisterflowcontroller\/initialviewcontroller(withphone:source:)","title":"func initialViewController(withPhone: String, source: ActionLog_LoginSource) -> UIViewController","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userregisterflowcontroller\/numberenteredsuccessfully(_:with:needsverify:)","title":"func numberEnteredSuccessfully(NumberInputViewController, with: String, needsVerify: Bool)","type":"method"}],"path":"\/documentation\/divar\/userregisterflowcontroller\/numberinputviewcontrollerdelegate-implementations","title":"NumberInputViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userregisterflowcontroller\/verificationcodeenteredsuccessfully(_:with:)","title":"func verificationCodeEnteredSuccessfully(VerificationCodeInputViewController, with: String)","type":"method"}],"path":"\/documentation\/divar\/userregisterflowcontroller\/verificationcodeinputviewcontrollerdelegate-implementations","title":"VerificationCodeInputViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/userregisterflowcontroller","title":"UserRegisterFlowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/userregisterationservice\/init(user:grpcservice:)","title":"init(user: User, grpcService: GRPCNetworkManagerProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userregisterationservice\/grpcservice","title":"var grpcService: GRPCNetworkManagerProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userregisterationservice\/authenticateuser(phonenumber:)","title":"func authenticateUser(phoneNumber: String) async -> Result<Authentication_AuthenticateResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/userregisterationservice\/confirmauthenticationcode(codenumber:phonenumber:)","title":"func confirmAuthenticationCode(codeNumber: String, phoneNumber: String) async -> Result<Authentication_ConfirmResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/userregisterationservice","title":"UserRegisterationService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrow\/init(property:onvalidationchanged:)","title":"init(property: Schema, onValidationChanged: ValidationChanged)","type":"init"},{"path":"\/documentation\/divar\/validatorrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"path":"\/documentation\/divar\/validatorrow\/init(tag:property:)","title":"init(tag: String?, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrow\/dividerview","title":"var dividerView: DividerView","type":"property"},{"path":"\/documentation\/divar\/validatorrow\/onpresentcallback","title":"var onPresentCallback: ((FormViewController, PresenterRow) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/validatorrow\/presentationmode","title":"var presentationMode: PresentationMode<PresenterRow>?","type":"property"},{"path":"\/documentation\/divar\/validatorrow\/property","title":"var property: Schema?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrow\/customdidselect()","title":"func customDidSelect()","type":"method"},{"path":"\/documentation\/divar\/validatorrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrow\/presenterrow","title":"ValidatorRow.PresenterRow","type":"typealias"},{"path":"\/documentation\/divar\/validatorrow\/validationchanged","title":"ValidatorRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/validatorrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrow\/onpresent(_:)","title":"func onPresent(((FormViewController, Self.PresentedControllerType) -> Void)?) -> Self","type":"method"}],"path":"\/documentation\/divar\/validatorrow\/presenterrowtype-implementations","title":"PresenterRowType Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/validatorrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/validatorrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/validatorrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/validatorrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/validatorrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/validatorrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/validatorrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/validatorrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/validatorrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/validatorrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrow\/didcancel(_:)","title":"func didCancel(ValidatorRowController)","type":"method"},{"path":"\/documentation\/divar\/validatorrow\/didreset(_:)","title":"func didReset(ValidatorRowController)","type":"method"},{"path":"\/documentation\/divar\/validatorrow\/validatorrowcontroller(_:isvalid:)","title":"func validatorRowController(ValidatorRowController, isValid: String)","type":"method"}],"path":"\/documentation\/divar\/validatorrow\/validatorrowcontrollerdelegate-implementations","title":"ValidatorRowControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/validatorrow","title":"ValidatorRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrowcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/validatorrowcontroller\/init(formservice:property:)","title":"init(formService: FormServiceProtocol, property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrowcontroller\/bottomconstraint","title":"var bottomConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/validatorrowcontroller\/bottomstack","title":"var bottomStack: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/validatorrowcontroller\/delegate","title":"var delegate: ValidatorRowControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/validatorrowcontroller\/mainscrollview","title":"var mainScrollView: ScrollingStackView!","type":"property"},{"path":"\/documentation\/divar\/validatorrowcontroller\/ondismisscallback","title":"var onDismissCallback: ((UIViewController) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/validatorrowcontroller\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/validatorrowcontroller\/row","title":"var row: RowOf<String>!","type":"property"},{"path":"\/documentation\/divar\/validatorrowcontroller\/subtitlerow","title":"let subtitleRow: SubtitleRow","type":"property"},{"path":"\/documentation\/divar\/validatorrowcontroller\/textfieldrow","title":"let textFieldRow: TextFieldRow","type":"property"},{"path":"\/documentation\/divar\/validatorrowcontroller\/titlerow","title":"let titleRow: TitleRow","type":"property"},{"path":"\/documentation\/divar\/validatorrowcontroller\/twinbuttons","title":"var twinButtons: TwinButtonsViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrowcontroller\/config()","title":"func config()","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/configsubtitlerow()","title":"func configSubtitleRow()","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/configtextfieldrow()","title":"func configTextFieldRow()","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/configtitlerow()","title":"func configTitleRow()","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/configtwinbuttons()","title":"func configTwinButtons()","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/handlekeyboardstatus(_:)","title":"func handleKeyboardStatus(Notification)","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/showtextfieldhint(state:)","title":"func showTextFieldHint(state: TextFieldState)","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrowcontroller\/textview(_:shouldchangetextin:replacementtext:)","title":"func textView(UITextView, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/textviewdidbeginediting(_:)","title":"func textViewDidBeginEditing(UITextView)","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/textviewdidchange(_:)","title":"func textViewDidChange(UITextView)","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/textviewdidendediting(_:)","title":"func textViewDidEndEditing(UITextView)","type":"method"}],"path":"\/documentation\/divar\/validatorrowcontroller\/textfielddelegate-implementations","title":"TextFieldDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrowcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontroller\/secondarybuttonclicked(_:action:)","title":"func secondaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/validatorrowcontroller\/twinbuttonsviewcontrollerdelegate-implementations","title":"TwinButtonsViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/validatorrowcontroller","title":"ValidatorRowController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/init(handler:)","title":"init(handler: VerificationCodeInputProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/bottomconstraint","title":"var bottomConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/bottomstack","title":"var bottomStack: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/countdowntimer","title":"var countDownTimer: SwiftTimer?","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/delegate","title":"var delegate: VerificationCodeInputViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/descriptionview","title":"let descriptionView: DescriptionView","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/dummyheightconstraint","title":"var dummyHeightConstraint: NSLayoutConstraint?","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/dummyview","title":"let dummyView: UIView","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/mainscrollview","title":"var mainScrollView: ScrollingStackView!","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/remainingbasetime","title":"var remainingBaseTime: Double","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/remainingtime","title":"var remainingTime: Int","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/requestdate","title":"var requestDate: Date","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/stickybutton","title":"var stickyButton: SplitButtonBarViewController","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/textfieldview","title":"let textFieldView: TextFieldView","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/titleview","title":"let titleView: TitleView","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/tossubtitlerow","title":"let tosSubtitleRow: SubtitleRow","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/twinbutton","title":"var twinButton: TwinButtonsViewController","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/verificationcodeinput","title":"var verificationCodeInput: VerificationCodeInputProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/accessorytoolbar()","title":"func accessoryToolbar() -> UIView?","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/changebottomstackdata(from:to:)","title":"func changeBottomStackData(from: ComponentViewContorller, to: ComponentViewContorller)","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/enablebuttons(_:)","title":"func enableButtons(Bool)","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/handlekeyboardstatus(_:)","title":"func handleKeyboardStatus(Notification)","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/resetrequestdate()","title":"func resetRequestDate()","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/sendverificationcode()","title":"func sendVerificationCode()","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/textfieldvaluechanges(_:shouldchangecharactersin:replacementstring:)","title":"func textFieldValueChanges(UITextField, shouldChangeCharactersIn: NSRange, replacementString: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/timerticks()","title":"func timerTicks()","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/validatetextfield(withtext:)","title":"func validateTextField(withText: String?)","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/primarybuttonclicked(_:action:)-2tkan","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/splitbuttonbarviewcontrollerdelegate-implementations","title":"SplitButtonBarViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/subtitlerow(_:didtaponurl:)","title":"func subtitleRow(SubtitleRow, didTapOnURL: URL)","type":"method"}],"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/subtitlerowdelegate-implementations","title":"SubtitleRowDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/primarybuttonclicked(_:action:)-2bv47","title":"func primaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/secondarybuttonclicked(_:action:)","title":"func secondaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/verificationcodeinputviewcontroller\/twinbuttonsviewcontrollerdelegate-implementations","title":"TwinButtonsViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/verificationcodeinputviewcontroller","title":"VerificationCodeInputViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videocompressorimpl\/init(filemanager:)","title":"init(fileManager: FileManager)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videocompressorimpl\/encodevideo(videourl:_:)","title":"func encodeVideo(videoURL: URL, ((URL?, Error?) -> Void)?)","type":"method"}],"path":"\/documentation\/divar\/videocompressorimpl","title":"VideoCompressorImpl","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videomessagecell\/cacherequesthelper","title":"var cacheRequestHelper: ChatCacheRequestHelper?","type":"property"},{"path":"\/documentation\/divar\/videomessagecell\/delegate","title":"var delegate: VideoMessageCellDelegate?","type":"property"},{"path":"\/documentation\/divar\/videomessagecell\/downloadtask","title":"var downloadTask: Task<(), Never>?","type":"property"},{"path":"\/documentation\/divar\/videomessagecell\/menuoptions","title":"var menuOptions: [MessageCellOptions]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videomessagecell\/downloadfailed()","title":"func downloadFailed()","type":"method"},{"path":"\/documentation\/divar\/videomessagecell\/downloadfinished()","title":"func downloadFinished()","type":"method"},{"path":"\/documentation\/divar\/videomessagecell\/fillmessageview()","title":"func fillMessageView()","type":"method"},{"path":"\/documentation\/divar\/videomessagecell\/messageviewdidtapped()","title":"func messageViewDidTapped()","type":"method"},{"path":"\/documentation\/divar\/videomessagecell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"},{"path":"\/documentation\/divar\/videomessagecell\/updateprogressbar(progress:completed:total:)","title":"func updateProgressBar(progress: Double, completed: Int64, total: Int64)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videomessagecell\/cachehelper","title":"var cacheHelper: ChatCacheRequestHelper?","type":"property"},{"path":"\/documentation\/divar\/videomessagecell\/downloadurl","title":"var downloadURL: String?","type":"property"},{"path":"\/documentation\/divar\/videomessagecell\/messageid","title":"var messageID: String?","type":"property"}],"path":"\/documentation\/divar\/videomessagecell\/messagecellrequestdatasource-implementations","title":"MessageCellRequestDataSource Implementations","type":"symbol"}],"path":"\/documentation\/divar\/videomessagecell","title":"VideoMessageCell","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videoplayerview\/delegate","title":"var delegate: VideoPlayerViewDelegate?","type":"property"},{"path":"\/documentation\/divar\/videoplayerview\/ispaused","title":"var isPaused: Bool","type":"property"},{"path":"\/documentation\/divar\/videoplayerview\/player","title":"var player: AVPlayer?","type":"property"},{"path":"\/documentation\/divar\/videoplayerview\/playerlayer","title":"var playerLayer: AVPlayerLayer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoplayerview\/observevalue(forkeypath:of:change:context:)","title":"func observeValue(forKeyPath: String?, of: Any?, change: [NSKeyValueChangeKey : Any]?, context: UnsafeMutableRawPointer?)","type":"method"},{"path":"\/documentation\/divar\/videoplayerview\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/divar\/videoplayerview\/play(with:)","title":"func play(with: URL)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videoplayerview\/layerclass","title":"class var layerClass: AnyClass","type":"property"}],"path":"\/documentation\/divar\/videoplayerview","title":"VideoPlayerView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videopreviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/videopreviewcontroller\/init(url:)","title":"init(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videopreviewcontroller\/bottomstack","title":"var bottomStack: UIStackView!","type":"property"},{"path":"\/documentation\/divar\/videopreviewcontroller\/delegate","title":"var delegate: VideoPreviewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/videopreviewcontroller\/isplaying","title":"var isPlaying: Bool","type":"property"},{"path":"\/documentation\/divar\/videopreviewcontroller\/playbutton","title":"var playButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/videopreviewcontroller\/playerview","title":"var playerView: VideoPlayerView!","type":"property"},{"path":"\/documentation\/divar\/videopreviewcontroller\/twinbutton","title":"var twinButton: TwinButtonsViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videopreviewcontroller\/pausevideo()","title":"func pauseVideo()","type":"method"},{"path":"\/documentation\/divar\/videopreviewcontroller\/playvideo()","title":"func playVideo()","type":"method"},{"path":"\/documentation\/divar\/videopreviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videopreviewcontroller\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/videopreviewcontroller\/secondarybuttonclicked(_:action:)","title":"func secondaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/videopreviewcontroller\/twinbuttonsviewcontrollerdelegate-implementations","title":"TwinButtonsViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videopreviewcontroller\/videplayerdidstopview(_:)","title":"func videPlayerDidStopView(VideoPlayerView)","type":"method"}],"path":"\/documentation\/divar\/videopreviewcontroller\/videoplayerviewdelegate-implementations","title":"VideoPlayerViewDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/videopreviewcontroller","title":"VideoPreviewController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videorecorder\/maxduration","title":"var maxDuration: Int?","type":"property"},{"path":"\/documentation\/divar\/videorecorder\/minduration","title":"var minDuration: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videorecorder\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videorecorder\/cameraoverlay(_:didrequestchangeflashstate:)","title":"func cameraOverlay(CameraOverlayView, didRequestChangeFlashState: Bool)","type":"method"},{"path":"\/documentation\/divar\/videorecorder\/cameraoverlaydidrequestclose(_:)","title":"func cameraOverlayDidRequestClose(CameraOverlayView)","type":"method"},{"path":"\/documentation\/divar\/videorecorder\/cameraoverlaydidrequeststartrecording(_:)","title":"func cameraOverlayDidRequestStartRecording(CameraOverlayView)","type":"method"},{"path":"\/documentation\/divar\/videorecorder\/cameraoverlaydidrequeststoprecording(_:)","title":"func cameraOverlayDidRequestStopRecording(CameraOverlayView)","type":"method"}],"path":"\/documentation\/divar\/videorecorder\/cameraoverlaydelegate-implementations","title":"CameraOverlayDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/videorecorder","title":"VideoRecorder","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/delegate","title":"var delegate: VideoSelectorWidgetCellDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/changestatetoaddvideo()","title":"func changeStateToAddVideo()","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/changestatetocanceled()","title":"func changeStateToCanceled()","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/changestatetocompressing(with:)","title":"func changeStateToCompressing(with: Data)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/changestatetoretry()","title":"func changeStateToRetry()","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/changestatetouploaded(with:with:)-15yms","title":"func changeStateToUploaded(with: String, with: Int)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/changestatetouploaded(with:with:)-4ln6d","title":"func changeStateToUploaded(with: URL, with: Int)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/changestatetouploading(with:)","title":"func changeStateToUploading(with: Data)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/settitle(text:)","title":"func setTitle(text: String?)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/updateuploadigprogress(to:)","title":"func updateUploadigProgress(to: Double)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetcell\/didtap(_:)","title":"func didTap(VideoSelectorRow)","type":"method"}],"path":"\/documentation\/divar\/videoselectorwidgetcell\/videoselectorrowdelegate-implementations","title":"VideoSelectorRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/videoselectorwidgetcell","title":"VideoSelectorWidgetCell","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionassetselectorselecteditemviewmodelconfiguration\/init(maxselectedimagecount:maxselectedvideocount:)","title":"init(maxSelectedImageCount: Int, maxSelectedVideoCount: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionassetselectorselecteditemviewmodelconfiguration\/maxselectedimagecount","title":"let maxSelectedImageCount: Int","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionassetselectorselecteditemviewmodelconfiguration\/maxselectedvideocount","title":"let maxSelectedVideoCount: Int","type":"property"}],"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionassetselectorselecteditemviewmodelconfiguration","title":"VideoSelectorWidgetRow.CollectionAssetSelectorSelectedItemViewModelConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionassetselectorviewmodelconfiguration\/init(collectionname:collectionuniqueidentifier:validationrules:fetchtypes:)","title":"init(collectionName: String?, collectionUniqueIdentifier: String, validationRules: [IVRule], fetchTypes: [IVAssetFetchType])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionassetselectorviewmodelconfiguration\/collectionname","title":"let collectionName: String?","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionassetselectorviewmodelconfiguration\/collectionuniqueidentifier","title":"let collectionUniqueIdentifier: String","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionassetselectorviewmodelconfiguration\/fetchtypes","title":"let fetchTypes: [IVAssetFetchType]","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionassetselectorviewmodelconfiguration\/validationrules","title":"let validationRules: [IVRule]","type":"property"}],"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionassetselectorviewmodelconfiguration","title":"VideoSelectorWidgetRow.CollectionAssetSelectorViewModelConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionselectorviewmodelinitconfiguration\/init(fetchtypes:)","title":"init(fetchTypes: [IVAssetFetchType])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionselectorviewmodelinitconfiguration\/fetchtypes","title":"let fetchTypes: [IVAssetFetchType]","type":"property"}],"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionselectorviewmodelinitconfiguration","title":"VideoSelectorWidgetRow.CollectionSelectorViewModelInitConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/videorecorderviewmodelconfiguration\/init(videorecorddurationrange:)","title":"init(videoRecordDurationRange: ClosedRange<Int>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/videorecorderviewmodelconfiguration\/videorecorddurationrange","title":"let videoRecordDurationRange: ClosedRange<Int>","type":"property"}],"path":"\/documentation\/divar\/videoselectorwidgetrow\/videorecorderviewmodelconfiguration","title":"VideoSelectorWidgetRow.VideoRecorderViewModelConfiguration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/init(property:onvalidationchanged:videoservice:imagegeneratorservice:videoinfoattainmentservice:videoexporter:videoexportpresetpredictorservice:)","title":"init(property: Schema, onValidationChanged: ValidationChanged, videoService: VideoUploadServiceProtocol?, imageGeneratorService: IVPickedDataImageGeneratorService?, videoInfoAttainmentService: IVVideoInfoAttainmentService?, videoExporter: IVVideoExporterService?, videoExportPresetPredictorService: IVVideoExportPresetPredictorService?)","type":"init"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/delegate","title":"var delegate: VideoSelectorWidgetRowToParentControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/imagegeneratorservice","title":"var imageGeneratorService: IVPickedDataImageGeneratorService?","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/lastuploadstateholder","title":"var lastUploadStateHolder: VideoSelectorWidgetRowLastUploadStateHolder?","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/taskbag","title":"var taskBag: TaskDisposeBag","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/videoexportpresetpredictorservice","title":"var videoExportPresetPredictorService: IVVideoExportPresetPredictorService?","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/videoexporter","title":"var videoExporter: IVVideoExporterService?","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/videoinfoattainmentservice","title":"var videoInfoAttainmentService: IVVideoInfoAttainmentService?","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/videoservice","title":"var videoService: VideoUploadServiceProtocol?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/loadthumbnailafterset()","title":"func loadThumbnailAfterSet() async","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/processpicked(videourl:videosize:isfromcamera:)","title":"func processPicked(videoURL: URL, videoSize: UInt?, isFromCamera: Bool) async","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/setcellvalue(to:)","title":"func setCellValue(to: VideoWidgetCellStateModel)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/setlastuploadvideostateholder(to:)","title":"func setLastUploadVideoStateHolder(to: VideoSelectorWidgetRowLastUploadStateHolder?)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/setuprules()","title":"func setupRules()","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/showgeneralvideoerrortoast()","title":"func showGeneralVideoErrorToast()","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/uplaodvideo(with:)","title":"func uplaodVideo(with: VideoSelectorWidgetRowLastUploadStateHolder) async","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/validationchanged","title":"VideoSelectorWidgetRow.ValidationChanged","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"}],"path":"\/documentation\/divar\/videoselectorwidgetrow\/getablerow-implementations","title":"GetableRow Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/picker(didpicked:)","title":"func picker(didPicked: [IVPickedData])","type":"method"}],"path":"\/documentation\/divar\/videoselectorwidgetrow\/ivcollectionassetselectorviewmodeldelegate-implementations","title":"IVCollectionAssetSelectorViewModelDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/collectionselectorviewmodel(_:didrequesttoopencollectionassetselectorwith:collectionname:)","title":"func collectionSelectorViewModel(IVCollectionSelectorViewModel, didRequestToOpenCollectionAssetSelectorWith: UniqueIdentifier, collectionName: String?)","type":"method"}],"path":"\/documentation\/divar\/videoselectorwidgetrow\/ivcollectionselectorviewmodeldelegate-implementations","title":"IVCollectionSelectorViewModelDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/videorecorder(_:didrecordervideowith:)","title":"func videoRecorder(IVVideoRecorderViewModel, didRecorderVideoWith: IVVideoRecorderRecordedVideo)","type":"method"}],"path":"\/documentation\/divar\/videoselectorwidgetrow\/ivvideorecorderviewmodeldelegate-implementations","title":"IVVideoRecorderViewModelDelegate Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/videoselectorwidgetrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"}],"path":"\/documentation\/divar\/videoselectorwidgetrow\/setablerow-implementations","title":"SetableRow Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/videoselectorwidgetcellrequesttoopenaddvideosheet(_:)","title":"func videoSelectorWidgetCellRequestToOpenAddVideoSheet(VideoSelectorWidgetCell)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/videoselectorwidgetrequesttoopencancelvideouploadingsheet(_:)","title":"func videoSelectorWidgetRequestToOpenCancelVideoUploadingSheet(VideoSelectorWidgetCell)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/videoselectorwidgetrequesttoopendeletevideosheet(_:)","title":"func videoSelectorWidgetRequestToOpenDeleteVideoSheet(VideoSelectorWidgetCell)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrow\/videoselectorwidgetrequesttoopenretryuploading(_:)","title":"func videoSelectorWidgetRequestToOpenRetryUploading(VideoSelectorWidgetCell)","type":"method"}],"path":"\/documentation\/divar\/videoselectorwidgetrow\/videoselectorwidgetcelldelegate-implementations","title":"VideoSelectorWidgetCellDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/videoselectorwidgetrow","title":"VideoSelectorWidgetRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadserviceimpl\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadserviceimpl\/cancelvideouploading()","title":"func cancelVideoUploading()","type":"method"},{"path":"\/documentation\/divar\/videouploadserviceimpl\/uploadvideo(with:to:)","title":"func uploadVideo(with: URL, to: String) async -> AsyncThrowingStream<VideoUploadViewResponse, Error>","type":"method"}],"path":"\/documentation\/divar\/videouploadserviceimpl","title":"VideoUploadServiceImpl","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessagecell\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/voicemessagecell\/init(style:reuseidentifier:)","title":"init(style: UITableViewCell.CellStyle, reuseIdentifier: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessagecell\/delegate","title":"var delegate: VoiceMessageCellProtocol?","type":"property"},{"path":"\/documentation\/divar\/voicemessagecell\/menuoptions","title":"var menuOptions: [MessageCellOptions]","type":"property"},{"path":"\/documentation\/divar\/voicemessagecell\/voicemessagestructure","title":"var voiceMessageStructure: ChatFileMessageStructure?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessagecell\/fillmessageview()","title":"func fillMessageView()","type":"method"},{"path":"\/documentation\/divar\/voicemessagecell\/handlemessagetap()","title":"func handleMessageTap()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessagecell\/vociemessagerowdidclickplaybutton(_:)","title":"func vocieMessageRowDidClickPlayButton(VoiceMessageRow)","type":"method"}],"path":"\/documentation\/divar\/voicemessagecell\/voicemessagerowdelegate-implementations","title":"VoiceMessageRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/voicemessagecell","title":"VoiceMessageCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/init(size:)","title":"init(size: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/audiorecorderdelegate","title":"var audioRecorderDelegate: AudioRecorderViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/blinkingview","title":"var blinkingView: UIView!","type":"property"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/counter","title":"var counter: Int","type":"property"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/duration","title":"var duration: UILabel!","type":"property"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/erasebutton","title":"var eraseButton: UIButton!","type":"property"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/outputurl","title":"var outPutUrl: URL","type":"property"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/player","title":"var player: AVAudioPlayer?","type":"property"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/recorder","title":"var recorder: AVAudioRecorder!","type":"property"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/sizeoftheview","title":"var sizeOfTheView: CGFloat!","type":"property"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/timer","title":"var timer: Timer?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/audioplayerdidfinishplaying(_:successfully:)","title":"func audioPlayerDidFinishPlaying(AVAudioPlayer, successfully: Bool)","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/cleanup()","title":"func cleanup()","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/dismissvoice(_:)","title":"func dismissVoice(Any)","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/handletimerlabel()","title":"func handleTimerLabel()","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/killtimer()","title":"func killTimer()","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/playrecording()","title":"func playRecording()","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/saveaudio()","title":"func saveAudio()","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/startanimating(_:)","title":"func startAnimating(Bool)","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/startrecording()","title":"func startRecording()","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/stoprecording()","title":"func stopRecording()","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/updatecontrols()","title":"func updateControls()","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/voicerecorderviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/voicerecorderviewcontroller","title":"VoiceRecorderViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/warningpreviewview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/warningpreviewview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/warningpreviewview\/delegate","title":"var delegate: WarningPreviewViewDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/warningpreviewview\/closebuttonaction(_:)","title":"func closeButtonAction(UIButton)","type":"method"},{"path":"\/documentation\/divar\/warningpreviewview\/fill(title:)","title":"func fill(title: String)","type":"method"}],"path":"\/documentation\/divar\/warningpreviewview","title":"WarningPreviewView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/weakobjectcontainer\/init(_:)","title":"init(Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/weakobjectcontainer\/weakobject","title":"var weakObject: AnyObject?","type":"property"}],"path":"\/documentation\/divar\/weakobjectcontainer","title":"WeakObjectContainer","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonbarcollectionviewcell\/stackview","title":"var stackView: UIStackView!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonbarcollectionviewcell\/fill(with:)","title":"func fill(with: Widgets_WideButtonBarWidgetData)","type":"method"},{"path":"\/documentation\/divar\/widebuttonbarcollectionviewcell\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/widebuttonbarcollectionviewcell","title":"WideButtonBarCollectionViewCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/init(config:isrelativetosafearea:)","title":"init(config: WideButtonConfig, isRelativeToSafeArea: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/bottomsuperviewconstraint","title":"var bottomSuperViewConstraint: NSLayoutConstraint!","type":"property"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/button","title":"var button: UIButton!","type":"property"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/delegate","title":"var delegate: WideButtonViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/isprimaryenabled","title":"var isPrimaryEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/isrelativetosafearea","title":"let isRelativeToSafeArea: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/buttonaction(_:)","title":"func buttonAction(UIButton)","type":"method"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/setbuttontext(_:)","title":"func setButtonText(String)","type":"method"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/setconfig(_:)","title":"func setConfig(WideButtonConfig)","type":"method"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/setconfig(stickywidget:)","title":"func setConfig(stickyWidget: StickyWidgetActionWrapper)","type":"method"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/settitle(_:)","title":"func setTitle(String)","type":"method"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/setupui()","title":"func setupUI()","type":"method"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"path":"\/documentation\/divar\/widebuttonviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/widebuttonviewcontroller","title":"WideButtonViewController","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/wideimageupload\/uploadtyperesult\/init(icon:color:title:)","title":"init(icon: ImageAsset, color: SonnatColors?, title: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/wideimageupload\/uploadtyperesult\/color","title":"var color: SonnatColors!","type":"property"},{"path":"\/documentation\/divar\/wideimageupload\/uploadtyperesult\/icon","title":"var icon: ImageAsset","type":"property"},{"path":"\/documentation\/divar\/wideimageupload\/uploadtyperesult\/title","title":"var title: String?","type":"property"}],"path":"\/documentation\/divar\/wideimageupload\/uploadtyperesult","title":"WideImageUpload.UploadTypeResult","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/wideimageupload\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/wideimageupload\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/wideimageupload\/borderimageview","title":"var borderImageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/wideimageupload\/contentview","title":"var contentView: UIView!","type":"property"},{"path":"\/documentation\/divar\/wideimageupload\/imageview","title":"var imageView: SonnatImageView!","type":"property"},{"path":"\/documentation\/divar\/wideimageupload\/titlelabel","title":"var titleLabel: UILabel!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/wideimageupload\/commoninit()","title":"func commonInit()","type":"method"},{"path":"\/documentation\/divar\/wideimageupload\/fill(type:)","title":"func fill(type: UploadType)","type":"method"},{"path":"\/documentation\/divar\/wideimageupload\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/wideimageupload\/uploadtype\/primary","title":"case primary","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/wideimageupload\/uploadtype\/value","title":"var value: UploadTypeResult","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/wideimageupload\/uploadtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/wideimageupload\/uploadtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/wideimageupload\/uploadtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/wideimageupload\/uploadtype","title":"WideImageUpload.UploadType","type":"enum"}],"path":"\/documentation\/divar\/wideimageupload","title":"WideImageUpload","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetactionselectorcell\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"path":"\/documentation\/divar\/widgetactionselectorcell\/selectorrow","title":"var selectorRow: Sonnat.SelectorRow","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetactionselectorcell\/setup()","title":"func setup()","type":"method"}],"path":"\/documentation\/divar\/widgetactionselectorcell","title":"WidgetActionSelectorCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/init(property:formcontroller:)","title":"init(property: Schema, formController: BaseFormViewController?)","type":"init"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/init(tag:)","title":"init(tag: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/formcontroller","title":"var formController: BaseFormViewController?","type":"property"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/property","title":"var property: Schema?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/widgetactionselectorrow\/formrowselectionprotocol-implementations","title":"FormRowSelectionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/init(_:_:)","title":"init(String?, (Self) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/cellsetup(_:)","title":"func cellSetup(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/cellupdate(_:)","title":"func cellUpdate(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/oncellhighlightchanged(_:)","title":"func onCellHighlightChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/oncellselection(_:)","title":"func onCellSelection(((Self.Cell, Self) -> Void)) -> Self","type":"method"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/onchange(_:)","title":"func onChange((Self) -> Void) -> Self","type":"method"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/onrowvalidationchanged(_:)","title":"func onRowValidationChanged((Self.Cell, Self) -> Void) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/defaultcellsetup","title":"static var defaultCellSetup: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/defaultcellupdate","title":"static var defaultCellUpdate: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/defaultoncellhighlightchanged","title":"static var defaultOnCellHighlightChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/defaultonrowvalidationchanged","title":"static var defaultOnRowValidationChanged: ((Self.Cell, Self) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/defaultrowinitializer","title":"static var defaultRowInitializer: ((Self) -> Void)?","type":"property"}],"path":"\/documentation\/divar\/widgetactionselectorrow\/rowtype-implementations","title":"RowType Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetactionselectorrow\/selectorrow(didselect:)","title":"func selectorRow(didSelect: Sonnat.SelectorRow)","type":"method"}],"path":"\/documentation\/divar\/widgetactionselectorrow\/selectorrowdelegate-implementations","title":"SelectorRowDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetactionselectorrow","title":"WidgetActionSelectorRow","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedbottomsheetviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/widgetbasedbottomsheetviewcontroller\/init(widget:alignment:)","title":"init(widget: Widgets_BottomSheet, alignment: NSTextAlignment)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedbottomsheetviewcontroller\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedbottomsheetviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/widgetbasedbottomsheetviewcontroller","title":"WidgetBasedBottomSheetViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedbuilder\/init(container:worker:)","title":"init(container: WidgetBasedBuilderDIContainer, worker: WidgetBasedWorkerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedbuilder\/build()","title":"func build() -> AdvancedWidgetViewController","type":"method"},{"path":"\/documentation\/divar\/widgetbasedbuilder\/with(actiondelegate:)","title":"func with(actionDelegate: WidgetBasedActionDelegate?) -> Self","type":"method"},{"path":"\/documentation\/divar\/widgetbasedbuilder\/with(hidesbottombarwhenpushed:)","title":"func with(hidesBottomBarWhenPushed: Bool) -> Self","type":"method"},{"path":"\/documentation\/divar\/widgetbasedbuilder\/with(isembeded:)","title":"func with(isEmbeded: Bool) -> Self","type":"method"},{"path":"\/documentation\/divar\/widgetbasedbuilder\/with(shouldreloadonappear:)","title":"func with(shouldReloadOnAppear: Bool) -> Self","type":"method"},{"path":"\/documentation\/divar\/widgetbasedbuilder\/with(shouldshowclosebutton:)","title":"func with(shouldShowCloseButton: Bool) -> Self","type":"method"},{"path":"\/documentation\/divar\/widgetbasedbuilder\/with(viewmodeldelegate:)","title":"func with(viewModelDelegate: WidgetViewModelDelegate?) -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedbuilder\/createviewcontroller(viewmodel:)","title":"class func createViewController(viewModel: WidgetViewModel) -> AdvancedWidgetViewController","type":"method"}],"path":"\/documentation\/divar\/widgetbasedbuilder","title":"WidgetBasedBuilder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/allowsmultipleselection","title":"var allowsMultipleSelection: Bool","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview","title":"var collectionView: AdvancedCollectionView!","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/defaultemptymessagetext","title":"var defaultEmptyMessageText: String?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/delegate","title":"var delegate: WidgetBasedCollectionViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/emptymessagetext","title":"var emptyMessageText: String?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/hasinfinitescroll","title":"var hasInfiniteScroll: Bool","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/indexpathsforselecteditems","title":"var indexPathsForSelectedItems: [IndexPath]?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/indexpathsforvisibleitems","title":"var indexPathsForVisibleItems: [IndexPath]","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/keyboarddismissmode","title":"var keyboardDismissMode: UIScrollView.KeyboardDismissMode","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/loadactionloginfo","title":"var loadActionLogInfo: ActionLog_ActionInfo","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/performancelogdelegate","title":"var performanceLogDelegate: WidgetBaseCollectionPerformanceLogDelegate?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/scrollingdelegate","title":"var scrollingDelegate: ListScrollingDelegate?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/searchingdelegate","title":"var searchingDelegate: WidgetBasedCollectionViewSearchDelegate?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/widgets","title":"var widgets: [Widgets_Widget]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/addinfinitescroll()","title":"func addInfiniteScroll()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/append(widgets:coordinator:)","title":"func append(widgets: [Widgets_Widget], coordinator: ActionLog_ActionLogCoordinator)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/beginrefresh()","title":"func beginRefresh()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/clear(errormessage:)","title":"func clear(errorMessage: String)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/data(for:)","title":"func data(for: Int) -> Widgets_Widget?","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/deselectallitems(animated:)","title":"func deselectAllItems(animated: Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/deselectitem(at:animated:)","title":"func deselectItem(at: IndexPath, animated: Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/endrefresh()","title":"func endRefresh()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/isempty()","title":"func isEmpty() -> Bool","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/prepareforrefresh(message:)","title":"func prepareForRefresh(message: String)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/preparereload()","title":"func prepareReload()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/reloaditems(at:animated:)","title":"func reloadItems(at: [IndexPath], animated: Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/selectitem(at:animated:scrollposition:)","title":"func selectItem(at: IndexPath?, animated: Bool, scrollPosition: UICollectionView.ScrollPosition)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/set(widgetlist:coordinator:completion:)","title":"func set(widgetList: [Widgets_Widget], coordinator: ActionLog_ActionLogCoordinator, completion: () -> Void)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/setdirectionchange(delegate:)","title":"func setDirectionChange(delegate: UIScrollViewDirectionDelegate?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/setneedsreloaddata()","title":"func setNeedsReloadData()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/setuppulltorefresh()","title":"func setupPullToRefresh()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/stopinfinityscroll()","title":"func stopInfinityScroll()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/update(newlist:delete:reload:)","title":"func update(newList: [Widgets_Widget], delete: [IndexPath], reload: [IndexPath])","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/update(newlist:insert:reload:)","title":"func update(newList: [Widgets_Widget], insert: [IndexPath], reload: [IndexPath])","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:heightforitemat:)","title":"func collectionView(UICollectionView, heightForItemAt: IndexPath) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:shoulditemhasfullwidthat:)","title":"func collectionView(UICollectionView, shouldItemHasFullWidthAt: IndexPath) -> Bool","type":"method"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/flowlayoutwithanimationsdelegate-implementations","title":"FlowLayoutWithAnimationsDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/uicollectionviewdatasource-implementations","title":"UICollectionViewDataSource Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:diddeselectitemat:)","title":"func collectionView(UICollectionView, didDeselectItemAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:didenddisplaying:foritemat:)","title":"func collectionView(UICollectionView, didEndDisplaying: UICollectionViewCell, forItemAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:didselectitemat:)","title":"func collectionView(UICollectionView, didSelectItemAt: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:shouldselectitemat:)","title":"func collectionView(UICollectionView, shouldSelectItemAt: IndexPath) -> Bool","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/collectionview(_:willdisplay:foritemat:)","title":"func collectionView(UICollectionView, willDisplay: UICollectionViewCell, forItemAt: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/uicollectionviewdelegate-implementations","title":"UICollectionViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/scrollviewdidscroll(_:)","title":"func scrollViewDidScroll(UIScrollView)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/scrollviewwillbegindragging(_:)","title":"func scrollViewWillBeginDragging(UIScrollView)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/scrollviewwillenddragging(_:withvelocity:targetcontentoffset:)","title":"func scrollViewWillEndDragging(UIScrollView, withVelocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/callparent(action:widget:)","title":"func callParent(action: CustomAction, widget: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/callparent(action:widget:actionlogcoordinator:)","title":"func callParent(action: Widgets_Action, widget: Widgets_Widget, actionLogCoordinator: ActionLog_ActionLogCoordinator?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/internalstatechanges(widget:parameters:)","title":"func internalStateChanges(widget: Widgets_Widget, parameters: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/reloadself(_:newwidget:)","title":"func reloadSelf(WidgetCell, newWidget: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller\/widgetcelldelegate-implementations","title":"WidgetCellDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontroller","title":"WidgetBasedCollectionViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/init(for:requestmodel:container:formid:editid:newschema:newdata:previousdata:)","title":"init(for: WidgetTag, requestModel: WidgetBasedFilterRequest, container: WidgetBasedFilterViewControllerDIContainer, formID: String?, editID: String?, newSchema: Schema, newData: [String : Any], previousData: [String : Any])","type":"init"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/init(for:worker:container:formid:editid:newschema:newdata:previousdata:)","title":"init(for: WidgetTag, worker: WidgetBasedFilterWorkerProtocol, container: WidgetBasedFilterViewControllerDIContainer, formID: String?, editID: String?, newSchema: Schema, newData: [String : Any], previousData: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/delegate","title":"var delegate: WidgetBasedFilterViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/finishactiontype","title":"var finishActionType: FormActionType","type":"property"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/needsresetbutton","title":"var needsResetButton: Bool","type":"property"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/submitbuttontitle","title":"var submitButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/successsubmitmessage","title":"var successSubmitMessage: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/didstartloadingdata(_:for:)","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/valuehasbeenchanged(_:for:oldvalue:newvalue:)","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/widgetbasedfilterviewcontroller","title":"WidgetBasedFilterViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/init(container:token:sourceview:)","title":"init(container: WidgetBasedPostDetailsViewControllerContainer, token: String, sourceView: PostViewSource)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/bookmarkview","title":"let bookmarkView: BookmarkView","type":"property"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/container","title":"let container: WidgetBasedPostDetailsViewControllerContainer","type":"property"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/isbookmarked","title":"var isBookmarked: Bool?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/note","title":"var note: String?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/stackholder","title":"var stackHolder: UIStackView?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/addbarbuttonitem()","title":"func addBarButtonItem()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/addnotetapped()","title":"func addNoteTapped()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/more()","title":"func more()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/postdetailswidgetbasechildfinish(event:)","title":"func postDetailsWidgetBaseChildFinish(event: WidgetBasedPostDetailsPerformaceHelper.WidgetBasedPostDetailsChildEvents)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/postdetailswidgetbasechildstarted(event:)","title":"func postDetailsWidgetBaseChildStarted(event: WidgetBasedPostDetailsPerformaceHelper.WidgetBasedPostDetailsChildEvents)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/postdetailswidgetbaseeventfinished(event:reason:)","title":"func postDetailsWidgetBaseEventFinished(event: String, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/postdetailswidgetbaseeventstarted(event:eventpayload:customdata:)","title":"func postDetailsWidgetBaseEventStarted(event: String, eventPayload: [String : Any]?, customData: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/reloaddata()","title":"func reloadData()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/sharepost()","title":"func sharePost()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/updatenotepreviewcontent(_:)","title":"func updateNotePreviewContent(String?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/viewdidlayoutsubviews()","title":"func viewDidLayoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/viewwilldisappear(_:)","title":"func viewWillDisappear(Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/viewwilllayoutsubviews()","title":"func viewWillLayoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/widgetbasedcollectionviewcontroller(_:didenddisplaying:forindexpath:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didEndDisplaying: Widgets_Widget, forIndexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/widgetbasedcollectionviewcontroller(_:willdisplay:forindexpath:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, willDisplay: Widgets_Widget, forIndexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/willmove(toparent:)","title":"func willMove(toParent: UIViewController?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/bookmarkview(didtap:isbookmark:)","title":"func bookmarkView(didTap: BookmarkView, isBookmark: Bool)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/bookmarkviewdelegate-implementations","title":"BookmarkViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/noteviewcontroller(_:didfinishchangingnote:)","title":"func noteViewController(NoteViewController, didFinishChangingNote: String?)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/noteviewcontrollerdelegate-implementations","title":"NoteViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/sourceview","title":"var sourceView: ActionLog_ScreenshotActionInfo.Source","type":"property"}],"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/screenshotprotocol-implementations","title":"ScreenshotProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/childeventfinish(event:reaason:)","title":"func childEventFinish(event: String, reaason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/childeventstart(event:)","title":"func childEventStart(event: String)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/collectiondidreloading()","title":"func collectionDidReloading()","type":"method"}],"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller\/widgetbasecollectionperformancelogdelegate-implementations","title":"WidgetBaseCollectionPerformanceLogDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontroller","title":"WidgetBasedPostDetailsViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller\/init(widgetbasedservice:token:dataprovider:)","title":"init(widgetBasedService: WidgetBasedServiceProtocol, token: String, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller\/stackholder","title":"var stackHolder: UIStackView?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller\/reloaddata()","title":"func reloadData()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller\/sharepost()","title":"func sharePost()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller\/widgetbasedcollectionviewcontroller(_:didenddisplaying:forindexpath:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didEndDisplaying: Widgets_Widget, forIndexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller\/widgetbasedcollectionviewcontroller(_:willdisplay:forindexpath:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, willDisplay: Widgets_Widget, forIndexPath: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedpostpreviewviewcontroller","title":"WidgetBasedPostPreviewViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedprefetchservice\/init(widgetbasedservice:prefetchedresult:)","title":"init(widgetBasedService: WidgetBasedServiceProtocol, prefetchedResult: ExtractableMessage)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedprefetchservice\/lastwidgetbasedrequest","title":"var lastWidgetBasedRequest: Cancellable?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedprefetchservice\/sendwidgetbasedrequest(request:responsetype:completion:)","title":"func sendWidgetBasedRequest<ResponseType>(request: WidgetBasedRequest, responseType: ResponseType.Type, completion: ExtractableResult) -> Cancellable?","type":"method"}],"path":"\/documentation\/divar\/widgetbasedprefetchservice","title":"WidgetBasedPrefetchService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedprefetchworker\/init(worker:prefetchedresult:)","title":"init(worker: WidgetBasedWorkerProtocol, prefetchedResult: ExtractableMessage)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedprefetchworker\/config","title":"var config: WidgetBasedConfig","type":"property"},{"path":"\/documentation\/divar\/widgetbasedprefetchworker\/responsetype","title":"var responseType: ExtractableMessage.Type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedprefetchworker\/createpredictionworker(with:)","title":"func createPredictionWorker(with: String) -> WidgetBasedWorkerProtocol?","type":"method"},{"path":"\/documentation\/divar\/widgetbasedprefetchworker\/loaddata(with:completion:)","title":"func loadData(with: WidgetBaseRequestMetadata, completion: ExtractableResult) -> Cancellable?","type":"method"}],"path":"\/documentation\/divar\/widgetbasedprefetchworker","title":"WidgetBasedPrefetchWorker","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/init(handler:)","title":"init(handler: WidgetBasedSegmentedHandlerProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/handler","title":"var handler: WidgetBasedSegmentedHandlerProtocol","type":"property"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/navigationbaritems","title":"var navigationBarItems: [Int : Widgets_NavigationBar]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/barbuttonitembuttontapped(sender:)","title":"func barButtonItemButtonTapped(sender: UIBarButtonItem)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/barbuttonitemtapped(sender:)","title":"func barButtonItemTapped(sender: UIBarButtonItem)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/collectionview(_:cellforitemat:)","title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/collectionview(_:numberofitemsinsection:)","title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/refreshdata()","title":"func refreshData()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/requestdata()","title":"func requestData()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/apply(filters:with:)","title":"func apply(filters: Google_Protobuf_Struct, with: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/filterablewidgetbased-implementations","title":"FilterableWidgetBased Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/barbuttonitembuttontappedselector","title":"var barButtonItemButtonTappedSelector: Selector","type":"property"},{"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/barbuttonitemtappedselector","title":"var barButtonItemTappedSelector: Selector","type":"property"}],"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller\/widgetbasednavigationbarpresenterprotocol-implementations","title":"WidgetBasedNavigationBarPresenterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetbasedsegmentedviewcontroller","title":"WidgetBasedSegmentedViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedservice\/init(servicenetworkmanager:)","title":"init(serviceNetworkManager: ServiceNetworkManagerProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedservice\/sendwidgetbasedrequest(request:responsetype:completion:)-4vgwj","title":"func sendWidgetBasedRequest<ResponseType>(request: WidgetBasedRequest, responseType: ResponseType.Type, completion: ExtractableResult) -> Cancellable?","type":"method"},{"path":"\/documentation\/divar\/widgetbasedservice\/sendwidgetbasedrequest(request:responsetype:completion:)-6yh2i","title":"func sendWidgetBasedRequest<ResponseType>(request: RESTWidgetBaseRequestPayload, responseType: ResponseType.Type, completion: ExtractableResult) -> Cancellable?","type":"method"}],"path":"\/documentation\/divar\/widgetbasedservice","title":"WidgetBasedService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/claimtoken","title":"var claimToken: String?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/splitbuttonbar","title":"var splitButtonBar: SplitButtonBarViewController","type":"property"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/stackholder","title":"var stackHolder: UIStackView?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/twinbuttonsbar","title":"var twinButtonsBar: TwinButtonsViewController","type":"property"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/widebuttonbar","title":"var wideButtonBar: WideButtonViewController","type":"property"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/widgetcollection","title":"var widgetCollection: WidgetBasedCollectionViewController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/buttonclicked(_:action:)","title":"func buttonClicked(WideButtonViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/primarybuttonclicked(_:action:)-744lx","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/primarybuttonclicked(_:action:)-9cob","title":"func primaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/refreshdata()","title":"func refreshData()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/removeallstickywidgets()","title":"func removeAllStickyWidgets()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/secondarybuttonclicked(_:action:)","title":"func secondaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/setwidgets(hidden:for:)","title":"func setWidgets(hidden: Bool, for: Widgets_StickyWidget)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/setupbottomstackview(for:)","title":"func setupBottomStackView(for: StickyWidgetActionWrapper)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/widgetbasedcollectionviewcontroller(_:canstartinfinitescroll:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, canStartInfiniteScroll: AdvancedCollectionView?) -> Bool","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/widgetbasedcollectionviewcontroller(_:didenddisplaying:forindexpath:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didEndDisplaying: Widgets_Widget, forIndexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartinfinitescroll:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartInfiniteScroll: AdvancedCollectionView?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartpulltorefresh:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/widgetbasedcollectionviewcontroller(_:internalstatechangewith:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, internalStateChangeWith: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/widgetbasedcollectionviewcontroller(_:willdisplay:forindexpath:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, willDisplay: Widgets_Widget, forIndexPath: IndexPath)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedviewcontroller\/userregisteredsuccessfully(in:with:)","title":"func userRegisteredSuccessfully(in: UserRegisterFlowController, with: String)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedviewcontroller\/userregisterflowcontrollerdelegate-implementations","title":"UserRegisterFlowControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetbasedviewcontroller","title":"WidgetBasedViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedgrpcservice\/init(grpcservice:)","title":"init(grpcService: GRPCNetworkManagerProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedgrpcservice\/grpcservice","title":"let grpcService: GRPCNetworkManagerProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedgrpcservice\/makeunarycall(path:request:calloptions:interceptors:responsetype:)","title":"func makeUnaryCall<Request, Response>(path: String, request: Request, callOptions: CallOptions?, interceptors: [ClientInterceptor<Request, Response>], responseType: Response.Type) -> UnaryCall<Request, Response>","type":"method"},{"path":"\/documentation\/divar\/widgetbasedgrpcservice\/map(error:)","title":"func map(error: DError) -> DError","type":"method"},{"path":"\/documentation\/divar\/widgetbasedgrpcservice\/sendwidgetbasedrequest(request:responsetype:completion:)-1m26t","title":"func sendWidgetBasedRequest<ResponseType>(request: WidgetBasedRequest, responseType: ResponseType.Type, completion: ExtractableResult) -> Cancellable?","type":"method"},{"path":"\/documentation\/divar\/widgetbasedgrpcservice\/sendwidgetbasedrequest(request:responsetype:completion:)-9eumm","title":"func sendWidgetBasedRequest<ResponseType>(request: GRPCWidgetBaseRequestPayload, responseType: ResponseType.Type, completion: ExtractableResult) -> Cancellable?","type":"method"}],"path":"\/documentation\/divar\/widgetbasedgrpcservice","title":"WidgetBasedgRPCService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetcell\/delegate","title":"var delegate: WidgetCellDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"}],"path":"\/documentation\/divar\/widgetcell","title":"WidgetCell","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/widgetviewcontroller\/init(container:request:)","title":"init(container: WidgetViewControllerDIContainer, request: WidgetBasedRequest)","type":"init"},{"path":"\/documentation\/divar\/widgetviewcontroller\/init(container:request:minchartosearch:searchbarplaceholder:presentmode:shouldreloadonappear:)","title":"init(container: WidgetViewControllerDIContainer, request: WidgetBasedRequest, minCharToSearch: Int, searchBarPlaceholder: String, presentMode: Bool, shouldReloadOnAppear: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontroller\/container","title":"let container: WidgetViewControllerDIContainer","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontroller\/delegate","title":"var delegate: WidgetViewControllerDelegate?","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontroller\/hassearchpage","title":"var hasSearchPage: Bool","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontroller\/minchartosearch","title":"var minCharToSearch: Int","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontroller\/navigationbaritems","title":"var navigationBarItems: [Int : Widgets_NavigationBar]","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontroller\/pageidentifier","title":"var pageIdentifier: String?","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontroller\/pagerequest","title":"var pageRequest: WidgetBasedRequest","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontroller\/schema","title":"var schema: Schema?","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontroller\/searchhistoryvc","title":"var searchHistoryVC: SearchHistoryViewController?","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontroller\/stackholder","title":"var stackHolder: UIStackView?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontroller\/barbuttonitembuttontapped(sender:)","title":"func barButtonItemButtonTapped(sender: UIButton)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/barbuttonitemtapped(sender:)","title":"func barButtonItemTapped(sender: UIBarButtonItem)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/config()","title":"func config()","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/firereload()","title":"func fireReload()","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/hidesearchstack(query:)","title":"func hideSearchStack(query: String?)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/loaddata(widgetbasedservice:)","title":"func loadData(widgetBasedService: WidgetBasedServiceProtocol)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/refreshwith(_:)","title":"func refreshWith(FilterableWidgetBasedRequest)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/setupsearchandfilter(data:)","title":"func setupSearchAndFilter(data: Widgets_Page.SearchBoxAndFilter)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/setupsearchstackholder()","title":"func setupSearchStackHolder()","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/showsearchstack()","title":"func showSearchStack()","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/switchsearchtohistory(_:)","title":"func switchSearchToHistory(Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/viewdiddisappear(_:)","title":"func viewDidDisappear(Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/viewdidlayoutsubviews()","title":"func viewDidLayoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/viewwilldisappear(_:)","title":"func viewWillDisappear(Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/viewwilllayoutsubviews()","title":"func viewWillLayoutSubviews()","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartinfinitescroll:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartInfiniteScroll: AdvancedCollectionView?)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartpulltorefresh:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/widgetviewchildfinish(event:)","title":"func widgetViewChildFinish(event: WidgetViewControllerPerformaceHelper.WidgetViewControllerChildEvents)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/widgetviewchildstarted(event:)","title":"func widgetViewChildStarted(event: WidgetViewControllerPerformaceHelper.WidgetViewControllerChildEvents)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/widgetvieweventfinished(event:reason:)","title":"func widgetViewEventFinished(event: String, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/widgetvieweventstarted(event:eventpayload:customdata:)","title":"func widgetViewEventStarted(event: String, eventPayload: [String : Any]?, customData: [String : Any]?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontroller\/apply(filters:with:)","title":"func apply(filters: Google_Protobuf_Struct, with: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/widgetviewcontroller\/filterablewidgetbased-implementations","title":"FilterableWidgetBased Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontroller\/listscrolling(_:didscrollto:)","title":"func listScrolling(UIViewController, didScrollTo: ScrollingDirection)","type":"method"}],"path":"\/documentation\/divar\/widgetviewcontroller\/listscrollingdelegate-implementations","title":"ListScrollingDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/widgetviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontroller\/searchhistoryviewmodel(_:didselecthistory:at:)","title":"func searchHistoryViewModel(SearchHistoryViewModelProtocol, didSelectHistory: SearchFilterHistory, at: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/widgetviewcontroller\/searchhistoryviewmodeldelegate-implementations","title":"SearchHistoryViewModelDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontroller\/tagdidselect(tag:index:)","title":"func tagDidSelect(tag: TagListItem, index: Int)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/taglistcell(_:tag:didremoveitematindex:)","title":"func taglistCell(TagListCell, tag: TagListItem, didRemoveItemAtIndex: Int)","type":"method"}],"path":"\/documentation\/divar\/widgetviewcontroller\/taglistviewcontrollerdelegate-implementations","title":"TagListViewControllerDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontroller\/childeventfinish(event:reaason:)","title":"func childEventFinish(event: String, reaason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/childeventstart(event:)","title":"func childEventStart(event: String)","type":"method"},{"path":"\/documentation\/divar\/widgetviewcontroller\/collectiondidreloading()","title":"func collectionDidReloading()","type":"method"}],"path":"\/documentation\/divar\/widgetviewcontroller\/widgetbasecollectionperformancelogdelegate-implementations","title":"WidgetBaseCollectionPerformanceLogDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontroller\/barbuttonitembuttontappedselector","title":"var barButtonItemButtonTappedSelector: Selector","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontroller\/barbuttonitemtappedselector","title":"var barButtonItemTappedSelector: Selector","type":"property"}],"path":"\/documentation\/divar\/widgetviewcontroller\/widgetbasednavigationbarpresenterprotocol-implementations","title":"WidgetBasedNavigationBarPresenterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetviewcontroller","title":"WidgetViewController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewmodel\/init(container:worker:)","title":"init(container: WidgetViewModelDIContainer, worker: WidgetBasedWorkerProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewmodel\/canloadmore","title":"var canLoadMore: Bool","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/delegate","title":"var delegate: WidgetViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/dologin","title":"var doLogin: ((String?, String, DataProviderProtocol) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/emptystatemessage$","title":"var emptyStateMessage$: AnyPublisher<String?, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/empystatemessage","title":"var empyStateMessage: String?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/error$","title":"var error$: AnyPublisher<DError, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/errorsubject","title":"let errorSubject: PassthroughSubject<DError, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/filters","title":"var filters: Google_Protobuf_Struct","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/hasprediction","title":"var hasPrediction: Bool","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/hassearchhistory","title":"var hasSearchHistory: Bool","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/isloading","title":"var isLoading: ThreadSafe<Bool>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/lastwidgetbasedrequest","title":"var lastWidgetBasedRequest: Cancellable?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/navbaritems$","title":"var navBarItems$: AnyPublisher<[Widgets_NavigationBar], Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/navbaritemssubject","title":"var navBarItemsSubject: [Widgets_NavigationBar]","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/placeholdersubject","title":"var placeholderSubject: String?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/predictionfactory-swift.property","title":"var predictionFactory: PredictionFactory?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/predictionviewmodel","title":"var predictionViewModel: WidgetViewModelProtocol?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/reloadtimer","title":"var reloadTimer: Timer?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/responsetype","title":"var responseType: ExtractableMessage.Type","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/schema","title":"var schema: Schema?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/searchbox$","title":"var searchBox$: AnyPublisher<SearchBoxViewModel?, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/searchboxsubject","title":"var searchBoxSubject: SearchBoxViewModel?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/searchhistoryviewmodel","title":"var searchHistoryViewModel: SearchHistoryViewModelProtocol?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/searchtext$","title":"var searchText$: AnyPublisher<String?, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/searchtextsubject","title":"var searchTextSubject: String?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/stickywidgets$","title":"var stickyWidgets$: AnyPublisher<StickyWidgetActionWrapper?, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/stickywidgetssubject","title":"var stickyWidgetsSubject: StickyWidgetActionWrapper?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/tagitems$","title":"var tagItems$: AnyPublisher<[WidgetTag], Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/tagitemssubject","title":"var tagItemsSubject: [WidgetTag]","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/title$","title":"var title$: AnyPublisher<String?, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/titlesubject","title":"var titleSubject: String?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/viewstate$","title":"var viewState$: AnyPublisher<WidgetViewState, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/viewstatesubject","title":"var viewStateSubject: WidgetViewState","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/widgets$","title":"var widgets$: AnyPublisher<WidgetList, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/widgetssubject","title":"let widgetsSubject: PassthroughSubject<WidgetList, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodel\/worker","title":"let worker: WidgetBasedWorkerProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewmodel\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/didfinishloadingdata(isrefreshing:)","title":"func didFinishLoadingData(isRefreshing: Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/didreceivefailureresponse(_:isrefreshing:)","title":"func didReceiveFailureResponse(DError, isRefreshing: Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/didreceivesuccessresponse(_:isrefreshing:)","title":"func didReceiveSuccessResponse(ExtractableMessage, isRefreshing: Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/didstartloadingdata(isrefreshing:)","title":"func didStartLoadingData(isRefreshing: Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/geterrormessage(_:isrefreshing:)","title":"func getErrorMessage(DError, isRefreshing: Bool) -> String","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/getviewstate(forquery:)","title":"func getViewState(forQuery: String) -> WidgetViewState","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/handle(failurewhileloadingmore:)","title":"func handle(failureWhileLoadingMore: DError) -> DError","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/handle(failurewhilerefreshing:)","title":"func handle(failureWhileRefreshing: DError) -> DError","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/handleresponse(_:isrefreshing:)","title":"func handleResponse(Result<ExtractableMessage, DError>, isRefreshing: Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/loaddata(isrefreshing:)","title":"func loadData(isRefreshing: Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/loadmore()","title":"func loadMore()","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/navbaritemdidtap(_:performaction:)","title":"func navBarItemDidTap(Widgets_NavigationBar, performAction: (Widgets_Action) -> Void)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/needsreload()","title":"func needsReload()","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/refresh()","title":"func refresh()","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/searchtextdidbeginediting(with:)","title":"func searchTextDidBeginEditing(with: String)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/searchtextdidcancelediting()","title":"func searchTextDidCancelEditing()","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/searchtextdidchange(_:)","title":"func searchTextDidChange(String)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/searchtextdidsubmit(_:)","title":"func searchTextDidSubmit(String)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/setfilters(_:with:)","title":"func setFilters(Google_Protobuf_Struct?, with: WidgetTag)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/setupreloadtimer(refreshafter:hasremainingtorefresh:)","title":"func setupReloadTimer(refreshAfter: TimeInterval, hasRemainingToRefresh: Bool)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/taglistdidremove(tag:)","title":"func tagListDidRemove(tag: TagListItem)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodel\/taglistdidselect(tag:)","title":"func tagListDidSelect(tag: TagListItem)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewmodel\/predictionfactory-swift.typealias","title":"WidgetViewModel.PredictionFactory","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewmodel\/searchhistoryviewmodel(_:didselecthistory:at:)","title":"func searchHistoryViewModel(SearchHistoryViewModelProtocol, didSelectHistory: SearchFilterHistory, at: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/widgetviewmodel\/searchhistoryviewmodeldelegate-implementations","title":"SearchHistoryViewModelDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetviewmodel","title":"WidgetViewModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/xmlhttprequest-swift.class\/init(sessionconfig:)","title":"init!(sessionConfig: URLSessionConfiguration!)","type":"init"},{"path":"\/documentation\/divar\/xmlhttprequest-swift.class\/init(urlsession:)","title":"init!(urlSession: URLSession!)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/xmlhttprequest-swift.class\/extend(_:)","title":"func extend(Any!)","type":"method"}],"path":"\/documentation\/divar\/xmlhttprequest-swift.class","title":"XMLHttpRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/init(dealerservice:dataprovider:)","title":"init(dealerService: DealerServiceProtocol, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/dealerservice","title":"let dealerService: DealerServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/stackholder","title":"var stackHolder: UIStackView?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/addelement(with:widget:)","title":"func addElement(with: String, widget: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/appendtopaginated(_:)","title":"func appendToPaginated([Widgets_Widget])","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/ispinned(with:)","title":"func isPinned(with: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/reloadneededcells(with:)","title":"func reloadNeededCells(with: String) -> [IndexPath]","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/removeelement(with:widget:)","title":"func removeElement(with: String, widget: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/setupstackholder()","title":"func setupStackHolder()","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/viewdiddisappear(_:)","title":"func viewDidDisappear(Bool)","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartinfinitescroll:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartInfiniteScroll: AdvancedCollectionView?)","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/widgetbasedcollectionviewcontroller(_:didstartpulltorefresh:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/widgetbasedcollectionviewcontroller(_:internalstatechangewith:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, internalStateChangeWith: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/widgetlist()","title":"func widgetList() -> [Widgets_Widget]","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/pinedslugs","title":"static var pinedSlugs: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/searchbox(_:shouldchangetextin:replacementtext:)","title":"func searchBox(SearchBox, shouldChangeTextIn: NSRange, replacementText: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/searchbox(_:textdidchange:)","title":"func searchBox(SearchBox, textDidChange: String)","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/searchboxcancelbuttonclicked(_:)","title":"func searchBoxCancelButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/searchboxsearchbuttonclicked(_:)","title":"func searchBoxSearchButtonClicked(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/searchboxshouldbeginediting(_:)","title":"func searchBoxShouldBeginEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/searchboxshouldendediting(_:)","title":"func searchBoxShouldEndEditing(SearchBox) -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/searchboxtextdidbeginediting(_:)","title":"func searchBoxTextDidBeginEditing(SearchBox)","type":"method"},{"path":"\/documentation\/divar\/zeropriceviewcontroller\/searchboxtextdidendediting(_:)","title":"func searchBoxTextDidEndEditing(SearchBox)","type":"method"}],"path":"\/documentation\/divar\/zeropriceviewcontroller\/searchboxdelegate-implementations","title":"SearchBoxDelegate Implementations","type":"symbol"}],"path":"\/documentation\/divar\/zeropriceviewcontroller","title":"ZeroPriceViewController","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformactiondelegate\/didclicksecondarybutton(_:)-34i3r","title":"func didClickSecondaryButton(BaseFormController)","type":"method"}],"title":"AbstractFormActionDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformactiondelegate\/didclicksecondarybutton(_:)-8kwfr","title":"func didClickSecondaryButton(BaseFormController)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformactiondelegate\/didclicksubmit(_:)-4vb5n","title":"func didClickSubmit(BaseFormController)","type":"method"}],"title":"AbstractFormActionDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformactiondelegate\/didclicksubmit(_:)-hzva","title":"func didClickSubmit(BaseFormController)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformactiondelegate\/didfinishgetschema(_:failurewitherror:refreshonerror:)-8kwp","title":"func didFinishGetSchema(BaseFormViewProtocol, failureWithError: DError, refreshOnError: () -> Void)","type":"method"}],"title":"AbstractFormActionDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformactiondelegate\/didfinishgetschema(_:failurewitherror:refreshonerror:)-54wmn","title":"func didFinishGetSchema(BaseFormViewProtocol, failureWithError: DError, refreshOnError: () -> Void)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformactiondelegate\/didfinishgetschema(_:schema:prefilldata:completion:)-fysv","title":"func didFinishGetSchema(BaseFormViewProtocol, schema: Schema, prefillData: [String : Any], completion: CompletionHandlerType)","type":"method"}],"title":"AbstractFormActionDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformactiondelegate\/didfinishgetschema(_:schema:prefilldata:completion:)-8u216","title":"func didFinishGetSchema(BaseFormViewProtocol, schema: Schema, prefillData: [String : Any], completion: CompletionHandlerType)","type":"method"},{"path":"\/documentation\/divar\/abstractformactiondelegate\/didfinishsubmit(_:successwithdata:)","title":"func didFinishSubmit(BaseFormViewProtocol, successWithData: SubmitRequestStruct)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformactiondelegate\/didrequestrefresh(_:)-8kmpr","title":"func didRequestRefresh(BaseFormController)","type":"method"}],"title":"AbstractFormActionDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformactiondelegate\/didrequestrefresh(_:)-v7kd","title":"func didRequestRefresh(BaseFormController)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformactiondelegate\/didrequestresetform(_:)-8gew8","title":"func didRequestResetForm(BaseFormController)","type":"method"}],"title":"AbstractFormActionDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformactiondelegate\/didrequestresetform(_:)-1bf4e","title":"func didRequestResetForm(BaseFormController)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformactiondelegate\/submitdidfail(_:witherror:)-7442x","title":"func submitDidFail(BaseFormViewProtocol, withError: Error?)","type":"method"}],"title":"AbstractFormActionDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformactiondelegate\/submitdidfail(_:witherror:)-5zkiy","title":"func submitDidFail(BaseFormViewProtocol, withError: Error?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformactiondelegate\/submitdidfail(_:withvalidationerror:)-4yzdw","title":"func submitDidFail(BaseFormViewProtocol, withValidationError: SubmitValidationError)","type":"method"}],"title":"AbstractFormActionDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformactiondelegate\/submitdidfail(_:withvalidationerror:)-1c8it","title":"func submitDidFail(BaseFormViewProtocol, withValidationError: SubmitValidationError)","type":"method"}],"path":"\/documentation\/divar\/abstractformactiondelegate","title":"AbstractFormActionDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/actiondelegate","title":"var actionDelegate: AbstractFormActionDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/didremovefocusedrowvalue(_:row:)-ukgd","title":"func didRemoveFocusedRowValue(AbstractFormViewController, row: BaseRow)","type":"method"}],"title":"AbstractFormViewContorllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/didremovefocusedrowvalue(_:row:)-5f7bz","title":"func didRemoveFocusedRowValue(AbstractFormViewController, row: BaseRow)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/didsetuptableview(_:for:)-6c20e","title":"func didSetupTableView(AbstractFormViewController, for: UITableView)","type":"method"}],"title":"AbstractFormViewContorllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/didsetuptableview(_:for:)-lqfn","title":"func didSetupTableView(AbstractFormViewController, for: UITableView)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/didstartloadingdata(_:for:)-12cq8","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"}],"title":"AbstractFormViewContorllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/didstartloadingdata(_:for:)-1vkd","title":"func didStartLoadingData(AbstractFormViewController, for: String?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)-44ies","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"title":"AbstractFormViewContorllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/didstartrefreshingform(_:currentpage:currentdata:previousdata:)-4ryqq","title":"func didStartRefreshingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)-9il1s","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"}],"title":"AbstractFormViewContorllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/didstartsubmitingform(_:currentpage:currentdata:previousdata:)-8ccfm","title":"func didStartSubmitingForm(AbstractFormViewController, currentPage: Int, currentData: [String : Any], previousData: [String : Any])","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/formcontroller(_:didgetlocalvalidationerrors:)-9hxs3","title":"func formController(AbstractFormViewController, didGetLocalValidationErrors: [BaseRow : [ValidationError]]?)","type":"method"}],"title":"AbstractFormViewContorllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/formcontroller(_:didgetlocalvalidationerrors:)-63efe","title":"func formController(AbstractFormViewController, didGetLocalValidationErrors: [BaseRow : [ValidationError]]?)","type":"method"},{"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/formcontroller(_:didrequestchangesubmitbuttonstate:)","title":"func formController(AbstractFormViewController, didRequestChangeSubmitButtonState: Bool)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/formcontroller(_:didselect:)-84k7w","title":"func formController(AbstractFormViewController, didSelect: BaseRow)","type":"method"}],"title":"AbstractFormViewContorllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/formcontroller(_:didselect:)-1csjl","title":"func formController(AbstractFormViewController, didSelect: BaseRow)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/valuehasbeenchanged(_:for:oldvalue:newvalue:)-42a2g","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"}],"title":"AbstractFormViewContorllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate\/valuehasbeenchanged(_:for:oldvalue:newvalue:)-582kn","title":"func valueHasBeenChanged(AbstractFormViewController, for: BaseRow, oldValue: Any?, newValue: Any?)","type":"method"}],"path":"\/documentation\/divar\/abstractformviewcontorllerdelegate","title":"AbstractFormViewContorllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/abstracttableview(_:selectedindexeschanges:)-1k8fj","title":"func abstractTableView(AbstractTableViewController, selectedIndexesChanges: [IndexPath]?)","type":"method"}],"title":"AbstractTableViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/abstracttableview(_:selectedindexeschanges:)-441ri","title":"func abstractTableView(AbstractTableViewController, selectedIndexesChanges: [IndexPath]?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/convertlist(from:)-51w1s","title":"func convertList(from: AbstractTableList) -> [CellConfigurator]","type":"method"}],"title":"AbstractTableViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/convertlist(from:)-320hj","title":"func convertList(from: AbstractTableList) -> [CellConfigurator]","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/didinnercell(_:with:change:value:)-5b2zn","title":"func didInnerCell(AbstractTableViewController, with: IndexPath?, change: ConfigurableCellEnum, value: Any)","type":"method"}],"title":"AbstractTableViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/didinnercell(_:with:change:value:)-2pgd7","title":"func didInnerCell(AbstractTableViewController, with: IndexPath?, change: ConfigurableCellEnum, value: Any)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/didinnercell(_:with:select:)-wyt7","title":"func didInnerCell(AbstractTableViewController, with: IndexPath?, select: ConfigurableCellEnum)","type":"method"}],"title":"AbstractTableViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/didinnercell(_:with:select:)-25px4","title":"func didInnerCell(AbstractTableViewController, with: IndexPath?, select: ConfigurableCellEnum)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/didselectcell(_:with:)-6skfm","title":"func didSelectCell(AbstractTableViewController, with: IndexPath)","type":"method"}],"title":"AbstractTableViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/didselectcell(_:with:)-2ebng","title":"func didSelectCell(AbstractTableViewController, with: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/didstartinfinitescroll(_:scrollview:)","title":"func didStartInfiniteScroll(AbstractTableViewController, scrollView: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/didstartpulltorefresh(_:scrollview:)","title":"func didStartPullToRefresh(AbstractTableViewController, scrollView: UIScrollView?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/scrollviewdidscroll(_:)-3z0p8","title":"func scrollViewDidScroll(UIScrollView)","type":"method"}],"title":"AbstractTableViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/scrollviewdidscroll(_:)-n43f","title":"func scrollViewDidScroll(UIScrollView)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/scrollviewshouldscrolltotop()-7ekz5","title":"func scrollViewShouldScrollToTop() -> Bool","type":"method"}],"title":"AbstractTableViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/scrollviewshouldscrolltotop()-1leo2","title":"func scrollViewShouldScrollToTop() -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/scrollviewwillenddragging(withvelocity:)-3j7kk","title":"func scrollViewWillEndDragging(withVelocity: CGPoint)","type":"method"}],"title":"AbstractTableViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate\/scrollviewwillenddragging(withvelocity:)-79mnk","title":"func scrollViewWillEndDragging(withVelocity: CGPoint)","type":"method"}],"path":"\/documentation\/divar\/abstracttableviewcontrollerdelegate","title":"AbstractTableViewControllerDelegate","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/divar\/actionbuilder\/actionhandler","title":"ActionHandler","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> ActionHandler","type":"method"},{"path":"\/documentation\/divar\/actionbuilder\/buildifneeded(from:)","title":"func buildIfNeeded(from: BaseFlowController) -> ActionHandler","type":"method"}],"path":"\/documentation\/divar\/actionbuilder","title":"ActionBuilder","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actiondispatcherprotocol\/flow","title":"var flow: BaseFlowController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actiondispatcherprotocol\/perform(_:)","title":"func perform(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/actiondispatcherprotocol","title":"ActionDispatcherProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogservicefactoryprotocol\/actionlogservice","title":"var actionLogService: ActionLogServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/actionlogservicefactoryprotocol","title":"ActionLogServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogserviceprotocol\/sendactionlogs(actionlogs:clientmeta:)","title":"func sendActionLogs(actionLogs: [ActionLogPOSO], clientMeta: ActionLog_ClientMetaInfo) async -> Result<[String], DError>","type":"method"}],"path":"\/documentation\/divar\/actionlogserviceprotocol","title":"ActionLogServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogsfactoryprotocol\/actionlogs","title":"var actionLogs: ActionLogs","type":"property"}],"path":"\/documentation\/divar\/actionlogsfactoryprotocol","title":"ActionLogsFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/adviewviewcontrollerdelegate\/didrequestopeningpost()","title":"func didRequestOpeningPost()","type":"method"}],"path":"\/documentation\/divar\/adviewviewcontrollerdelegate","title":"AdViewViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/addusertransactionservicefactoryprotocol\/addusertransactionservice","title":"var addUserTransactionService: AddUserTransactionServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/addusertransactionservicefactoryprotocol","title":"AddUserTransactionServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/addusertransactionserviceprotocol\/addusertransaction(model:payload:completion:)","title":"func addUserTransaction(model: SchemaRequestModel, payload: Widgets_TransactionAddUserPayload, completion: FormResult)","type":"method"}],"path":"\/documentation\/divar\/addusertransactionserviceprotocol","title":"AddUserTransactionServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/alakbaserowtoparentdelegate\/alak(_:didrequesttoperform:)","title":"func alak(AlakBaseRow, didRequestToPerform: Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/alakbaserowtoparentdelegate","title":"AlakBaseRowToParentDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/alakcelldelegate\/actionlogenabled","title":"var actionLogEnabled: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/alakcelldelegate\/alak(_:diddeselectwidget:atindexpath:)","title":"func alak(AlakBaseCell, didDeSelectWidget: Widgets_Widget, atIndexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/alakcelldelegate\/alak(_:didenddisplaying:atindexpath:)","title":"func alak(AlakBaseCell, didEndDisplaying: Widgets_Widget, atIndexPath: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/alakcelldelegate\/alak(_:didselectwidget:action:actionlogcoordinator:)","title":"func alak(AlakBaseCell, didSelectWidget: Widgets_Widget, action: Widgets_Action?, actionLogCoordinator: ActionLog_ActionLogCoordinator?)","type":"method"},{"path":"\/documentation\/divar\/alakcelldelegate\/alak(_:shouldselectwidget:atindexpath:)","title":"func alak(AlakBaseCell, shouldSelectWidget: Widgets_Widget, atIndexPath: IndexPath) -> Bool","type":"method"},{"path":"\/documentation\/divar\/alakcelldelegate\/alak(_:willdisplay:atindexpath:)","title":"func alak(AlakBaseCell, willDisplay: Widgets_Widget, atIndexPath: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/alakcelldelegate","title":"AlakCellDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/albumvideoitemrequestresponse\/videoinfo","title":"var videoInfo: IVVideoAssetResolveVideoInfoResponse","type":"property"},{"path":"\/documentation\/divar\/albumvideoitemrequestresponse\/videourl","title":"var videoUrl: URL","type":"property"}],"path":"\/documentation\/divar\/albumvideoitemrequestresponse","title":"AlbumVideoItemRequestResponse","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseeditordelegate\/didentered(response:)","title":"func didEntered(response: Data)","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseeditordelegate","title":"AngoolakResponseEditorDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakresponseheadereditordelegate\/didsaved(headers:)","title":"func didSaved(headers: [String : String])","type":"method"}],"path":"\/documentation\/divar\/angoolakresponseheadereditordelegate","title":"AngoolakResponseHeaderEditorDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakwidgetactionhandler\/login(_:)","title":"func login(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/angoolakwidgetactionhandler","title":"AngoolakWidgetActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appconfiguration\/config(data:)","title":"func config(data: IntroConfig?)","type":"method"}],"path":"\/documentation\/divar\/appconfiguration","title":"AppConfiguration","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appphotoservice\/addnewphototoalbum(image:)","title":"func addNewPhotoToAlbum(image: UIImage) async throws -> String","type":"method"},{"path":"\/documentation\/divar\/appphotoservice\/addnewphototoalbum(imagedata:)","title":"func addNewPhotoToAlbum(imageData: Data) async throws -> String","type":"method"},{"path":"\/documentation\/divar\/appphotoservice\/addnewvideotoalbum(videourl:)","title":"func addNewVideoToAlbum(videoURL: URL) async throws -> String","type":"method"},{"path":"\/documentation\/divar\/appphotoservice\/loadappcollection()","title":"func loadAppCollection() async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/appphotoservice\/appphotocollectionname","title":"static var appPhotoCollectionName: String","type":"property"}],"path":"\/documentation\/divar\/appphotoservice","title":"AppPhotoService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/audiorecorderviewcontrollerdelegate\/audiorecorderstartedrecordingaudio(_:)","title":"func audioRecorderStartedRecordingAudio(VoiceRecorderViewController)","type":"method"},{"path":"\/documentation\/divar\/audiorecorderviewcontrollerdelegate\/audiorecorderviewcontrollerdismissed(withfileurl:)","title":"func audioRecorderViewControllerDismissed(withFileURL: URL?)","type":"method"},{"path":"\/documentation\/divar\/audiorecorderviewcontrollerdelegate\/timerfinishedcounting()","title":"func timerFinishedCounting()","type":"method"}],"path":"\/documentation\/divar\/audiorecorderviewcontrollerdelegate","title":"AudioRecorderViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/bottombartype","title":"var bottomBarType: BaseFormBottomBarType","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/documenthelper-73xly","title":"var documentHelper: DocumentHelperProtocol","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/documenthelper-25h9o","title":"var documentHelper: DocumentHelperProtocol","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/draft-84kqp","title":"var draft: [String : Any]","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/draft-6x4ea","title":"var draft: [String : Any]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/finishactiontype-4l3a1","title":"var finishActionType: FormActionType","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/finishactiontype-21gr2","title":"var finishActionType: FormActionType","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/needsdependencyrefresh-8c1o4","title":"var needsDependencyRefresh: Bool","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/needsdependencyrefresh-4t827","title":"var needsDependencyRefresh: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/needsresetbutton-9gqmo","title":"var needsResetButton: Bool","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/needsresetbutton-5u9d3","title":"var needsResetButton: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/nextbuttontitle-4s3ti","title":"var nextButtonTitle: String","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/nextbuttontitle-5lqan","title":"var nextButtonTitle: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/reloadformtitle-51ptg","title":"var reloadFormTitle: String","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/reloadformtitle-8v1og","title":"var reloadFormTitle: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/shouldcloseonfinish-8yupf","title":"var shouldCloseOnFinish: Bool","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/shouldcloseonfinish-5a94z","title":"var shouldCloseOnFinish: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/shoulddraft-5v3cg","title":"var shouldDraft: Bool","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/shoulddraft-9c451","title":"var shouldDraft: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/shouldshowsuccessmessage-6rse3","title":"var shouldShowSuccessMessage: Bool","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/shouldshowsuccessmessage-7w5j9","title":"var shouldShowSuccessMessage: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/submitbuttontitle-6qouo","title":"var submitButtonTitle: String","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/submitbuttontitle-g0xm","title":"var submitButtonTitle: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/successeditmessage-628ag","title":"var successEditMessage: String","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/successeditmessage-91ns0","title":"var successEditMessage: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/successsubmitmessage-6zo23","title":"var successSubmitMessage: String","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/successsubmitmessage-74ywf","title":"var successSubmitMessage: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/twinsecondarytitle-bh2t","title":"var twinSecondaryTitle: String","type":"property"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/twinsecondarytitle-41v5r","title":"var twinSecondaryTitle: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/savedraft()-5ulzh","title":"func saveDraft()","type":"method"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/savedraft()-6xltc","title":"func saveDraft()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/baseformcontrollerprotocol\/setupbottomstackview()-1a351","title":"func setupBottomStackView()","type":"method"}],"title":"BaseFormControllerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol\/setupbottomstackview()-8mpp5","title":"func setupBottomStackView()","type":"method"}],"path":"\/documentation\/divar\/baseformcontrollerprotocol","title":"BaseFormControllerProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/blockingviewdelegate\/didtap(onblockingview:)","title":"func didTap(onBlockingView: UIView)","type":"method"}],"path":"\/documentation\/divar\/blockingviewdelegate","title":"BlockingViewDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarkservicefactoryprotocol\/bookmarkservice","title":"var bookmarkService: BookmarkServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/bookmarkservicefactoryprotocol","title":"BookmarkServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarkserviceprotocol\/clearbookmarks(dataprovider:)","title":"func clearBookmarks(dataProvider: DataProviderProtocol) async throws","type":"method"},{"path":"\/documentation\/divar\/bookmarkserviceprotocol\/getbookmarkslist()","title":"func getBookmarksList() async -> Result<UserPostLists, DError>","type":"method"}],"path":"\/documentation\/divar\/bookmarkserviceprotocol","title":"BookmarkServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarkviewdelegate\/bookmarkview(didtap:isbookmark:)","title":"func bookmarkView(didTap: BookmarkView, isBookmark: Bool)","type":"method"}],"path":"\/documentation\/divar\/bookmarkviewdelegate","title":"BookmarkViewDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bookmarksviewcontrollerdelegate\/bookmarksviewcontroller(didselectpostwith:managetoken:)","title":"func bookmarksViewController(didSelectPostWith: String, manageToken: String?)","type":"method"}],"path":"\/documentation\/divar\/bookmarksviewcontrollerdelegate","title":"BookmarksViewControllerDelegate","type":"protocol"},{"path":"\/documentation\/divar\/bottombarconfig","title":"BottomBarConfig","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/brandbuttonlabelhelper\/displayvaluefor(_:)-6ad4j","title":"func displayValueFor([SingleMultiModel]) -> String","type":"method"}],"title":"BrandButtonLabelHelper Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/brandbuttonlabelhelper\/displayvaluefor(_:)-508nq","title":"func displayValueFor([SingleMultiModel]) -> String","type":"method"},{"path":"\/documentation\/divar\/brandbuttonlabelhelper\/getnamefordefault(_:)","title":"func getNameForDefault([SingleMultiModel]) -> String","type":"method"},{"path":"\/documentation\/divar\/brandbuttonlabelhelper\/getnameforforone(_:)","title":"func getNameForForOne([SingleMultiModel]) -> String","type":"method"},{"path":"\/documentation\/divar\/brandbuttonlabelhelper\/getnameforforzero(_:)","title":"func getNameForForZero([SingleMultiModel]) -> String","type":"method"}],"path":"\/documentation\/divar\/brandbuttonlabelhelper","title":"BrandButtonLabelHelper","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackcelldelegate\/brandfeedbackcell(_:didselectanswer:withquestion:)","title":"func BrandFeedbackCell(BrandFeedbackCell, didSelectAnswer: String, withQuestion: String)","type":"method"}],"path":"\/documentation\/divar\/brandfeedbackcelldelegate","title":"BrandFeedbackCellDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandservicefactoryprotocol\/brandservice","title":"var brandService: DealerBrandServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/brandservicefactoryprotocol","title":"BrandServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bulkladderrequest\/hasmaxseletablelimit","title":"var hasMaxSeletableLimit: Bool","type":"property"},{"path":"\/documentation\/divar\/bulkladderrequest\/maxselectableitems","title":"var maxSelectableItems: Int32?","type":"property"}],"path":"\/documentation\/divar\/bulkladderrequest","title":"BulkLadderRequest","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/businesscoreserviceprotocol\/bulkladder(request:responsetype:)","title":"func bulkLadder<ResponseType>(request: WidgetBasedRequest, responseType: ResponseType.Type) async -> ExtractableResultValue","type":"method"},{"path":"\/documentation\/divar\/businesscoreserviceprotocol\/getbusinessregisterschema(model:)","title":"func getBusinessRegisterSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/businesscoreserviceprotocol\/registernewbusiness(model:)","title":"func registerNewBusiness(model: SchemaRequestModel) async -> FormResultValue","type":"method"}],"path":"\/documentation\/divar\/businesscoreserviceprotocol","title":"BusinessCoreServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/businessservicefactoryprotocol\/businessservice","title":"var businessService: BusinessCoreServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/businessservicefactoryprotocol","title":"BusinessServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/buttoncomponentprotocol\/isenabled-1uthl","title":"var isEnabled: Bool","type":"property"}],"title":"ButtonComponentProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/buttoncomponentprotocol\/isenabled-4zfa2","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/buttoncomponentprotocol\/isprimaryenabled","title":"var isPrimaryEnabled: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/buttoncomponentprotocol\/issecondaryenabled-1nps9","title":"var isSecondaryEnabled: Bool","type":"property"}],"title":"ButtonComponentProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/buttoncomponentprotocol\/issecondaryenabled-746h4","title":"var isSecondaryEnabled: Bool","type":"property"}],"path":"\/documentation\/divar\/buttoncomponentprotocol","title":"ButtonComponentProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/calllogcelldelegate\/calllogcelldidrequesttomakecall(_:)","title":"func callLogCellDidRequestToMakeCall(CallLogMessageCell)","type":"method"}],"path":"\/documentation\/divar\/calllogcelldelegate","title":"CallLogCellDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservice\/statechangepublisher","title":"var stateChangePublisher: AnyPublisher<CallObserverServiceStateChangeResult, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservice\/detectcomplementarystate(from:newstate:last:)","title":"func detectComplementaryState(from: CallObserverServiceCallState?, newState: CallObserverServiceCallState, last: CallObserverServiceComplementaryState) -> CallObserverServiceComplementaryState","type":"method"}],"path":"\/documentation\/divar\/callobserverservice","title":"CallObserverService","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicefactoryprotocol\/callobserver","title":"var callObserver: CallObserverService","type":"property"}],"path":"\/documentation\/divar\/callobserverservicefactoryprotocol","title":"CallObserverServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cameraoverlaydelegate\/cameraoverlay(_:didrequestchangeflashstate:)","title":"func cameraOverlay(CameraOverlayView, didRequestChangeFlashState: Bool)","type":"method"},{"path":"\/documentation\/divar\/cameraoverlaydelegate\/cameraoverlaydidrequestclose(_:)","title":"func cameraOverlayDidRequestClose(CameraOverlayView)","type":"method"},{"path":"\/documentation\/divar\/cameraoverlaydelegate\/cameraoverlaydidrequeststartrecording(_:)","title":"func cameraOverlayDidRequestStartRecording(CameraOverlayView)","type":"method"},{"path":"\/documentation\/divar\/cameraoverlaydelegate\/cameraoverlaydidrequeststoprecording(_:)","title":"func cameraOverlayDidRequestStopRecording(CameraOverlayView)","type":"method"}],"path":"\/documentation\/divar\/cameraoverlaydelegate","title":"CameraOverlayDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cancelabletask\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cancelabletask\/cancel()","title":"func cancel()","type":"method"}],"path":"\/documentation\/divar\/cancelabletask","title":"CancelableTask","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cancellable\/cancelrequest()","title":"func cancelRequest()","type":"method"}],"path":"\/documentation\/divar\/cancellable","title":"Cancellable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentactionhandler\/opencaragentpanelorbottomsheet(_:)","title":"func openCarAgentPanelOrBottomSheet(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/caragentactionhandler\/opencaragentsbulkladder(_:)","title":"func openCarAgentsBulkLadder(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/caragentactionhandler\/opencaragentspostinbusiness(_:)","title":"func openCarAgentsPostInBusiness(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/caragentactionhandler\/opencaragentspurchaseladdersubscription(_:)","title":"func openCarAgentsPurchaseLadderSubscription(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/caragentactionhandler\/opencaragentspurchasepackagesubscription(_:)","title":"func openCarAgentsPurchasePackageSubscription(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/caragentactionhandler","title":"CarAgentActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentservicefactoryprotocol\/caragentservice","title":"var carAgentService: CarAgentServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/caragentservicefactoryprotocol","title":"CarAgentServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentserviceprotocol\/getbuyladderpackagepageschema(model:)","title":"func getBuyLadderPackagePageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/caragentserviceprotocol\/getbuypackagepageschema(model:)","title":"func getBuyPackagePageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/caragentserviceprotocol\/getsubmitpageschema(model:)","title":"func getSubmitPageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/caragentserviceprotocol\/registerbusiness()","title":"func registerBusiness() async -> Result<CarAgentRegisterResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/caragentserviceprotocol","title":"CarAgentServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carbusinessactionhandler\/opencarconciergesaleregisterpromotion(_:)","title":"func openCarConciergeSaleRegisterPromotion(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessactionhandler\/opencardealersdisablepostspage(_:)","title":"func openCarDealersDisablePostsPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessactionhandler\/opendealerbulkladder(_:)","title":"func openDealerBulkLadder(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessactionhandler\/opendealershipcardealerslist(_:)","title":"func openDealershipCarDealersList(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessactionhandler\/openplandetails(_:)","title":"func openPlanDetails(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessactionhandler\/openpricereport(_:)","title":"func openPriceReport(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessactionhandler\/openpurchasesubscription(_:)","title":"func openPurchaseSubscription(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carbusinessactionhandler\/opensubscriptionmanagement(_:)","title":"func openSubscriptionManagement(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/carbusinessactionhandler","title":"CarBusinessActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carformactionhandler\/carinspectionedit(_:)","title":"func carInspectionEdit(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carformactionhandler\/carinspectionkarnamehregisterform(_:)","title":"func carInspectionKarnamehRegisterForm(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carformactionhandler\/carinspectionregisterform(_:)","title":"func carInspectionRegisterForm(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carformactionhandler\/dealershipcreateoperator(_:)","title":"func dealershipCreateOperator(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carformactionhandler\/dealershipupdateoperator(_:)","title":"func dealershipUpdateOperator(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carformactionhandler\/opendealershippurchaseladdersubscription(_:)","title":"func openDealershipPurchaseLadderSubscription(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carformactionhandler\/openpostinbusiness(_:)","title":"func openPostInBusiness(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carformactionhandler\/opencarconciergesaleregisterfromsubmit(_:)","title":"func opencarConciergeSaleRegisterFromSubmit(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/carformactionhandler","title":"CarFormActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionactionhandler\/carinspectioncancellation(_:)","title":"func carInspectionCancellation(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionactionhandler\/carinspectionkarnamehmanagepage(_:)","title":"func carInspectionKarnamehManagePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionactionhandler\/carinspectionmanagepage(_:)","title":"func carInspectionManagePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionactionhandler\/carinspectionpreviewreport(_:)","title":"func carInspectionPreviewReport(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionactionhandler\/carinspectionpublicreportview(_:)","title":"func carInspectionPublicReportView(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionactionhandler\/carinspectionpublishreport(_:)","title":"func carInspectionPublishReport(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionactionhandler\/carinspectionsettlement(_:)","title":"func carInspectionSettlement(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carinspectionactionhandler\/mechaniccarblogpost(_:)","title":"func mechanicCarBlogPost(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/carinspectionactionhandler","title":"CarInspectionActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionservicefactoryprotocol\/carinspectionservice","title":"var carInspectionService: CarInspectionServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/carinspectionservicefactoryprotocol","title":"CarInspectionServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionserviceprotocol\/cancelcarinspection(managetoken:carinspectiontoken:cancelreasoncode:)","title":"func cancelCarInspection(manageToken: String, carInspectionToken: String, cancelReasonCode: String) async -> Result<Google_Protobuf_Empty, DError>","type":"method"},{"path":"\/documentation\/divar\/carinspectionserviceprotocol\/carinspectionpublishreport(managetoken:carinspectiontoken:)","title":"func carInspectionPublishReport(manageToken: String?, carInspectionToken: String?) async -> Result<CarInspection_PublishReportResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/carinspectionserviceprotocol\/carinspectionregisterandedit(page:token:currentdata:)","title":"func carInspectionRegisterAndEdit(page: Int, token: InspectionServiceTokens, currentData: [String : Any]) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/carinspectionserviceprotocol\/carinspectionregistersubmit(page:currentdata:conciergesaledata:)","title":"func carInspectionRegisterSubmit(page: Int, currentData: [String : Any], conciergeSaleData: [String : Any]) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/carinspectionserviceprotocol\/carinspectionsettlement(mngtoken:inspectiontoken:)","title":"func carInspectionSettlement(mngToken: String, inspectionToken: String) async -> Result<CarInspection_CarInspectionSettlementResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/carinspectionserviceprotocol","title":"CarInspectionServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carlandingactionhandler\/opencarconciergesalelandingpage(_:)","title":"func openCarConciergeSaleLandingPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carlandingactionhandler\/opendealershiplandingpage(_:)","title":"func openDealershipLandingPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carlandingactionhandler\/opendealershipmanagement(_:)","title":"func openDealershipManagement(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/carlandingactionhandler","title":"CarLandingActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carpriceactionhandler\/cardetailspricetoolspage(_:)","title":"func carDetailsPriceToolsPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carpriceactionhandler\/cardetailsusedpricepage(_:)","title":"func carDetailsUsedPricePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carpriceactionhandler\/cardetailszeropricepage(_:)","title":"func carDetailsZeroPricePage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/carpriceactionhandler","title":"CarPriceActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carspecactionhandler\/cardetailsbrandpage(_:)","title":"func carDetailsBrandPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carspecactionhandler\/cardetailscarspecshomepage(_:)","title":"func carDetailsCarSpecsHomePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carspecactionhandler\/cardetailscategorypage(_:)","title":"func carDetailsCategoryPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/carspecactionhandler\/cardetailspricechartpage(_:)","title":"func carDetailsPriceChartPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/carspecactionhandler","title":"CarSpecActionHandler","type":"protocol"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/caseiterabledefaultslast\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/divar\/caseiterabledefaultslast\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/caseiterabledefaultslast","title":"CaseIterableDefaultsLast","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categorycontrollerdelegate\/categorycontroller(_:didselectitem:)","title":"func categoryController(CategoryController, didSelectItem: UIOptionsDataStruct)","type":"method"}],"path":"\/documentation\/divar\/categorycontrollerdelegate","title":"CategoryControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryhierarchycontrollerdelegate\/categoryhierarchydidselectcategory(_:item:source:)","title":"func categoryHierarchyDidSelectCategory(CategoryHierarchyController, item: UIOptionsDataStruct, source: ActionLog_SingleSelectedHierarchyItemSelectionActionInfo.Source)","type":"method"},{"path":"\/documentation\/divar\/categoryhierarchycontrollerdelegate\/categoryhierarchyselectordidcancel(_:)","title":"func categoryHierarchySelectorDidCancel(CategoryHierarchyController)","type":"method"},{"path":"\/documentation\/divar\/categoryhierarchycontrollerdelegate\/categoryhierarchyvc(_:didselectitem:source:)","title":"func categoryHierarchyVC(CategoryHierarchyController, didSelectItem: UIOptionsDataStruct, source: ActionLog_SingleSelectedHierarchyItemSelectionActionInfo.Source)","type":"method"}],"path":"\/documentation\/divar\/categoryhierarchycontrollerdelegate","title":"CategoryHierarchyControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cellanimationprotocol\/bubblecontainerview","title":"var bubbleContainerView: UIView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/cellanimationprotocol\/highlightwithanimation(_:)-2pgol","title":"func highlightWithAnimation(TimeInterval)","type":"method"}],"title":"CellAnimationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/cellanimationprotocol\/highlightwithanimation(_:)-89p1k","title":"func highlightWithAnimation(TimeInterval)","type":"method"}],"path":"\/documentation\/divar\/cellanimationprotocol","title":"CellAnimationProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cellconfigurator\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/cellconfigurator\/protowidgettyoe","title":"var protoWidgetTyoe: Widgets_Widget.TypeEnum?","type":"property"},{"path":"\/documentation\/divar\/cellconfigurator\/widgettype","title":"var widgetType: AbstractTableType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cellconfigurator\/configure(cell:indexpath:delegate:)","title":"func configure(cell: UITableViewCell, indexPath: IndexPath, delegate: ConfigurableCellDelegate?)","type":"method"},{"path":"\/documentation\/divar\/cellconfigurator\/model(_:)","title":"func model<E>(E.Type) -> E?","type":"method"},{"path":"\/documentation\/divar\/cellconfigurator\/returndata(_:)","title":"func returnData<T>(T.Type) -> T?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cellconfigurator\/reuseid","title":"static var reuseId: String","type":"property"}],"path":"\/documentation\/divar\/cellconfigurator","title":"CellConfigurator","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatattachmentactionoptionprotocol\/choosefile()","title":"func chooseFile()","type":"method"},{"path":"\/documentation\/divar\/chatattachmentactionoptionprotocol\/chooseimage()","title":"func chooseImage()","type":"method"},{"path":"\/documentation\/divar\/chatattachmentactionoptionprotocol\/chooselocation()","title":"func chooseLocation()","type":"method"},{"path":"\/documentation\/divar\/chatattachmentactionoptionprotocol\/getconfirmationonsendingphonenumber()","title":"func getConfirmationOnSendingPhoneNumber()","type":"method"},{"path":"\/documentation\/divar\/chatattachmentactionoptionprotocol\/takephoto()","title":"func takePhoto()","type":"method"},{"path":"\/documentation\/divar\/chatattachmentactionoptionprotocol\/takevideo()","title":"func takeVideo()","type":"method"}],"path":"\/documentation\/divar\/chatattachmentactionoptionprotocol","title":"ChatAttachmentActionOptionProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcacherequesthelper\/cachedrequest(forkey:)","title":"func cachedRequest(forKey: String) -> Request?","type":"method"}],"path":"\/documentation\/divar\/chatcacherequesthelper","title":"ChatCacheRequestHelper","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinstructloginviewcontrollerdelegate\/didrequestlogin(_:)","title":"func didRequestLogin(ChatInstructLoginViewController)","type":"method"}],"path":"\/documentation\/divar\/chatinstructloginviewcontrollerdelegate","title":"ChatInstructLoginViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatoptionactionprotocol\/blockuser(reason:)","title":"func blockUser(reason: String)","type":"method"},{"path":"\/documentation\/divar\/chatoptionactionprotocol\/getconfirmationondelete(conversationid:)","title":"func getConfirmationOnDelete(conversationId: String)","type":"method"},{"path":"\/documentation\/divar\/chatoptionactionprotocol\/showblockreasons()","title":"func showBlockReasons()","type":"method"},{"path":"\/documentation\/divar\/chatoptionactionprotocol\/showsupport()","title":"func showSupport()","type":"method"},{"path":"\/documentation\/divar\/chatoptionactionprotocol\/unblockuser()","title":"func unblockUser()","type":"method"}],"path":"\/documentation\/divar\/chatoptionactionprotocol","title":"ChatOptionActionProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/divar\/chatrequesprotocol\/resultmodel","title":"ResultModel","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatrequesprotocol\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatrequesprotocol\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/chatrequesprotocol\/payload","title":"var payload: ChatPayload","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatrequesprotocol\/execute(completionblock:errorhandlingblock:)","title":"func execute(completionBlock: (RequestCompletionHandlerType<ResultModel>), errorHandlingBlock: ((String) -> Void)?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatrequesprotocol\/topic","title":"static var topic: ChatTopic","type":"property"},{"path":"\/documentation\/divar\/chatrequesprotocol\/topicname","title":"static var topicName: String","type":"property"},{"path":"\/documentation\/divar\/chatrequesprotocol\/topictype","title":"static var topicType: ChatTopicType","type":"property"}],"path":"\/documentation\/divar\/chatrequesprotocol","title":"ChatRequesProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/divar\/chatrequesthandlerprotocol\/completionresulttype","title":"CompletionResultType","type":"associatedtype"},{"path":"\/documentation\/divar\/chatrequesthandlerprotocol\/resulttype","title":"ResultType","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatrequesthandlerprotocol\/execute(completionblock:)","title":"func execute(completionBlock: (RequestCompletionHandlerType<CompletionResultType>)) -> ResultType?","type":"method"}],"path":"\/documentation\/divar\/chatrequesthandlerprotocol","title":"ChatRequestHandlerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatservicefactoryprotocol\/chatservice","title":"var chatService: ChatServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/chatservicefactoryprotocol","title":"ChatServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatserviceprotocol\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatserviceprotocol\/cancelcachedreuest(key:)","title":"func cancelCachedReuest(key: String)","type":"method"},{"path":"\/documentation\/divar\/chatserviceprotocol\/chatupdateprofile(token:name:smsnotification:)","title":"func chatUpdateProfile(token: String, name: String, smsNotification: Bool) async -> Result<ChatProfileResultStructure, DError>","type":"method"},{"path":"\/documentation\/divar\/chatserviceprotocol\/downloadchatfile(downloadurl:filename:shouldcache:progress:)","title":"func downloadChatFile(downloadURL: String?, fileName: String?, shouldCache: Bool, progress: ((Progress) -> Void)?) async throws","type":"method"},{"path":"\/documentation\/divar\/chatserviceprotocol\/getcachedrequest(key:)","title":"func getCachedRequest(key: String) -> Request?","type":"method"},{"path":"\/documentation\/divar\/chatserviceprotocol\/getchatinitapi(token:)","title":"func getChatInitAPI(token: String) async -> Result<ChatAPIInitStruct, Error>","type":"method"},{"path":"\/documentation\/divar\/chatserviceprotocol\/getchatmeta()","title":"func getChatMeta() async -> Result<ChatStaticMeta, DError>","type":"method"},{"path":"\/documentation\/divar\/chatserviceprotocol\/getinconversationwidget(conversationid:peerid:completion:)","title":"func getInConversationWidget(conversationID: String, peerID: String, completion: (_ result: Result<Widgets_BottomSheet, DError>) -> Void)","type":"method"},{"path":"\/documentation\/divar\/chatserviceprotocol\/getpostchimessages(lastmessageid:pagesize:)","title":"func getPostchiMessages(lastMessageId: String?, pageSize: Int?) async -> Result<PostchiModel, Error>","type":"method"},{"path":"\/documentation\/divar\/chatserviceprotocol\/sendpostchiseenrequest(seenmessageid:)","title":"func sendPostchiSeenRequest(seenMessageId: String) async throws","type":"method"},{"path":"\/documentation\/divar\/chatserviceprotocol\/uploadchatfile(_:shouldcache:)","title":"func uploadChatFile(FileUploaderParameterStruct, shouldCache: Bool) async -> Result<ChatFileUploadResult, Error>?","type":"method"}],"path":"\/documentation\/divar\/chatserviceprotocol","title":"ChatServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocketprotocol\/isconnected","title":"var isConnected: Bool","type":"property"},{"path":"\/documentation\/divar\/chatsocketprotocol\/socket","title":"var socket: Socket?","type":"property"},{"path":"\/documentation\/divar\/chatsocketprotocol\/userchannel","title":"var userChannel: Channel?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocketprotocol\/receive(_:callback:)","title":"func receive(String, callback: (ChatSocketMessage) -> Void) -> ChatSocketProtocol","type":"method"},{"path":"\/documentation\/divar\/chatsocketprotocol\/send(_:payload:)","title":"func send(String, payload: ChatPayload) -> ChatSocketProtocol?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocketprotocol\/current","title":"static var current: ChatSocketProtocol","type":"property"}],"path":"\/documentation\/divar\/chatsocketprotocol","title":"ChatSocketProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatviewcontrollerdelegate\/chatviewcontroller(_:didrequestshowforwardlistforconversations:withmessage:)","title":"func chatViewController(ChatViewController, didRequestShowForwardListForConversations: [ChatConversationStructure], withMessage: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontrollerdelegate\/chatviewcontroller(_:didrequestshowinconversationactionswidget:)","title":"func chatViewController(ChatViewController, didRequestShowInConversationActionsWidget: Widgets_BottomSheet)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontrollerdelegate\/chatviewcontrollerdidrequestasknickname(_:parent:)","title":"func chatViewControllerDidRequestAskNickname(ChatViewController, parent: UIViewController)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontrollerdelegate\/chatviewcontrollerdidrequestopenningpost(post:vc:)","title":"func chatViewControllerDidRequestOpenningPost(post: PostViewStructure, vc: UIViewController)","type":"method"},{"path":"\/documentation\/divar\/chatviewcontrollerdelegate\/chatviewcontrollerdidrequestopenningsupport(_:)","title":"func chatViewControllerDidRequestOpenningSupport(ChatViewController)","type":"method"}],"path":"\/documentation\/divar\/chatviewcontrollerdelegate","title":"ChatViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwidgetactionhandler\/blockchatpeer(_:)","title":"func blockChatPeer(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/chatwidgetactionhandler\/reportchatpeer(_:)","title":"func reportChatPeer(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/chatwidgetactionhandler","title":"ChatWidgetActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewitemsdata\/chipviewitemsdata","title":"var chipViewItemsData: [ChipViewItemsMapper]","type":"property"}],"path":"\/documentation\/divar\/chipviewitemsdata","title":"ChipViewItemsData","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterchangescityinformation\/cityid","title":"var cityID: String","type":"property"},{"path":"\/documentation\/divar\/cityfilterchangescityinformation\/isprovince","title":"var isProvince: Bool","type":"property"},{"path":"\/documentation\/divar\/cityfilterchangescityinformation\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/divar\/cityfilterchangescityinformation\/parentid","title":"var parentID: String","type":"property"}],"path":"\/documentation\/divar\/cityfilterchangescityinformation","title":"CityFilterChangesCityInformation","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterchangesinformation\/cities","title":"var cities: [CityFilterChangesCityInformation]","type":"property"},{"path":"\/documentation\/divar\/cityfilterchangesinformation\/showtooltip","title":"var showTooltip: Bool","type":"property"},{"path":"\/documentation\/divar\/cityfilterchangesinformation\/showwarning","title":"var showWarning: Bool","type":"property"}],"path":"\/documentation\/divar\/cityfilterchangesinformation","title":"CityFilterChangesInformation","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterservicefactoryprotocol\/cityfilter","title":"var cityFilter: CityFilterServiceProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterservicefactoryprotocol\/getcityfilter(multicityenabled:)","title":"func getCityFilter(multiCityEnabled: Bool) -> CityFilterServiceProtocol","type":"method"}],"path":"\/documentation\/divar\/cityfilterservicefactoryprotocol","title":"CityFilterServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterserviceprotocol\/cityids","title":"var cityIDs: [CityID]","type":"property"},{"path":"\/documentation\/divar\/cityfilterserviceprotocol\/cityname","title":"var cityName: String","type":"property"},{"path":"\/documentation\/divar\/cityfilterserviceprotocol\/isfilteredcityequaltousercity","title":"var isFilteredCityEqualToUserCity: Bool","type":"property"},{"path":"\/documentation\/divar\/cityfilterserviceprotocol\/ismultiselectenabled","title":"var isMultiSelectEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/cityfilterserviceprotocol\/requestpermissionforchangingcitiesbyclientpublisher","title":"var requestPermissionForChangingCitiesByClientPublisher: AnyPublisher<String, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterserviceprotocol\/permissionresultforpendingcitieschanges(granted:)","title":"func permissionResultForPendingCitiesChanges(granted: Bool)","type":"method"},{"path":"\/documentation\/divar\/cityfilterserviceprotocol\/save(change:)","title":"func save(change: CityFilterChangesInformation)","type":"method"},{"path":"\/documentation\/divar\/cityfilterserviceprotocol\/save(cities:)","title":"func save(cities: [TitleValue<String, String>])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/cityfilterserviceprotocol\/cityid","title":"CityFilterServiceProtocol.CityID","type":"typealias"}],"path":"\/documentation\/divar\/cityfilterserviceprotocol","title":"CityFilterServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/citymultiselectviewcontrollerdelegate\/citymultiselect(_:didselectcities:)","title":"func cityMultiSelect(CityMultiSelectViewController, didSelectCities: [TitleValue<String, String>])","type":"method"}],"path":"\/documentation\/divar\/citymultiselectviewcontrollerdelegate","title":"CityMultiSelectViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectviewcontrollerdelegate\/didrequestdismissingoptionformfieldcontroller(_:)","title":"func didRequestDismissingOptionFormFieldController(UIViewController)","type":"method"},{"path":"\/documentation\/divar\/cityselectviewcontrollerdelegate\/didselectoption(_:selectiontype:)","title":"func didSelectOption(Place, selectionType: CitySelectionType)","type":"method"}],"path":"\/documentation\/divar\/cityselectviewcontrollerdelegate","title":"CitySelectViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/claimpostprotocol\/claimtoken","title":"var claimToken: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/claimpostprotocol\/openloginpage(phone:dataprovider:)-4ge2i","title":"func openLoginPage(phone: String?, dataProvider: DataProviderProtocol)","type":"method"}],"title":"ClaimPostProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/claimpostprotocol\/openloginpage(phone:dataprovider:)-2gqav","title":"func openLoginPage(phone: String?, dataProvider: DataProviderProtocol)","type":"method"}],"path":"\/documentation\/divar\/claimpostprotocol","title":"ClaimPostProtocol","type":"protocol"},{"path":"\/documentation\/divar\/componentprotocol","title":"ComponentProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/divar\/configurablecell\/datatype","title":"DataType","type":"associatedtype"},{"path":"\/documentation\/divar\/configurablecell\/returntype","title":"ReturnType","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/configurablecell\/cellheight","title":"var cellHeight: CGFloat","type":"property"},{"path":"\/documentation\/divar\/configurablecell\/delegate","title":"var delegate: ConfigurableCellDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/configurablecell\/fill(with:indexpath:)","title":"func fill(with: DataType, indexPath: IndexPath)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/configurablecell\/returndata()-1b4x4","title":"func returnData() -> ReturnType","type":"method"}],"title":"ConfigurableCell Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/configurablecell\/returndata()-1vox2","title":"func returnData() -> ReturnType","type":"method"}],"path":"\/documentation\/divar\/configurablecell","title":"ConfigurableCell","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/configurablecelldelegate\/configurablecell(_:with:datachange:payload:)","title":"func configurableCell(UITableViewCell, with: IndexPath?, dataChange: ConfigurableCellEnum, payload: Any)","type":"method"},{"path":"\/documentation\/divar\/configurablecelldelegate\/configurablecell(_:with:select:)","title":"func configurableCell(UITableViewCell, with: IndexPath?, select: ConfigurableCellEnum)","type":"method"}],"path":"\/documentation\/divar\/configurablecelldelegate","title":"ConfigurableCellDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/connectable\/commit()","title":"func commit()","type":"method"}],"path":"\/documentation\/divar\/connectable","title":"Connectable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactpageconfig\/hasbookmark","title":"var hasBookmark: Bool","type":"property"},{"path":"\/documentation\/divar\/contactpageconfig\/hasheader","title":"var hasHeader: Bool","type":"property"},{"path":"\/documentation\/divar\/contactpageconfig\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/contactpageconfig\/usertype","title":"var userType: UserType","type":"property"}],"path":"\/documentation\/divar\/contactpageconfig","title":"ContactPageConfig","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationmessageobserverdelegate\/messagesdeleted()","title":"func messagesDeleted()","type":"method"},{"path":"\/documentation\/divar\/conversationmessageobserverdelegate\/messagesinserted()","title":"func messagesInserted()","type":"method"},{"path":"\/documentation\/divar\/conversationmessageobserverdelegate\/messagesupdated()","title":"func messagesUpdated()","type":"method"}],"path":"\/documentation\/divar\/conversationmessageobserverdelegate","title":"ConversationMessageObserverDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationobserverdelegate\/conversationlistupdated()","title":"func conversationListUpdated()","type":"method"}],"path":"\/documentation\/divar\/conversationobserverdelegate","title":"ConversationObserverDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/conversationsviewcontrollerdelegate\/conversationviewcontrollerdidrequestopeninmultidelete(_:vc:)","title":"func conversationViewControllerDidRequestOpeninMultiDelete([ChatConversationTable], vc: ConversationsViewController)","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontrollerdelegate\/conversationviewcontrollerdidrequestopeningchat(_:vc:)","title":"func conversationViewControllerDidRequestOpeningChat(ChatConversationTable, vc: UIViewController)","type":"method"},{"path":"\/documentation\/divar\/conversationsviewcontrollerdelegate\/conversationviewcontrollerdidrequestopeningpostchi(_:vc:)","title":"func conversationViewControllerDidRequestOpeningPostchi(ChatConversationTable, vc: UIViewController)","type":"method"}],"path":"\/documentation\/divar\/conversationsviewcontrollerdelegate","title":"ConversationsViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customblockingprotocol\/customblockingview","title":"var customBlockingView: CustomBlockingViewProtocol?","type":"property"}],"path":"\/documentation\/divar\/customblockingprotocol","title":"CustomBlockingProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customblockingviewprotocol\/onreload","title":"var onReload: (() -> Void)?","type":"property"}],"path":"\/documentation\/divar\/customblockingviewprotocol","title":"CustomBlockingViewProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dataproviderfactoryprotocol\/dataprovider","title":"var dataProvider: DataProviderProtocol!","type":"property"}],"path":"\/documentation\/divar\/dataproviderfactoryprotocol","title":"DataProviderFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dataproviderprotocol\/configuredatabase()","title":"func configureDatabase() throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/create(_:)","title":"func create(Codable.Type) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/delete(_:filter:completion:)","title":"func delete<Entity>(Entity.Type, filter: QueryFilter, completion: CompletionHandlerType) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/delete(_:forkey:completion:)","title":"func delete<Entity>(Entity.Type, forKey: String, completion: CompletionHandlerType) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/delete(object:completion:)","title":"func delete(object: SQLTableProtocol, completion: CompletionHandlerType) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/delete(objects:completion:)","title":"func delete(objects: [Codable], completion: CompletionHandlerType) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/deleteall(_:)","title":"func deleteAll(Codable.Type) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/deleteall(except:)","title":"func deleteAll(except: Codable.Type...) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/getobject(_:)","title":"func getObject<Entity>(Entity.Type) throws -> Entity?","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/getobject(_:filter:)","title":"func getObject<Entity>(Entity.Type, filter: QueryFilter) throws -> Entity?","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/getobject(_:forkey:)","title":"func getObject<Entity>(Entity.Type, forKey: String) throws -> Entity?","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/getobjects(_:filter:)","title":"func getObjects<Entity>(Entity.Type, filter: QueryFilter?) throws -> [Entity]","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/getobjects(_:filter:sorted:sortkey:)","title":"func getObjects<Entity>(Entity.Type, filter: QueryFilter?, sorted: QuerySortType, sortKey: String) throws -> [Entity]","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/insert(_:update:)","title":"func insert([Codable], update: Bool) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/insert(object:update:)","title":"func insert(object: SQLTableProtocol, update: Bool) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/objectstillexists(_:filter:)","title":"func objectStillExists<Entity>(Entity.Type, filter: QueryFilter) -> Bool","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/objectstillexists(_:forkey:)","title":"func objectStillExists<Entity>(Entity.Type, forKey: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/observe(_:startimmediately:filter:onerror:onchange:)","title":"func observe<Entity>(Entity.Type, startImmediately: Bool, filter: QueryFilter?, onError: ((Error) -> Void), onChange: ([Entity]) -> Void) -> DatabaseCancellable","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/observe(_:startimmediately:filter:sorted:sortkey:onerror:onchange:)","title":"func observe<Entity>(Entity.Type, startImmediately: Bool, filter: QueryFilter?, sorted: QuerySortType, sortKey: String, onError: ((Error) -> Void), onChange: ([Entity]) -> Void) -> DatabaseCancellable","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/runtransaction(action:)","title":"func runTransaction(action: () throws -> Void) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/runtransactionafterinsert(_:update:completion:)","title":"func runTransactionAfterInsert([Codable], update: Bool, completion: CompletionHandlerType) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/runtransactionbeforeinsert(_:update:completion:)","title":"func runTransactionBeforeInsert([Codable], update: Bool, completion: CompletionHandlerType) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/update(object:)","title":"func update(object: Codable) throws","type":"method"},{"path":"\/documentation\/divar\/dataproviderprotocol\/writetransaction(_:)","title":"func writeTransaction((Database) throws -> Void) throws","type":"method"}],"path":"\/documentation\/divar\/dataproviderprotocol","title":"DataProviderProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/databaseconnectionprotocol\/init(filename:inmemory:)","title":"init(filename: String?, inMemory: Bool) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/databaseconnectionprotocol\/dbpool","title":"var dbPool: DatabasePool?","type":"property"},{"path":"\/documentation\/divar\/databaseconnectionprotocol\/dbqueue","title":"var dbQueue: DatabaseQueue?","type":"property"},{"path":"\/documentation\/divar\/databaseconnectionprotocol\/inmemory","title":"var inMemory: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/databaseconnectionprotocol\/migrate(using:)","title":"func migrate(using: DatabaseMigrator) throws","type":"method"},{"path":"\/documentation\/divar\/databaseconnectionprotocol\/observe(_:startimmediately:filter:onerror:onchange:)","title":"func observe<Entity>(Entity.Type, startImmediately: Bool, filter: QueryFilter?, onError: ((Error) -> Void), onChange: ([Entity]) -> Void) -> DatabaseCancellable","type":"method"},{"path":"\/documentation\/divar\/databaseconnectionprotocol\/observe(_:startimmediately:filter:sorted:sortkey:onerror:onchange:)","title":"func observe<Entity>(Entity.Type, startImmediately: Bool, filter: QueryFilter?, sorted: QuerySortType, sortKey: String, onError: ((Error) -> Void), onChange: ([Entity]) -> Void) -> DatabaseCancellable","type":"method"},{"path":"\/documentation\/divar\/databaseconnectionprotocol\/readtransaction(_:)","title":"func readTransaction<T>((Database) throws -> T) throws -> T","type":"method"},{"path":"\/documentation\/divar\/databaseconnectionprotocol\/writetransaction(_:)","title":"func writeTransaction((Database) throws -> Void) throws","type":"method"}],"path":"\/documentation\/divar\/databaseconnectionprotocol","title":"DatabaseConnectionProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealeractionhandler\/opendealershipregisterpage(_:)","title":"func openDealershipRegisterPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/dealeractionhandler","title":"DealerActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerbrandserviceprotocol\/getbrandinfo(brandslug:)","title":"func getBrandInfo(brandSlug: String) async -> Result<BrandInfoStructure, DError>","type":"method"},{"path":"\/documentation\/divar\/dealerbrandserviceprotocol\/getbrandreportreasons()","title":"func getBrandReportReasons() async -> Result<[BrandReportValueStructure], DError>","type":"method"},{"path":"\/documentation\/divar\/dealerbrandserviceprotocol\/submitbrandfeedback(answer:question:brandslug:)","title":"func submitBrandFeedback(answer: String, question: String, brandSlug: String) async -> Result<Void, Error>","type":"method"},{"path":"\/documentation\/divar\/dealerbrandserviceprotocol\/submitbrandreport(reasons:brandslug:)","title":"func submitBrandReport(reasons: [Int], brandSlug: String) async -> Result<Void, DError>","type":"method"},{"path":"\/documentation\/divar\/dealerbrandserviceprotocol\/submitratefeedback(url:rate:text:)","title":"func submitRateFeedback(url: String, rate: Widgets_RateScore.Score, text: String?) async -> ExtractableResultValue","type":"method"}],"path":"\/documentation\/divar\/dealerbrandserviceprotocol","title":"DealerBrandServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerservicefactoryprotocol\/dealerservice","title":"var dealerService: DealerServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/dealerservicefactoryprotocol","title":"DealerServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerserviceprotocol\/businesssubscriptionplans()","title":"func businessSubscriptionPlans() async -> Result<CarBusiness_GetPlansResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/dealerserviceprotocol\/buydealerbulkladderplans(model:)","title":"func buyDealerBulkLadderPlans(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/dealerserviceprotocol\/dealersubscript(planid:)","title":"func dealerSubscript(planId: Int32) async -> Result<CarBusiness_CarDealerSubscribeResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/dealerserviceprotocol\/dealershipconfirminvitation(confirm:)","title":"func dealershipConfirmInvitation(confirm: Bool) async -> Result<CarBusiness_MessageResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/dealerserviceprotocol\/deleteoperator(operatorid:)","title":"func deleteOperator(operatorId: String) async -> Result<CarBusiness_MessageResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/dealerserviceprotocol\/getdealersubmitpageschema(model:)","title":"func getDealerSubmitPageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/dealerserviceprotocol\/getoperatormanagementschema(model:)","title":"func getOperatorManagementSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/dealerserviceprotocol\/pricetoolsfeedbackform(model:submissionpayload:)","title":"func priceToolsFeedbackForm(model: SchemaRequestModel, submissionPayload: BooleanRateRowFeedBackPayload) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/dealerserviceprotocol\/usedpriceform(model:)","title":"func usedPriceForm(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/dealerserviceprotocol\/zeropricepage(pinned:query:infinitescrol:)","title":"func zeroPricePage(pinned: [String], query: String?, infiniteScrol: Widgets_InfiniteScrollResponse?) async -> Result<CarDetails_GetZeroPricePageResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/dealerserviceprotocol","title":"DealerServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontrollerdelegate\/dealerpaymentdidcancel(_:)","title":"func dealerPaymentDidCancel(DealerSubscriptionDetailsViewController)","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontrollerdelegate\/dealerpaymentdidfailed(_:)","title":"func dealerPaymentDidFailed(DealerSubscriptionDetailsViewController)","type":"method"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontrollerdelegate\/dealerpaymentdidperformpayment(_:)","title":"func dealerPaymentDidPerformPayment(DealerSubscriptionDetailsViewController)","type":"method"}],"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontrollerdelegate","title":"DealerSubscriptionDetailsViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealershipgetcontactactionhandler\/dealershipgetcontact(_:)","title":"func dealershipGetContact(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/dealershipgetcontactactionhandler\/dealershipmanagementgetcontact(_:)","title":"func dealershipManagementGetContact(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/dealershipgetcontactactionhandler","title":"DealershipGetContactActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/deleteconversationprotocol\/requestdeleteconversation(conversationids:dataprovider:)","title":"func requestDeleteConversation(conversationIDs: [String], dataProvider: DataProviderProtocol)","type":"method"}],"path":"\/documentation\/divar\/deleteconversationprotocol","title":"DeleteConversationProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgetcellmodel\/titletext","title":"var titleText: String?","type":"property"},{"path":"\/documentation\/divar\/descriptiontextwidgetcellmodel\/titletextcolor","title":"var titleTextColor: SonnatColors","type":"property"}],"path":"\/documentation\/divar\/descriptiontextwidgetcellmodel","title":"DescriptionTextWidgetCellModel","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionviewprotocol\/didtapexpand(_:)","title":"func didTapExpand(DescriptionView)","type":"method"}],"path":"\/documentation\/divar\/descriptionviewprotocol","title":"DescriptionViewProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanmonitoringfactoryprotocol\/didebaanmonitoring","title":"var didebaanMonitoring: DidebaanMonitoring","type":"property"}],"path":"\/documentation\/divar\/didebaanmonitoringfactoryprotocol","title":"DidebaanMonitoringFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanservicefactoryprotocol\/didebaanservice","title":"var didebaanService: DidebaanServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/didebaanservicefactoryprotocol","title":"DidebaanServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanserviceprotocol\/sendreports(reports:device:app:)","title":"func sendReports(reports: [ClientReportPOSO], device: ClientExporter_Device, app: ClientExporter_App) async -> Result<[String], DError>","type":"method"}],"path":"\/documentation\/divar\/didebaanserviceprotocol","title":"DidebaanServiceProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/divar\/diffaware\/diffid-swift.associatedtype","title":"DiffId","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/diffaware\/diffid-swift.property","title":"var diffId: DiffId","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/diffaware\/comparecontent(_:_:)","title":"static func compareContent(Self, Self) -> Bool","type":"method"}],"path":"\/documentation\/divar\/diffaware","title":"DiffAware","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/disablelistviewcontrollerdelegate\/disablelist(_:statechanged:)","title":"func disableList<SelectableItem>(DisableListViewController, stateChanged: Set<SelectableItem>)","type":"method"}],"path":"\/documentation\/divar\/disablelistviewcontrollerdelegate","title":"DisableListViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepageservicefactoryprotocol\/disablepageservice","title":"var disablePageService: DisablePageServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/disablepageservicefactoryprotocol","title":"DisablePageServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepageserviceprotocol\/disable(mngtokens:completion:)","title":"func disable(mngTokens: [String], completion: ExtractableResult)","type":"method"},{"path":"\/documentation\/divar\/disablepageserviceprotocol\/enable(mngtokens:completion:)","title":"func enable(mngTokens: [String], completion: ExtractableResult)","type":"method"},{"path":"\/documentation\/divar\/disablepageserviceprotocol\/getdisablepoststabs(completion:)","title":"func getDisablePostsTabs(completion: ExtractableResult)","type":"method"},{"path":"\/documentation\/divar\/disablepageserviceprotocol\/getdisabledlist(request:completion:)","title":"func getDisabledList(request: DisableListPageRequest, completion: ExtractableResult)","type":"method"},{"path":"\/documentation\/divar\/disablepageserviceprotocol\/getenabledlist(request:completion:)","title":"func getEnabledList(request: DisableListPageRequest, completion: ExtractableResult)","type":"method"}],"path":"\/documentation\/divar\/disablepageserviceprotocol","title":"DisablePageServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/districtedmapviewcontrollerdelegate\/districtedmap(_:didchangeselecteddata:)","title":"func districtedMap(DistrictedMapViewController, didChangeSelectedData: [SingleMultiModel])","type":"method"}],"path":"\/documentation\/divar\/districtedmapviewcontrollerdelegate","title":"DistrictedMapViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dividerprotocol\/dividerview","title":"var dividerView: DividerView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/dividerprotocol\/hidedivider()-3795z","title":"func hideDivider()","type":"method"}],"title":"DividerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/dividerprotocol\/hidedivider()-3coce","title":"func hideDivider()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/dividerprotocol\/showdivider()-9opjg","title":"func showDivider()","type":"method"}],"title":"DividerProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/dividerprotocol\/showdivider()-1n385","title":"func showDivider()","type":"method"}],"path":"\/documentation\/divar\/dividerprotocol","title":"DividerProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/documenthelperprotocol\/deletedraft(completion:)","title":"func deleteDraft(completion: (Bool) -> Void)","type":"method"},{"path":"\/documentation\/divar\/documenthelperprotocol\/isdraftexist()","title":"func isDraftExist() -> Bool","type":"method"},{"path":"\/documentation\/divar\/documenthelperprotocol\/readdraftfromfile()","title":"func readDraftFromFile() -> [String : Any]","type":"method"},{"path":"\/documentation\/divar\/documenthelperprotocol\/saveformtofile(dictionary:completion:)","title":"func saveFormToFile(dictionary: [String : Any], completion: (Bool) -> Void)","type":"method"}],"path":"\/documentation\/divar\/documenthelperprotocol","title":"DocumentHelperProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/downloadable\/downloadprogress(on:_:)","title":"func downloadProgress(on: DispatchQueue, (Progress) -> Void) -> Self","type":"method"}],"path":"\/documentation\/divar\/downloadable","title":"Downloadable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/environmentprotocol\/getlocation(action:)","title":"func getLocation(action: ((CLLocationCoordinate2D) -> Void)?)","type":"method"}],"path":"\/documentation\/divar\/environmentprotocol","title":"EnvironmentProtocol","type":"protocol"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/equatableenumassociatedvaluesensitive\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/divar\/equatableenumassociatedvaluesensitive\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/equatableenumassociatedvaluesensitive","title":"EquatableEnumAssociatedValueSensitive","type":"protocol"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/equatableenumcasesensitive\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/divar\/equatableenumcasesensitive\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/equatableenumcasesensitive","title":"EquatableEnumCaseSensitive","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/errormessagehandler\/handlechaterrormessages(_:defaultmessages:)-2gjmt","title":"func handleChatErrorMessages(String, defaultMessages: [String : String]?)","type":"method"}],"title":"ErrorMessageHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/errormessagehandler\/handlechaterrormessages(_:defaultmessages:)-9o1jr","title":"func handleChatErrorMessages(String, defaultMessages: [String : String]?)","type":"method"}],"path":"\/documentation\/divar\/errormessagehandler","title":"ErrorMessageHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/errorrowindex\/errorrowindex","title":"var errorRowIndex: ErrorRowIndexType","type":"property"}],"path":"\/documentation\/divar\/errorrowindex","title":"ErrorRowIndex","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackprotocol\/postfeedbackanswer(payload:)","title":"func postFeedBackAnswer(payload: [String : Any]) async throws","type":"method"}],"path":"\/documentation\/divar\/feedbackprotocol","title":"FeedBackProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackservicefactoryprotocol\/feedbackservice","title":"var feedbackService: FeedBackProtocol","type":"property"}],"path":"\/documentation\/divar\/feedbackservicefactoryprotocol","title":"FeedBackServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackvcdelegate\/didanswer(postfeedbackmodel:answer:)","title":"func didAnswer(postFeedBackModel: FeedBackDataStructure, answer: String)","type":"method"}],"path":"\/documentation\/divar\/feedbackvcdelegate","title":"FeedBackVCDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackviewprotocol\/didrequestopeningfeedbackview(viewmodel:)","title":"func didRequestOpeningFeedBackView(viewModel: FeedBackDataStructure)","type":"method"}],"path":"\/documentation\/divar\/feedbackviewprotocol","title":"FeedBackViewProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackalertviewcontrollerdelegate\/feedbackalert(alert:didfinishsubmitfeedbackwithstars:)","title":"func feedbackAlert(alert: FeedbackAlertViewController, didFinishSubmitFeedbackWithStars: Int)","type":"method"}],"path":"\/documentation\/divar\/feedbackalertviewcontrollerdelegate","title":"FeedbackAlertViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filemessagecelldelegate\/filemessagecell(_:didrequestcanceldownloadforfile:)","title":"func fileMessageCell(FileMessageCell, didRequestCancelDownloadForFile: ChatFileMessageStructure)","type":"method"},{"path":"\/documentation\/divar\/filemessagecelldelegate\/filemessagecell(_:didrequestcanceluploadformessage:)","title":"func fileMessageCell(FileMessageCell, didRequestCancelUploadForMessage: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/filemessagecelldelegate\/filemessagecell(_:didrequestdownloadfileforfile:)","title":"func fileMessageCell(FileMessageCell, didRequestDownloadFileForFile: ChatFileMessageStructure)","type":"method"},{"path":"\/documentation\/divar\/filemessagecelldelegate\/filemessagecell(_:didrequestopenfile:)","title":"func fileMessageCell(FileMessageCell, didRequestOpenFile: ChatFileMessageStructure)","type":"method"}],"path":"\/documentation\/divar\/filemessagecelldelegate","title":"FileMessageCellDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/fileuploaderfactoryprotocol\/fileuploader","title":"var fileUploader: FileUploaderProtocol","type":"property"}],"path":"\/documentation\/divar\/fileuploaderfactoryprotocol","title":"FileUploaderFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fileuploaderprotocol\/uploadfile(_:)","title":"func uploadFile(FileUploaderParameterStruct)","type":"method"}],"path":"\/documentation\/divar\/fileuploaderprotocol","title":"FileUploaderProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filter\/filters","title":"var filters: Google_Protobuf_Struct","type":"property"}],"path":"\/documentation\/divar\/filter","title":"Filter","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtercategoryselectorcontrollerdelegate\/categorylistviewcontrollerdidselectcategory(_:index:categories:currentslug:othercatselected:)","title":"func categoryListViewControllerDidSelectCategory(FilterCategorySelectorController, index: Int, categories: [PostCategory], currentSlug: String?, otherCatSelected: Bool)","type":"method"}],"path":"\/documentation\/divar\/filtercategoryselectorcontrollerdelegate","title":"FilterCategorySelectorControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtersearchactionhandler\/filtersearchresult(_:)","title":"func filterSearchResult(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/filtersearchactionhandler","title":"FilterSearchActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filterablewidgetbased\/apply(filters:with:)","title":"func apply(filters: Google_Protobuf_Struct, with: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/filterablewidgetbased","title":"FilterableWidgetBased","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/finishflowdelegate\/didfinishflow(_:)","title":"func didFinishFlow(UIViewController)","type":"method"}],"path":"\/documentation\/divar\/finishflowdelegate","title":"FinishFlowDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/firsttimeviewcontrollerdelegate\/firsttimevc(_:didselectcity:)","title":"func firstTimeVC(FirstTimeViewController, didSelectCity: Place)","type":"method"}],"path":"\/documentation\/divar\/firsttimeviewcontrollerdelegate","title":"FirstTimeViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/forcerotateview\/defaultorientation","title":"var defaultOrientation: UIDeviceOrientation","type":"property"},{"path":"\/documentation\/divar\/forcerotateview\/orientationmask","title":"var orientationMask: UIInterfaceOrientationMask","type":"property"}],"path":"\/documentation\/divar\/forcerotateview","title":"ForceRotateView","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formactionhandlerprotocol\/openeditpost(_:)","title":"func openEditPost(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/formactionhandlerprotocol\/openpersonalsubmit(_:)","title":"func openPersonalSubmit(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/formactionhandlerprotocol\/openschemapage(_:)","title":"func openSchemaPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/formactionhandlerprotocol\/opentransactionadduserpage(_:)","title":"func openTransactionAddUserPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/formactionhandlerprotocol\/submitwithoutpromotion(_:)","title":"func submitWithoutPromotion(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/formactionhandlerprotocol","title":"FormActionHandlerProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formflowcontrollertoivflowcontroller\/opencollectionassetselectorviewcontroller(pickerdelegate:selectorviewmodelconfiguration:selecteditemviewmodelconfiguration:)","title":"func openCollectionAssetSelectorViewController(pickerDelegate: IVCollectionAssetSelectorViewModelDelegate, selectorViewModelConfiguration: IVCollectionAssetSelectorViewModelConfiguration, selectedItemViewModelConfiguration: IVCollectionAssetSelectorSelectedItemViewModelConfiguration)","type":"method"}],"path":"\/documentation\/divar\/formflowcontrollertoivflowcontroller","title":"FormFlowControllerToIVFlowController","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formrowselectionprotocol\/selectrow()","title":"func selectRow()","type":"method"}],"path":"\/documentation\/divar\/formrowselectionprotocol","title":"FormRowSelectionProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/formservicefactoryprotocol\/formservice","title":"var formService: FormServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/formservicefactoryprotocol","title":"FormServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formserviceprotocol\/hierarchycontentsearch(searchkey:query:source:field:)","title":"func hierarchyContentSearch(searchKey: String?, query: String, source: HierarchySearchSources, field: String) async -> Result<[UIOptionsDataStruct], Error>","type":"method"},{"path":"\/documentation\/divar\/formserviceprotocol\/singlemultiselectcontentsearch(city:cities:searchkey:query:source:field:)","title":"func singleMultiSelectContentSearch(city: Int, cities: [String], searchKey: String?, query: String, source: HierarchySearchSources, field: String) async -> Result<SingleMultiModelResults, DError>","type":"method"},{"path":"\/documentation\/divar\/formserviceprotocol\/validationcontent(url:text:)","title":"func validationContent(url: String, text: String) async -> Result<Widgets_CheckWidgetValueResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/formserviceprotocol","title":"FormServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/forwardviewcontrollerdelegate\/forwardviewcontroller(_:didrequestforwardmessage:toconversation:)","title":"func forwardViewController(ForwardViewController, didRequestForwardMessage: ChatConversationMessageTable, toConversation: ChatConversationStructure)","type":"method"}],"path":"\/documentation\/divar\/forwardviewcontrollerdelegate","title":"ForwardViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fraudprotocol\/callauthmethod(code:)","title":"func callAuthMethod(code: String) async -> Result<Authentication_ConfirmResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/fraudprotocol\/callauthmethod(telephone:)","title":"func callAuthMethod(telephone: String) async -> Result<Authentication_AuthenticateResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/fraudprotocol\/validatenationalcode(phone:nationalid:)","title":"func validateNationalCode(phone: String, nationalId: String) async -> Result<Authentication_ValidateNationalCodeResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/fraudprotocol","title":"FraudProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcasyncrequesttracerprotcol\/starttime","title":"var startTime: ThreadSafeDictionary<String, Date>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcasyncrequesttracerprotcol\/requestfailed(call:requestdata:error:)","title":"func requestFailed<Request, Response>(call: GRPCAsyncCallType<Request, Response>, requestData: Message?, error: Error)","type":"method"},{"path":"\/documentation\/divar\/grpcasyncrequesttracerprotcol\/requestfinished(call:requestdata:responsedata:)","title":"func requestFinished<Request, Response>(call: GRPCAsyncCallType<Request, Response>, requestData: Message?, responseData: Message?)","type":"method"},{"path":"\/documentation\/divar\/grpcasyncrequesttracerprotcol\/requestwillstart(call:)","title":"func requestWillStart<Request, Response>(call: GRPCAsyncCallType<Request, Response>)","type":"method"}],"path":"\/documentation\/divar\/grpcasyncrequesttracerprotcol","title":"GRPCAsyncRequestTracerProtcol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcnetworkmanagerprotocol\/channel","title":"var channel: GRPCChannel","type":"property"},{"path":"\/documentation\/divar\/grpcnetworkmanagerprotocol\/group","title":"var group: EventLoopGroup","type":"property"},{"path":"\/documentation\/divar\/grpcnetworkmanagerprotocol\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/divar\/grpcnetworkmanagerprotocol\/user","title":"var user: User","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcnetworkmanagerprotocol\/makecall(call:extraheaders:request:)","title":"func makeCall<Request, Response>(call: AsyncCallType<Request, Response>, extraHeaders: [String : String]?, request: Request) async -> Result<Response, DError>","type":"method"},{"path":"\/documentation\/divar\/grpcnetworkmanagerprotocol\/makecall(call:extraheaders:request:completion:)","title":"func makeCall<Request, Response>(call: CallType<Request, Response>, extraHeaders: [String : String]?, request: Request, completion: GRPCResponseType<Response>) -> Cancellable?","type":"method"},{"path":"\/documentation\/divar\/grpcnetworkmanagerprotocol\/makecall(call:request:)","title":"func makeCall<Request, Response>(call: AsyncCallType<Request, Response>, request: Request) async -> Result<Response, DError>","type":"method"},{"path":"\/documentation\/divar\/grpcnetworkmanagerprotocol\/makecall(call:request:completion:)","title":"func makeCall<Request, Response>(call: CallType<Request, Response>, request: Request, completion: GRPCResponseType<Response>) -> Cancellable?","type":"method"}],"path":"\/documentation\/divar\/grpcnetworkmanagerprotocol","title":"GRPCNetworkManagerProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcprediction\/createpredictable(withprediction:)","title":"func createPredictable(withPrediction: String) -> Self","type":"method"}],"path":"\/documentation\/divar\/grpcprediction","title":"GRPCPrediction","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcrequesttracerprotcol\/starttime","title":"var startTime: ThreadSafeDictionary<String, Date>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcrequesttracerprotcol\/requestfailed(call:requestdata:error:)","title":"func requestFailed<Request, Response>(call: GRPCCallType<Request, Response>, requestData: Message?, error: Error)","type":"method"},{"path":"\/documentation\/divar\/grpcrequesttracerprotcol\/requestfinished(call:requestdata:responsedata:)","title":"func requestFinished<Request, Response>(call: GRPCCallType<Request, Response>, requestData: Message?, responseData: Message?)","type":"method"},{"path":"\/documentation\/divar\/grpcrequesttracerprotcol\/requestwillstart(call:)","title":"func requestWillStart<Request, Response>(call: GRPCCallType<Request, Response>)","type":"method"}],"path":"\/documentation\/divar\/grpcrequesttracerprotcol","title":"GRPCRequestTracerProtcol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcresponseprotocol\/asynctracer","title":"var asyncTracer: GRPCAsyncRequestTracerProtcol","type":"property"},{"path":"\/documentation\/divar\/grpcresponseprotocol\/tracer","title":"var tracer: GRPCRequestTracerProtcol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcresponseprotocol\/handlegrpcasynccall(_:request:)","title":"func handleGRPCAsyncCall<Request, Response>(GRPCAsyncCallType<Request, Response>, request: Request) async -> Result<Response, DError>","type":"method"},{"path":"\/documentation\/divar\/grpcresponseprotocol\/handlegrpcasyncerror(call:)","title":"func handleGRPCAsyncError<Request, Response>(call: GRPCAsyncCallType<Request, Response>) async -> Result<Response, DError>","type":"method"},{"path":"\/documentation\/divar\/grpcresponseprotocol\/handlegrpccall(_:request:completion:)","title":"func handleGRPCCall<Request, Response>(GRPCCallType<Request, Response>, request: Request, completion: GRPCResponseType<Response>)","type":"method"},{"path":"\/documentation\/divar\/grpcresponseprotocol\/handlegrpcerror(call:completion:)","title":"func handleGRPCError<Request, Response>(call: GRPCCallType<Request, Response>, completion: GRPCResponseType<Response>)","type":"method"}],"path":"\/documentation\/divar\/grpcresponseprotocol","title":"GRPCResponseProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcserviceprotocol\/grpcservice","title":"var grpcService: GRPCNetworkManagerProtocol","type":"property"}],"path":"\/documentation\/divar\/grpcserviceprotocol","title":"GRPCServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpctabularwidgetbasedrequestbuilder\/decoratedatasource(with:)","title":"func decorateDataSource(with: String) -> GRPCWidgetBasedRequestBuilder & WidgetBasedConfigurable","type":"method"}],"path":"\/documentation\/divar\/grpctabularwidgetbasedrequestbuilder","title":"GRPCTabularWidgetBasedRequestBuilder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcwidgetbasedrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> GRPCWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/grpcwidgetbasedrequestbuilder","title":"GRPCWidgetBasedRequestBuilder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcwidgetbasedserviceprotocol\/sendwidgetbasedrequest(request:responsetype:completion:)","title":"func sendWidgetBasedRequest<ResponseType>(request: GRPCWidgetBaseRequestPayload, responseType: ResponseType.Type, completion: ExtractableResult) -> Cancellable?","type":"method"}],"path":"\/documentation\/divar\/grpcwidgetbasedserviceprotocol","title":"GRPCWidgetBasedServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontrollerdelegate\/bulkladderviewcontroller(shouldopenfilterwith:request:for:)","title":"func bulkLadderViewController(shouldOpenFilterWith: Schema, request: WidgetBasedFilterRequest, for: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/generalbulkladderviewcontrollerdelegate","title":"GeneralBulkLadderViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontrollerprotocol\/pagerequest","title":"var pageRequest: BulkLadderRequest","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/generalbulkladderviewcontrollerprotocol\/hidesearchview()","title":"func hideSearchView()","type":"method"},{"path":"\/documentation\/divar\/generalbulkladderviewcontrollerprotocol\/refreshwith(request:)","title":"func refreshWith(request: FilterableBulkLadderRequest)","type":"method"}],"path":"\/documentation\/divar\/generalbulkladderviewcontrollerprotocol","title":"GeneralBulkLadderViewControllerProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactviewcontrollerdelegate\/didrequestopeningchat(_:)","title":"func didRequestOpeningChat(GetContactViewController)","type":"method"},{"path":"\/documentation\/divar\/getcontactviewcontrollerdelegate\/getcontactviewcontroller(_:didrequestchangebookmark:)","title":"func getContactViewController(GetContactViewController, didRequestChangeBookmark: Bool)","type":"method"},{"path":"\/documentation\/divar\/getcontactviewcontrollerdelegate\/getcontactviewcontroller(_:didrequestshowfeedbackwithtoken:)","title":"func getContactViewController(GetContactViewController, didRequestShowFeedbackWithToken: String)","type":"method"}],"path":"\/documentation\/divar\/getcontactviewcontrollerdelegate","title":"GetContactViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getsuggestionprotocol\/didgetsuggesions(suggestions:)","title":"func didGetSuggesions(suggestions: [Suggestion])","type":"method"}],"path":"\/documentation\/divar\/getsuggestionprotocol","title":"GetSuggestionProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getablerow\/getvalues()","title":"func getValues() -> [String : Any]?","type":"method"}],"path":"\/documentation\/divar\/getablerow","title":"GetableRow","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcnetworkmanagerfactoryprotocol\/grpcnetworkmanager","title":"var grpcNetworkManager: GRPCNetworkManagerProtocol","type":"property"}],"path":"\/documentation\/divar\/grpcnetworkmanagerfactoryprotocol","title":"GrpcNetworkManagerFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/hasnote\/note","title":"var note: String?","type":"property"}],"path":"\/documentation\/divar\/hasnote","title":"HasNote","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivassetcollectionfetchservice\/fetchasset(with:assettype:options:)","title":"func fetchAsset(with: [String], assetType: [IVAssetFetchType], options: PHFetchOptions?) -> [PHAsset]?","type":"method"},{"path":"\/documentation\/divar\/ivassetcollectionfetchservice\/fetchasset(with:options:)","title":"func fetchAsset(with: String, options: PHFetchOptions?) -> PHAsset?","type":"method"},{"path":"\/documentation\/divar\/ivassetcollectionfetchservice\/fetchassets(from:with:fetchoptions:)","title":"func fetchAssets(from: PHAssetCollection, with: [IVAssetFetchType], fetchOptions: PHFetchOptions?) -> [PHAsset]","type":"method"},{"path":"\/documentation\/divar\/ivassetcollectionfetchservice\/fetchassets(incollectionwith:assettype:options:)","title":"func fetchAssets(inCollectionWith: String, assetType: [IVAssetFetchType], options: PHFetchOptions?) throws -> [PHAsset]","type":"method"},{"path":"\/documentation\/divar\/ivassetcollectionfetchservice\/fetchassetscount(from:with:fetchoptions:)","title":"func fetchAssetsCount(from: PHAssetCollection, with: [IVAssetFetchType], fetchOptions: PHFetchOptions?) -> Int","type":"method"}],"path":"\/documentation\/divar\/ivassetcollectionfetchservice","title":"IVAssetCollectionFetchService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcacheurlgeneratorservice\/cachedirectory(for:)","title":"func cacheDirectory(for: IVMediaType) throws -> URL","type":"method"},{"path":"\/documentation\/divar\/ivcacheurlgeneratorservice\/removefileifexist(from:)","title":"func removeFileIfExist(from: URL) throws","type":"method"}],"path":"\/documentation\/divar\/ivcacheurlgeneratorservice","title":"IVCacheURLGeneratorService","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodel\/errormessagepublisher","title":"var errorMessagePublisher: AnyPublisher<String, Never>","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodel\/openphotoeditorpublisher","title":"var openPhotoEditorPublisher: AnyPublisher<Data, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodel\/editimage(with:at:)","title":"func editImage(with: Data, at: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodel\/imageeditingfinished(with:)","title":"func imageEditingFinished(with: IVImageEditingResult) async -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodel\/itemuniqueidentifier","title":"IVCollectionAssetSelectorImageEditingViewModel.ItemUniqueIdentifier","type":"typealias"}],"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodel","title":"IVCollectionAssetSelectorImageEditingViewModel","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodeldelegate\/collectionassetselectorimageeditingviewmodel(_:didrequesttoinsert:at:)","title":"func collectionAssetSelectorImageEditingViewModel(IVCollectionAssetSelectorImageEditingViewModel, didRequestToInsert: IVCollectionAssetSelectorItems, at: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodeldelegate\/collectionassetselectorimageeditingviewmodel(_:didrequesttoselect:)","title":"func collectionAssetSelectorImageEditingViewModel(IVCollectionAssetSelectorImageEditingViewModel, didRequestToSelect: String)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodeldelegate\/collectionassetselectorimageeditingviewmodel(_:didrequesttovalidate:)","title":"func collectionAssetSelectorImageEditingViewModel(IVCollectionAssetSelectorImageEditingViewModel, didRequestToValidate: IVCollectionAssetSelectorItems) async -> IVItemSelectorValidationResult","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodeldelegate\/collectionassetselectorimageeditingviewmodeldidrequesttoreloadcollection(_:)","title":"func collectionAssetSelectorImageEditingViewModelDidrequestToReloadCollection(IVCollectionAssetSelectorImageEditingViewModel)","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorimageeditingviewmodeldelegate","title":"IVCollectionAssetSelectorImageEditingViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodel\/changeprimarybuttonstatepublisher","title":"var changePrimaryButtonStatePublisher: AnyPublisher<IVCollectionAssetSelectorSelectedItemViewModelPrimaryButtonState, Never>","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodel\/errormessagepublisher","title":"var errorMessagePublisher: AnyPublisher<String, Never>","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodel\/reloaditemafterselectionrequestpublisher","title":"var reloadItemAfterSelectionRequestPublisher: AnyPublisher<IVCollectionAssetSelectorItems, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodel\/addeditedphotoasselecteditem(with:)","title":"func addEditedPhotoAsSelectedItem(with: ItemUniqueIdentifier)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodel\/didrequestselectionofitem(at:)","title":"func didRequestSelectionOfItem(at: IndexPath) async","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodel\/didrequesttoconfirmselectedassets()","title":"func didRequestToConfirmSelectedAssets() async","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodel\/isitemselected(with:)","title":"func isItemSelected(with: ItemUniqueIdentifier) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodel\/itemuniqueidentifier","title":"IVCollectionAssetSelectorSelectedItemViewModel.ItemUniqueIdentifier","type":"typealias"}],"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodel","title":"IVCollectionAssetSelectorSelectedItemViewModel","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelconfiguration\/maxselectedimagecount","title":"var maxSelectedImageCount: Int","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelconfiguration\/maxselectedvideocount","title":"var maxSelectedVideoCount: Int","type":"property"}],"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelconfiguration","title":"IVCollectionAssetSelectorSelectedItemViewModelConfiguration","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodeldelegate\/collectionassetselectorselecteditemviewmodel(_:didfinilize:)","title":"func collectionAssetSelectorSelectedItemViewModel(IVCollectionAssetSelectorSelectedItemViewModel, didFinilize: [IVPickedData])","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodeldelegate\/collectionassetselectorselecteditemviewmodel(_:didrequestcollectionassetat:)","title":"func collectionAssetSelectorSelectedItemViewModel(IVCollectionAssetSelectorSelectedItemViewModel, didRequestCollectionAssetAt: IndexPath) -> IVCollectionAssetSelectorItems?","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodeldelegate\/collectionassetselectorselecteditemviewmodel(_:didrequesttovalidate:)","title":"func collectionAssetSelectorSelectedItemViewModel(IVCollectionAssetSelectorSelectedItemViewModel, didRequestToValidate: IVCollectionAssetSelectorItems) async -> IVItemSelectorValidationResult","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodeldelegate\/collectionassetselectorselecteditemviewmodeldidrequestcollectionassets(_:)","title":"func collectionAssetSelectorSelectedItemViewModelDidRequestCollectionAssets(IVCollectionAssetSelectorSelectedItemViewModel) -> [IVCollectionAssetSelectorItems]","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodeldelegate","title":"IVCollectionAssetSelectorSelectedItemViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelprimarybuttonstate\/isvisible","title":"var isVisible: Bool","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelprimarybuttonstate\/text","title":"var text: String","type":"property"}],"path":"\/documentation\/divar\/ivcollectionassetselectorselecteditemviewmodelprimarybuttonstate","title":"IVCollectionAssetSelectorSelectedItemViewModelPrimaryButtonState","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodel\/collectionassetselectorimageeditingviewmodel","title":"var collectionAssetSelectorImageEditingViewModel: IVCollectionAssetSelectorImageEditingViewModel","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodel\/collectionassetselectorselecteditemviewmodel","title":"var collectionAssetSelectorSelectedItemViewModel: IVCollectionAssetSelectorSelectedItemViewModel","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodel\/dismissnavigationcontrollerpublisher","title":"var dismissNavigationControllerPublisher: AnyPublisher<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodel\/pagetitle","title":"var pageTitle: String?","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodel\/reloaddatasource","title":"var reloadDataSource: AnyPublisher<[IVCollectionAssetSelectorItems], Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodel\/fetchalbumitems()","title":"func fetchAlbumItems()","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodel\/imagecellviewmodel(at:)","title":"func imageCellViewModel(at: Int) -> IVCollectionImageAssetSelectorCellViewModel?","type":"method"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodel\/videocellviewmodel(at:)","title":"func videoCellViewModel(at: Int) -> IVCollectionVideoAssetSelectorCellViewModel?","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodel","title":"IVCollectionAssetSelectorViewModel","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelconfiguration\/collectionname","title":"var collectionName: String?","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelconfiguration\/collectionuniqueidentifier","title":"var collectionUniqueIdentifier: String","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelconfiguration\/fetchtypes","title":"var fetchTypes: [IVAssetFetchType]","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelconfiguration\/validationrules","title":"var validationRules: [IVRule]","type":"property"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodelconfiguration","title":"IVCollectionAssetSelectorViewModelConfiguration","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodeldelegate\/picker(didpicked:)","title":"func picker(didPicked: [IVPickedData])","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorviewmodeldelegate","title":"IVCollectionAssetSelectorViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/ivcollectionfetchservice\/fetch(with:and:assettype:)-6zssn","title":"func fetch(with: [IVCollectionFetchType], and: IVCollectionFetchSubType, assetType: [IVAssetFetchType]) async -> [IVCollectionFetchResult]","type":"method"}],"title":"IVCollectionFetchService Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/ivcollectionfetchservice\/fetch(with:and:assettype:)-3b0x2","title":"func fetch(with: [IVCollectionFetchType], and: IVCollectionFetchSubType, assetType: [IVAssetFetchType]) async -> [IVCollectionFetchResult]","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/ivcollectionfetchservice\/fetch(with:and:assettype:)-6zssn","title":"func fetch(with: [IVCollectionFetchType], and: IVCollectionFetchSubType, assetType: [IVAssetFetchType]) async -> [IVCollectionFetchResult]","type":"method"}],"title":"IVCollectionFetchService Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/ivcollectionfetchservice\/fetch(with:and:assettype:)-8rad9","title":"func fetch(with: [IVCollectionFetchType], and: IVCollectionFetchSubType, assetType: [IVAssetFetchType]) -> [IVCollectionFetchResult]","type":"method"}],"path":"\/documentation\/divar\/ivcollectionfetchservice","title":"IVCollectionFetchService","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcellviewmodel\/isselected","title":"var isSelected: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcellviewmodel\/requestthumbnailimagedata()","title":"func requestThumbnailImageData() async -> Data?","type":"method"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcellviewmodel\/requesttoeditimage()","title":"func requestToEditImage() async","type":"method"}],"path":"\/documentation\/divar\/ivcollectionimageassetselectorcellviewmodel","title":"IVCollectionImageAssetSelectorCellViewModel","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionimageassetselectorcellviewmodeldelegate\/albumimagecellviewmodel(_:didrequesteditfor:at:)","title":"func albumImageCellViewModel(IVCollectionImageAssetSelectorCellViewModel, didRequestEditFor: Data, at: Int) async","type":"method"}],"path":"\/documentation\/divar\/ivcollectionimageassetselectorcellviewmodeldelegate","title":"IVCollectionImageAssetSelectorCellViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorcellviewmodel\/cellmodel","title":"var cellModel: IVCollectionSelectorCellModel","type":"property"},{"path":"\/documentation\/divar\/ivcollectionselectorcellviewmodel\/indexpath","title":"var indexPath: IndexPath","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorcellviewmodel\/requestimageplaceholder()","title":"func requestImagePlaceHolder() async -> Data","type":"method"}],"path":"\/documentation\/divar\/ivcollectionselectorcellviewmodel","title":"IVCollectionSelectorCellViewModel","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorcellviewmodeldelegate\/collectionselectorcellviewmodel(_:didrequestedimageplaceholderdataforrowat:)","title":"func collectionSelectorCellViewModel(IVCollectionSelectorCellViewModel, didRequestedImagePlaceHolderDataForRowAt: IndexPath) async -> Data?","type":"method"}],"path":"\/documentation\/divar\/ivcollectionselectorcellviewmodeldelegate","title":"IVCollectionSelectorCellViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodel\/datasourcepublisher","title":"var dataSourcePublisher: AnyPublisher<[IVCollectionFetchResult], Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodel\/cellviewmodel(at:)","title":"func cellViewModel(at: IndexPath) -> IVCollectionSelectorCellViewModel?","type":"method"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodel\/didselectcollection(at:)","title":"func didSelectCollection(at: Int)","type":"method"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodel\/numberofitems(at:)","title":"func numberOfItems(at: Int) -> Int","type":"method"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodel\/reloadlibrary()","title":"func reloadLibrary() async","type":"method"}],"path":"\/documentation\/divar\/ivcollectionselectorviewmodel","title":"IVCollectionSelectorViewModel","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodeldelegate\/collectionselectorviewmodel(_:didrequesttoopencollectionassetselectorwith:collectionname:)","title":"func collectionSelectorViewModel(IVCollectionSelectorViewModel, didRequestToOpenCollectionAssetSelectorWith: UniqueIdentifier, collectionName: String?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodeldelegate\/uniqueidentifier","title":"IVCollectionSelectorViewModelDelegate.UniqueIdentifier","type":"typealias"}],"path":"\/documentation\/divar\/ivcollectionselectorviewmodeldelegate","title":"IVCollectionSelectorViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorviewmodelinitconfiguration\/fetchtypes","title":"var fetchTypes: [IVAssetFetchType]","type":"property"}],"path":"\/documentation\/divar\/ivcollectionselectorviewmodelinitconfiguration","title":"IVCollectionSelectorViewModelInitConfiguration","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcellviewmodel\/isselected","title":"var isSelected: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcellviewmodel\/requestthumbnailimagedata()","title":"func requestThumbnailImageData() async -> Data?","type":"method"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcellviewmodel\/requestvideoduration()","title":"func requestVideoDuration() async -> String","type":"method"}],"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcellviewmodel","title":"IVCollectionVideoAssetSelectorCellViewModel","type":"protocol"},{"path":"\/documentation\/divar\/ivcollectionvideoassetselectorcellviewmodeldelegate","title":"IVCollectionVideoAssetSelectorCellViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcompostionmanipulator\/next","title":"var next: IVCompostionManipulator?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcompostionmanipulator\/manipulate(videoasset:composition:)","title":"func manipulate(videoAsset: AVAsset, composition: AVMutableComposition) async throws -> AVMutableComposition","type":"method"}],"path":"\/documentation\/divar\/ivcompostionmanipulator","title":"IVCompostionManipulator","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageassetresolveservice\/requestimage(for:with:)","title":"func requestImage(for: PHAsset, with: CGSize) async -> Data?","type":"method"},{"path":"\/documentation\/divar\/ivimageassetresolveservice\/requestimageurl(for:with:)","title":"func requestImageURL(for: PHAsset, with: CGSize) async throws -> ImageAssetResolveResponse","type":"method"},{"path":"\/documentation\/divar\/ivimageassetresolveservice\/requestplaceholderimage(for:with:)","title":"func requestPlaceHolderImage(for: PHAsset, with: CGSize) async -> Data?","type":"method"}],"path":"\/documentation\/divar\/ivimageassetresolveservice","title":"IVImageAssetResolveService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimagerules\/validate(image:)","title":"func validate(image: PHAssetToUIImageConvertor) -> IVValidationResult","type":"method"}],"path":"\/documentation\/divar\/ivimagerules","title":"IVImageRules","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorpickbuttonservice\/generatestate(totalselecteditemcount:imageselectedcount:videoselectedcount:)","title":"func generateState(totalSelectedItemCount: Int, imageSelectedCount: Int, videoSelectedCount: Int) -> IVItemSelectorPickButtonState","type":"method"}],"path":"\/documentation\/divar\/ivitemselectorpickbuttonservice","title":"IVItemSelectorPickButtonService","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorpickbuttonstate\/buttontext","title":"var buttonText: String","type":"property"},{"path":"\/documentation\/divar\/ivitemselectorpickbuttonstate\/shouldenablebutton","title":"var shouldEnableButton: Bool","type":"property"},{"path":"\/documentation\/divar\/ivitemselectorpickbuttonstate\/toasterrormessage","title":"var toastErrorMessage: String?","type":"property"}],"path":"\/documentation\/divar\/ivitemselectorpickbuttonstate","title":"IVItemSelectorPickButtonState","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorvalidationservice\/validateimage(imagedata:with:)","title":"func validateImage(imageData: Data?, with: [IVRule]) -> IVItemSelectorValidationResult","type":"method"},{"path":"\/documentation\/divar\/ivitemselectorvalidationservice\/validatevideo(videoinfo:with:)","title":"func validateVideo(videoInfo: IVVideoInfoAttainmentResponse?, with: [IVRule]) -> IVItemSelectorValidationResult","type":"method"}],"path":"\/documentation\/divar\/ivitemselectorvalidationservice","title":"IVItemSelectorValidationService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivphassetcacheservice\/cache(asset:)","title":"func cache(asset: PHAsset)","type":"method"},{"path":"\/documentation\/divar\/ivphassetcacheservice\/emptycache()","title":"func emptyCache()","type":"method"},{"path":"\/documentation\/divar\/ivphassetcacheservice\/retrieveasset(with:)","title":"func retrieveAsset(with: String) -> PHAsset?","type":"method"}],"path":"\/documentation\/divar\/ivphassetcacheservice","title":"IVPHAssetCacheService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivphassettocollectionassetselectoritemsconverterservice\/convert(asset:)","title":"func convert(asset: PHAsset?) -> IVCollectionAssetSelectorItems?","type":"method"}],"path":"\/documentation\/divar\/ivphassettocollectionassetselectoritemsconverterservice","title":"IVPHAssetToCollectionAssetSelectorItemsConverterService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivpickeddataimagegeneratorservice\/generateplaceholderimagedata(for:assettype:)","title":"func generatePlaceHolderImageData(for: URL, assetType: IVMediaType) async throws -> Data","type":"method"}],"path":"\/documentation\/divar\/ivpickeddataimagegeneratorservice","title":"IVPickedDataImageGeneratorService","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivpickeditemcacheservice\/rootcachedirectoryurl","title":"var rootCacheDirectoryURL: URL?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivpickeditemcacheservice\/clearcachedirectory(for:with:)","title":"func clearCacheDirectory(for: IVMediaType, with: String) throws","type":"method"},{"path":"\/documentation\/divar\/ivpickeditemcacheservice\/emptycache()","title":"func emptyCache() throws","type":"method"}],"path":"\/documentation\/divar\/ivpickeditemcacheservice","title":"IVPickedItemCacheService","type":"protocol"},{"path":"\/documentation\/divar\/ivrule","title":"IVRule","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivselecteditemfinalizerservice\/finalizeselection(of:)","title":"func finalizeSelection(of: [IVCollectionAssetSelectorItems]) async -> [IVPickedData]","type":"method"}],"path":"\/documentation\/divar\/ivselecteditemfinalizerservice","title":"IVSelectedItemFinalizerService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoassetresolveservice\/requestplaceholderimage(for:with:)","title":"func requestPlaceHolderImage(for: PHAsset, with: CGSize) async -> Data?","type":"method"},{"path":"\/documentation\/divar\/ivvideoassetresolveservice\/requestvideodetail(for:)","title":"func requestVideoDetail(for: PHAsset) async -> IVVideoInfoAttainmentResponse?","type":"method"},{"path":"\/documentation\/divar\/ivvideoassetresolveservice\/requestvideourl(for:)","title":"func requestVideoURL(for: PHAsset) async throws -> AlbumVideoItemRequestResponse","type":"method"}],"path":"\/documentation\/divar\/ivvideoassetresolveservice","title":"IVVideoAssetResolveService","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoassetresolvevideoinforesponse\/videoduration","title":"var videoDuration: Double","type":"property"},{"path":"\/documentation\/divar\/ivvideoassetresolvevideoinforesponse\/videosize","title":"var videoSize: UInt?","type":"property"}],"path":"\/documentation\/divar\/ivvideoassetresolvevideoinforesponse","title":"IVVideoAssetResolveVideoInfoResponse","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoaudioremover\/removeaudiofrom(videoasset:)","title":"func removeAudioFrom(videoAsset: AVAsset) throws -> AVAsset","type":"method"}],"path":"\/documentation\/divar\/ivvideoaudioremover","title":"IVVideoAudioRemover","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexportpresetpredictorservice\/predictpreset(basedon:thresholdsize:)","title":"func predictPreset(basedOn: UInt, thresholdSize: UInt) -> IVVideoExportPreset","type":"method"}],"path":"\/documentation\/divar\/ivvideoexportpresetpredictorservice","title":"IVVideoExportPresetPredictorService","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexportresult\/elapsedtime","title":"var elapsedTime: TimeInterval","type":"property"},{"path":"\/documentation\/divar\/ivvideoexportresult\/outputurl","title":"var outputURL: URL","type":"property"}],"path":"\/documentation\/divar\/ivvideoexportresult","title":"IVVideoExportResult","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexporterservice\/exportvideo(asset:preset:filetype:videourl:saveinto:)","title":"func exportVideo(asset: AVAsset, preset: IVVideoExportPreset, fileType: IVFileType, videoURL: URL, saveInto: URL?) async throws -> IVVideoExportResult","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/ivvideoexporterservice\/exportvideo(from:preset:filetype:videourl:saveinto:)-6fs2g","title":"func exportVideo(from: IVCompostionManipulator, preset: IVVideoExportPreset, fileType: IVFileType, videoURL: URL, saveInto: URL?) async throws -> IVVideoExportResult","type":"method"}],"title":"IVVideoExporterService Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/ivvideoexporterservice\/exportvideo(from:preset:filetype:videourl:saveinto:)-pgxt","title":"func exportVideo(from: IVCompostionManipulator, preset: IVVideoExportPreset, fileType: IVFileType, videoURL: URL, saveInto: URL?) async throws -> IVVideoExportResult","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/ivvideoexporterservice\/exportvideo(with:preset:filetype:saveinto:)-ysrz","title":"func exportVideo(with: URL, preset: IVVideoExportPreset, fileType: IVFileType, saveInto: URL?) async throws -> IVVideoExportResult","type":"method"}],"title":"IVVideoExporterService Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/ivvideoexporterservice\/exportvideo(with:preset:filetype:saveinto:)-60n3u","title":"func exportVideo(with: URL, preset: IVVideoExportPreset, fileType: IVFileType, saveInto: URL?) async throws -> IVVideoExportResult","type":"method"}],"path":"\/documentation\/divar\/ivvideoexporterservice","title":"IVVideoExporterService","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoinfoattainmentresponse\/formattedduration","title":"var formattedDuration: String","type":"property"},{"path":"\/documentation\/divar\/ivvideoinfoattainmentresponse\/videoduration","title":"var videoDuration: Double","type":"property"},{"path":"\/documentation\/divar\/ivvideoinfoattainmentresponse\/videosize","title":"var videoSize: UInt?","type":"property"}],"path":"\/documentation\/divar\/ivvideoinfoattainmentresponse","title":"IVVideoInfoAttainmentResponse","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoinfoattainmentservice\/videoinfo(for:)-16xws","title":"func videoInfo(for: URL) throws -> IVVideoInfoAttainmentResponse","type":"method"},{"path":"\/documentation\/divar\/ivvideoinfoattainmentservice\/videoinfo(for:)-kuyw","title":"func videoInfo(for: AVURLAsset) -> IVVideoInfoAttainmentResponse","type":"method"}],"path":"\/documentation\/divar\/ivvideoinfoattainmentservice","title":"IVVideoInfoAttainmentService","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderrecordedvideo\/videoduration","title":"var videoDuration: Double","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderrecordedvideo\/videosize","title":"var videoSize: UInt?","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderrecordedvideo\/videourl","title":"var videoURL: URL","type":"property"}],"path":"\/documentation\/divar\/ivvideorecorderrecordedvideo","title":"IVVideoRecorderRecordedVideo","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/maximumvideoduration","title":"var maximumVideoDuration: Int","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/overlaydidrequestchangeflashstatepublisher","title":"var overlayDidRequestChangeFlashStatePublisher: AnyPublisher<Bool, Never>","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/overlaydidrequestclosepublisher","title":"var overlayDidRequestClosePublisher: AnyPublisher<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/overlaydidrequeststartrecordingpublisher","title":"var overlayDidRequestStartRecordingPublisher: AnyPublisher<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/overlaydidrequeststoprecordingpublisher","title":"var overlayDidRequestStopRecordingPublisher: AnyPublisher<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/resetvideorecorderduetounknownerrorpublisher","title":"var resetVideoRecorderDueToUnknownErrorPublisher: AnyPublisher<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/showerrormessagepublisher","title":"var showErrorMessagePublisher: AnyPublisher<String, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/changeflashstate(ison:)","title":"func changeFlashState(isOn: Bool)","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/didfinishrecordingvideo(to:)","title":"func didFinishRecordingVideo(to: URL)","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/errorocouredonrecordingvideo()","title":"func errorOcouredOnRecordingVideo()","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/requesttoclosecontroller()","title":"func requestToCloseController()","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/resetvideorecorderduetounknownerror()","title":"func resetVideoRecorderDueToUnknownError()","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/startrecording()","title":"func startRecording()","type":"method"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodel\/stoprecording()","title":"func stopRecording()","type":"method"}],"path":"\/documentation\/divar\/ivvideorecorderviewmodel","title":"IVVideoRecorderViewModel","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodelconfiguration\/videorecorddurationrange","title":"var videoRecordDurationRange: ClosedRange<Int>","type":"property"}],"path":"\/documentation\/divar\/ivvideorecorderviewmodelconfiguration","title":"IVVideoRecorderViewModelConfiguration","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderviewmodeldelegate\/videorecorder(_:didrecordervideowith:)","title":"func videoRecorder(IVVideoRecorderViewModel, didRecorderVideoWith: IVVideoRecorderRecordedVideo)","type":"method"}],"path":"\/documentation\/divar\/ivvideorecorderviewmodeldelegate","title":"IVVideoRecorderViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorules\/validatevideo(container:)","title":"func validateVideo(container: IVVideoRuleInfoContainer) -> IVValidationResult","type":"method"}],"path":"\/documentation\/divar\/ivvideorules","title":"IVVideoRules","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerdelegate\/imagepicker(didselectimages:)","title":"func imagePicker(didSelectImages: [UIImage])","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/imagepickerdelegate\/imagepickerdidstartresizingimages()-6rcw0","title":"func imagePickerDidStartResizingImages()","type":"method"}],"title":"ImagePickerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/imagepickerdelegate\/imagepickerdidstartresizingimages()-71i7b","title":"func imagePickerDidStartResizingImages()","type":"method"}],"path":"\/documentation\/divar\/imagepickerdelegate","title":"ImagePickerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagepickerimageselectioncelldelegate\/imagepickerimageselectioncell(didrequesteditingfor:atindexpath:)","title":"func imagePickerImageSelectionCell(didRequestEditingFor: ImagePickerImageSelectionCell, atIndexPath: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/imagepickerimageselectioncelldelegate","title":"ImagePickerImageSelectionCellDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorcelldelegate\/imageselectorcell(_:didrequestchangesubmitbuttonstate:)","title":"func imageSelectorCell(ImageSelectorCell, didRequestChangeSubmitButtonState: Bool)","type":"method"},{"path":"\/documentation\/divar\/imageselectorcelldelegate\/imageselectorcell(_:didrequestopencameracontroller:)","title":"func imageSelectorCell(ImageSelectorCell, didRequestOpenCameraController: ImagePicker)","type":"method"},{"path":"\/documentation\/divar\/imageselectorcelldelegate\/imageselectorcell(_:didrequestretryimage:)","title":"func imageSelectorCell(ImageSelectorCell, didRequestRetryImage: ImageRowItem)","type":"method"},{"path":"\/documentation\/divar\/imageselectorcelldelegate\/imageselectorcell(_:didrequestshowoptions:)","title":"func imageSelectorCell(ImageSelectorCell, didRequestShowOptions: [SheetItem])","type":"method"},{"path":"\/documentation\/divar\/imageselectorcelldelegate\/imageselectorcell(_:didrequestuploadimages:)","title":"func imageSelectorCell(ImageSelectorCell, didRequestUploadImages: [UIImage])","type":"method"}],"path":"\/documentation\/divar\/imageselectorcelldelegate","title":"ImageSelectorCellDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorrowdelegate\/imageselectorrow(_:didrequestchangesubmitbuttonstate:)","title":"func imageSelectorRow(ImageSelectorRow, didRequestChangeSubmitButtonState: Bool)","type":"method"},{"path":"\/documentation\/divar\/imageselectorrowdelegate\/imageselectorrow(_:didrequestopencameracontroller:)","title":"func imageSelectorRow(ImageSelectorRow, didRequestOpenCameraController: ImagePicker)","type":"method"},{"path":"\/documentation\/divar\/imageselectorrowdelegate\/imageselectorrow(_:didrequestshowoptions:)","title":"func imageSelectorRow(ImageSelectorRow, didRequestShowOptions: [SheetItem])","type":"method"},{"path":"\/documentation\/divar\/imageselectorrowdelegate\/imageselectorrow(_:uploaddidfailwitherror:)","title":"func imageSelectorRow(ImageSelectorRow, uploadDidFailWithError: Error?)","type":"method"}],"path":"\/documentation\/divar\/imageselectorrowdelegate","title":"ImageSelectorRowDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageservicefactoryprotocol\/imageservice","title":"var imageService: ImageServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/imageservicefactoryprotocol","title":"ImageServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageserviceprotocol\/getimage(name:url:bucket:completion:)","title":"func getImage(name: String, url: String, bucket: String, completion: (_ result: UIImage?, _ error: Error?) -> Void)","type":"method"},{"path":"\/documentation\/divar\/imageserviceprotocol\/removeimage(imagename:)","title":"func removeImage(imageName: String) async throws","type":"method"},{"path":"\/documentation\/divar\/imageserviceprotocol\/uploadimage(url:bucket:image:shouldkeepresponsename:)","title":"func uploadImage(url: String, bucket: String, image: UIImage, shouldKeepResponseName: Bool) async -> (name: String?, error: Error?)","type":"method"}],"path":"\/documentation\/divar\/imageserviceprotocol","title":"ImageServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/inapplinkactionhandler\/openlink(_:)-3hzts","title":"func openLink(Widgets_Action)","type":"method"}],"title":"InAppLinkActionHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/inapplinkactionhandler\/openlink(_:)-gzrw","title":"func openLink(Widgets_Action)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/inapplinkactionhandler\/openwebpagealert(_:)-9dfkz","title":"func openWebPageAlert(Widgets_Action)","type":"method"}],"title":"InAppLinkActionHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/inapplinkactionhandler\/openwebpagealert(_:)-gp64","title":"func openWebPageAlert(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/inapplinkactionhandler","title":"InAppLinkActionHandler","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jscorelocalstorageprotocol\/getitem(_:)","title":"static func getItem(String!) -> String!","type":"method"},{"path":"\/documentation\/divar\/jscorelocalstorageprotocol\/setitem(_:_:)","title":"static func setItem(String!, String!)","type":"method"}],"path":"\/documentation\/divar\/jscorelocalstorageprotocol","title":"JSCoreLocalStorageProtocol","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jscorewindowprotocol\/cleartimeout(_:)","title":"static func clearTimeout(String!)","type":"method"},{"path":"\/documentation\/divar\/jscorewindowprotocol\/localstorage()","title":"static func localStorage() -> Any!","type":"method"},{"path":"\/documentation\/divar\/jscorewindowprotocol\/setinterval(_:_:)","title":"static func setInterval(JSValue!, Double) -> String!","type":"method"},{"path":"\/documentation\/divar\/jscorewindowprotocol\/settimeout(_:_:)","title":"static func setTimeout(JSValue!, Double) -> String!","type":"method"}],"path":"\/documentation\/divar\/jscorewindowprotocol","title":"JSCoreWindowProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/jwt\/audience","title":"var audience: [String]?","type":"property"},{"path":"\/documentation\/divar\/jwt\/body","title":"var body: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/jwt\/expired","title":"var expired: Bool","type":"property"},{"path":"\/documentation\/divar\/jwt\/expiresat","title":"var expiresAt: Date?","type":"property"},{"path":"\/documentation\/divar\/jwt\/header","title":"var header: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/jwt\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/divar\/jwt\/issuedat","title":"var issuedAt: Date?","type":"property"},{"path":"\/documentation\/divar\/jwt\/issuer","title":"var issuer: String?","type":"property"},{"path":"\/documentation\/divar\/jwt\/notbefore","title":"var notBefore: Date?","type":"property"},{"path":"\/documentation\/divar\/jwt\/signature","title":"var signature: String?","type":"property"},{"path":"\/documentation\/divar\/jwt\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/divar\/jwt\/subject","title":"var subject: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jwt\/claim(name:)","title":"func claim(name: String) -> Claim","type":"method"}],"path":"\/documentation\/divar\/jwt","title":"JWT","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsactionhandler\/openjobsbulkladder(_:)","title":"func openJobsBulkLadder(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/jobsactionhandler\/openjobsgetbusinesscontact(_:)","title":"func openJobsGetBusinessContact(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/jobsactionhandler\/openjobsregister(_:)","title":"func openJobsRegister(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/jobsactionhandler","title":"JobsActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsformactionhandler\/openjobssubmit(_:)","title":"func openJobsSubmit(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/jobsformactionhandler","title":"JobsFormActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsservicefactoryprotocol\/jobsservice","title":"var jobsService: JobsServicesProtocol","type":"property"}],"path":"\/documentation\/divar\/jobsservicefactoryprotocol","title":"JobsServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsservicesprotocol\/getjobssubmitpageschema(model:)","title":"func getJobsSubmitPageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/jobsservicesprotocol\/registerbusiness()","title":"func registerBusiness() async throws","type":"method"}],"path":"\/documentation\/divar\/jobsservicesprotocol","title":"JobsServicesProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jsonschemaresponseprotocol\/handleschema(response:)","title":"func handleSchema(response: ResponseModel<Data, DError>) -> FormResultValue","type":"method"}],"path":"\/documentation\/divar\/jsonschemaresponseprotocol","title":"JsonSchemaResponseProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsactionhandler\/openmobileinfobrandpage(_:)","title":"func openMobileInfoBrandPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/kaladetailsactionhandler\/openmobileinfohomepage(_:)","title":"func openMobileInfoHomePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/kaladetailsactionhandler\/openmobileinfomodelpage(_:)","title":"func openMobileInfoModelPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/kaladetailsactionhandler","title":"KalaDetailsActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landingactionhandler\/opendealershipmanagement(_:)","title":"func openDealershipManagement(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/landingactionhandler\/openmarketplacelandingpage(_:)","title":"func openMarketplaceLandingPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/landingactionhandler","title":"LandingActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineauthenticationfactoryprotocol\/landlineauthentication","title":"var landlineAuthentication: LandlineAuthenticationProtocol","type":"property"}],"path":"\/documentation\/divar\/landlineauthenticationfactoryprotocol","title":"LandlineAuthenticationFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineauthenticationprotocol\/authenticatelandline(phonenumber:managetoken:)","title":"func authenticateLandline(phoneNumber: String, manageToken: String) async -> Result<UserPosts_LandlineAuthenticationResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/landlineauthenticationprotocol\/validatelandlinenumber(codenumber:phonenumber:managetoken:)","title":"func validateLandlineNumber(codeNumber: String, phoneNumber: String, manageToken: String) async -> Result<UserPosts_ValidateLandlineResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/landlineauthenticationprotocol","title":"LandlineAuthenticationProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationactionhandler\/openlandlineverification()","title":"func openLandlineVerification()","type":"method"}],"path":"\/documentation\/divar\/landlineverificationactionhandler","title":"LandlineVerificationActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationflowcontrollerdelegate\/landlineconfirmedsuccessfully(in:)","title":"func landlineConfirmedSuccessfully(in: LandlineVerificationFlowController)","type":"method"}],"path":"\/documentation\/divar\/landlineverificationflowcontrollerdelegate","title":"LandlineVerificationFlowControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/listscrollingdelegate\/listscrolling(_:didscrollto:)","title":"func listScrolling(UIViewController, didScrollTo: ScrollingDirection)","type":"method"}],"path":"\/documentation\/divar\/listscrollingdelegate","title":"ListScrollingDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/locationbuttonlabelhelper\/displayvaluefor(_:)-2xf40","title":"func displayValueFor([SingleMultiModel]) -> String","type":"method"}],"title":"LocationButtonLabelHelper Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/locationbuttonlabelhelper\/displayvaluefor(_:)-7nb8l","title":"func displayValueFor([SingleMultiModel]) -> String","type":"method"}],"path":"\/documentation\/divar\/locationbuttonlabelhelper","title":"LocationButtonLabelHelper","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/locationmanagerfactoryprotocol\/locationmanager","title":"var locationManager: LocationManagerProtocol","type":"property"}],"path":"\/documentation\/divar\/locationmanagerfactoryprotocol","title":"LocationManagerFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/locationmanagerprotocol\/authorizationstatus","title":"var authorizationStatus: CLAuthorizationStatus","type":"property"},{"path":"\/documentation\/divar\/locationmanagerprotocol\/locationenabled","title":"var locationEnabled: Bool","type":"property"}],"path":"\/documentation\/divar\/locationmanagerprotocol","title":"LocationManagerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/locationservicefactoryprotocol\/locationservice","title":"var locationService: LocationServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/locationservicefactoryprotocol","title":"LocationServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/locationserviceprotocol\/getcities()","title":"func getCities() async -> Result<Cities, DError>","type":"method"},{"path":"\/documentation\/divar\/locationserviceprotocol\/getdistricts(city:)","title":"func getDistricts(city: Place) async -> Result<[Place], DError>","type":"method"},{"path":"\/documentation\/divar\/locationserviceprotocol\/getdistrictsgeo(city:)","title":"func getDistrictsGeo(city: Place) async -> Result<Naghshe_GetGeoJsonResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/locationserviceprotocol\/getlocationforedit(cityid:districtid:)","title":"func getLocationForEdit(cityId: Int, districtId: Int?) async -> Location?","type":"method"},{"path":"\/documentation\/divar\/locationserviceprotocol\/getnearbylocation(lat:long:)","title":"func getNearbyLocation(lat: Double, long: Double) async -> Result<Location, DError>","type":"method"},{"path":"\/documentation\/divar\/locationserviceprotocol\/locationwidgetsearch(searchkey:query:source:field:cityid:)","title":"func locationWidgetSearch(searchKey: String?, query: String, source: HierarchySearchSources, field: String, cityID: Int) async -> Result<[Place], Error>","type":"method"},{"path":"\/documentation\/divar\/locationserviceprotocol\/searchstreets(city:query:)","title":"func searchStreets(city: Place, query: String) async -> Result<StreetListResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/locationserviceprotocol","title":"LocationServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/loginrequiredprotocol\/loginifneeded(dataprovider:alreadyloginhandler:afterloginhandler:)-73jqe","title":"func loginIfNeeded(dataProvider: DataProviderProtocol, alreadyLoginHandler: (() -> Void)?, afterLoginHandler: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/loginrequiredprotocol\/loginifneeded(dataprovider:alreadyloginhandler:afterloginhandler:)-6mywj","title":"func loginIfNeeded(dataProvider: DataProviderProtocol, alreadyLoginHandler: (() -> Void)?, afterLoginHandler: (() -> Void)?)","type":"method"}],"title":"LoginRequiredProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/loginrequiredprotocol\/loginifneeded(dataprovider:alreadyloginhandler:afterloginhandler:)-5lcg2","title":"func loginIfNeeded(dataProvider: DataProviderProtocol, alreadyLoginHandler: (() -> Void)?, afterLoginHandler: (() -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/loginrequiredprotocol\/loginifneeded(dataprovider:alreadyloginhandler:afterloginhandler:refreshingdataenable:)-1uhx5","title":"func loginIfNeeded(dataProvider: DataProviderProtocol, alreadyLoginHandler: (() -> Void)?, afterLoginHandler: (() -> Void)?, refreshingDataEnable: Bool)","type":"method"},{"path":"\/documentation\/divar\/loginrequiredprotocol\/loginifneeded(dataprovider:alreadyloginhandler:afterloginhandler:refreshingdataenable:)-3107e","title":"func loginIfNeeded(dataProvider: DataProviderProtocol, alreadyLoginHandler: (() -> Void)?, afterLoginHandler: (() -> Void)?, refreshingDataEnable: Bool)","type":"method"}],"title":"LoginRequiredProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/loginrequiredprotocol\/loginifneeded(dataprovider:alreadyloginhandler:afterloginhandler:refreshingdataenable:)-91rdc","title":"func loginIfNeeded(dataProvider: DataProviderProtocol, alreadyLoginHandler: (() -> Void)?, afterLoginHandler: (() -> Void)?, refreshingDataEnable: Bool)","type":"method"}],"path":"\/documentation\/divar\/loginrequiredprotocol","title":"LoginRequiredProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapactionhandler\/openmapbottomsheet(_:)","title":"func openMapBottomSheet(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/mapactionhandler","title":"MapActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontrollerdelegate\/selecteddatadidchanged(_:selecteddata:)","title":"func selectedDataDidChanged(MapDistrictSelectorViewController, selectedData: [SingleMultiModel])","type":"method"},{"path":"\/documentation\/divar\/mapdistrictselectorviewcontrollerdelegate\/submitbuttondidtapped(_:)","title":"func submitButtonDidTapped(MapDistrictSelectorViewController)","type":"method"}],"path":"\/documentation\/divar\/mapdistrictselectorviewcontrollerdelegate","title":"MapDistrictSelectorViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapselectorviewcontrollerdelegate\/mapselectorcontroller(_:didselectlocation:)","title":"func mapSelectorController(MapSelectorViewController, didSelectLocation: Location)","type":"method"}],"path":"\/documentation\/divar\/mapselectorviewcontrollerdelegate","title":"MapSelectorViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/cancelpromotion(_:)","title":"func cancelPromotion(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/finalizemarketplaceeditstore(_:)","title":"func finalizeMarketplaceEditStore(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/finalizemarketplaceregisterstore(_:)","title":"func finalizeMarketplaceRegisterStore(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/marketplacefreesubscription(_:)","title":"func marketplaceFreeSubscription(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/marketplaceremoveassistant(_:)","title":"func marketplaceRemoveAssistant(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/openmakretplaceprize(_:)","title":"func openMakretplacePrize(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/openmarketplaceassistantpage(_:)","title":"func openMarketplaceAssistantPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/openmarketplacebulkladder(_:)","title":"func openMarketplaceBulkLadder(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/openmarketplacefeatureslist(_:)","title":"func openMarketplaceFeaturesList(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/openmarketplacegetcontact(_:)","title":"func openMarketplaceGetContact(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/openmarketplacepostfeedbackoptions(_:)","title":"func openMarketplacePostFeedbackOptions(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/openmarketplacepostsmanagementpage(_:)","title":"func openMarketplacePostsManagementPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/openmarketplaceregisterpage(_:)","title":"func openMarketplaceRegisterPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/openmarketplacestorestatspage(_:)","title":"func openMarketplaceStoreStatsPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/openmarketplacestoreslist(_:)","title":"func openMarketplaceStoresList(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/openmarketplacesubscriptionstatus(_:)","title":"func openMarketplaceSubscriptionStatus(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/openmarketplaceviewpostfeedbackpage(_:)","title":"func openMarketplaceViewPostFeedbackPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/postponeregisterstore(_:)","title":"func postponeRegisterStore(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceactionhandler\/sharestorelanding(_:)","title":"func shareStoreLanding(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/marketplaceactionhandler","title":"MarketPlaceActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceformactionhandler\/openmarketplaceaddsalesman(_:)","title":"func openMarketplaceAddSalesman(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformactionhandler\/openmarketplaceaddstoremanager(_:)","title":"func openMarketplaceAddStoreManager(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformactionhandler\/openmarketplaceeditassistantpage(_:)","title":"func openMarketplaceEditAssistantPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformactionhandler\/openmarketplaceeditstore(_:)","title":"func openMarketplaceEditStore(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformactionhandler\/openmarketplacepurchasesubscription(_:)","title":"func openMarketplacePurchaseSubscription(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformactionhandler\/openmarketplacequickeditpost(_:)","title":"func openMarketplaceQuickEditPost(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformactionhandler\/openmarketplacesubmit(_:)","title":"func openMarketplaceSubmit(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceformactionhandler\/openmarketplacesubmitpostfeedback(_:)","title":"func openMarketplaceSubmitPostFeedback(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/marketplaceformactionhandler","title":"MarketplaceFormActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepriceactionhandler\/openmobilepricepage(_:)","title":"func openMobilePricePage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/marketplacepriceactionhandler","title":"MarketplacePriceActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacequickeditpostactionhandler\/openmarketplacequickeditpostslist(_:)","title":"func openMarketplaceQuickEditPostsList(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/marketplacequickeditpostactionhandler","title":"MarketplaceQuickEditPostActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceregisteractionhandler\/openmarketplaceeditstoredetails(_:)","title":"func openMarketplaceEditStoreDetails(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/marketplaceregisteractionhandler\/openmarketplaceregisterdetailspage(_:)","title":"func openMarketplaceRegisterDetailsPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/marketplaceregisteractionhandler","title":"MarketplaceRegisterActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceservicefactoryprotocol\/marketplaceservice","title":"var marketplaceService: MarketplaceServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/marketplaceservicefactoryprotocol","title":"MarketplaceServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/addsalesman(model:)","title":"func addSalesman(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/addstoremanager(model:)","title":"func addStoreManager(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/authenticatemarketplacelandlinenumber(number:)","title":"func authenticateMarketplaceLandlineNumber(number: String) async -> Result<MarketPlace_LandlineAuthenticationResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/cancelpromotion()","title":"func cancelPromotion() async -> Result<MarketPlace_CancelPromotionResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/editassitant(phonenumber:model:)","title":"func editAssitant(phoneNumber: String, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/editmarketplacestore(section:model:)","title":"func editMarketplaceStore(section: Int32?, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/finalizemarketplaceeditstore()","title":"func finalizeMarketplaceEditStore() async -> Result<MarketPlace_FinalizeEditStoreResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/finalizemarketplaceregisterstore()","title":"func finalizeMarketplaceRegisterStore() async -> Result<MarketPlace_FinalizeRegisterStoreResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/getmarketplacesubmitpageschema(model:)","title":"func getMarketplaceSubmitPageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/getmarketplacesubscriptionpurchasepageschema(purchasetype:categorytype:model:)","title":"func getMarketplaceSubscriptionPurchasePageSchema(purchaseType: Int, categoryType: Int, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/mobilezeropricepage(pinned:query:infinitescrol:)","title":"func mobileZeroPricePage(pinned: [String], query: String?, infiniteScrol: Widgets_InfiniteScrollResponse?) async -> Result<KalaDetails_GetMobilePricePageResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/quickeditmarketplacepost(mngtoken:model:)","title":"func quickEditMarketplacePost(mngToken: String, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/registermarketplacestore(section:model:)","title":"func registerMarketplaceStore(section: Int32?, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/registerstoreskipstep(section:model:)","title":"func registerStoreSkipStep(section: Int32?, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/removeassistant(phonenumber:)","title":"func removeAssistant(phoneNumber: String) async -> Result<MarketPlace_RemoveAssistantResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/startmarketplacefreesubscription()","title":"func startMarketplaceFreeSubscription() async -> Result<MarketPlace_ActivateFreeSubscriptionResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/submitmarketpalcepostfeedback(data:model:)","title":"func submitMarketpalcePostFeedback(data: Widgets_MarketplaceSubmitPostFeedbackPayload, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/marketplaceserviceprotocol\/validatemarketplacelandlinenumber(code:number:)","title":"func validateMarketplaceLandlineNumber(code: String, number: String) async -> Result<MarketPlace_ValidateLandlineResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/marketplaceserviceprotocol","title":"MarketplaceServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/maxseletablerequest\/hasmaxseletablelimit","title":"var hasMaxSeletableLimit: Bool","type":"property"},{"path":"\/documentation\/divar\/maxseletablerequest\/maxselectableitems","title":"var maxSelectableItems: Int32?","type":"property"}],"path":"\/documentation\/divar\/maxseletablerequest","title":"MaxSeletableRequest","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecellconfigurator\/configcell()","title":"func configCell()","type":"method"},{"path":"\/documentation\/divar\/messagecellconfigurator\/fillmessageview()","title":"func fillMessageView()","type":"method"},{"path":"\/documentation\/divar\/messagecellconfigurator\/layoutrowifneeded()","title":"func layoutRowIfNeeded()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/messagecellconfigurator\/registercell(tableview:)-eizz","title":"static func registerCell(tableView: UITableView)","type":"method"}],"title":"MessageCellConfigurator Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/messagecellconfigurator\/registercell(tableview:)-2wtxt","title":"static func registerCell(tableView: UITableView)","type":"method"}],"path":"\/documentation\/divar\/messagecellconfigurator","title":"MessageCellConfigurator","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecellprotocol\/chatdata","title":"var chatData: ChatFillableCellStruct?","type":"property"},{"path":"\/documentation\/divar\/messagecellprotocol\/menuoptions","title":"var menuOptions: [MessageCellOptions]","type":"property"},{"path":"\/documentation\/divar\/messagecellprotocol\/parent","title":"var parent: MessagingViewController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/messagecellprotocol\/copy(_:)-94qxh","title":"func copy(ChatFillableCellStruct?)","type":"method"}],"title":"MessageCellProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/messagecellprotocol\/copy(_:)-4qri","title":"func copy(ChatFillableCellStruct?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/messagecellprotocol\/delete(_:)-6og7q","title":"func delete(ChatFillableCellStruct?)","type":"method"}],"title":"MessageCellProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/messagecellprotocol\/delete(_:)-2duc2","title":"func delete(ChatFillableCellStruct?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/messagecellprotocol\/edit(_:)-5fa69","title":"func edit(ChatFillableCellStruct?)","type":"method"}],"title":"MessageCellProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/messagecellprotocol\/edit(_:)-1ekjq","title":"func edit(ChatFillableCellStruct?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/messagecellprotocol\/forward(_:)-3bnji","title":"func forward(ChatFillableCellStruct?)","type":"method"}],"title":"MessageCellProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/messagecellprotocol\/forward(_:)-75nks","title":"func forward(ChatFillableCellStruct?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/messagecellprotocol\/prepareformenu()-7ajtc","title":"func prepareForMenu()","type":"method"}],"title":"MessageCellProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/messagecellprotocol\/prepareformenu()-8t6qk","title":"func prepareForMenu()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/messagecellprotocol\/reply(_:)-6seo8","title":"func reply(ChatFillableCellStruct?)","type":"method"}],"title":"MessageCellProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/messagecellprotocol\/reply(_:)-2l0ue","title":"func reply(ChatFillableCellStruct?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/messagecellprotocol\/showmenu()-9xxm","title":"func showMenu()","type":"method"}],"title":"MessageCellProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/messagecellprotocol\/showmenu()-50yls","title":"func showMenu()","type":"method"}],"path":"\/documentation\/divar\/messagecellprotocol","title":"MessageCellProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecellrequestdatasource\/cachehelper","title":"var cacheHelper: ChatCacheRequestHelper?","type":"property"},{"path":"\/documentation\/divar\/messagecellrequestdatasource\/downloadurl","title":"var downloadURL: String?","type":"property"},{"path":"\/documentation\/divar\/messagecellrequestdatasource\/isdownloading","title":"var isDownloading: Bool","type":"property"},{"path":"\/documentation\/divar\/messagecellrequestdatasource\/messageid","title":"var messageID: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecellrequestdatasource\/performwithuploadprogress(queue:progressblock:)","title":"func performWithUploadProgress(queue: DispatchQueue, progressBlock: ProgressBlock)","type":"method"}],"path":"\/documentation\/divar\/messagecellrequestdatasource","title":"MessageCellRequestDataSource","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecellstateprotocol\/setmessagestate(_:)","title":"func setMessageState((ChatConversationMessageTable) -> Bool)","type":"method"}],"path":"\/documentation\/divar\/messagecellstateprotocol","title":"MessageCellStateProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate\/adjustinputareaheightconstraint(height:)","title":"func adjustInputAreaHeightConstraint(height: CGFloat)","type":"method"},{"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate\/didrequestchoosefile()","title":"func didRequestChooseFile()","type":"method"},{"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate\/didrequestopencameracontroller()","title":"func didRequestOpenCameraController()","type":"method"},{"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate\/didrequestopenimagepicker()","title":"func didRequestOpenImagePicker()","type":"method"},{"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate\/didrequestopenlocationselector()","title":"func didRequestOpenLocationSelector()","type":"method"},{"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate\/didrequestsendcontactinfo()","title":"func didRequestSendContactInfo()","type":"method"},{"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate\/didrequestsendtextmessage(message:)","title":"func didRequestSendTextMessage(message: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate\/didrequestsendtypingevent(_:)","title":"func didRequestSendTypingEvent(Bool)","type":"method"},{"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate\/didrequestsendvoice(voicepath:)","title":"func didRequestSendVoice(voicePath: URL)","type":"method"},{"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate\/didrequestvideorecorder()","title":"func didRequestVideoRecorder()","type":"method"},{"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate\/messageinputarea(_:didrequesteditmessagewithtext:)","title":"func messageInputArea(InputAreaViewController, didRequestEditMessageWithText: String)","type":"method"},{"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate\/startedrecordingaudio()","title":"func startedRecordingAudio()","type":"method"}],"path":"\/documentation\/divar\/messageinputareaviewcontrollerdelegate","title":"MessageInputAreaViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontrollerdelegate\/closebuttondidclick(_:)","title":"func closeButtonDidClick(MessagePreviewBarViewController)","type":"method"}],"path":"\/documentation\/divar\/messagepreviewbarviewcontrollerdelegate","title":"MessagePreviewBarViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagingviewcontrollerdelegate\/didrequestasknickname(_:)","title":"func didRequestAskNickname(MessagingViewController)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontrollerdelegate\/didrequestdeletemessage(_:)","title":"func didRequestDeleteMessage(ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontrollerdelegate\/didrequesteditmessage(_:)","title":"func didRequestEditMessage(ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontrollerdelegate\/didrequestforwardmessage(_:)","title":"func didRequestForwardMessage(ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/messagingviewcontrollerdelegate\/didrequestreplytomessage(_:)","title":"func didRequestReplyToMessage(ChatConversationMessageTable)","type":"method"}],"path":"\/documentation\/divar\/messagingviewcontrollerdelegate","title":"MessagingViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/mirrorassociated\/associatedvalues-20cr9","title":"var associatedValues: [String : Any]","type":"property"}],"title":"MirrorAssociated Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/mirrorassociated\/associatedvalues-5x0tp","title":"var associatedValues: [String : Any]","type":"property"}],"path":"\/documentation\/divar\/mirrorassociated","title":"MirrorAssociated","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/multiconversationdeletedelegate\/multideletevc(_:didrequestdeleteconversations:)","title":"func multiDeleteVC(MultiConversationDeleteViewController, didRequestDeleteConversations: [ChatConversationTable])","type":"method"}],"path":"\/documentation\/divar\/multiconversationdeletedelegate","title":"MultiConversationDeleteDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivaractionhandler\/logoutuser(_:)","title":"func logoutUser(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/mydivaractionhandler\/openbookmarkandnotes(_:)","title":"func openBookmarkAndNotes(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/mydivaractionhandler\/openloginuser(_:)","title":"func openLoginUser(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/mydivaractionhandler\/openmyposts(_:)","title":"func openMyPosts(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/mydivaractionhandler\/openrecentposts(_:)","title":"func openRecentPosts(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/mydivaractionhandler","title":"MyDivarActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarholderviewcontrollerdelegate\/openaboutdivar(_:)","title":"func openAboutDivar(MyDivarHolderViewController)","type":"method"},{"path":"\/documentation\/divar\/mydivarholderviewcontrollerdelegate\/opensupportandterms(_:)","title":"func openSupportAndTerms(MyDivarHolderViewController)","type":"method"}],"path":"\/documentation\/divar\/mydivarholderviewcontrollerdelegate","title":"MyDivarHolderViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mypostsviewcontrollerdelegate\/mypostsviewcontroller(didselectpostwith:managetoken:)","title":"func myPostsViewController(didSelectPostWith: String, manageToken: String?)","type":"method"}],"path":"\/documentation\/divar\/mypostsviewcontrollerdelegate","title":"MyPostsViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/nationalidverificationflowcontrollerdelegate\/nationalidconfirmedsuccessfully(in:)","title":"func nationalIdConfirmedSuccessfully(in: NationalIdVerificationFlowController)","type":"method"}],"path":"\/documentation\/divar\/nationalidverificationflowcontrollerdelegate","title":"NationalIdVerificationFlowControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/networklayerprotocol\/downloadfile(downloadurl:filepath:progress:)","title":"func downloadFile(downloadURL: String, filePath: URL, progress: ((Progress) -> Void)) async -> ResponseModel<Data, Error>","type":"method"},{"path":"\/documentation\/divar\/networklayerprotocol\/request(model:)","title":"func request(model: RequestModel) async -> ResponseModel<Data, Error>","type":"method"},{"path":"\/documentation\/divar\/networklayerprotocol\/upload(model:)","title":"func upload(model: DataRequestModel) async -> ResponseModel<Data, Error>","type":"method"},{"path":"\/documentation\/divar\/networklayerprotocol\/uploadfile(content:to:progress:)","title":"func uploadFile(content: [UploadModel], to: String, progress: ((Progress) -> Void)) async -> ResponseModel<Data, Error>","type":"method"},{"path":"\/documentation\/divar\/networklayerprotocol\/uploadvideo(model:completion:)","title":"func uploadVideo(model: VideoUploadModel, completion: (ResponseModel<Data, Error>) -> Void) -> Request?","type":"method"}],"path":"\/documentation\/divar\/networklayerprotocol","title":"NetworkLayerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/noteservicefactoryprotocol\/noteservice","title":"var noteService: NoteServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/noteservicefactoryprotocol","title":"NoteServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noteserviceprotocol\/clearlocalnotes()","title":"func clearLocalNotes()","type":"method"},{"path":"\/documentation\/divar\/noteserviceprotocol\/clearnotes()","title":"func clearNotes() async throws","type":"method"},{"path":"\/documentation\/divar\/noteserviceprotocol\/deletenote(posttoken:)","title":"func deleteNote(postToken: String)","type":"method"},{"path":"\/documentation\/divar\/noteserviceprotocol\/getlocalusernotes()","title":"func getLocalUserNotes() -> [UserPostListTable]?","type":"method"},{"path":"\/documentation\/divar\/noteserviceprotocol\/getnote(for:)","title":"func getNote(for: String) -> String?","type":"method"},{"path":"\/documentation\/divar\/noteserviceprotocol\/getusernote()","title":"func getUserNote() async -> Result<UserPostLists, DError>","type":"method"},{"path":"\/documentation\/divar\/noteserviceprotocol\/setnote(posttoken:note:)","title":"func setNote(postToken: String, note: String)","type":"method"}],"path":"\/documentation\/divar\/noteserviceprotocol","title":"NoteServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noteviewcontrollerdelegate\/noteviewcontroller(_:didfinishchangingnote:)","title":"func noteViewController(NoteViewController, didFinishChangingNote: String?)","type":"method"}],"path":"\/documentation\/divar\/noteviewcontrollerdelegate","title":"NoteViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notewithbottombardelegate\/notewithbottombar(_:didsubmitnote:)","title":"func noteWithBottomBar(NoteWithBottomBarViewController, didSubmitNote: String)","type":"method"},{"path":"\/documentation\/divar\/notewithbottombardelegate\/notewithbottombardidrequestdismiss(_:)","title":"func noteWithBottomBarDidRequestDismiss(NoteWithBottomBarViewController)","type":"method"}],"path":"\/documentation\/divar\/notewithbottombardelegate","title":"NoteWithBottomBarDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notesviewcontrollerdelegate\/notesviewcontroller(didselectpostwith:managetoken:)","title":"func notesViewController(didSelectPostWith: String, manageToken: String?)","type":"method"}],"path":"\/documentation\/divar\/notesviewcontrollerdelegate","title":"NotesViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numberinputprotocol\/model","title":"var model: NumberInputModel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numberinputprotocol\/buttonclicked(vc:value:)","title":"func buttonClicked(vc: NumberInputViewController, value: String?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/numberinputprotocol\/isvalid(input:)-3hb4i","title":"func isValid(input: String) -> Bool","type":"method"}],"title":"NumberInputProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/numberinputprotocol\/isvalid(input:)-6ekb4","title":"func isValid(input: String) -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/numberinputprotocol\/isvalidrange(input:)-7skgp","title":"func isValidRange(input: String) -> Bool","type":"method"}],"title":"NumberInputProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/numberinputprotocol\/isvalidrange(input:)-4nvdp","title":"func isValidRange(input: String) -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/numberinputprotocol\/viewdidload()-5hpe2","title":"func viewDidLoad()","type":"method"}],"title":"NumberInputProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/numberinputprotocol\/viewdidload()-5zrh6","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/numberinputprotocol","title":"NumberInputProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numberinputviewcontrollerdelegate\/numberenteredsuccessfully(_:with:needsverify:)","title":"func numberEnteredSuccessfully(NumberInputViewController, with: String, needsVerify: Bool)","type":"method"}],"path":"\/documentation\/divar\/numberinputviewcontrollerdelegate","title":"NumberInputViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numberstepperdelegate\/numberstepper(_:didselectleftbutton:)","title":"func numberStepper(NumberStepper, didSelectLeftButton: String)","type":"method"},{"path":"\/documentation\/divar\/numberstepperdelegate\/numberstepper(_:didselectrightbutton:)","title":"func numberStepper(NumberStepper, didSelectRightButton: String)","type":"method"}],"path":"\/documentation\/divar\/numberstepperdelegate","title":"NumberStepperDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontrollerdelegate\/numberdialogwidgetcontroller(_:didentered:)","title":"func numberDialogWidgetController(NumberTextFieldDialogWidgetController, didEntered: Int64?)","type":"method"}],"path":"\/documentation\/divar\/numbertextfielddialogwidgetcontrollerdelegate","title":"NumberTextFieldDialogWidgetControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecontrollerdelegate\/numbertextfieldpagecontroller(_:didselect:)","title":"func numberTextFieldPageController(NumberTextFieldPageController, didSelect: Int64?)","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagecontrollerdelegate","title":"NumberTextFieldPageControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcellmodel\/placeholdertext","title":"var placeholderText: String?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcellmodel\/secondarytext","title":"var secondaryText: String?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcellmodel\/subtitlecolor","title":"var subtitleColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcellmodel\/subtitletext","title":"var subtitleText: String?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcellmodel\/textfieldtext","title":"var textFieldText: String?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcellmodel\/titledescription","title":"var titleDescription: String?","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldwidgetcellmodel\/titletext","title":"var titleText: String?","type":"property"}],"path":"\/documentation\/divar\/numbertextfieldwidgetcellmodel","title":"NumberTextFieldWidgetCellModel","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/offlinepageviewcontrollerdelegate\/pulltorefresh(_:)","title":"func pullToRefresh(OfflinePageViewController)","type":"method"}],"path":"\/documentation\/divar\/offlinepageviewcontrollerdelegate","title":"OfflinePageViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/openpageactionhandler\/loadofflinepage(_:)","title":"func loadOfflinePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/openpageactionhandler\/openpage(_:)","title":"func openPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/openpageactionhandler","title":"OpenPageActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/operatormanagementactionhandler\/dealershipconfirmoperatorinvitation(_:)","title":"func dealershipConfirmOperatorInvitation(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/operatormanagementactionhandler\/dealershipdeleteoperator(_:)","title":"func dealershipDeleteOperator(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/operatormanagementactionhandler\/dealershipoperatorsmanagement(_:)","title":"func dealershipOperatorsManagement(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/operatormanagementactionhandler","title":"OperatorManagementActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/option\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/divar\/option","title":"Option","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/outsidelinkactionhandler\/makecall(_:)","title":"func makeCall(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/outsidelinkactionhandler\/openurloutside(_:)","title":"func openURLOutside(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/outsidelinkactionhandler","title":"OutsideLinkActionHandler","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/divar\/posoprotocol\/datatype","title":"DataType","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/posoprotocol\/init(id:data:)","title":"init(id: String, data: DataType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/posoprotocol\/data","title":"var data: DataType","type":"property"},{"path":"\/documentation\/divar\/posoprotocol\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/divar\/posoprotocol","title":"POSOProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pageextractor\/page","title":"var page: Widgets_Page","type":"property"}],"path":"\/documentation\/divar\/pageextractor","title":"PageExtractor","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paginatablerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/paginatablerequest\/pagination","title":"var pagination: Pagination","type":"property"}],"path":"\/documentation\/divar\/paginatablerequest","title":"PaginatableRequest","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalbannercompatible\/bannercontainer","title":"var bannerContainer: UIView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalbannercompatible\/estimateheight(withconstrainedwidth:)","title":"func estimateHeight(withConstrainedWidth: CGFloat) -> CGFloat","type":"method"}],"path":"\/documentation\/divar\/panmodalbannercompatible","title":"PanModalBannerCompatible","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/allowsdragtodismiss-9dqht","title":"var allowsDragToDismiss: Bool","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/allowsdragtodismiss-68ufa","title":"var allowsDragToDismiss: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/allowsextendedpanscrolling-8v7io","title":"var allowsExtendedPanScrolling: Bool","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/allowsextendedpanscrolling-82iir","title":"var allowsExtendedPanScrolling: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/allowstaptodismiss-91ofm","title":"var allowsTapToDismiss: Bool","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/allowstaptodismiss-72zai","title":"var allowsTapToDismiss: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/anchormodaltolongform-six0","title":"var anchorModalToLongForm: Bool","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/anchormodaltolongform-1gm59","title":"var anchorModalToLongForm: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/banner-2wo9k","title":"var banner: PanModalBannerCompatible?","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/banner-7394","title":"var banner: PanModalBannerCompatible?","type":"property"},{"path":"\/documentation\/divar\/panmodalpresentable\/bottomlayoutoffset","title":"var bottomLayoutOffset: CGFloat","type":"property"},{"path":"\/documentation\/divar\/panmodalpresentable\/bottomypos","title":"var bottomYPos: CGFloat","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/cornerradius-997vg","title":"var cornerRadius: CGFloat","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/cornerradius-ejcm","title":"var cornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/divar\/panmodalpresentable\/hasbanner","title":"var hasBanner: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/ishapticfeedbackenabled-38tyz","title":"var isHapticFeedbackEnabled: Bool","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/ishapticfeedbackenabled-62hgc","title":"var isHapticFeedbackEnabled: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/isuserinteractionenabled-4xv26","title":"var isUserInteractionEnabled: Bool","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/isuserinteractionenabled-9kmvx","title":"var isUserInteractionEnabled: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/longformheight-x3dv","title":"var longFormHeight: PanModalHeight","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/longformheight-7ftwp","title":"var longFormHeight: PanModalHeight","type":"property"},{"path":"\/documentation\/divar\/panmodalpresentable\/longformypos","title":"var longFormYPos: CGFloat","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/panmodalbackgroundcolor-4vdpp","title":"var panModalBackgroundColor: UIColor","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/panmodalbackgroundcolor-m5ub","title":"var panModalBackgroundColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/panmodalpresentable\/panscrollable","title":"var panScrollable: UIScrollView?","type":"property"},{"path":"\/documentation\/divar\/panmodalpresentable\/presentedvc","title":"var presentedVC: PanModalPresentationController?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/scrollindicatorinsets-4in1b","title":"var scrollIndicatorInsets: UIEdgeInsets","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/scrollindicatorinsets-6nhbf","title":"var scrollIndicatorInsets: UIEdgeInsets","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/shortformheight-4mn4j","title":"var shortFormHeight: PanModalHeight","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/shortformheight-8jyj","title":"var shortFormHeight: PanModalHeight","type":"property"},{"path":"\/documentation\/divar\/panmodalpresentable\/shortformypos","title":"var shortFormYPos: CGFloat","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/shouldroundtopcorners-60rcy","title":"var shouldRoundTopCorners: Bool","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/shouldroundtopcorners-31n83","title":"var shouldRoundTopCorners: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/showdragindicator-47f41","title":"var showDragIndicator: Bool","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/showdragindicator-39y43","title":"var showDragIndicator: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/springdamping-9ffba","title":"var springDamping: CGFloat","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/springdamping-97rm6","title":"var springDamping: CGFloat","type":"property"},{"path":"\/documentation\/divar\/panmodalpresentable\/toplayoutoffset","title":"var topLayoutOffset: CGFloat","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/topoffset-4dpb7","title":"var topOffset: CGFloat","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/topoffset-7ltll","title":"var topOffset: CGFloat","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/transitionanimationoptions-98w1x","title":"var transitionAnimationOptions: UIView.AnimationOptions","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/transitionanimationoptions-43fsa","title":"var transitionAnimationOptions: UIView.AnimationOptions","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/transitionduration-2gpiz","title":"var transitionDuration: Double","type":"property"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/transitionduration-4s7uk","title":"var transitionDuration: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentable\/panmodalanimate(_:_:)","title":"func panModalAnimate(AnimationBlockType, AnimationCompletionType?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/panmodaldiddismiss()-7siok","title":"func panModalDidDismiss()","type":"method"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/panmodaldiddismiss()-75255","title":"func panModalDidDismiss()","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentable\/panmodalperformupdates(_:)","title":"func panModalPerformUpdates(() -> Void)","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentable\/panmodalsetneedslayoutupdate()","title":"func panModalSetNeedsLayoutUpdate()","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentable\/panmodaltransition(to:)","title":"func panModalTransition(to: PanModalPresentationController.PresentationState)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/panmodalwilldismiss()-vpva","title":"func panModalWillDismiss()","type":"method"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/panmodalwilldismiss()-8zrm7","title":"func panModalWillDismiss()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/shouldprioritize(panmodalgesturerecognizer:)-806dr","title":"func shouldPrioritize(panModalGestureRecognizer: UIPanGestureRecognizer) -> Bool","type":"method"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/shouldprioritize(panmodalgesturerecognizer:)-15bkk","title":"func shouldPrioritize(panModalGestureRecognizer: UIPanGestureRecognizer) -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/shouldrespond(to:)-3w67v","title":"func shouldRespond(to: UIPanGestureRecognizer) -> Bool","type":"method"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/shouldrespond(to:)-74baa","title":"func shouldRespond(to: UIPanGestureRecognizer) -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/shouldtransition(to:)-1gtqd","title":"func shouldTransition(to: PanModalPresentationController.PresentationState) -> Bool","type":"method"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/shouldtransition(to:)-72n1n","title":"func shouldTransition(to: PanModalPresentationController.PresentationState) -> Bool","type":"method"},{"path":"\/documentation\/divar\/panmodalpresentable\/topmargin(from:)","title":"func topMargin(from: PanModalHeight) -> CGFloat","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/willrespond(to:)-9n1n0","title":"func willRespond(to: UIPanGestureRecognizer)","type":"method"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/willrespond(to:)-4i11m","title":"func willRespond(to: UIPanGestureRecognizer)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/panmodalpresentable\/willtransition(to:)-9u6am","title":"func willTransition(to: PanModalPresentationController.PresentationState)","type":"method"}],"title":"PanModalPresentable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/panmodalpresentable\/willtransition(to:)-5ip8n","title":"func willTransition(to: PanModalPresentationController.PresentationState)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresentable\/animationblocktype","title":"PanModalPresentable.AnimationBlockType","type":"typealias"},{"path":"\/documentation\/divar\/panmodalpresentable\/animationcompletiontype","title":"PanModalPresentable.AnimationCompletionType","type":"typealias"},{"path":"\/documentation\/divar\/panmodalpresentable\/layouttype","title":"PanModalPresentable.LayoutType","type":"typealias"}],"path":"\/documentation\/divar\/panmodalpresentable","title":"PanModalPresentable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresenter\/ispanmodalpresented","title":"var isPanModalPresented: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalpresenter\/presentpanmodal(_:)","title":"func presentPanModal(PanModalPresentable.LayoutType)","type":"method"}],"path":"\/documentation\/divar\/panmodalpresenter","title":"PanModalPresenter","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentactionhandler\/startpayment(_:)","title":"func startPayment(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/paymentactionhandler","title":"PaymentActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentservicefactoryprotocol\/paymentservice","title":"var paymentService: PaymentServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/paymentservicefactoryprotocol","title":"PaymentServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentserviceprotocol\/getorderid(requestpath:requestdata:)","title":"func getOrderId(requestPath: String, requestData: [String : Any]) async -> Result<Paymentcore_StartPaymentResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/paymentserviceprotocol\/getpaymentform(username:costs:)","title":"func getPaymentForm(username: String, costs: [Int]) async -> Result<PostPaymentBankFormStructure, Error>","type":"method"},{"path":"\/documentation\/divar\/paymentserviceprotocol\/getpaymentorderid(withtoken:costs:)","title":"func getPaymentOrderId(withToken: String, costs: [Int]) async -> Result<Payment_StartPostPaymentResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/paymentserviceprotocol\/getpaymentstatus(orderid:)","title":"func getPaymentStatus(orderId: String) async -> Result<Paymentcore_GetPaymentStatusResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/paymentserviceprotocol\/getpaymenturl(withorderid:)","title":"func getPaymentURL(withOrderId: String) async -> Result<Paymentcore_GetPaymentUrlResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/paymentserviceprotocol\/getpostpaymenthistory(mngtoken:)","title":"func getPostPaymentHistory(mngToken: String) async -> Result<[PostPaymentHistoryStructure], DError>","type":"method"},{"path":"\/documentation\/divar\/paymentserviceprotocol\/getpostpayments(mngtoken:)","title":"func getPostPayments(mngToken: String) async -> Result<[PostPaymentStructure], DError>","type":"method"},{"path":"\/documentation\/divar\/paymentserviceprotocol\/redeemcode(code:cost:mngtoken:)","title":"func redeemCode(code: String, cost: Int, mngToken: String) async -> Result<Payment_RedeemGiftResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/paymentserviceprotocol","title":"PaymentServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentsystemprotocol\/orderid","title":"var orderId: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/paymentsystemprotocol\/requestpaymenturl(orderid:service:)-8fl32","title":"func requestPaymentUrl(orderId: String, service: PaymentServiceProtocol)","type":"method"}],"title":"PaymentSystemProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/paymentsystemprotocol\/requestpaymenturl(orderid:service:)-5etm5","title":"func requestPaymentUrl(orderId: String, service: PaymentServiceProtocol)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/paymentsystemprotocol\/requestpaymenturl(orderid:service:completion:)-68sqk","title":"func requestPaymentUrl(orderId: String, service: PaymentServiceProtocol, completion: (Swift.Result<Paymentcore_GetPaymentUrlResponse, DError>) -> Void)","type":"method"}],"title":"PaymentSystemProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/paymentsystemprotocol\/requestpaymenturl(orderid:service:completion:)-9j9st","title":"func requestPaymentUrl(orderId: String, service: PaymentServiceProtocol, completion: (Swift.Result<Paymentcore_GetPaymentUrlResponse, DError>) -> Void)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/paymentsystemprotocol\/validatepayment(orderid:service:)-9vshr","title":"func validatePayment(orderId: String, service: PaymentServiceProtocol)","type":"method"}],"title":"PaymentSystemProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/paymentsystemprotocol\/validatepayment(orderid:service:)-91j29","title":"func validatePayment(orderId: String, service: PaymentServiceProtocol)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/paymentsystemprotocol\/validatepayment(service:)-7b2c6","title":"func validatePayment(service: PaymentServiceProtocol)","type":"method"}],"title":"PaymentSystemProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/paymentsystemprotocol\/validatepayment(service:)-7s7vz","title":"func validatePayment(service: PaymentServiceProtocol)","type":"method"}],"path":"\/documentation\/divar\/paymentsystemprotocol","title":"PaymentSystemProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitorfactoryprotocol\/performancemonitor","title":"var performanceMonitor: PerformanceMonitorProtocol","type":"property"}],"path":"\/documentation\/divar\/performancemonitorfactoryprotocol","title":"PerformanceMonitorFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitorprotocol\/eventchildfinished(eventcategory:eventname:reason:)","title":"func eventChildFinished(eventCategory: String, eventName: String, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/performancemonitorprotocol\/eventchildstarted(eventcategory:eventname:description:)","title":"func eventChildStarted(eventCategory: String, eventName: String, description: String?)","type":"method"},{"path":"\/documentation\/divar\/performancemonitorprotocol\/eventfinished(eventcategory:eventpayload:reason:)","title":"func eventFinished(eventCategory: String, eventPayload: [String : Any]?, reason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/performancemonitorprotocol\/eventstarted(eventcategory:eventname:eventpayload:customdata:)","title":"func eventStarted(eventCategory: String, eventName: String, eventPayload: [String : Any]?, customData: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/performancemonitorprotocol\/logevent(data:)","title":"func logEvent(data: Any)","type":"method"}],"path":"\/documentation\/divar\/performancemonitorprotocol","title":"PerformanceMonitorProtocol","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/permissionprotocol\/deniedtitle","title":"static var deniedTitle: String","type":"property"},{"path":"\/documentation\/divar\/permissionprotocol\/requesttitle","title":"static var requestTitle: String","type":"property"},{"path":"\/documentation\/divar\/permissionprotocol\/status","title":"static var status: Permission.Status","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/permissionprotocol\/requestauthorize(completion:)","title":"static func requestAuthorize(completion: (Bool) -> Void)","type":"method"}],"path":"\/documentation\/divar\/permissionprotocol","title":"PermissionProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/personalaccountblockingviewdelegate\/openaboutdivar()","title":"func openAboutDivar()","type":"method"},{"path":"\/documentation\/divar\/personalaccountblockingviewdelegate\/opensupportandterms()","title":"func openSupportAndTerms()","type":"method"}],"path":"\/documentation\/divar\/personalaccountblockingviewdelegate","title":"PersonalAccountBlockingViewDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/photomessagecelldelegate\/photomessagecell(_:didrequesttoshowpreviewformessage:)","title":"func photoMessageCell(PhotoMessageCell, didRequestToShowPreviewForMessage: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/photomessagecelldelegate\/photomessagecell(_:triessendingimageformessage:)","title":"func photoMessageCell(PhotoMessageCell, triesSendingImageForMessage: ChatConversationMessageTable)","type":"method"}],"path":"\/documentation\/divar\/photomessagecelldelegate","title":"PhotoMessageCellDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/playaudiodelegate\/audiodownloaded(withfilename:)","title":"func audioDownloaded(withFileName: String?)","type":"method"},{"path":"\/documentation\/divar\/playaudiodelegate\/audioplaystatus(status:)","title":"func audioPlayStatus(status: AudioPlayerStatus)","type":"method"}],"path":"\/documentation\/divar\/playaudiodelegate","title":"PlayAudioDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/point\/coordinate","title":"var coordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/divar\/point\/latitude","title":"var latitude: Float","type":"property"},{"path":"\/documentation\/divar\/point\/longitude","title":"var longitude: Float","type":"property"}],"path":"\/documentation\/divar\/point","title":"Point","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/popandperformactionhandler\/perform(_:)","title":"func perform(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/popandperformactionhandler","title":"PopAndPerformActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postarchiveviewcontrollerdelegate\/cancelcarinspectionsuccess(_:)","title":"func cancelCarInspectionSuccess(PostArchiveViewController)","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontrollerdelegate\/didreportbrandpost(_:)","title":"func didReportBrandPost(PostArchiveViewController)","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontrollerdelegate\/didreportpost(_:)","title":"func didReportPost(PostArchiveViewController)","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontrollerdelegate\/didrequestdetailspage(_:data:post:)","title":"func didRequestDetailsPage(PostArchiveViewController, data: SingleMultiModel, post: PostViewStructure?)","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontrollerdelegate\/didrequestregisterpage(_:)","title":"func didRequestRegisterPage(PostArchiveViewController)","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontrollerdelegate\/postarchivedidarchivepost(_:post:)","title":"func postArchiveDidArchivePost(PostArchiveViewController, post: PostViewStructure)","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontrollerdelegate\/postarchivedidrequestshowchildren(_:children:)","title":"func postArchiveDidRequestShowChildren(PostArchiveViewController, children: [SingleMultiModel])","type":"method"},{"path":"\/documentation\/divar\/postarchiveviewcontrollerdelegate\/postreportdidrequestshowchildren(_:children:)","title":"func postReportDidRequestShowChildren(PostArchiveViewController, children: [SingleMultiModel])","type":"method"}],"path":"\/documentation\/divar\/postarchiveviewcontrollerdelegate","title":"PostArchiveViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postchatnavigator\/loginrequiredprotocol","title":"var loginRequiredProtocol: LoginRequiredProtocol?","type":"property"},{"path":"\/documentation\/divar\/postchatnavigator\/postchatnavigatorcontainer","title":"var postChatNavigatorContainer: PostChatNavigatorDIContainer","type":"property"},{"path":"\/documentation\/divar\/postchatnavigator\/presentingnavigationcontroller","title":"var presentingNavigationController: NavigationController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postchatnavigator\/openpostchat(_:)","title":"func openPostChat(String)","type":"method"}],"path":"\/documentation\/divar\/postchatnavigator","title":"PostChatNavigator","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcreateservicefactoryprotocol\/postcreateservice","title":"var postCreateService: PostCreateServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/postcreateservicefactoryprotocol","title":"PostCreateServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcreateserviceprotocol\/getpersonalsubmitpageschema(model:)","title":"func getPersonalSubmitPageSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"}],"path":"\/documentation\/divar\/postcreateserviceprotocol","title":"PostCreateServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcreateviewcontrollerdelegate\/postcreatedidsavepost(_:slug:posttype:phone:)","title":"func postCreateDidSavePost(PostCreateViewController, slug: String, postType: UserType, phone: String)","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontrollerdelegate\/postcreatedidupdatefailongettingdata(_:)","title":"func postCreateDidUpdateFailOnGettingData(PostCreateViewController)","type":"method"},{"path":"\/documentation\/divar\/postcreateviewcontrollerdelegate\/postcreatedidupdatepost(_:)","title":"func postCreateDidUpdatePost(PostCreateViewController)","type":"method"}],"path":"\/documentation\/divar\/postcreateviewcontrollerdelegate","title":"PostCreateViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailsactionhandler\/opencarinspectioncustomermanagepage(_:)","title":"func openCarInspectionCustomerManagePage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsactionhandler\/openmap(_:)","title":"func openMap(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsactionhandler\/opennote(_:)","title":"func openNote(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsactionhandler\/openpagepreview(_:)","title":"func openPagePreview(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsactionhandler\/openpostchat(_:)","title":"func openPostChat(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsactionhandler\/openpostgetcontact(_:)","title":"func openPostGetContact(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsactionhandler\/openpostreport(_:)","title":"func openPostReport(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsactionhandler\/openpostsuggestionpost(_:)","title":"func openPostSuggestionPost(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsactionhandler\/openpostview(_:)","title":"func openPostView(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postdetailsactionhandler\/openusersuggestionpage(_:)","title":"func openUserSuggestionPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/postdetailsactionhandler","title":"PostDetailsActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactsviewcontrollerdelegate\/postgetcontactviewcontroller(_:didrequestshowfeedbackwithtoken:)","title":"func postGetContactViewController(PostGetContactsViewController, didRequestShowFeedbackWithToken: String)","type":"method"},{"path":"\/documentation\/divar\/postgetcontactsviewcontrollerdelegate\/shouldchangebookmark(isbookmarked:)","title":"func shouldChangeBookmark(isBookmarked: Bool)","type":"method"}],"path":"\/documentation\/divar\/postgetcontactsviewcontrollerdelegate","title":"PostGetContactsViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistactionhandler\/openpostlistpage(_:)","title":"func openPostlistPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/postlistactionhandler","title":"PostListActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistservicefactoryprotocol\/postlistservice","title":"var postListService: PostListServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/postlistservicefactoryprotocol","title":"PostListServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistserviceprotocol\/getpostlist(_:)","title":"func getPostList(GetPostListStruct) async -> Result<PostList, DError>","type":"method"}],"path":"\/documentation\/divar\/postlistserviceprotocol","title":"PostListServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewmodeldatasource\/postlisttabbedviewmodel(_:page:offset:tabfilters:tabindex:onloadmore:)","title":"func postListTabbedViewModel(PostListTabbedViewModel, page: Int, offset: CLongLong, tabFilters: [String : Any]?, tabIndex: Int, onLoadMore: PostModelsResultClosure)","type":"method"},{"path":"\/documentation\/divar\/postlisttabbedviewmodeldatasource\/postlisttabbedviewmodel(_:tabfilters:tabindex:onrefresh:ontabchange:)","title":"func postListTabbedViewModel(PostListTabbedViewModel, tabFilters: [String : Any]?, tabIndex: Int, onRefresh: PostModelsResultClosure, onTabChange: (TabList?) -> Void)","type":"method"}],"path":"\/documentation\/divar\/postlisttabbedviewmodeldatasource","title":"PostListTabbedViewModelDataSource","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewmodelprotocol\/selectedtabindex","title":"var selectedTabIndex: Int","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewmodelprotocol\/selectedtabindex$","title":"var selectedTabIndex$: AnyPublisher<Int, Never>","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewmodelprotocol\/tabitems","title":"var tabItems: [TabData]","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewmodelprotocol\/tabitems$","title":"var tabItems$: AnyPublisher<[TabData], Never>","type":"property"},{"path":"\/documentation\/divar\/postlisttabbedviewmodelprotocol\/tooltiptab$","title":"var tooltipTab$: AnyPublisher<TooltipTab?, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlisttabbedviewmodelprotocol\/filtersdidchange()","title":"func filtersDidChange()","type":"method"},{"path":"\/documentation\/divar\/postlisttabbedviewmodelprotocol\/reload()","title":"func reload()","type":"method"},{"path":"\/documentation\/divar\/postlisttabbedviewmodelprotocol\/selecttab(at:)","title":"func selectTab(at: Int)","type":"method"}],"path":"\/documentation\/divar\/postlisttabbedviewmodelprotocol","title":"PostListTabbedViewModelProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didrequestcategoryselectorwith:)-26rfc","title":"func postListViewModel(PostListViewModel, didRequestCategorySelectorWith: Schema)","type":"method"}],"title":"PostListViewModelDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didrequestcategoryselectorwith:)-5uljs","title":"func postListViewModel(PostListViewModel, didRequestCategorySelectorWith: Schema)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didrequestfilterseteditor:inputsuggestionkey:)-4sjsv","title":"func postListViewModel(PostListViewModel, didRequestFilterSetEditor: SearchFilterHistory, inputSuggestionKey: String?)","type":"method"}],"title":"PostListViewModelDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didrequestfilterseteditor:inputsuggestionkey:)-6nf39","title":"func postListViewModel(PostListViewModel, didRequestFilterSetEditor: SearchFilterHistory, inputSuggestionKey: String?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didrequestfilteringcities:)-26spq","title":"func postListViewModel(PostListViewModel, didRequestFilteringCities: [String])","type":"method"}],"title":"PostListViewModelDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didrequestfilteringcities:)-9oaeh","title":"func postListViewModel(PostListViewModel, didRequestFilteringCities: [String])","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didrequestfilteringposts:)-5tp0k","title":"func postListViewModel(PostListViewModel, didRequestFilteringPosts: SearchFilterHistory)","type":"method"}],"title":"PostListViewModelDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didrequestfilteringposts:)-3yz6b","title":"func postListViewModel(PostListViewModel, didRequestFilteringPosts: SearchFilterHistory)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didrequestperformwidgetaction:)-2w9vg","title":"func postListViewModel(PostListViewModel, didRequestPerformWidgetAction: Widgets_Widget)","type":"method"}],"title":"PostListViewModelDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didrequestperformwidgetaction:)-53uhm","title":"func postListViewModel(PostListViewModel, didRequestPerformWidgetAction: Widgets_Widget)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didrequestwidgetaction:)-3s2l","title":"func postListViewModel(PostListViewModel, didRequestWidgetAction: Widgets_Action)","type":"method"}],"title":"PostListViewModelDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didrequestwidgetaction:)-5uum8","title":"func postListViewModel(PostListViewModel, didRequestWidgetAction: Widgets_Action)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didselectpost:from:)-9r2y6","title":"func postListViewModel(PostListViewModel, didSelectPost: PostModel, from: PostViewSource)","type":"method"}],"title":"PostListViewModelDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/postlistviewmodeldelegate\/postlistviewmodel(_:didselectpost:from:)-3xk0h","title":"func postListViewModel(PostListViewModel, didSelectPost: PostModel, from: PostViewSource)","type":"method"}],"path":"\/documentation\/divar\/postlistviewmodeldelegate","title":"PostListViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/carouselitems$","title":"var carouselItems$: AnyPublisher<[StickyCategory]?, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/cityname$","title":"var cityName$: AnyPublisher<String, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/error$","title":"var error$: AnyPublisher<(error: DError, onReload: (() -> Void)?), Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/ismulticityenabled","title":"var isMultiCityEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/navigationtitle$","title":"var navigationTitle$: AnyPublisher<String?, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/nocatpage","title":"var noCatPage: Bool","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/postlisttabbedviewmodel","title":"var postListTabbedViewModel: PostListTabbedViewModelProtocol","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/reload$","title":"var reload$: AnyPublisher<Void, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/searchboxtext$","title":"var searchBoxText$: AnyPublisher<(String?, Bool), Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/searchviewmodel","title":"var searchViewModel: SearchViewModelProtocol","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/selectedtabbarindex","title":"var selectedTabbarIndex: Int?","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/showalerttoaskpermissionforcitychanges$","title":"var showAlertToAskPermissionForCityChanges$: AnyPublisher<String, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/showtooltiponcitychanges$","title":"var showToolTipOnCityChanges$: AnyPublisher<String, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/taglistsuggestion$","title":"var tagListsuggestion$: AnyPublisher<[TagListSuggestion]?, Never>","type":"property"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/viewstate$","title":"var viewState$: AnyPublisher<ViewState, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/reload(filterset:isfromsearch:)","title":"func reload(filterSet: SearchFilterHistory, isFromSearch: Bool?)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/reload(isfromsearch:)","title":"func reload(isFromSearch: Bool)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/searchboxsearchbuttonclicked(searchtext:)","title":"func searchBoxSearchButtonClicked(searchText: String)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/searchboxtextdidchange(_:)","title":"func searchBoxTextDidChange(String)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/selectcarouselitem(_:)","title":"func selectCarouselItem(Schema)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/selectcity()","title":"func selectCity()","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/taglistdidselect(item:index:)","title":"func tagListDidSelect(item: TagListItem, index: Int)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/taglistdidremove(item:)","title":"func taglistDidRemove(item: TagListItem)","type":"method"},{"path":"\/documentation\/divar\/postlistviewmodelprotocol\/userpermissionresulttochangecities(granted:)","title":"func userPermissionResultToChangeCities(granted: Bool)","type":"method"}],"path":"\/documentation\/divar\/postlistviewmodelprotocol","title":"PostListViewModelProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanageactionhandler\/authnationalid(_:)","title":"func authNationalID(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageactionhandler\/authtelephonenumber(_:)","title":"func authTelephoneNumber(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageactionhandler\/claimpost(_:)","title":"func claimPost(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageactionhandler\/openarchivepost(_:)","title":"func openArchivePost(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageactionhandler\/openauthuser(_:)","title":"func openAuthUser(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageactionhandler\/openmydivarpostmanage(_:)","title":"func openMyDivarPostManage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageactionhandler\/openpaymenthistory(_:)","title":"func openPaymentHistory(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageactionhandler\/openpostmanage(_:)","title":"func openPostManage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/postmanageactionhandler\/openupgradepost(_:)","title":"func openUpgradePost(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/postmanageactionhandler","title":"PostManageActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentviewcontrollerdelegate\/postpaymentdidrequestpaymenthistory(_:mngtoken:)","title":"func postPaymentDidRequestPaymentHistory(PostPaymentViewController, mngToken: String)","type":"method"},{"path":"\/documentation\/divar\/postpaymentviewcontrollerdelegate\/postpaymentdidrequestshowingcoderedeem(_:mngtoken:payment:)","title":"func postPaymentDidRequestShowingCodeRedeem(PostPaymentViewController, mngToken: String, payment: PostPaymentStructure)","type":"method"}],"path":"\/documentation\/divar\/postpaymentviewcontrollerdelegate","title":"PostPaymentViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postredeemcodecontrollerdelegate\/redeemcodesucceded(vc:message:)","title":"func redeemCodeSucceded(vc: PostRedeemCodeController, message: String)","type":"method"}],"path":"\/documentation\/divar\/postredeemcodecontrollerdelegate","title":"PostRedeemCodeControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontrollerdelegate\/didreportpost(_:)","title":"func didReportPost(PostReportDescriptionViewController)","type":"method"}],"path":"\/documentation\/divar\/postreportdescriptionviewcontrollerdelegate","title":"PostReportDescriptionViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewlistcelldelegate\/didselectpostviewlistcell(data:)","title":"func didSelectPostViewListCell(data: ListDataStructure?)","type":"method"}],"path":"\/documentation\/divar\/postviewlistcelldelegate","title":"PostViewListCellDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewservicefactoryprotocol\/postviewservice","title":"var postViewService: PostViewServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/postviewservicefactoryprotocol","title":"PostViewServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewserviceprotocol\/contacts(path:)","title":"func contacts(path: String) async -> Result<GetContactWidgets, DError>","type":"method"},{"path":"\/documentation\/divar\/postviewserviceprotocol\/getcontactbottomsheet(token:for:)","title":"func getContactBottomSheet(token: String, for: UserType) async -> Result<Widgets_BottomSheet, DError>","type":"method"},{"path":"\/documentation\/divar\/postviewserviceprotocol\/getcontactwidgets(token:for:)","title":"func getContactWidgets(token: String?, for: UserType) async -> Result<WidgetGetContactWidgets, DError>","type":"method"},{"path":"\/documentation\/divar\/postviewserviceprotocol\/getreportreasons()","title":"func getReportReasons() async -> Result<[ReportReason], DError>","type":"method"},{"path":"\/documentation\/divar\/postviewserviceprotocol\/reportpost(posttoken:reason:description:phone:)","title":"func reportPost(postToken: String, reason: String, description: String?, phone: String?) async -> Result<Void, DError>","type":"method"}],"path":"\/documentation\/divar\/postviewserviceprotocol","title":"PostViewServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postfixtextfieldprotocol\/changetextforpostfix()","title":"func changeTextForPostFix() -> Bool","type":"method"}],"path":"\/documentation\/divar\/postfixtextfieldprotocol","title":"PostfixTextFieldProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/postsviewcontrollerdelegate\/scrollviewdidscroll(_:)-apm4","title":"func scrollViewDidScroll(UIScrollView)","type":"method"}],"title":"PostsViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/postsviewcontrollerdelegate\/scrollviewdidscroll(_:)-5o14z","title":"func scrollViewDidScroll(UIScrollView)","type":"method"},{"path":"\/documentation\/divar\/postsviewcontrollerdelegate\/scrollviewshouldscrolltotop()","title":"func scrollViewShouldScrollToTop() -> Bool","type":"method"}],"path":"\/documentation\/divar\/postsviewcontrollerdelegate","title":"PostsViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewmodeldatasource\/postsviewmodel(_:)","title":"func postsViewModel(PostModelsResultClosure)","type":"method"},{"path":"\/documentation\/divar\/postsviewmodeldatasource\/postsviewmodel(page:offset:_:)","title":"func postsViewModel(page: Int, offset: CLongLong, PostModelsResultClosure)","type":"method"}],"path":"\/documentation\/divar\/postsviewmodeldatasource","title":"PostsViewModelDataSource","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/postsviewmodeldelegate\/postsviewmodel(_:didrequestperformwidgetaction:)-1sw20","title":"func postsViewModel(PostsViewModelProtocol, didRequestPerformWidgetAction: Widgets_Widget)","type":"method"}],"title":"PostsViewModelDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/postsviewmodeldelegate\/postsviewmodel(_:didrequestperformwidgetaction:)-648sf","title":"func postsViewModel(PostsViewModelProtocol, didRequestPerformWidgetAction: Widgets_Widget)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/postsviewmodeldelegate\/postsviewmodel(_:didrequestperformwidgetaction:widget:actionlog:)-1k55w","title":"func postsViewModel(PostsViewModelProtocol, didRequestPerformWidgetAction: Widgets_Action, widget: Widgets_Widget, actionLog: ActionLog_ActionLogCoordinator?)","type":"method"}],"title":"PostsViewModelDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/postsviewmodeldelegate\/postsviewmodel(_:didrequestperformwidgetaction:widget:actionlog:)-2d8da","title":"func postsViewModel(PostsViewModelProtocol, didRequestPerformWidgetAction: Widgets_Action, widget: Widgets_Widget, actionLog: ActionLog_ActionLogCoordinator?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/postsviewmodeldelegate\/postsviewmodel(_:didrequstfilterpostswithfilter:isfromsearch:)-of3t","title":"func postsViewModel(PostsViewModelProtocol, didRequstFilterPostsWithFilter: [String : Any], isFromSearch: Bool)","type":"method"}],"title":"PostsViewModelDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/postsviewmodeldelegate\/postsviewmodel(_:didrequstfilterpostswithfilter:isfromsearch:)-7hbwg","title":"func postsViewModel(PostsViewModelProtocol, didRequstFilterPostsWithFilter: [String : Any], isFromSearch: Bool)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/postsviewmodeldelegate\/postsviewmodel(_:didselectpost:at:)-4ns67","title":"func postsViewModel(PostsViewModelProtocol, didSelectPost: PostModel, at: IndexPath)","type":"method"}],"title":"PostsViewModelDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/postsviewmodeldelegate\/postsviewmodel(_:didselectpost:at:)-7gwoi","title":"func postsViewModel(PostsViewModelProtocol, didSelectPost: PostModel, at: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/postsviewmodeldelegate","title":"PostsViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewmodelprotocol\/canloadmore","title":"var canLoadMore: Bool","type":"property"},{"path":"\/documentation\/divar\/postsviewmodelprotocol\/emptystatemessage","title":"var emptyStateMessage: String?","type":"property"},{"path":"\/documentation\/divar\/postsviewmodelprotocol\/loadingstatus$","title":"var loadingStatus$: AnyPublisher<PostsLoadingStatus, Never>","type":"property"},{"path":"\/documentation\/divar\/postsviewmodelprotocol\/posts$","title":"var posts$: AnyPublisher<[PostModel], Never>","type":"property"},{"path":"\/documentation\/divar\/postsviewmodelprotocol\/poststoappend$","title":"var postsToAppend$: AnyPublisher<[PostModel], Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsviewmodelprotocol\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/divar\/postsviewmodelprotocol\/loadmore()","title":"func loadMore()","type":"method"},{"path":"\/documentation\/divar\/postsviewmodelprotocol\/refresh()","title":"func refresh()","type":"method"},{"path":"\/documentation\/divar\/postsviewmodelprotocol\/select(action:widget:actionlogcoordinator:)","title":"func select(action: Widgets_Action, widget: Widgets_Widget, actionLogCoordinator: ActionLog_ActionLogCoordinator?)","type":"method"},{"path":"\/documentation\/divar\/postsviewmodelprotocol\/select(post:at:)","title":"func select(post: PostModel, at: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/postsviewmodelprotocol","title":"PostsViewModelProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/privacycelldelegate\/privacycell(_:didtaponurl:)","title":"func privacyCell(PrivacyCell, didTapOnUrl: URL)","type":"method"}],"path":"\/documentation\/divar\/privacycelldelegate","title":"PrivacyCellDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/privateactionlogclickactionbuilder\/click()","title":"func click() -> PrivateActionLogBuilder","type":"method"}],"path":"\/documentation\/divar\/privateactionlogclickactionbuilder","title":"PrivateActionLogClickActionBuilder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/privateactionlogloadactionbuilder\/load()","title":"func load() -> PrivateActionLogBuilder","type":"method"}],"path":"\/documentation\/divar\/privateactionlogloadactionbuilder","title":"PrivateActionLogLoadActionBuilder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/privateactionlogsearchactionbuilder\/search()","title":"func search() -> PrivateActionLogBuilder","type":"method"}],"path":"\/documentation\/divar\/privateactionlogsearchactionbuilder","title":"PrivateActionLogSearchActionBuilder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/privateactionlogsecondaryclickactionbuilder\/secondaryclick()","title":"func secondaryClick() -> PrivateActionLogBuilder","type":"method"}],"path":"\/documentation\/divar\/privateactionlogsecondaryclickactionbuilder","title":"PrivateActionLogSecondaryClickActionBuilder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/privateactionlogviewactionbuilder\/view()","title":"func view() -> PrivateActionLogBuilder","type":"method"}],"path":"\/documentation\/divar\/privateactionlogviewactionbuilder","title":"PrivateActionLogViewActionBuilder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/protobufresponseprotocol\/handleprotobuf(_:_:response:)","title":"func handleProtobuf<E, R>(E.Type, R.Type, response: ResponseModel<Data, DError>) -> Swift.Result<R, DError>","type":"method"},{"path":"\/documentation\/divar\/protobufresponseprotocol\/handleprotobuf(_:response:)","title":"func handleProtobuf<E>(E.Type, response: ResponseModel<Data, DError>) -> Swift.Result<E, DError>","type":"method"}],"path":"\/documentation\/divar\/protobufresponseprotocol","title":"ProtobufResponseProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pushprotocol\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pushprotocol\/application(_:didfinishlaunchingwithoptions:)","title":"func application(UIApplication, didFinishLaunchingWithOptions: [UIApplication.LaunchOptionsKey : Any]?)","type":"method"},{"path":"\/documentation\/divar\/pushprotocol\/login(identifier:)","title":"func login(identifier: String)","type":"method"},{"path":"\/documentation\/divar\/pushprotocol\/logout()","title":"func logout()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/pushprotocol\/manualregisterforremotenotifications()-3ui2k","title":"func manualRegisterForRemoteNotifications()","type":"method"}],"title":"PushProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/pushprotocol\/manualregisterforremotenotifications()-1m6kx","title":"func manualRegisterForRemoteNotifications()","type":"method"}],"path":"\/documentation\/divar\/pushprotocol","title":"PushProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pushservicefactoryprotocol\/pushservice","title":"var pushService: PushServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/pushservicefactoryprotocol","title":"PushServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pushserviceprotocol\/subscribepush(data:)","title":"func subscribePush(data: PushSubscribeRequest) async -> Result<PushSubscribeResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/pushserviceprotocol\/unsubscribepush(playerid:)","title":"func unsubscribePush(playerID: String) async throws","type":"method"}],"path":"\/documentation\/divar\/pushserviceprotocol","title":"PushServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/qaconfiguration\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/qaconfiguration\/fire()","title":"func fire()","type":"method"}],"path":"\/documentation\/divar\/qaconfiguration","title":"QAConfiguration","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/quicklookprotocol\/showfile(in:mediaurls:filenames:currentindex:)-9u30l","title":"func showFile(in: UIViewController, mediaURLs: [String], fileNames: [String], currentIndex: Int)","type":"method"}],"title":"QuickLookProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/quicklookprotocol\/showfile(in:mediaurls:filenames:currentindex:)-2qhsh","title":"func showFile(in: UIViewController, mediaURLs: [String], fileNames: [String], currentIndex: Int)","type":"method"}],"path":"\/documentation\/divar\/quicklookprotocol","title":"QuickLookProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/restprediction\/createpredictable(withprediction:)","title":"func createPredictable(withPrediction: String) -> Self","type":"method"}],"path":"\/documentation\/divar\/restprediction","title":"RESTPrediction","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/resttabularwidgetbasedrequestbuilder\/decoraterequestbuilder(with:)-9mq3m","title":"func decorateRequestBuilder(with: String) -> RESTWidgetBasedRequestBuilder & WidgetBasedConfigurable","type":"method"}],"title":"RESTTabularWidgetBasedRequestBuilder Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/resttabularwidgetbasedrequestbuilder\/decoraterequestbuilder(with:)-7sz3c","title":"func decorateRequestBuilder(with: String) -> RESTWidgetBasedRequestBuilder & WidgetBasedConfigurable","type":"method"}],"path":"\/documentation\/divar\/resttabularwidgetbasedrequestbuilder","title":"RESTTabularWidgetBasedRequestBuilder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/restwidgetbasedrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/restwidgetbasedrequestbuilder","title":"RESTWidgetBasedRequestBuilder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeselectcelldelegate\/rangecellvaluechanged(_:)","title":"func rangeCellValueChanged(RangeSelectTableViewCell)","type":"method"}],"path":"\/documentation\/divar\/rangeselectcelldelegate","title":"RangeSelectCellDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rateviewcontrollerdelegate\/submitratesuccessfully(_:_:)","title":"func submitRateSuccessfully(RateViewController, String)","type":"method"}],"path":"\/documentation\/divar\/rateviewcontrollerdelegate","title":"RateViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugclientinfoproviderprotocol\/clientinfo","title":"var clientInfo: [String : Any]","type":"property"}],"path":"\/documentation\/divar\/rawplugclientinfoproviderprotocol","title":"RawPlugClientInfoProviderProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugservicefactoryprotocol\/rawplugservice","title":"var rawPlugService: RawPlugService","type":"property"}],"path":"\/documentation\/divar\/rawplugservicefactoryprotocol","title":"RawPlugServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateactionhandler\/answerpanelinvitation(_:)","title":"func answerPanelInvitation(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/openagencyinformation(_:)","title":"func openAgencyInformation(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/openagencypage(_:)","title":"func openAgencyPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/openagentmanagement(_:)","title":"func openAgentManagement(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/openagentusage(_:)","title":"func openAgentUsage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/openagentsusagelist(_:)","title":"func openAgentsUsageList(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/openbulkladder(_:)","title":"func openBulkLadder(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/openfaq(_:)","title":"func openFAQ(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/opengetcontact(_:)","title":"func openGetContact(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/openindependentagentonboardingpage(_:)","title":"func openIndependentAgentOnboardingPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/openpanelinvitationlist(_:)","title":"func openPanelInvitationList(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/openrealestatepaymenthistory(_:)","title":"func openRealEstatePaymentHistory(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/opensubscriptionstatus(_:)","title":"func openSubscriptionStatus(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateactionhandler\/openviewvr(_:)","title":"func openViewVR(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/realestateactionhandler","title":"RealEstateActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateformactionhandler\/openaddeditagent(_:)","title":"func openAddEditAgent(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateformactionhandler\/openaddvrform(_:)","title":"func openAddVRForm(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateformactionhandler\/openrealestatedigitalregistration(_:)","title":"func openRealEstateDigitalRegistration(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateformactionhandler\/openrealestateindependentagentregister(_:)","title":"func openRealEstateIndependentAgentRegister(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateformactionhandler\/openrealestatesubmit(_:)","title":"func openRealEstateSubmit(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateformactionhandler\/openrealestatesubscription(_:)","title":"func openRealEstateSubscription(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/realestateformactionhandler\/opensendfeedbackmessage(_:)","title":"func openSendFeedbackMessage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/realestateformactionhandler","title":"RealEstateFormActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateservicefactoryprotocol\/realestateservice","title":"var realEstateService: RealEstateServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/realestateservicefactoryprotocol","title":"RealEstateServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateserviceprotocol\/addvr(managetoken:model:)","title":"func addVR(manageToken: String, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/realestateserviceprotocol\/deleterealestateagent(id:)","title":"func deleteRealEstateAgent(id: Int32) async -> Result<RealEstate_RemoveAgentResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/realestateserviceprotocol\/getagentmanagementschema(model:)","title":"func getAgentManagementSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/realestateserviceprotocol\/getfeedbackaftercall(for:_:)","title":"func getFeedbackAfterCall(for: String, GRPCResponseType<RealEstate_GetAfterCallFeedbackResponse>)","type":"method"},{"path":"\/documentation\/divar\/realestateserviceprotocol\/getpurchasepageschema(purchasetype:consumertype:model:)","title":"func getPurchasePageSchema(purchaseType: String, consumerType: String, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/realestateserviceprotocol\/getrealestatedigitalregistration(model:)","title":"func getRealEstateDigitalRegistration(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/realestateserviceprotocol\/getregisterindependentagentschema(model:)","title":"func getRegisterIndependentAgentSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/realestateserviceprotocol\/getsubmitpageschema(submittype:model:)","title":"func getSubmitPageSchema(submitType: String?, model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/realestateserviceprotocol\/sendfeedbackaftercallreason(reasonid:posttoken:_:)","title":"func sendFeedbackAfterCallReason(reasonId: Int32, postToken: String, GRPCResponseType<Google_Protobuf_Empty>)","type":"method"},{"path":"\/documentation\/divar\/realestateserviceprotocol\/sendrealestatefeedbackmessage(model:)","title":"func sendRealEstateFeedbackMessage(model: SchemaRequestModel) async -> FormResultValue","type":"method"}],"path":"\/documentation\/divar\/realestateserviceprotocol","title":"RealEstateServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/recentvisitsviewcontrollerdelegate\/recentvisitsviewcontroller(didselectpostwith:managetoken:)","title":"func recentVisitsViewController(didSelectPostWith: String, manageToken: String?)","type":"method"}],"path":"\/documentation\/divar\/recentvisitsviewcontrollerdelegate","title":"RecentVisitsViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/refreshableprotocol\/refreshdata()","title":"func refreshData()","type":"method"}],"path":"\/documentation\/divar\/refreshableprotocol","title":"RefreshableProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/reloadablerow\/reloadrow()","title":"func reloadRow()","type":"method"}],"path":"\/documentation\/divar\/reloadablerow","title":"ReloadableRow","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/requestheaderprotocol\/init(user:)","title":"init(user: User)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/requestheaderprotocol\/authenticationtoken","title":"var authenticationToken: String?","type":"property"},{"path":"\/documentation\/divar\/requestheaderprotocol\/defaultheaders","title":"var defaultHeaders: [String : String]","type":"property"},{"path":"\/documentation\/divar\/requestheaderprotocol\/user","title":"var user: User","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/requestheaderprotocol\/getheaders(withextraheaders:)","title":"func getHeaders(withExtraHeaders: [String : String]?) -> [String : String]","type":"method"}],"path":"\/documentation\/divar\/requestheaderprotocol","title":"RequestHeaderProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/restwidgetbasedservicefactoryprotocol\/restwidgetbasedservice","title":"var restWidgetBasedService: RestWidgetBasedServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/restwidgetbasedservicefactoryprotocol","title":"RestWidgetBasedServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/restwidgetbasedserviceprotocol\/sendwidgetbasedrequest(request:responsetype:completion:)","title":"func sendWidgetBasedRequest<ResponseType>(request: RESTWidgetBaseRequestPayload, responseType: ResponseType.Type, completion: ExtractableResult) -> Cancellable?","type":"method"}],"path":"\/documentation\/divar\/restwidgetbasedserviceprotocol","title":"RestWidgetBasedServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/returnable\/identifier","title":"var identifier: PageIdentifier?","type":"property"}],"path":"\/documentation\/divar\/returnable","title":"Returnable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/reusablecelldequeuable\/dequeuereusablecell(for:)-6ramr","title":"func dequeueReusableCell<T>(for: IndexPath) -> T?","type":"method"},{"path":"\/documentation\/divar\/reusablecelldequeuable\/dequeuereusablecell(for:)-7ewip","title":"func dequeueReusableCell<T>(for: IndexPath) -> T?","type":"method"}],"title":"ReusableCellDequeuable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/reusablecelldequeuable\/dequeuereusablecell(for:)-91826","title":"func dequeueReusableCell<T>(for: IndexPath) -> T?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/reusablecelldequeuable\/dequeuereusablecell(of:for:)-93il2","title":"func dequeueReusableCell<T>(of: T.Type, for: IndexPath) -> T?","type":"method"},{"path":"\/documentation\/divar\/reusablecelldequeuable\/dequeuereusablecell(of:for:)-5jps0","title":"func dequeueReusableCell<T>(of: T.Type, for: IndexPath) -> T?","type":"method"}],"title":"ReusableCellDequeuable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/reusablecelldequeuable\/dequeuereusablecell(of:for:)-2c47b","title":"func dequeueReusableCell<T>(of: T.Type, for: IndexPath) -> T?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/reusablecelldequeuable\/unsafedequeuereusablecell(for:)-8d5zj","title":"func unsafeDequeueReusableCell<T>(for: IndexPath) -> T","type":"method"},{"path":"\/documentation\/divar\/reusablecelldequeuable\/unsafedequeuereusablecell(for:)-7xup3","title":"func unsafeDequeueReusableCell<T>(for: IndexPath) -> T","type":"method"}],"title":"ReusableCellDequeuable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/reusablecelldequeuable\/unsafedequeuereusablecell(for:)-1ikay","title":"func unsafeDequeueReusableCell<T>(for: IndexPath) -> T","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/reusablecelldequeuable\/unsafedequeuereusablecell(of:for:)-9reae","title":"func unsafeDequeueReusableCell<T>(of: T.Type, for: IndexPath) -> T","type":"method"},{"path":"\/documentation\/divar\/reusablecelldequeuable\/unsafedequeuereusablecell(of:for:)-6f3oj","title":"func unsafeDequeueReusableCell<T>(of: T.Type, for: IndexPath) -> T","type":"method"}],"title":"ReusableCellDequeuable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/reusablecelldequeuable\/unsafedequeuereusablecell(of:for:)-77jmw","title":"func unsafeDequeueReusableCell<T>(of: T.Type, for: IndexPath) -> T","type":"method"}],"path":"\/documentation\/divar\/reusablecelldequeuable","title":"ReusableCellDequeuable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/rowdisableprotocol\/checkdisabled()-71l53","title":"func checkDisabled()","type":"method"}],"title":"RowDisableProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/rowdisableprotocol\/checkdisabled()-ds4d","title":"func checkDisabled()","type":"method"}],"path":"\/documentation\/divar\/rowdisableprotocol","title":"RowDisableProtocol","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sqltableprotocol\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/sqltableprotocol","title":"SQLTableProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/saleassistantactionhandler\/openmarketplaceassitantmanagementpage(_:)","title":"func openMarketplaceAssitantManagementPage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/saleassistantactionhandler","title":"SaleAssistantActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaformservicefactoryprotocol\/schemaformservice","title":"var schemaFormService: SchemaFormServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/schemaformservicefactoryprotocol","title":"SchemaFormServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaformserviceprotocol\/getschemapageschema(model:requestpath:additionaldata:)","title":"func getSchemaPageSchema(model: SchemaRequestModel, requestPath: String, additionalData: [String : Any]?) async -> FormResultValue","type":"method"}],"path":"\/documentation\/divar\/schemaformserviceprotocol","title":"SchemaFormServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/screenshotprotocol\/sourceview","title":"var sourceView: ActionLog_ScreenshotActionInfo.Source","type":"property"}],"path":"\/documentation\/divar\/screenshotprotocol","title":"ScreenshotProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingpagecontroldelegate\/viewfordot(at:)","title":"func viewForDot(at: Int) -> UIView?","type":"method"}],"path":"\/documentation\/divar\/scrollingpagecontroldelegate","title":"ScrollingPageControlDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchactiondelegate\/didrequestsearch(filterset:iscategorychanged:)","title":"func didRequestSearch(filterSet: SearchFilterHistory, isCategoryChanged: Bool)","type":"method"}],"path":"\/documentation\/divar\/searchactiondelegate","title":"SearchActionDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/searchandselectstringviewcontrollerdelegate\/cancelbuttondidtapped(_:)-7fts8","title":"func cancelButtonDidTapped(SearchAndSelectStringViewController)","type":"method"}],"title":"SearchAndSelectStringViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/searchandselectstringviewcontrollerdelegate\/cancelbuttondidtapped(_:)-8e0qj","title":"func cancelButtonDidTapped(SearchAndSelectStringViewController)","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontrollerdelegate\/didrequestsearch(_:query:completion:)","title":"func didRequestSearch(SearchAndSelectStringViewController, query: String, completion: ([String]) -> Void)","type":"method"},{"path":"\/documentation\/divar\/searchandselectstringviewcontrollerdelegate\/didselectvalue(_:selected:)","title":"func didSelectValue(SearchAndSelectStringViewController, selected: String)","type":"method"}],"path":"\/documentation\/divar\/searchandselectstringviewcontrollerdelegate","title":"SearchAndSelectStringViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterviewcontrollerdelegate\/searchfiltervcdidcancel(_:)","title":"func searchFilterVCDidCancel(SearchFilterViewController)","type":"method"},{"path":"\/documentation\/divar\/searchfilterviewcontrollerdelegate\/searchfiltervcdidrequestfilteringposts(_:filters:categorychanged:)","title":"func searchFilterVCDidRequestFilteringPosts(SearchFilterViewController, filters: SearchFilterHistory, categoryChanged: Bool)","type":"method"}],"path":"\/documentation\/divar\/searchfilterviewcontrollerdelegate","title":"SearchFilterViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryrowtablecelldelegate\/pincell(_:)","title":"func pinCell(UITableViewCell)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryrowtablecelldelegate\/removefromhistorycell(_:)","title":"func removeFromHistoryCell(UITableViewCell)","type":"method"}],"path":"\/documentation\/divar\/searchhistoryrowtablecelldelegate","title":"SearchHistoryRowTableCellDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryservicefactoryprotocol\/searchhistoryservice","title":"var searchHistoryService: SearchHistoryServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/searchhistoryservicefactoryprotocol","title":"SearchHistoryServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryserviceprotocol\/filtersetexistsinhistory(_:)","title":"func filterSetExistsInHistory(SearchFilterHistory) -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchhistoryserviceprotocol\/loadsearchhistory(pageidentifier:)","title":"func loadSearchHistory(pageIdentifier: String) -> [SearchFilterHistory]?","type":"method"},{"path":"\/documentation\/divar\/searchhistoryserviceprotocol\/removefiltersetfromhistory(_:completion:)","title":"func removeFilterSetFromHistory(SearchFilterHistory, completion: () -> Void)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryserviceprotocol\/savefilterhistory(_:)","title":"func saveFilterHistory(SearchFilterHistory)","type":"method"}],"path":"\/documentation\/divar\/searchhistoryserviceprotocol","title":"SearchHistoryServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewmodeldelegate\/searchhistoryviewmodel(_:didselecthistory:at:)","title":"func searchHistoryViewModel(SearchHistoryViewModelProtocol, didSelectHistory: SearchFilterHistory, at: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/searchhistoryviewmodeldelegate","title":"SearchHistoryViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewmodelprotocol\/histories","title":"var histories: [SearchFilterHistory]","type":"property"},{"path":"\/documentation\/divar\/searchhistoryviewmodelprotocol\/historiesresult","title":"var historiesResult: AnyPublisher<[SearchFilterHistory], Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchhistoryviewmodelprotocol\/didselecthistory(at:)","title":"func didSelectHistory(at: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewmodelprotocol\/pin(at:onupdate:)","title":"func pin(at: IndexPath, onUpdate: () -> Void) -> (filter: SearchFilterHistory, pinnedCount: Int)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewmodelprotocol\/removefromhistory(at:onupdate:)","title":"func removeFromHistory(at: IndexPath, onUpdate: () -> Void)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewmodelprotocol\/savefilterhistory(_:)","title":"func saveFilterHistory(SearchFilterHistory)","type":"method"},{"path":"\/documentation\/divar\/searchhistoryviewmodelprotocol\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/divar\/searchhistoryviewmodelprotocol","title":"SearchHistoryViewModelProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchservicefactoryprotocol\/searchservice","title":"var searchService: SearchSuggestionServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/searchservicefactoryprotocol","title":"SearchServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionservicefactoryprotocol\/searchsuggestionservice","title":"var searchSuggestionService: SearchSuggestionServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/searchsuggestionservicefactoryprotocol","title":"SearchSuggestionServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionserviceprotocol\/getcitymultiselectschema(cities:)","title":"func getCityMultiSelectSchema(cities: [String]) async -> Result<Schema, DError>","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionserviceprotocol\/getjli(path:)","title":"func getJLI(path: String) async -> Result<SearchFilterHistory, Error>","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionserviceprotocol\/getsearchfilterschema(model:)","title":"func getSearchFilterSchema(model: SchemaRequestModel) async -> FormResultValue","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionserviceprotocol\/getsearchsuggestion(query:filteredcities:pageidentifier:)","title":"func getSearchSuggestion(query: String, filteredCities: [String], pageIdentifier: String) async -> (result: Result<[SearchFilterHistory], Error>, jsonDict: [String : Any]?)","type":"method"}],"path":"\/documentation\/divar\/searchsuggestionserviceprotocol","title":"SearchSuggestionServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodeldelegate\/searchsuggestionsviewmodel(_:didreceiveresult:with:)","title":"func searchSuggestionsViewModel(SearchSuggestionsViewModelProtocol, didReceiveResult: [String : Any]?, with: String)","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodeldelegate\/searchsuggestionsviewmodel(_:didselect:at:choices:)","title":"func searchSuggestionsViewModel(SearchSuggestionsViewModelProtocol, didSelect: SearchFilterHistory, at: IndexPath, choices: [String : Any]?)","type":"method"}],"path":"\/documentation\/divar\/searchsuggestionsviewmodeldelegate","title":"SearchSuggestionsViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodelprotocol\/isloading$","title":"var isLoading$: AnyPublisher<Bool, Never>","type":"property"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodelprotocol\/suggestions$","title":"var suggestions$: AnyPublisher<[SearchFilterHistory]?, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodelprotocol\/select(suggestion:at:)","title":"func select(suggestion: SearchFilterHistory, at: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodelprotocol\/updatequery(_:)","title":"func updateQuery(SearchQuery)","type":"method"}],"path":"\/documentation\/divar\/searchsuggestionsviewmodelprotocol","title":"SearchSuggestionsViewModelProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchviewmodeldelegate\/searchviewmodel(_:didreceivesuggestionswithquery:choices:)","title":"func searchViewModel(SearchViewModelProtocol, didReceiveSuggestionsWithQuery: String, choices: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/searchviewmodeldelegate\/searchviewmodel(_:didselecthistory:at:)","title":"func searchViewModel(SearchViewModelProtocol, didSelectHistory: SearchFilterHistory, at: IndexPath)","type":"method"},{"path":"\/documentation\/divar\/searchviewmodeldelegate\/searchviewmodel(_:didselectsuggestion:at:suggestiondic:)","title":"func searchViewModel(SearchViewModelProtocol, didSelectSuggestion: SearchFilterHistory, at: IndexPath, suggestionDic: [String : Any]?)","type":"method"}],"path":"\/documentation\/divar\/searchviewmodeldelegate","title":"SearchViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchviewmodelprotocol\/historyviewmodel","title":"var historyViewModel: SearchHistoryViewModelProtocol","type":"property"},{"path":"\/documentation\/divar\/searchviewmodelprotocol\/issearching$","title":"var isSearching$: AnyPublisher<Bool, Never>","type":"property"},{"path":"\/documentation\/divar\/searchviewmodelprotocol\/suggestionsviewmodel","title":"var suggestionsViewModel: SearchSuggestionsViewModelProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchviewmodelprotocol\/updatequery(_:)","title":"func updateQuery(SearchQuery)","type":"method"}],"path":"\/documentation\/divar\/searchviewmodelprotocol","title":"SearchViewModelProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchable\/issearchactive","title":"var isSearchActive: Bool","type":"property"},{"path":"\/documentation\/divar\/searchable\/searchbox","title":"var searchBox: SearchBox","type":"property"},{"path":"\/documentation\/divar\/searchable\/searchboxdefaultheight","title":"var searchBoxDefaultHeight: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/searchable\/setupsearchbox()-6lubs","title":"func setupSearchBox()","type":"method"}],"title":"Searchable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/searchable\/setupsearchbox()-527h6","title":"func setupSearchBox()","type":"method"},{"path":"\/documentation\/divar\/searchable\/setupsearchbox(in:)","title":"func setupSearchBox(in: UIStackView)","type":"method"}],"path":"\/documentation\/divar\/searchable","title":"Searchable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttontableviewcellprotocol\/secondarybuttontapped(_:action:)","title":"func secondaryButtonTapped(UITableViewCell, action: SecondaryButtonAction)","type":"method"}],"path":"\/documentation\/divar\/secondarybuttontableviewcellprotocol","title":"SecondaryButtonTableViewCellProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/seenable\/contentid","title":"var contentID: String","type":"property"},{"path":"\/documentation\/divar\/seenable\/isseen","title":"var isSeen: Bool","type":"property"}],"path":"\/documentation\/divar\/seenable","title":"Seenable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbardelegate\/segmentvaluechanged(_:selectedindex:)","title":"func segmentValueChanged(SegmentedBar, selectedIndex: Int)","type":"method"}],"path":"\/documentation\/divar\/segmentedbardelegate","title":"SegmentedBarDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectablepostslisterrordata\/errormessage","title":"var errorMessage: String","type":"property"},{"path":"\/documentation\/divar\/selectablepostslisterrordata\/showerror","title":"var showError: Bool","type":"property"}],"path":"\/documentation\/divar\/selectablepostslisterrordata","title":"SelectablePostsListErrorData","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectablepostslistitem\/getpayload(widget:)","title":"static func getPayload(widget: Widgets_Widget) -> Self?","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistitem\/isselectablepayload(widget:)","title":"static func isSelectablePayload(widget: Widgets_Widget) -> Bool","type":"method"}],"path":"\/documentation\/divar\/selectablepostslistitem","title":"SelectablePostsListItem","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectablepostslistviewcontrollerdelegate\/defaultemptymessagetext","title":"var defaultEmptyMessageText: String","type":"property"},{"path":"\/documentation\/divar\/selectablepostslistviewcontrollerdelegate\/defaulterrormessage","title":"var defaultErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/selectablepostslistviewcontrollerdelegate\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/selectablepostslistviewcontrollerdelegate\/hasmaxseletablelimit","title":"var hasMaxSeletableLimit: Bool","type":"property"},{"path":"\/documentation\/divar\/selectablepostslistviewcontrollerdelegate\/maxselectableitems","title":"var maxSelectableItems: Int32?","type":"property"},{"path":"\/documentation\/divar\/selectablepostslistviewcontrollerdelegate\/pagination","title":"var pagination: Pagination","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectablepostslistviewcontrollerdelegate\/selectablepostslist(_:didstartinfinitescroll:)","title":"func selectablePostsList(WidgetBasedCollectionViewController, didStartInfiniteScroll: AdvancedCollectionView?)","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontrollerdelegate\/selectablepostslist(_:didstartpulltorefresh:)","title":"func selectablePostsList(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"},{"path":"\/documentation\/divar\/selectablepostslistviewcontrollerdelegate\/textforsplitbuttonbar(number:)","title":"func textForSplitButtonBar(number: Int) -> String","type":"method"}],"path":"\/documentation\/divar\/selectablepostslistviewcontrollerdelegate","title":"SelectablePostsListViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sendmessageactionhandler\/opensendmessage(_:)","title":"func openSendMessage(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/sendmessageactionhandler","title":"SendMessageActionHandler","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/servicenetworkmanagerfactoryprotocol\/servicenetworkmanager","title":"var serviceNetworkManager: ServiceNetworkManagerProtocol","type":"property"}],"path":"\/documentation\/divar\/servicenetworkmanagerfactoryprotocol","title":"ServiceNetworkManagerFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/servicenetworkmanagerprotocol\/lastwidgetbasedrequest","title":"var lastWidgetBasedRequest: Cancellable?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/servicenetworkmanagerprotocol\/downloadfile(downloadurl:filepath:progress:)","title":"func downloadFile(downloadURL: String, filePath: URL, progress: ((Progress) -> Void)) async -> ResponseModel<Data, Error>","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanagerprotocol\/header(for:extras:)","title":"func header(for: RequestType, extras: [String : String]?) -> [String : String]","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanagerprotocol\/jsonrequestwithoctetstreamresponse(model:)","title":"func jsonRequestWithOctetStreamResponse(model: RequestModel) async -> ResponseModel<Data, DError>","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanagerprotocol\/octetstreamrequest(model:)","title":"func octetStreamRequest(model: DataRequestModel) async -> ResponseModel<Data, DError>","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanagerprotocol\/request(model:)","title":"func request(model: RequestModel) async -> ResponseModel<Data, DError>","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanagerprotocol\/uploadfile(content:to:progress:)","title":"func uploadFile(content: [UploadModel], to: String, progress: ((Progress) -> Void)) async -> ResponseModel<Data, Error>","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanagerprotocol\/uploadimage(model:)","title":"func uploadImage(model: DataRequestModel) async -> ResponseModel<Data, DError>","type":"method"},{"path":"\/documentation\/divar\/servicenetworkmanagerprotocol\/uploadvideo(model:completion:)","title":"func uploadVideo(model: VideoUploadModel, completion: (ResponseModel<Data, DError>) -> Void) -> Request?","type":"method"}],"path":"\/documentation\/divar\/servicenetworkmanagerprotocol","title":"ServiceNetworkManagerProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/setablerow\/setvalues(_:isfromdraft:)","title":"func setValues([String : Any], isFromDraft: Bool)","type":"method"}],"path":"\/documentation\/divar\/setablerow","title":"SetableRow","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/settabletokenrequest\/settokens(tokens:)","title":"func setTokens(tokens: [String])","type":"method"}],"path":"\/documentation\/divar\/settabletokenrequest","title":"SettableTokenRequest","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsactionhandler\/opensettings(_:)","title":"func openSettings(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/settingsactionhandler","title":"SettingsActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsviewcontrollerdelegate\/settingsviewcontroller(didselectcityselect:)","title":"func settingsViewController(didSelectCitySelect: SettingsViewController)","type":"method"},{"path":"\/documentation\/divar\/settingsviewcontrollerdelegate\/settingsviewcontroller(didselectlogin:)","title":"func settingsViewController(didSelectLogin: SettingsViewController)","type":"method"},{"path":"\/documentation\/divar\/settingsviewcontrollerdelegate\/settingsviewcontroller(didselectlogout:)","title":"func settingsViewController(didSelectLogout: SettingsViewController)","type":"method"}],"path":"\/documentation\/divar\/settingsviewcontrollerdelegate","title":"SettingsViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontrollerdelegate\/shahkarlandlineconfirmedsuccessfully(in:)","title":"func shahkarlandlineConfirmedSuccessfully(in: ShahkarLandlineVerificationFlowController)","type":"method"}],"path":"\/documentation\/divar\/shahkarlandlineverificationflowcontrollerdelegate","title":"ShahkarLandlineVerificationFlowControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarservicefactoryprotocol\/shahkarservice","title":"var shahkarService: ShahkarService","type":"property"}],"path":"\/documentation\/divar\/shahkarservicefactoryprotocol","title":"ShahkarServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/showalertactionhandler\/showwidebuttonalert(_:)","title":"func showWideButtonAlert(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/showalertactionhandler","title":"ShowAlertActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/showbottomsheetactionhandler\/showwidebottomsheet(_:)","title":"func showWideBottomSheet(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/showbottomsheetactionhandler","title":"ShowBottomSheetActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/showerrorprotocol\/blockingmessage(message:)-7x0yb","title":"func blockingMessage(message: String)","type":"method"}],"title":"ShowErrorProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/showerrorprotocol\/blockingmessage(message:)-7x1a","title":"func blockingMessage(message: String)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/showerrorprotocol\/handleerror(_:)-4lai4","title":"func handleError(DError)","type":"method"}],"title":"ShowErrorProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/showerrorprotocol\/handleerror(_:)-4f3rz","title":"func handleError(DError)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/showerrorprotocol\/handleerror(_:onreload:)-6tz9r","title":"func handleError(DError, onReload: (() -> Void)?)","type":"method"}],"title":"ShowErrorProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/showerrorprotocol\/handleerror(_:onreload:)-5lyqx","title":"func handleError(DError, onReload: (() -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/showerrorprotocol\/prepareforreloading()-4m9pn","title":"func prepareForReloading()","type":"method"}],"title":"ShowErrorProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/showerrorprotocol\/prepareforreloading()-70p6w","title":"func prepareForReloading()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/showerrorprotocol\/setblockingview(hidden:)-6y0rq","title":"func setBlockingView(hidden: Bool)","type":"method"}],"title":"ShowErrorProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/showerrorprotocol\/setblockingview(hidden:)-8uq1u","title":"func setBlockingView(hidden: Bool)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/showerrorprotocol\/setblockingview(hidden:condition:)-37ex0","title":"func setBlockingView(hidden: Bool, condition: (BlockingView) -> Bool)","type":"method"}],"title":"ShowErrorProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/showerrorprotocol\/setblockingview(hidden:condition:)-15k90","title":"func setBlockingView(hidden: Bool, condition: (BlockingView) -> Bool)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/showerrorprotocol\/setcustomblockingview(hidden:)-4toeo","title":"func setCustomBlockingView(hidden: Bool)","type":"method"}],"title":"ShowErrorProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/showerrorprotocol\/setcustomblockingview(hidden:)-vfta","title":"func setCustomBlockingView(hidden: Bool)","type":"method"}],"path":"\/documentation\/divar\/showerrorprotocol","title":"ShowErrorProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/showmessageprotocol\/swiftmessageerror","title":"var swiftMessageError: SwiftMessages","type":"property"},{"path":"\/documentation\/divar\/showmessageprotocol\/swiftmessageloading","title":"var swiftMessageLoading: SwiftMessages","type":"property"},{"path":"\/documentation\/divar\/showmessageprotocol\/swiftmessagetoast","title":"var swiftMessageToast: SwiftMessages","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/showmessageprotocol\/showtoast(message:)","title":"func showToast(message: String)","type":"method"},{"path":"\/documentation\/divar\/showmessageprotocol\/showtoastwithbutton(message:buttontext:duration:buttonaction:completionhandler:)","title":"func showToastWithButton(message: String, buttonText: String, duration: TimeInterval, buttonAction: ((UIButton) -> Void), completionHandler: (() -> Void))","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/showmessageprotocol\/startshowingactivity()-1agxz","title":"func startShowingActivity()","type":"method"}],"title":"ShowMessageProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/showmessageprotocol\/startshowingactivity()-1o4pd","title":"func startShowingActivity()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/showmessageprotocol\/stopshowingactivity()-28ql3","title":"func stopShowingActivity()","type":"method"}],"title":"ShowMessageProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/showmessageprotocol\/stopshowingactivity()-r73r","title":"func stopShowingActivity()","type":"method"}],"path":"\/documentation\/divar\/showmessageprotocol","title":"ShowMessageProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlehierarchycontrollerdelegate\/singlehierarchyvc(_:didselectitem:source:)","title":"func singleHierarchyVC(SingleHierarchyController, didSelectItem: UIOptionsDataStruct, source: ActionLog_SingleSelectedHierarchyItemSelectionActionInfo.Source)","type":"method"}],"path":"\/documentation\/divar\/singlehierarchycontrollerdelegate","title":"SingleHierarchyControllerDelegate","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/singlemultibaseviewcontrollerconfig\/init(_:selecteddata:cityids:)-1oft3","title":"init([SingleMultiModel], selectedData: [SingleMultiModel], cityIds: [Int])","type":"init"}],"title":"SingleMultiBaseViewControllerConfig Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/singlemultibaseviewcontrollerconfig\/init(_:selecteddata:cityids:)-6fjom","title":"init([SingleMultiModel], selectedData: [SingleMultiModel], cityIds: [Int])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultibaseviewcontrollerconfig\/cityids","title":"var cityIds: [Int]","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontrollerconfig\/data","title":"var data: [SingleMultiModel]","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontrollerconfig\/ismultiselection","title":"var isMultiSelection: Bool","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontrollerconfig\/issearchenable","title":"var isSearchEnable: Bool","type":"property"},{"path":"\/documentation\/divar\/singlemultibaseviewcontrollerconfig\/selecteddata","title":"var selectedData: [SingleMultiModel]","type":"property"}],"path":"\/documentation\/divar\/singlemultibaseviewcontrollerconfig","title":"SingleMultiBaseViewControllerConfig","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/singlemultibaseviewcontrollerdelegate\/requestshowchildren(_:children:)-7m1oc","title":"func requestShowChildren(SingleMultiBaseViewController, children: [SingleMultiModel])","type":"method"}],"title":"SingleMultiBaseViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/singlemultibaseviewcontrollerdelegate\/requestshowchildren(_:children:)-2utmz","title":"func requestShowChildren(SingleMultiBaseViewController, children: [SingleMultiModel])","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/singlemultibaseviewcontrollerdelegate\/valuechanges(_:)-2y321","title":"func valueChanges([SingleMultiModel])","type":"method"}],"title":"SingleMultiBaseViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/singlemultibaseviewcontrollerdelegate\/valuechanges(_:)-50q9n","title":"func valueChanges([SingleMultiModel])","type":"method"}],"path":"\/documentation\/divar\/singlemultibaseviewcontrollerdelegate","title":"SingleMultiBaseViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/cities","title":"var cities: Schema?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/defaulttag","title":"var defaultTag: String","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/iconurl","title":"var iconUrl: String?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/items","title":"var items: [SingleMultiModel]","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/property","title":"var property: Schema","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/propertykey","title":"var propertyKey: String","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/required","title":"var required: Bool?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/switchlabel","title":"var switchLabel: String","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/views","title":"var views: [SingleMultiSubviews]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/displayvaluefor(_:)","title":"func displayValueFor([SingleMultiModel]) -> String","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/getvalue(selecteditems:)","title":"func getValue(selectedItems: [SingleMultiModel]) -> [String : Any]?","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaconfig\/setvalue(value:)","title":"func setValue(value: [String : Any]) -> [SingleMultiModel]?","type":"method"}],"path":"\/documentation\/divar\/singlemultieurekaconfig","title":"SingleMultiEurekaConfig","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultilocationviewcontrollerdelegate\/didrequestselectinmap(_:)","title":"func didRequestSelectInMap(SingleMultiLocationViewController)","type":"method"}],"path":"\/documentation\/divar\/singlemultilocationviewcontrollerdelegate","title":"SingleMultiLocationViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionfactoryprotocol\/smartsuggestionactionlog","title":"var smartSuggestionActionLog: SmartSuggestionActionLog","type":"property"}],"path":"\/documentation\/divar\/smartsuggestionfactoryprotocol","title":"SmartSuggestionFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/splitbuttonbarviewcontrollerdelegate\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(SplitButtonBarViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/splitbuttonbarviewcontrollerdelegate","title":"SplitButtonBarViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/startupconfigurationservicefactoryprotocol\/startupservice","title":"var startupService: StartupConfigurationServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/startupconfigurationservicefactoryprotocol","title":"StartupConfigurationServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/startupconfigurationserviceprotocol\/getstartupconfigurations(phonenumber:)","title":"func getStartupConfigurations(phoneNumber: String?) async -> Result<(IntroConfig, Bool), Error>","type":"method"}],"path":"\/documentation\/divar\/startupconfigurationserviceprotocol","title":"StartupConfigurationServiceProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/divar\/storablebatch\/poso","title":"POSO","type":"associatedtype"},{"path":"\/documentation\/divar\/storablebatch\/table","title":"Table","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/storablebatch\/isrequesting","title":"var isRequesting: Bool","type":"property"},{"path":"\/documentation\/divar\/storablebatch\/maxdatabasesize","title":"var maxDatabaseSize: Int","type":"property"},{"path":"\/documentation\/divar\/storablebatch\/serialdatabasequeue","title":"var serialDatabaseQueue: DispatchQueue","type":"property"},{"path":"\/documentation\/divar\/storablebatch\/threshold","title":"var threshold: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/storablebatch\/followuplog()-49m3f","title":"func followUpLog()","type":"method"}],"title":"StorableBatch Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/storablebatch\/followuplog()-3xmse","title":"func followUpLog()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/storablebatch\/getobjects()-85af","title":"func getObjects() -> [Table]","type":"method"}],"title":"StorableBatch Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/storablebatch\/getobjects()-8hvhi","title":"func getObjects() -> [Table]","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/storablebatch\/remove(_:completion:)-e13x","title":"func remove([String], completion: (() -> Void)?)","type":"method"}],"title":"StorableBatch Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/storablebatch\/remove(_:completion:)-9irfb","title":"func remove([String], completion: (() -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/storablebatch\/removeextrarows()-3yiuo","title":"func removeExtraRows()","type":"method"}],"title":"StorableBatch Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/storablebatch\/removeextrarows()-6hg9k","title":"func removeExtraRows()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/storablebatch\/removeimmediately(_:completion:)-5km5g","title":"func removeImmediately([String], completion: (() -> Void)?)","type":"method"}],"title":"StorableBatch Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/storablebatch\/removeimmediately(_:completion:)-6u96v","title":"func removeImmediately([String], completion: (() -> Void)?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/storablebatch\/save(object:completion:)-1qmhi","title":"func save(object: Table, completion: (() -> Void)?)","type":"method"}],"title":"StorableBatch Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/storablebatch\/save(object:completion:)-75pz0","title":"func save(object: Table, completion: (() -> Void)?)","type":"method"},{"path":"\/documentation\/divar\/storablebatch\/sendtoserver(_:)","title":"func sendToServer([POSO])","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/storablebatch\/databasequeue","title":"static var databaseQueue: String","type":"property"}],"path":"\/documentation\/divar\/storablebatch","title":"StorableBatch","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/storablebatchmodelprotocol\/data","title":"var data: Data","type":"property"},{"path":"\/documentation\/divar\/storablebatchmodelprotocol\/primarykey","title":"var primaryKey: String","type":"property"}],"path":"\/documentation\/divar\/storablebatchmodelprotocol","title":"StorableBatchModelProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/stringrepresentable\/init(_:)","title":"init?(String)","type":"init"}],"path":"\/documentation\/divar\/stringrepresentable","title":"StringRepresentable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/switchbarviewcontrollerdelegate\/switchvaluechanged(_:newvalue:)","title":"func switchValueChanged(SwitchBarViewController, newValue: Bool)","type":"method"}],"path":"\/documentation\/divar\/switchbarviewcontrollerdelegate","title":"SwitchBarViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/switchtableviewcelldelegate\/switchcell(_:switchvaluedidchange:)","title":"func switchCell(SwitchTableViewCell, switchValueDidChange: Bool)","type":"method"}],"path":"\/documentation\/divar\/switchtableviewcelldelegate","title":"SwitchTableViewCellDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/switchtableviewcellmodel\/data","title":"var data: Any?","type":"property"},{"path":"\/documentation\/divar\/switchtableviewcellmodel\/icon","title":"var icon: ImageAsset","type":"property"},{"path":"\/documentation\/divar\/switchtableviewcellmodel\/iscellenabled","title":"var isCellEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/switchtableviewcellmodel\/isdividerhidden","title":"var isDividerHidden: Bool","type":"property"},{"path":"\/documentation\/divar\/switchtableviewcellmodel\/ison","title":"var isOn: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/switchtableviewcellmodel\/state-3ixu2","title":"var state: Sonnat.SwitchRowStates","type":"property"}],"title":"SwitchTableViewCellModel Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/switchtableviewcellmodel\/state-4nrng","title":"var state: Sonnat.SwitchRowStates","type":"property"},{"path":"\/documentation\/divar\/switchtableviewcellmodel\/title","title":"var title: String","type":"property"}],"path":"\/documentation\/divar\/switchtableviewcellmodel","title":"SwitchTableViewCellModel","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tabbedpageviewcontrollerdelegate\/tabbedpageviewcontroller(_:didswitchto:presentingviewcontroller:)","title":"func tabbedPageViewController(TabbedPageViewController, didSwitchTo: Int, presentingViewController: UIViewController)","type":"method"}],"path":"\/documentation\/divar\/tabbedpageviewcontrollerdelegate","title":"TabbedPageViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tabularwidgetbasedrequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/tabularwidgetbasedrequest\/tabidentifier","title":"var tabIdentifier: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/tabularwidgetbasedrequest\/getrequestfortab(identifier:)-2116y","title":"func getRequestForTab(identifier: String) -> TabularWidgetBasedRequest?","type":"method"}],"title":"TabularWidgetBasedRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/tabularwidgetbasedrequest\/getrequestfortab(identifier:)-6075h","title":"func getRequestForTab(identifier: String) -> TabularWidgetBasedRequest?","type":"method"}],"path":"\/documentation\/divar\/tabularwidgetbasedrequest","title":"TabularWidgetBasedRequest","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tabularwidgetbasedsubmitrequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/tabularwidgetbasedsubmitrequest\/tabidentifier","title":"var tabIdentifier: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tabularwidgetbasedsubmitrequest\/getsubmitrequestfortab(identifier:)","title":"func getSubmitRequestForTab(identifier: String) -> Self?","type":"method"}],"path":"\/documentation\/divar\/tabularwidgetbasedsubmitrequest","title":"TabularWidgetBasedSubmitRequest","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tabularwidgetbasedworkerprotocol\/createworker(with:)","title":"func createWorker(with: String) -> WidgetBasedWorkerProtocol","type":"method"}],"path":"\/documentation\/divar\/tabularwidgetbasedworkerprotocol","title":"TabularWidgetBasedWorkerProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistcelldelegate\/taglistcell(_:didselectclosebuttonwithid:)","title":"func tagListCell(TagListCell, didSelectCloseButtonWithId: Int)","type":"method"}],"path":"\/documentation\/divar\/taglistcelldelegate","title":"TagListCellDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistitem\/iconasset","title":"var iconAsset: ImageAsset?","type":"property"},{"path":"\/documentation\/divar\/taglistitem\/isfilled","title":"var isFilled: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/taglistitem\/isstaticchip-5rgxe","title":"var isStaticChip: Bool","type":"property"}],"title":"TagListItem Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/taglistitem\/isstaticchip-67ubn","title":"var isStaticChip: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistitem\/nonremovable","title":"var nonRemovable: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistitem\/showicon","title":"var showIcon: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistitem\/showiconandremovebutton","title":"var showIconAndRemoveButton: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistitem\/showremovebutton","title":"var showRemoveButton: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistitem\/text","title":"var text: String?","type":"property"}],"path":"\/documentation\/divar\/taglistitem","title":"TagListItem","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistviewcontrollerdelegate\/tagdidselect(tag:index:)","title":"func tagDidSelect(tag: TagListItem, index: Int)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/taglistviewcontrollerdelegate\/taglistcell(_:tag:didremoveitematindex:)-57g59","title":"func taglistCell(TagListCell, tag: TagListItem, didRemoveItemAtIndex: Int)","type":"method"}],"title":"TagListViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/taglistviewcontrollerdelegate\/taglistcell(_:tag:didremoveitematindex:)-4668t","title":"func taglistCell(TagListCell, tag: TagListItem, didRemoveItemAtIndex: Int)","type":"method"}],"path":"\/documentation\/divar\/taglistviewcontrollerdelegate","title":"TagListViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldhintviewdelegate\/textfieldvaluechanges(_:shouldchangecharactersin:replacementstring:)","title":"func textFieldValueChanges(UITextField, shouldChangeCharactersIn: NSRange, replacementString: String) -> Bool","type":"method"}],"path":"\/documentation\/divar\/textfieldhintviewdelegate","title":"TextFieldHintViewDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldhintviewhandler\/textfieldvalue(text:)","title":"func textFieldValue(text: String?) -> String?","type":"method"},{"path":"\/documentation\/divar\/textfieldhintviewhandler\/updatehint(text:)","title":"func updateHint(text: String?) -> HintType","type":"method"},{"path":"\/documentation\/divar\/textfieldhintviewhandler\/updatetextfield(text:)","title":"func updateTextField(text: String?) -> String?","type":"method"}],"path":"\/documentation\/divar\/textfieldhintviewhandler","title":"TextFieldHintViewHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldlimitlengtheprotocol\/limitlength(textfield:)","title":"func limitLength(textField: UITextField)","type":"method"}],"path":"\/documentation\/divar\/textfieldlimitlengtheprotocol","title":"TextFieldLimitLengtheProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/textfieldviewdelegate\/textfielddidchangeselection(_:)-vse0","title":"func textFieldDidChangeSelection(UITextField)","type":"method"}],"title":"TextFieldViewDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/textfieldviewdelegate\/textfielddidchangeselection(_:)-6lotc","title":"func textFieldDidChangeSelection(UITextField)","type":"method"},{"path":"\/documentation\/divar\/textfieldviewdelegate\/textfieldvaluechanges(_:shouldchangecharactersin:replacementstring:)","title":"func textFieldValueChanges(UITextField, shouldChangeCharactersIn: NSRange, replacementString: String) -> Bool","type":"method"}],"path":"\/documentation\/divar\/textfieldviewdelegate","title":"TextFieldViewDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textmessagecelldelegate\/textmessagecell(_:didtaponcensoredmessage:)","title":"func textMessageCell(TextMessageCell, didTapOnCensoredMessage: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/textmessagecelldelegate\/textmessagecell(_:didtaponurl:formessage:)","title":"func textMessageCell(TextMessageCell, didTapOnUrl: URL, forMessage: ChatConversationMessageTable)","type":"method"}],"path":"\/documentation\/divar\/textmessagecelldelegate","title":"TextMessageCellDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltippresenter\/tooltippresenterview","title":"var tooltipPresenterView: UIView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltippresenter\/showtooltip(message:alignment:targetbarbuttonitem:key:)","title":"func showTooltip(message: String, alignment: TooltipAlignment, targetBarButtonItem: UIBarButtonItem, key: UserDefaults.Keys?)","type":"method"},{"path":"\/documentation\/divar\/tooltippresenter\/showtooltip(message:alignment:targetrect:key:)","title":"func showTooltip(message: String, alignment: TooltipAlignment, targetRect: CGRect, key: UserDefaults.Keys?)","type":"method"},{"path":"\/documentation\/divar\/tooltippresenter\/showtooltip(message:alignment:targetview:key:)","title":"func showTooltip(message: String, alignment: TooltipAlignment, targetView: UIView, key: UserDefaults.Keys?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltippresenter\/tooltipalignment","title":"TooltipPresenter.TooltipAlignment","type":"typealias"}],"path":"\/documentation\/divar\/tooltippresenter","title":"TooltipPresenter","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transactionactionhandlerprotcol\/opencreatetransaction(_:)","title":"func openCreateTransaction(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionactionhandlerprotcol\/opentransactioncancellation(_:)","title":"func openTransactionCancellation(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionactionhandlerprotcol\/opentransactionfinalconfirm(_:)","title":"func openTransactionFinalConfirm(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionactionhandlerprotcol\/opentransactionopenuserauthenticationpage(_:)","title":"func openTransactionOpenUserAuthenticationPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionactionhandlerprotcol\/opentransactionstatuspage(_:)","title":"func openTransactionStatusPage(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionactionhandlerprotcol\/transactionmanagepost(_:)","title":"func transactionManagePost(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionactionhandlerprotcol\/transactionreportproblem(_:)","title":"func transactionReportProblem(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionactionhandlerprotcol\/transactionsellerconfirmation(_:)","title":"func transactionSellerConfirmation(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/transactionactionhandlerprotcol\/transactionstartpayment(_:)","title":"func transactionStartPayment(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/transactionactionhandlerprotcol","title":"TransactionActionHandlerProtcol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transactionservicefactoryprotocol\/transactionservice","title":"var transactionService: TransactionServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/transactionservicefactoryprotocol","title":"TransactionServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transactionserviceprotocol\/createtransaction(posttoken:)","title":"func createTransaction(postToken: String) async -> Result<DivarTransaction_CreateTransactionResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/transactionserviceprotocol\/transactioncanellation(transactiontoken:sourcepage:)","title":"func transactionCanellation(transactionToken: String, sourcePage: Widgets_DivarTransactionCancellationSourcePage.Page) async -> Result<DivarTransaction_CancelTransactionResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/transactionserviceprotocol\/transactionfinalconfirmation(transactiontoken:)","title":"func transactionFinalConfirmation(transactionToken: String) async -> Result<Google_Protobuf_Empty, DError>","type":"method"},{"path":"\/documentation\/divar\/transactionserviceprotocol\/transactionmanagepost(payload:)","title":"func transactionManagePost(payload: Widgets_ManagePostTransactionPayload) async -> Result<DivarTransaction_MessageResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/transactionserviceprotocol\/transactionreportproblem(transactiontoken:)","title":"func transactionReportProblem(transactionToken: String) async -> Result<DivarTransaction_ReportProblemResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/transactionserviceprotocol\/transactionsellerconfirmation(transactiontoken:)","title":"func transactionSellerConfirmation(transactionToken: String) async -> Result<Google_Protobuf_Empty, DError>","type":"method"},{"path":"\/documentation\/divar\/transactionserviceprotocol\/transactionstartpayment(transactiontoken:)","title":"func transactionStartPayment(transactionToken: String) async -> Result<DivarTransaction_StartPaymentResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/transactionserviceprotocol","title":"TransactionServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepricefieldvalidator\/validate()","title":"func validate() -> TransformablePrice.Validator.NumberValidationResult","type":"method"}],"path":"\/documentation\/divar\/transformablepricefieldvalidator","title":"TransformablePriceFieldValidator","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformablepriceviewcontrollerdelegate\/transformablepriceviewcontroller(_:didentered:)","title":"func transformablePriceViewController(TransformablePriceViewController, didEntered: [String : Int64?])","type":"method"}],"path":"\/documentation\/divar\/transformablepriceviewcontrollerdelegate","title":"TransformablePriceViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/twinbuttonsviewcontrollerdelegate\/primarybuttonclicked(_:action:)","title":"func primaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"},{"path":"\/documentation\/divar\/twinbuttonsviewcontrollerdelegate\/secondarybuttonclicked(_:action:)","title":"func secondaryButtonClicked(TwinButtonsViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/twinbuttonsviewcontrollerdelegate","title":"TwinButtonsViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/uiscrollviewdirectiondelegate\/scrollview(_:didchangehorizontalscrollingdirection:)-3qb69","title":"func scrollView(UIScrollView, didChangeHorizontalScrollingDirection: HorizontalScrollingDirection)","type":"method"}],"title":"UIScrollViewDirectionDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/uiscrollviewdirectiondelegate\/scrollview(_:didchangehorizontalscrollingdirection:)-1cn9p","title":"func scrollView(UIScrollView, didChangeHorizontalScrollingDirection: HorizontalScrollingDirection)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/uiscrollviewdirectiondelegate\/scrollview(_:didchangeverticalscrolldirection:)-i3dk","title":"func scrollView(UIScrollView, didChangeVerticalScrollDirection: VerticalScrollingDirection)","type":"method"}],"title":"UIScrollViewDirectionDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/uiscrollviewdirectiondelegate\/scrollview(_:didchangeverticalscrolldirection:)-12mtm","title":"func scrollView(UIScrollView, didChangeVerticalScrollDirection: VerticalScrollingDirection)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/uiscrollviewdirectiondelegate\/scrollviewdirectionchangesensitivity(_:)-27bd5","title":"func scrollViewDirectionChangeSensitivity(UIScrollView) -> DirectionChangeSensitivity","type":"method"}],"title":"UIScrollViewDirectionDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/uiscrollviewdirectiondelegate\/scrollviewdirectionchangesensitivity(_:)-6y3mz","title":"func scrollViewDirectionChangeSensitivity(UIScrollView) -> DirectionChangeSensitivity","type":"method"}],"path":"\/documentation\/divar\/uiscrollviewdirectiondelegate","title":"UIScrollViewDirectionDelegate","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalpayloadprotocol\/init(from:)","title":"init(from: [String : Any]) throws","type":"init"}],"path":"\/documentation\/divar\/universalpayloadprotocol","title":"UniversalPayloadProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/unknownactionhandler\/perform(_:)","title":"func perform(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/unknownactionhandler","title":"UnknownActionHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/updateviewcontrollerdelegate\/didclose(_:)","title":"func didClose(UpdateViewController)","type":"method"}],"path":"\/documentation\/divar\/updateviewcontrollerdelegate","title":"UpdateViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/uploadable\/uploadprogress(on:_:)","title":"func uploadProgress(on: DispatchQueue, (Progress) -> Void) -> Self","type":"method"}],"path":"\/documentation\/divar\/uploadable","title":"Uploadable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/usedpriceformviewcontrollerdelegate\/lastpagecalled(with:)","title":"func lastPageCalled(with: [String : Any])","type":"method"}],"path":"\/documentation\/divar\/usedpriceformviewcontrollerdelegate","title":"UsedPriceFormViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userdefaultsfactoryprotocol\/userdefaults","title":"var userDefaults: UserDefaults","type":"property"}],"path":"\/documentation\/divar\/userdefaultsfactoryprotocol","title":"UserDefaultsFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userfactoryprotocol\/user","title":"var user: User","type":"property"}],"path":"\/documentation\/divar\/userfactoryprotocol","title":"UserFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/usergetcontactobserverstrategy\/canpresentfeedback()","title":"func canPresentFeedback() -> Bool","type":"method"},{"path":"\/documentation\/divar\/usergetcontactobserverstrategy\/didpresentedfeedback()","title":"func didPresentedFeedback()","type":"method"},{"path":"\/documentation\/divar\/usergetcontactobserverstrategy\/setenterbackground(date:)","title":"func setEnterBackground(date: Date)","type":"method"},{"path":"\/documentation\/divar\/usergetcontactobserverstrategy\/setexitbackground(date:)","title":"func setExitBackground(date: Date)","type":"method"}],"path":"\/documentation\/divar\/usergetcontactobserverstrategy","title":"UserGetContactObserverStrategy","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostservicefactoryprotocol\/userpostservice","title":"var userPostService: UserPostServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/userpostservicefactoryprotocol","title":"UserPostServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostserviceprotocol\/deletepost(mngtoken:resaon:questiontag:answer:)","title":"func deletePost(mngToken: String, resaon: String, questionTag: String?, answer: String?) async -> Result<PostResult, DError>","type":"method"},{"path":"\/documentation\/divar\/userpostserviceprotocol\/getarchivereasons(mngtoken:)","title":"func getArchiveReasons(mngToken: String) async -> Result<[ArchiveReasons], DError>","type":"method"},{"path":"\/documentation\/divar\/userpostserviceprotocol\/getpostlistwithtokens(tokenlist:)","title":"func getPostListWithTokens(tokenList: [String]) async -> Result<UserPostLists, DError>","type":"method"},{"path":"\/documentation\/divar\/userpostserviceprotocol\/gettokenlistforlist(posttype:dataprovider:)","title":"func getTokenListForList(postType: SavedPostListType, dataProvider: DataProviderProtocol) -> [String]?","type":"method"},{"path":"\/documentation\/divar\/userpostserviceprotocol\/getuserpostlist()","title":"func getUserPostList() async -> Result<UserPostLists, DError>","type":"method"},{"path":"\/documentation\/divar\/userpostserviceprotocol\/ispostinlist(token:posttype:dataprovider:)","title":"func isPostInList(token: String, postType: SavedPostListType, dataProvider: DataProviderProtocol) -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostserviceprotocol\/removepostfromlist(token:posttype:dataprovider:)","title":"func removePostFromList(token: String, postType: SavedPostListType, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/userpostserviceprotocol\/resetlist(posttype:dataprovider:)","title":"func resetList(postType: SavedPostListType, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/userpostserviceprotocol\/resetsavedpostneedsupdatestate(posttype:dataprovider:)","title":"func resetSavedPostNeedsUpdateState(postType: SavedPostListType, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/userpostserviceprotocol\/savepost(token:posttype:dataprovider:)","title":"func savePost(token: String, postType: SavedPostListType, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/userpostserviceprotocol\/savedpostlistneedsupdate(posttype:)","title":"func savedPostListNeedsUpdate(postType: SavedPostListType) -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostserviceprotocol\/validatepost(managementtoken:)","title":"func validatePost(managementToken: String) async -> Result<Post_MovePostFromVerificationStateResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/userpostserviceprotocol","title":"UserPostServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userregisterflowcontrollerdelegate\/userregisteredsuccessfully(in:with:)","title":"func userRegisteredSuccessfully(in: UserRegisterFlowController, with: String)","type":"method"}],"path":"\/documentation\/divar\/userregisterflowcontrollerdelegate","title":"UserRegisterFlowControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userregisterationservicefactoryprotocol\/userregisterationservice","title":"var userRegisterationService: UserRegisterationServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/userregisterationservicefactoryprotocol","title":"UserRegisterationServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userregisterationserviceprotocol\/authenticateuser(phonenumber:)","title":"func authenticateUser(phoneNumber: String) async -> Result<Authentication_AuthenticateResponse, DError>","type":"method"},{"path":"\/documentation\/divar\/userregisterationserviceprotocol\/confirmauthenticationcode(codenumber:phonenumber:)","title":"func confirmAuthenticationCode(codeNumber: String, phoneNumber: String) async -> Result<Authentication_ConfirmResponse, DError>","type":"method"}],"path":"\/documentation\/divar\/userregisterationserviceprotocol","title":"UserRegisterationServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/validatorrowcontrollerdelegate\/didcancel(_:)","title":"func didCancel(ValidatorRowController)","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontrollerdelegate\/didreset(_:)","title":"func didReset(ValidatorRowController)","type":"method"},{"path":"\/documentation\/divar\/validatorrowcontrollerdelegate\/validatorrowcontroller(_:isvalid:)","title":"func validatorRowController(ValidatorRowController, isValid: String)","type":"method"}],"path":"\/documentation\/divar\/validatorrowcontrollerdelegate","title":"ValidatorRowControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputprotocol\/model","title":"var model: VerificationCodeInputModel","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputprotocol\/phonenumber","title":"var phoneNumber: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputprotocol\/fetchverificationcode(vc:)","title":"func fetchVerificationCode(vc: VerificationCodeInputViewController)","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputprotocol\/isvalid(input:)","title":"func isValid(input: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinputprotocol\/sendverificationcode(vc:code:)","title":"func sendVerificationCode(vc: VerificationCodeInputViewController, code: String?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/verificationcodeinputprotocol\/viewdidload()-8je9d","title":"func viewDidLoad()","type":"method"}],"title":"VerificationCodeInputProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/verificationcodeinputprotocol\/viewdidload()-3keqf","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/verificationcodeinputprotocol","title":"VerificationCodeInputProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputviewcontrollerdelegate\/verificationcodeenteredsuccessfully(_:with:)","title":"func verificationCodeEnteredSuccessfully(VerificationCodeInputViewController, with: String)","type":"method"}],"path":"\/documentation\/divar\/verificationcodeinputviewcontrollerdelegate","title":"VerificationCodeInputViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/videocompressorservice\/encodevideo(videourl:)-4u0z0","title":"func encodeVideo(videoURL: URL) async throws -> URL","type":"method"}],"title":"VideoCompressorService Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/videocompressorservice\/encodevideo(videourl:)-ckjw","title":"func encodeVideo(videoURL: URL) async throws -> URL","type":"method"},{"path":"\/documentation\/divar\/videocompressorservice\/encodevideo(videourl:_:)","title":"func encodeVideo(videoURL: URL, ((URL?, Error?) -> Void)?)","type":"method"}],"path":"\/documentation\/divar\/videocompressorservice","title":"VideoCompressorService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videomessagecelldelegate\/videomessagecell(_:didrequestcanceldownloadforvideo:)","title":"func videoMessageCell(VideoMessageCell, didRequestCancelDownloadForVideo: ChatMediaDataStructure)","type":"method"},{"path":"\/documentation\/divar\/videomessagecelldelegate\/videomessagecell(_:didrequestcanceluploadformessage:)","title":"func videoMessageCell(VideoMessageCell, didRequestCancelUploadForMessage: ChatConversationMessageTable)","type":"method"},{"path":"\/documentation\/divar\/videomessagecelldelegate\/videomessagecell(_:didrequestdownloadvideoforvideo:)","title":"func videoMessageCell(VideoMessageCell, didRequestDownloadVideoForVideo: ChatMediaDataStructure)","type":"method"},{"path":"\/documentation\/divar\/videomessagecelldelegate\/videomessagecell(_:didrequestopenvideo:)","title":"func videoMessageCell(VideoMessageCell, didRequestOpenVideo: ChatMediaDataStructure)","type":"method"}],"path":"\/documentation\/divar\/videomessagecelldelegate","title":"VideoMessageCellDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoplayerviewdelegate\/videplayerdidstopview(_:)","title":"func videPlayerDidStopView(VideoPlayerView)","type":"method"}],"path":"\/documentation\/divar\/videoplayerviewdelegate","title":"VideoPlayerViewDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videopreviewcontrollerdelegate\/previewcontroller(_:didconfirmvideowithurl:)","title":"func previewController(VideoPreviewController, didConfirmVideoWithURL: URL)","type":"method"}],"path":"\/documentation\/divar\/videopreviewcontrollerdelegate","title":"VideoPreviewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetcelldelegate\/videoselectorwidgetcellrequesttoopenaddvideosheet(_:)","title":"func videoSelectorWidgetCellRequestToOpenAddVideoSheet(VideoSelectorWidgetCell)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetcelldelegate\/videoselectorwidgetrequesttoopencancelvideouploadingsheet(_:)","title":"func videoSelectorWidgetRequestToOpenCancelVideoUploadingSheet(VideoSelectorWidgetCell)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetcelldelegate\/videoselectorwidgetrequesttoopendeletevideosheet(_:)","title":"func videoSelectorWidgetRequestToOpenDeleteVideoSheet(VideoSelectorWidgetCell)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetcelldelegate\/videoselectorwidgetrequesttoopenretryuploading(_:)","title":"func videoSelectorWidgetRequestToOpenRetryUploading(VideoSelectorWidgetCell)","type":"method"}],"path":"\/documentation\/divar\/videoselectorwidgetcelldelegate","title":"VideoSelectorWidgetCellDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrowtoparentcontrollerdelegate\/openivcollectionassetselectorviewcontroller(pickerdelegate:selectorviewmodelconfiguration:selecteditemviewmodelconfiguration:)","title":"func openIVCollectionAssetSelectorViewController(pickerDelegate: IVCollectionAssetSelectorViewModelDelegate, selectorViewModelConfiguration: IVCollectionAssetSelectorViewModelConfiguration, selectedItemViewModelConfiguration: IVCollectionAssetSelectorSelectedItemViewModelConfiguration)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrowtoparentcontrollerdelegate\/openivcollectionselectorviewcontroller(configuration:delegate:)","title":"func openIVCollectionSelectorViewController(configuration: IVCollectionSelectorViewModelInitConfiguration, delegate: IVCollectionSelectorViewModelDelegate?)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrowtoparentcontrollerdelegate\/openivvideorecorderviewcontroller(configuration:delegate:)","title":"func openIVVideoRecorderViewController(configuration: IVVideoRecorderViewModelConfiguration, delegate: IVVideoRecorderViewModelDelegate?)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrowtoparentcontrollerdelegate\/videowidgetrow(_:didrequestshowoptions:title:)","title":"func videoWidgetRow(VideoSelectorWidgetRow, didRequestShowOptions: [SheetItem], title: String?)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrowtoparentcontrollerdelegate\/videowidgetrow(_:didrequestshowoptions:with:title:)","title":"func videoWidgetRow(VideoSelectorWidgetRow, didRequestShowOptions: [SheetItem], with: SheetBannerModel, title: String?)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrowtoparentcontrollerdelegate\/videowidgetrow(_:didrequestshowtoast:)","title":"func videoWidgetRow(VideoSelectorWidgetRow, didRequestShowToast: String)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrowtoparentcontrollerdelegate\/videowidgetrowrequestedtograntcamerapermission(_:permissionresult:)","title":"func videoWidgetRowRequestedToGrantCameraPermission(VideoSelectorWidgetRow, permissionResult: (Bool) -> Void)","type":"method"},{"path":"\/documentation\/divar\/videoselectorwidgetrowtoparentcontrollerdelegate\/videowidgetrowrequestedtograntgallerypermission(_:permissionresult:)","title":"func videoWidgetRowRequestedToGrantGalleryPermission(VideoSelectorWidgetRow, permissionResult: (Bool) -> Void)","type":"method"}],"path":"\/documentation\/divar\/videoselectorwidgetrowtoparentcontrollerdelegate","title":"VideoSelectorWidgetRowToParentControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadservicefactoryprocotol\/videouploadservice","title":"var videoUploadService: VideoUploadServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/videouploadservicefactoryprocotol","title":"VideoUploadServiceFactoryProcotol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadserviceprotocol\/cancelvideouploading()","title":"func cancelVideoUploading()","type":"method"},{"path":"\/documentation\/divar\/videouploadserviceprotocol\/uploadvideo(with:to:)","title":"func uploadVideo(with: URL, to: String) async -> AsyncThrowingStream<VideoUploadViewResponse, Error>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadserviceprotocol\/progressfraction","title":"VideoUploadServiceProtocol.ProgressFraction","type":"typealias"}],"path":"\/documentation\/divar\/videouploadserviceprotocol","title":"VideoUploadServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessagecellprotocol\/celldidtapedvoicebutton(_:isplayingvoice:)","title":"func cellDidTapedVoiceButton(VoiceMessageCell, isPlayingVoice: Bool)","type":"method"},{"path":"\/documentation\/divar\/voicemessagecellprotocol\/cellretriestosendvoice(_:message:)","title":"func cellRetriesToSendVoice(VoiceMessageCell, message: ChatConversationMessageTable)","type":"method"}],"path":"\/documentation\/divar\/voicemessagecellprotocol","title":"VoiceMessageCellProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/warningpreviewviewdelegate\/warningpreviewviewdidtapclose(_:)","title":"func warningPreviewViewDidTapClose(WarningPreviewView)","type":"method"}],"path":"\/documentation\/divar\/warningpreviewviewdelegate","title":"WarningPreviewViewDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonviewcontrollerdelegate\/buttonclicked(_:action:)","title":"func buttonClicked(WideButtonViewController, action: Widgets_Action?)","type":"method"}],"path":"\/documentation\/divar\/widebuttonviewcontrollerdelegate","title":"WideButtonViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasecollectionperformancelogdelegate\/childeventfinish(event:reaason:)","title":"func childEventFinish(event: String, reaason: PerformaceEventFinishReason)","type":"method"},{"path":"\/documentation\/divar\/widgetbasecollectionperformancelogdelegate\/childeventstart(event:)","title":"func childEventStart(event: String)","type":"method"},{"path":"\/documentation\/divar\/widgetbasecollectionperformancelogdelegate\/collectiondidreloading()","title":"func collectionDidReloading()","type":"method"}],"path":"\/documentation\/divar\/widgetbasecollectionperformancelogdelegate","title":"WidgetBaseCollectionPerformanceLogDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedactiondelegate\/perform(action:)","title":"func perform(action: Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedactiondelegate\/perform(custom:)","title":"func perform(custom: CustomAction)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedactiondelegate","title":"WidgetBasedActionDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:canstartinfinitescroll:)-4b4ue","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, canStartInfiniteScroll: AdvancedCollectionView?) -> Bool","type":"method"}],"title":"WidgetBasedCollectionViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:canstartinfinitescroll:)-1vkth","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, canStartInfiniteScroll: AdvancedCollectionView?) -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:diddeselectitemat:withdata:)-43mqw","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didDeselectItemAt: IndexPath, withData: Widgets_Widget)","type":"method"}],"title":"WidgetBasedCollectionViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:diddeselectitemat:withdata:)-6ipxh","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didDeselectItemAt: IndexPath, withData: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:didenddisplaying:forindexpath:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didEndDisplaying: Widgets_Widget, forIndexPath: IndexPath)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:didselectitemat:withdata:)-7h50s","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didSelectItemAt: IndexPath, withData: Widgets_Widget)","type":"method"}],"title":"WidgetBasedCollectionViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:didselectitemat:withdata:)-4tpd4","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didSelectItemAt: IndexPath, withData: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:didstartinfinitescroll:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartInfiniteScroll: AdvancedCollectionView?)","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:didstartpulltorefresh:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, didStartPullToRefresh: UIScrollView?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:internalstatechangewith:)-2mfgl","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, internalStateChangeWith: [String : Any]?)","type":"method"}],"title":"WidgetBasedCollectionViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:internalstatechangewith:)-4e0ub","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, internalStateChangeWith: [String : Any]?)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:shouldselectitemat:withdata:)-1kb92","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, shouldSelectItemAt: IndexPath, withData: Widgets_Widget) -> Bool","type":"method"}],"title":"WidgetBasedCollectionViewControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:shouldselectitemat:withdata:)-67sen","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, shouldSelectItemAt: IndexPath, withData: Widgets_Widget) -> Bool","type":"method"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate\/widgetbasedcollectionviewcontroller(_:willdisplay:forindexpath:)","title":"func widgetBasedCollectionViewController(WidgetBasedCollectionViewController, willDisplay: Widgets_Widget, forIndexPath: IndexPath)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewcontrollerdelegate","title":"WidgetBasedCollectionViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedcollectionviewsearchdelegate\/issearching","title":"var isSearching: Bool","type":"property"}],"path":"\/documentation\/divar\/widgetbasedcollectionviewsearchdelegate","title":"WidgetBasedCollectionViewSearchDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedconfigurable\/config-60lvf","title":"var config: WidgetBasedConfig","type":"property"}],"title":"WidgetBasedConfigurable Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedconfigurable\/config-933wc","title":"var config: WidgetBasedConfig","type":"property"}],"path":"\/documentation\/divar\/widgetbasedconfigurable","title":"WidgetBasedConfigurable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedfilterrequest\/schemarefetchonly","title":"var schemaRefetchOnly: Bool","type":"property"}],"path":"\/documentation\/divar\/widgetbasedfilterrequest","title":"WidgetBasedFilterRequest","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontrollerdelegate\/widgetbasedfilterviewcontroller(_:data:tag:)","title":"func widgetBasedFilterViewController(WidgetBasedFilterViewController, data: [String : Any], tag: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedfilterviewcontrollerdelegate","title":"WidgetBasedFilterViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedfilterworkerprotocol\/request(filters:completion:)","title":"func request(filters: Google_Protobuf_Struct, completion: ExtractableResult)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedfilterworkerprotocol","title":"WidgetBasedFilterWorkerProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedgrpcservicefactoryprotocol\/getgrpcwidgetbasedservice(_:)","title":"func getGrpcWidgetBasedService<Request>(Request.Type) -> GRPCWidgetBasedServiceProtocol","type":"method"}],"path":"\/documentation\/divar\/widgetbasedgrpcservicefactoryprotocol","title":"WidgetBasedGrpcServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasednavigationbarpresenterprotocol\/barbuttonitembuttontappedselector","title":"var barButtonItemButtonTappedSelector: Selector","type":"property"},{"path":"\/documentation\/divar\/widgetbasednavigationbarpresenterprotocol\/barbuttonitemtappedselector","title":"var barButtonItemTappedSelector: Selector","type":"property"},{"path":"\/documentation\/divar\/widgetbasednavigationbarpresenterprotocol\/isdarkmode","title":"var isDarkMode: Bool","type":"property"},{"path":"\/documentation\/divar\/widgetbasednavigationbarpresenterprotocol\/navigationbaritems","title":"var navigationBarItems: [Int : Widgets_NavigationBar]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasednavigationbarpresenterprotocol\/setupnavigationbaritems(data:)-3w390","title":"func setupNavigationBarItems(data: [Widgets_NavigationBar])","type":"method"}],"title":"WidgetBasedNavigationBarPresenterProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasednavigationbarpresenterprotocol\/setupnavigationbaritems(data:)-2yc96","title":"func setupNavigationBarItems(data: [Widgets_NavigationBar])","type":"method"}],"path":"\/documentation\/divar\/widgetbasednavigationbarpresenterprotocol","title":"WidgetBasedNavigationBarPresenterProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedrequest\/defaultpagination-4frlz","title":"var defaultPagination: Pagination","type":"property"}],"title":"WidgetBasedRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedrequest\/defaultpagination-8aog6","title":"var defaultPagination: Pagination","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedrequest\/extraparameters-n0sj","title":"var extraParameters: [String : Any]?","type":"property"}],"title":"WidgetBasedRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedrequest\/extraparameters-3wx8l","title":"var extraParameters: [String : Any]?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedrequest\/grpcpath-6946t","title":"var gRPCPath: String","type":"property"}],"title":"WidgetBasedRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedrequest\/grpcpath-3jhvu","title":"var gRPCPath: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedrequest\/message-20xby","title":"var message: Message?","type":"property"}],"title":"WidgetBasedRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedrequest\/message-60ypg","title":"var message: Message?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedrequest\/method-3wyvb","title":"var method: RequestMethod","type":"property"}],"title":"WidgetBasedRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedrequest\/method-672zk","title":"var method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/widgetbasedrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedrequest\/parameter-3cc62","title":"var parameter: ParameterType","type":"property"}],"title":"WidgetBasedRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedrequest\/parameter-3mqwn","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/widgetbasedrequest\/path","title":"var path: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedrequest\/query-3fcdm","title":"var query: String?","type":"property"}],"title":"WidgetBasedRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedrequest\/query-866n","title":"var query: String?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetbasedrequest\/searchable-16vzz","title":"var searchable: Bool","type":"property"}],"title":"WidgetBasedRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetbasedrequest\/searchable-8bbcm","title":"var searchable: Bool","type":"property"}],"path":"\/documentation\/divar\/widgetbasedrequest","title":"WidgetBasedRequest","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedsegmentedhandlerprotocol\/createviewcontroller(for:prefetchedresult:isembeded:)","title":"func createViewController(for: String?, prefetchedResult: ExtractableMessage?, isEmbeded: Bool) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedhandlerprotocol\/request(completion:)","title":"func request(completion: ExtractableResult)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedsegmentedhandlerprotocol","title":"WidgetBasedSegmentedHandlerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedservicefactoryprotocol\/widgetbasedservice","title":"var widgetBasedService: WidgetBasedServiceProtocol","type":"property"}],"path":"\/documentation\/divar\/widgetbasedservicefactoryprotocol","title":"WidgetBasedServiceFactoryProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedserviceprotocol\/sendwidgetbasedrequest(request:responsetype:completion:)","title":"func sendWidgetBasedRequest<ResponseType>(request: WidgetBasedRequest, responseType: ResponseType.Type, completion: ExtractableResult) -> Cancellable?","type":"method"}],"path":"\/documentation\/divar\/widgetbasedserviceprotocol","title":"WidgetBasedServiceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedviewcontrollerprotocol\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"}],"path":"\/documentation\/divar\/widgetbasedviewcontrollerprotocol","title":"WidgetBasedViewControllerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedworkerprotocol\/config","title":"var config: WidgetBasedConfig","type":"property"},{"path":"\/documentation\/divar\/widgetbasedworkerprotocol\/responsetype","title":"var responseType: ExtractableMessage.Type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedworkerprotocol\/createpredictionworker(with:)","title":"func createPredictionWorker(with: String) -> WidgetBasedWorkerProtocol?","type":"method"},{"path":"\/documentation\/divar\/widgetbasedworkerprotocol\/loaddata(with:completion:)","title":"func loadData(with: WidgetBaseRequestMetadata, completion: ExtractableResult) -> Cancellable?","type":"method"}],"path":"\/documentation\/divar\/widgetbasedworkerprotocol","title":"WidgetBasedWorkerProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetcellconfigurable\/preparecell(with:)","title":"func prepareCell(with: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/widgetcellconfigurable","title":"WidgetCellConfigurable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/divar\/widgetcelldelegate\/callparent(action:widget:)-21huq","title":"func callParent(action: CustomAction, widget: Widgets_Widget)","type":"method"}],"title":"WidgetCellDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/divar\/widgetcelldelegate\/callparent(action:widget:)-5az89","title":"func callParent(action: CustomAction, widget: Widgets_Widget)","type":"method"},{"path":"\/documentation\/divar\/widgetcelldelegate\/callparent(action:widget:actionlogcoordinator:)","title":"func callParent(action: Widgets_Action, widget: Widgets_Widget, actionLogCoordinator: ActionLog_ActionLogCoordinator?)","type":"method"},{"path":"\/documentation\/divar\/widgetcelldelegate\/internalstatechanges(widget:parameters:)","title":"func internalStateChanges(widget: Widgets_Widget, parameters: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/widgetcelldelegate\/reloadself(_:newwidget:)","title":"func reloadSelf(WidgetCell, newWidget: Widgets_Widget)","type":"method"}],"path":"\/documentation\/divar\/widgetcelldelegate","title":"WidgetCellDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontrollerdelegate\/widgetviewcontroller(shouldopenfilterwith:request:for:)","title":"func widgetViewController(shouldOpenFilterWith: Schema, request: WidgetBasedFilterRequest, for: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/widgetviewcontrollerdelegate","title":"WidgetViewControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewmodeldelegate\/widgetviewmodel(shouldopenfilterwith:worker:for:)","title":"func widgetViewModel(shouldOpenFilterWith: Schema, worker: WidgetBasedWorkerProtocol, for: WidgetTag)","type":"method"}],"path":"\/documentation\/divar\/widgetviewmodeldelegate","title":"WidgetViewModelDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/canloadmore","title":"var canLoadMore: Bool","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/dologin","title":"var doLogin: ((_ claimToken: String?, _ phoneNumber: String, _ dataProvider: DataProviderProtocol) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/emptystatemessage$","title":"var emptyStateMessage$: AnyPublisher<String?, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/error$","title":"var error$: AnyPublisher<DError, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/navbaritems$","title":"var navBarItems$: AnyPublisher<[Widgets_NavigationBar], Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/responsetype","title":"var responseType: ExtractableMessage.Type","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/searchbox$","title":"var searchBox$: AnyPublisher<SearchBoxViewModel?, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/searchhistoryviewmodel","title":"var searchHistoryViewModel: SearchHistoryViewModelProtocol?","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/searchtext$","title":"var searchText$: AnyPublisher<String?, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/stickywidgets$","title":"var stickyWidgets$: AnyPublisher<StickyWidgetActionWrapper?, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/tagitems$","title":"var tagItems$: AnyPublisher<[WidgetTag], Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/title$","title":"var title$: AnyPublisher<String?, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/viewstate$","title":"var viewState$: AnyPublisher<WidgetViewState, Never>","type":"property"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/widgets$","title":"var widgets$: AnyPublisher<WidgetList, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/loadmore()","title":"func loadMore()","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/navbaritemdidtap(_:performaction:)","title":"func navBarItemDidTap(Widgets_NavigationBar, performAction: (Widgets_Action) -> Void)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/refresh()","title":"func refresh()","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/searchtextdidbeginediting(with:)","title":"func searchTextDidBeginEditing(with: String)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/searchtextdidcancelediting()","title":"func searchTextDidCancelEditing()","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/searchtextdidchange(_:)","title":"func searchTextDidChange(String)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/searchtextdidsubmit(_:)","title":"func searchTextDidSubmit(String)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/setfilters(_:with:)","title":"func setFilters(Google_Protobuf_Struct?, with: WidgetTag)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/taglistdidremove(tag:)","title":"func tagListDidRemove(tag: TagListItem)","type":"method"},{"path":"\/documentation\/divar\/widgetviewmodelprotocol\/taglistdidselect(tag:)","title":"func tagListDidSelect(tag: TagListItem)","type":"method"}],"path":"\/documentation\/divar\/widgetviewmodelprotocol","title":"WidgetViewModelProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/onerror","title":"var onerror: JSValue!","type":"property"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/onload","title":"var onload: JSValue!","type":"property"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/onreadystatechange","title":"var onreadystatechange: JSValue!","type":"property"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/readystate","title":"var readyState: NSNumber!","type":"property"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/responsetext","title":"var responseText: String!","type":"property"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/status","title":"var status: NSNumber!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/getallresponseheaders()","title":"func getAllResponseHeaders() -> String!","type":"method"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/getreponseheader(_:)","title":"func getReponseHeader(String!) -> String!","type":"method"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/open(_:_:_:)","title":"func open(String!, String!, Bool)","type":"method"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/send(_:)","title":"func send(Any!)","type":"method"},{"path":"\/documentation\/divar\/xmlhttprequestprotocol\/setrequestheader(_:_:)","title":"func setRequestHeader(String!, String!)","type":"method"}],"path":"\/documentation\/divar\/xmlhttprequestprotocol","title":"XMLHttpRequestProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttablist\/init(tabs:title:username:)","title":"init(tabs: [AbstractTableList], title: String?, username: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttablist\/tabs","title":"var tabs: [AbstractTableList]","type":"property"},{"path":"\/documentation\/divar\/abstracttablist\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/divar\/abstracttablist\/username","title":"var username: String?","type":"property"}],"path":"\/documentation\/divar\/abstracttablist","title":"AbstractTabList","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableitem\/init(descriptionfielddata:)","title":"init(descriptionFieldData: DescriptionFieldModel)","type":"init"},{"path":"\/documentation\/divar\/abstracttableitem\/init(descriptionprimary:)","title":"init(descriptionPrimary: DescriptionModel)","type":"init"},{"path":"\/documentation\/divar\/abstracttableitem\/init(descriptionsecondary:)","title":"init(descriptionSecondary: DescriptionModel)","type":"init"},{"path":"\/documentation\/divar\/abstracttableitem\/init(legendtitledata:)","title":"init(legendTitleData: LegendTitleModel)","type":"init"},{"path":"\/documentation\/divar\/abstracttableitem\/init(noterowdata:)","title":"init(noteRowData: NoteRowModel)","type":"init"},{"path":"\/documentation\/divar\/abstracttableitem\/init(textfielddata:)","title":"init(textFieldData: TextFieldModel)","type":"init"},{"path":"\/documentation\/divar\/abstracttableitem\/init(titlerowdata:)","title":"init(titleRowData: TitleRowModel)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttableitem\/descriptiondata","title":"var descriptionData: DescriptionModel?","type":"property"},{"path":"\/documentation\/divar\/abstracttableitem\/descriptionfielddata","title":"var descriptionFieldData: DescriptionFieldModel?","type":"property"},{"path":"\/documentation\/divar\/abstracttableitem\/inforowdata","title":"var infoRowData: InfoRowModel?","type":"property"},{"path":"\/documentation\/divar\/abstracttableitem\/legendtitledata","title":"var legendTitleData: LegendTitleModel?","type":"property"},{"path":"\/documentation\/divar\/abstracttableitem\/noterowdata","title":"var noteRowData: NoteRowModel?","type":"property"},{"path":"\/documentation\/divar\/abstracttableitem\/simplebuttondata","title":"var simpleButtonData: SimpleButtonRowModel?","type":"property"},{"path":"\/documentation\/divar\/abstracttableitem\/textfielddata","title":"var textFieldData: TextFieldModel?","type":"property"},{"path":"\/documentation\/divar\/abstracttableitem\/titlerowdata","title":"var titleRowData: TitleRowModel?","type":"property"},{"path":"\/documentation\/divar\/abstracttableitem\/widgettype","title":"var widgetType: AbstractTableType","type":"property"}],"path":"\/documentation\/divar\/abstracttableitem","title":"AbstractTableItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttablelist\/init(list:)","title":"init(list: [AbstractTableItem])","type":"init"},{"path":"\/documentation\/divar\/abstracttablelist\/init(list:title:extradata:)","title":"init(list: [AbstractTableItem], title: String?, extraData: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttablelist\/extradata","title":"var extraData: String?","type":"property"},{"path":"\/documentation\/divar\/abstracttablelist\/list","title":"var list: [AbstractTableItem]","type":"property"},{"path":"\/documentation\/divar\/abstracttablelist\/title","title":"var title: String?","type":"property"}],"path":"\/documentation\/divar\/abstracttablelist","title":"AbstractTableList","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogconfig\/init(batchsize:)","title":"init(batchSize: Int?)","type":"init"},{"path":"\/documentation\/divar\/actionlogconfig\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogconfig\/batchsize","title":"let batchSize: Int?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/batchsize","title":"case batchSize","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/actionlogconfig\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/actionlogconfig\/codingkeys","title":"ActionLogConfig.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/actionlogconfig","title":"ActionLogConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogposo\/init(id:data:)","title":"init(id: String, data: ActionLog_ActionLog)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogposo\/data","title":"var data: ActionLog_ActionLog","type":"property"},{"path":"\/documentation\/divar\/actionlogposo\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/divar\/actionlogposo","title":"ActionLogPOSO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/init(actionlogdata:)","title":"init(actionLogData: Data)","type":"init"},{"path":"\/documentation\/divar\/actionlogtable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/actionlogdata","title":"var actionLogData: Data","type":"property"},{"path":"\/documentation\/divar\/actionlogtable\/data","title":"var data: Data","type":"property"},{"path":"\/documentation\/divar\/actionlogtable\/primarykey","title":"var primaryKey: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/actionlogtable\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/actionlogtable\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/actionlogtable\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/actionlogtable\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/init(row:)","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/actionlogtable\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/actionlogtable\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchall(_:keys:)-7ryzk","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchall(_:keys:)-9od9q","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchcursor(_:keys:)-7fz3l","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchcursor(_:keys:)-7rt3i","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchone(_:key:)-4yia","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchone(_:key:)-71knx","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"}],"path":"\/documentation\/divar\/actionlogtable\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/actionlogtable\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/actionlogtable\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/actionlogtable\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/actionlogtable\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/actionlogtable\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/actionlogtable\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogtable\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/annotated(with:)-2zrlw","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/annotated(with:)-42zoa","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/annotated(with:)-6vpk1","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/annotated(with:)-cbzn","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/belongsto(_:key:using:)-85ucl","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/belongsto(_:key:using:)-z2py","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/deleteall(_:keys:)-2apcr","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/deleteall(_:keys:)-4ebcy","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/deleteone(_:key:)-7agi","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/deleteone(_:key:)-8mrs1","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/exists(_:key:)-3y3nv","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/exists(_:key:)-7yxj1","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/filter(_:)-2g6u","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/filter(_:)-7bky7","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/filter(key:)-5nmln","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/filter(key:)-7f4iu","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/filter(keys:)-4vg0p","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/filter(keys:)-6aidr","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/hasmany(_:key:using:)-644gl","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/hasmany(_:key:using:)-9n0s8","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/hasone(_:key:using:)-1vodk","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/hasone(_:key:using:)-7an2p","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/order(_:)-1dk00","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/order(_:)-l6cx","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/select(_:)-4jqv5","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/select(_:)-8ynqa","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/select(_:as:)-5hfe0","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/select(_:as:)-6mbsh","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/actionlogtable\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/actionlogtable\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/actionlogtable","title":"ActionLogTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogthreashhold\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogthreashhold\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogthreashhold\/fire()","title":"func fire()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionlogthreashhold\/actionlogthreashhold","title":"static var actionLogThreashhold: Int","type":"property"}],"path":"\/documentation\/divar\/actionlogthreashhold","title":"ActionLogThreashhold","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actionmechaniccarblogpostpayload\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionmechaniccarblogpostpayload\/slug","title":"var slug: String?","type":"property"}],"path":"\/documentation\/divar\/actionmechaniccarblogpostpayload","title":"ActionMechanicCarBlogPostPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actionopenwebpagepayload\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionopenwebpagepayload\/link","title":"var link: String?","type":"property"}],"path":"\/documentation\/divar\/actionopenwebpagepayload","title":"ActionOpenWebPagePayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/addusertransactionrequestmodel\/init(usertype:sourcepage:sourceposttoken:)","title":"init(userType: Int, sourcePage: Int, sourcePostToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/addusertransactionrequestmodel\/sourcepage","title":"var sourcePage: Int","type":"property"},{"path":"\/documentation\/divar\/addusertransactionrequestmodel\/sourceposttoken","title":"var sourcePostToken: String","type":"property"},{"path":"\/documentation\/divar\/addusertransactionrequestmodel\/usertype","title":"var userType: Int","type":"property"}],"path":"\/documentation\/divar\/addusertransactionrequestmodel","title":"AddUserTransactionRequestModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/agencymanagementpagerequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/agencymanagementpagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/agencymanagementpagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/agencymanagementpagerequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/agencymanagementpagerequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/agencymanagementpagerequest\/tabidentifier","title":"var tabIdentifier: String?","type":"property"}],"path":"\/documentation\/divar\/agencymanagementpagerequest","title":"AgencyManagementPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/agencymanagementpagerequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/agencymanagementpagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/agencymanagementpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/agencymanagementpagerequestbuilder","title":"AgencyManagementPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/agencypagerequest\/init(businessref:)","title":"init(businessRef: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/agencypagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/agencypagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/agencypagerequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/agencypagerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/agencypagerequest","title":"AgencyPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/agencypagerequestbuilder\/init(businessref:)","title":"init(businessRef: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/agencypagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/agencypagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/agencypagerequestbuilder","title":"AgencyPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/agentusagerequest\/init(id:timeslot:)","title":"init(id: String, timeSlot: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/agentusagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/agentusagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/agentusagerequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/agentusagerequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/agentusagerequest\/tabidentifier","title":"var tabIdentifier: String?","type":"property"}],"path":"\/documentation\/divar\/agentusagerequest","title":"AgentUsageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/agentsusagelistrequest\/init(timeslot:)","title":"init(timeSlot: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/agentsusagelistrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/agentsusagelistrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/agentsusagelistrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/agentsusagelistrequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/agentsusagelistrequest\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/divar\/agentsusagelistrequest\/searchable","title":"var searchable: Bool","type":"property"}],"path":"\/documentation\/divar\/agentsusagelistrequest","title":"AgentsUsageListRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/agentsusagelistrequestbuilder\/init(timeslot:)","title":"init(timeSlot: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/agentsusagelistrequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/agentsusagelistrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/agentsusagelistrequestbuilder","title":"AgentsUsageListRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/albumvideoitemrequestresponseimpl\/init(videourl:videoinfo:)","title":"init(videoUrl: URL, videoInfo: IVVideoAssetResolveVideoInfoResponse)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/albumvideoitemrequestresponseimpl\/videoinfo","title":"var videoInfo: IVVideoAssetResolveVideoInfoResponse","type":"property"},{"path":"\/documentation\/divar\/albumvideoitemrequestresponseimpl\/videourl","title":"var videoUrl: URL","type":"property"}],"path":"\/documentation\/divar\/albumvideoitemrequestresponseimpl","title":"AlbumVideoItemRequestResponseImpl","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/alertitem\/resultbuilder\/init()","title":"init()","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/alertitem\/resultbuilder\/buildblock(_:)","title":"static func buildBlock(AlertItem...) -> [AlertItem]","type":"method"}],"path":"\/documentation\/divar\/alertitem\/resultbuilder","title":"AlertItem.ResultBuilder","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/alertitem\/init(title:buttontype:dismissafteraction:action:)","title":"init(title: String, buttonType: ButtonType, dismissAfterAction: Bool, action: ((AlertItem) -> Void)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/alertitem\/action","title":"let action: ((AlertItem) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/alertitem\/buttontype","title":"let buttonType: ButtonType","type":"property"},{"path":"\/documentation\/divar\/alertitem\/dismissafteraction","title":"let dismissAfterAction: Bool","type":"property"},{"path":"\/documentation\/divar\/alertitem\/title","title":"let title: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/alertitem\/getbutton(for:alert:)","title":"static func getButton(for: AlertItem, alert: UIViewController) -> UIButton","type":"method"}],"path":"\/documentation\/divar\/alertitem","title":"AlertItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakconfiguration\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakconfiguration\/config(data:)","title":"func config(data: IntroConfig?)","type":"method"}],"path":"\/documentation\/divar\/angoolakconfiguration","title":"AngoolakConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolaksandboxmetadata\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolaksandboxmetadata\/apiversion","title":"static var apiVersion: String?","type":"property"}],"path":"\/documentation\/divar\/angoolaksandboxmetadata","title":"AngoolakSandboxMetadata","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakserviceitem\/init(name:image:)","title":"init(name: String, image: UIImage)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakserviceitem\/image","title":"let image: UIImage","type":"property"},{"path":"\/documentation\/divar\/angoolakserviceitem\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakserviceitem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakserviceitem\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/angoolakserviceitem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/angoolakserviceitem","title":"AngoolakServiceItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakstatefulrowmodel\/init(title:value:)","title":"init(title: String, value: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakstatefulrowmodel\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/divar\/angoolakstatefulrowmodel\/value","title":"let value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakstatefulrowmodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakstatefulrowmodel\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/angoolakstatefulrowmodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/angoolakstatefulrowmodel","title":"AngoolakStatefulRowModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakviewconfiguration\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakviewconfiguration\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakviewconfiguration\/fire()","title":"func fire()","type":"method"}],"path":"\/documentation\/divar\/angoolakviewconfiguration","title":"AngoolakViewConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakwidgetactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakwidgetactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> AngoolakWidgetActionHandler","type":"method"}],"path":"\/documentation\/divar\/angoolakwidgetactionbuilder","title":"AngoolakWidgetActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakwidgetactionhandlerimpl\/init(flow:)","title":"init(flow: BaseFlowController)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakwidgetactionhandlerimpl\/flow","title":"var flow: BaseFlowController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/angoolakwidgetactionhandlerimpl\/login(_:)","title":"func login(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/angoolakwidgetactionhandlerimpl","title":"AngoolakWidgetActionHandlerImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/anyrequestheaders\/init(user:)","title":"init(user: User)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/anyrequestheaders\/user","title":"var user: User","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/anyrequestheaders\/getheaders(withextraheaders:)","title":"func getHeaders(withExtraHeaders: [String : String]?) -> [String : String]","type":"method"}],"path":"\/documentation\/divar\/anyrequestheaders","title":"AnyRequestHeaders","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/appearanceconfiguration\/init(userdefaults:)","title":"init(userDefaults: UserDefaults)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appearanceconfiguration\/config(data:)","title":"func config(data: IntroConfig?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/appearanceconfiguration\/currentappearance","title":"static var currentAppearance: AppAppearance","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance(set:)","title":"static func appAppearance(set: AppAppearance)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance\/darkmode","title":"case darkMode","type":"case"},{"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance\/lightmode","title":"case lightMode","type":"case"},{"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance\/systemdefault","title":"case systemDefault","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance\/userinterfacestyle","title":"var userInterfaceStyle: UIUserInterfaceStyle","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/appearanceconfiguration\/appappearance","title":"AppearanceConfiguration.AppAppearance","type":"enum"}],"path":"\/documentation\/divar\/appearanceconfiguration","title":"AppearanceConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestion\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestion\/answers","title":"let answers: [ReasonAnswer]?","type":"property"},{"path":"\/documentation\/divar\/archivequestion\/note","title":"let note: String?","type":"property"},{"path":"\/documentation\/divar\/archivequestion\/reason","title":"var reason: String?","type":"property"},{"path":"\/documentation\/divar\/archivequestion\/tag","title":"let tag: String?","type":"property"},{"path":"\/documentation\/divar\/archivequestion\/title","title":"let title: String?","type":"property"},{"path":"\/documentation\/divar\/archivequestion\/type","title":"let type: ArchiveQuestionType?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/answers","title":"case answers","type":"case"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/note","title":"case note","type":"case"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/tag","title":"case tag","type":"case"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/title","title":"case title","type":"case"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/archivequestion\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/archivequestion\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestion\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/archivequestion\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/archivequestion\/codingkeys","title":"ArchiveQuestion.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/archivequestion","title":"ArchiveQuestion","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasons\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasons\/desc","title":"let desc: String?","type":"property"},{"path":"\/documentation\/divar\/archivereasons\/question","title":"var question: ArchiveQuestion?","type":"property"},{"path":"\/documentation\/divar\/archivereasons\/reason","title":"let reason: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasons\/codingkeys\/desc","title":"case desc","type":"case"},{"path":"\/documentation\/divar\/archivereasons\/codingkeys\/question","title":"case question","type":"case"},{"path":"\/documentation\/divar\/archivereasons\/codingkeys\/reason","title":"case reason","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasons\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/archivereasons\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/archivereasons\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasons\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/archivereasons\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/archivereasons\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasons\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasons\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/archivereasons\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasons\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasons\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/archivereasons\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/archivereasons\/codingkeys","title":"ArchiveReasons.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/archivereasons","title":"ArchiveReasons","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasonsresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/archivereasonsresponse\/init(reasons:)","title":"init(reasons: [ArchiveReasons])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasonsresponse\/reasons","title":"let reasons: [ArchiveReasons]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/reasons","title":"case reasons","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/archivereasonsresponse\/codingkeys","title":"ArchiveReasonsResponse.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/archivereasonsresponse","title":"ArchiveReasonsResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/assetsmodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/assetsmodel\/init(imageurl:posttitle:)","title":"init(imageURL: String?, postTitle: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/assetsmodel\/imageurl","title":"let imageURL: String?","type":"property"},{"path":"\/documentation\/divar\/assetsmodel\/posttitle","title":"let postTitle: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/imageurl","title":"case imageURL","type":"case"},{"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/posttitle","title":"case postTitle","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/assetsmodel\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/assetsmodel\/codingkeys","title":"AssetsModel.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/assetsmodel","title":"AssetsModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/attachmentmaxsize\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/attachmentmaxsize\/init(image:voice:file:video:)","title":"init(image: Int64?, voice: Int64?, file: Int64?, video: Int64?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/attachmentmaxsize\/file","title":"let file: Int64?","type":"property"},{"path":"\/documentation\/divar\/attachmentmaxsize\/image","title":"let image: Int64?","type":"property"},{"path":"\/documentation\/divar\/attachmentmaxsize\/video","title":"let video: Int64?","type":"property"},{"path":"\/documentation\/divar\/attachmentmaxsize\/voice","title":"let voice: Int64?","type":"property"}],"path":"\/documentation\/divar\/attachmentmaxsize","title":"AttachmentMaxSize","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/attachmentoption\/init(handler:option:chatmeta:rawplugservice:)","title":"init(handler: ChatAttachmentActionOptionProtocol?, option: AttachmentOption.Options, chatMeta: ChatStaticMeta?, rawPlugService: RawPlugService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/attachmentoption\/chatmeta","title":"var chatMeta: ChatStaticMeta?","type":"property"},{"path":"\/documentation\/divar\/attachmentoption\/handler","title":"var handler: ChatAttachmentActionOptionProtocol?","type":"property"},{"path":"\/documentation\/divar\/attachmentoption\/option","title":"var option: Options","type":"property"},{"path":"\/documentation\/divar\/attachmentoption\/rawplugservice","title":"let rawPlugService: RawPlugService","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/attachmentoption\/getaction()","title":"func getAction() -> SheetItem","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/attachmentoption\/options\/choosefile","title":"case chooseFile","type":"case"},{"path":"\/documentation\/divar\/attachmentoption\/options\/chooseimagefromcamera","title":"case chooseImageFromCamera","type":"case"},{"path":"\/documentation\/divar\/attachmentoption\/options\/chooseimagefromgallery","title":"case chooseImageFromGallery","type":"case"},{"path":"\/documentation\/divar\/attachmentoption\/options\/chooselocation","title":"case chooseLocation","type":"case"},{"path":"\/documentation\/divar\/attachmentoption\/options\/sharecontact","title":"case shareContact","type":"case"},{"path":"\/documentation\/divar\/attachmentoption\/options\/videofromcamera","title":"case videoFromCamera","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/attachmentoption\/options\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/attachmentoption\/options\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/attachmentoption\/options\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/attachmentoption\/options","title":"AttachmentOption.Options","type":"enum"}],"path":"\/documentation\/divar\/attachmentoption","title":"AttachmentOption","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/banner\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/banner\/init(url:text:icon:)","title":"init(url: String?, text: String?, icon: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/banner\/icon","title":"let icon: String?","type":"property"},{"path":"\/documentation\/divar\/banner\/text","title":"let text: String?","type":"property"},{"path":"\/documentation\/divar\/banner\/url","title":"let url: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/banner\/codingkeys\/icon","title":"case icon","type":"case"},{"path":"\/documentation\/divar\/banner\/codingkeys\/text","title":"case text","type":"case"},{"path":"\/documentation\/divar\/banner\/codingkeys\/url","title":"case url","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/banner\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/banner\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/banner\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/banner\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/banner\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/banner\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/banner\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/banner\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/banner\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/banner\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/banner\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/banner\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/banner\/codingkeys","title":"Banner.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/banner","title":"Banner","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/bannersconfig\/init(balad:)","title":"init(balad: Banner?)","type":"init"},{"path":"\/documentation\/divar\/bannersconfig\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bannersconfig\/balad","title":"let balad: Banner?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/balad","title":"case balad","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/bannersconfig\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/bannersconfig\/codingkeys","title":"BannersConfig.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/bannersconfig","title":"BannersConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/baseicon\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/baseicon\/init(json:)","title":"init?(json: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/baseicon\/darkicon","title":"var darkIcon: String?","type":"property"},{"path":"\/documentation\/divar\/baseicon\/lighticon","title":"var lightIcon: String?","type":"property"},{"path":"\/documentation\/divar\/baseicon\/proto","title":"var proto: Base_Icon","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/baseicon\/codingkeys\/darkicon","title":"case darkIcon","type":"case"},{"path":"\/documentation\/divar\/baseicon\/codingkeys\/lighticon","title":"case lightIcon","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/baseicon\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/baseicon\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/baseicon\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/baseicon\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/baseicon\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/baseicon\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/baseicon\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseicon\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/baseicon\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/baseicon\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseicon\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/baseicon\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/baseicon\/codingkeys","title":"BaseIcon.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/baseicon","title":"BaseIcon","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/booleanraterowfeedbackpayload\/init(submissionurl:submissionpayload:rate:)","title":"init(submissionUrl: String, submissionPayload: Google_Protobuf_Struct, rate: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/booleanraterowfeedbackpayload\/rate","title":"var rate: Bool","type":"property"},{"path":"\/documentation\/divar\/booleanraterowfeedbackpayload\/submissionpayload","title":"var submissionPayload: Google_Protobuf_Struct","type":"property"},{"path":"\/documentation\/divar\/booleanraterowfeedbackpayload\/submissionurl","title":"var submissionUrl: String","type":"property"}],"path":"\/documentation\/divar\/booleanraterowfeedbackpayload","title":"BooleanRateRowFeedBackPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottomsheetactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> ShowBottomSheetActionHandler","type":"method"}],"path":"\/documentation\/divar\/bottomsheetactionbuilder","title":"BottomSheetActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/init(question:answers:)","title":"init(question: FeedbackQAStruct?, answers: [FeedbackQAStruct]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/answers","title":"let answers: [FeedbackQAStruct]?","type":"property"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/question","title":"let question: FeedbackQAStruct?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/answers","title":"case answers","type":"case"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/question","title":"case question","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandfeedbackstructure\/codingkeys","title":"BrandFeedbackStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/brandfeedbackstructure","title":"BrandFeedbackStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandheaderstructure\/init(title:englishtitle:)","title":"init(title: String?, englishTitle: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandheaderstructure\/englishtitle","title":"let englishTitle: String?","type":"property"},{"path":"\/documentation\/divar\/brandheaderstructure\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/divar\/brandheaderstructure\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/divar\/brandheaderstructure","title":"BrandHeaderStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandimagestrcuture\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/brandimagestrcuture\/init(title:image:)","title":"init(title: String?, image: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandimagestrcuture\/image","title":"let image: String?","type":"property"},{"path":"\/documentation\/divar\/brandimagestrcuture\/title","title":"let title: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/image","title":"case image","type":"case"},{"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/title","title":"case title","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandimagestrcuture\/codingkeys","title":"BrandImageStrcuture.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/brandimagestrcuture","title":"BrandImageStrcuture","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandinfostructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandinfostructure\/brandtitle","title":"var brandTitle: String","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/feedback","title":"let feedback: BrandFeedbackStructure?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/feedbackwidgets","title":"let feedbackWidgets: FeedbackWidgets?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/header","title":"let header: BrandHeaderStructure?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/id","title":"let id: Int?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/images","title":"let images: [BrandImageStrcuture]?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/imagesurls","title":"var imagesURLs: [String]?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/links","title":"let links: BrandLinkStructure?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/models","title":"let models: BrandModelStructure?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/options","title":"let options: [BrandOptionStructure]?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/pricechartimage","title":"let priceChartImage: String?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/related","title":"let related: SimilarBrandsStructure?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/report","title":"let report: BrandReportStructure?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/searches","title":"let searches: [BrandSearchStructure]?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/slug","title":"let slug: String?","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/videos","title":"let videos: [String]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandinfostructure\/getdisplayformat()","title":"func getDisplayformat() -> [DisplayFormatStruct]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/description-swift.enum.case","title":"case description","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/entitle","title":"case enTitle","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/feedback","title":"case feedback","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/feedbackwidgets","title":"case feedbackWidgets","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/images","title":"case images","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/links","title":"case links","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/models","title":"case models","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/options","title":"case options","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/pricechartimage","title":"case priceChartImage","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/related","title":"case related","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/searches","title":"case searches","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/slug","title":"case slug","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/title","title":"case title","type":"case"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/videos","title":"case videos","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/description-swift.property","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandinfostructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandinfostructure\/codingkeys","title":"BrandInfoStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/brandinfostructure","title":"BrandInfoStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/init(title:url:kind:)","title":"init(title: String?, url: String?, kind: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/kind","title":"let kind: String?","type":"property"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/title","title":"let title: String?","type":"property"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/url","title":"let url: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/kind","title":"case kind","type":"case"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/title","title":"case title","type":"case"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/url","title":"case url","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandlinkitemsstructure\/codingkeys","title":"BrandLinkItemsStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/brandlinkitemsstructure","title":"BrandLinkItemsStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/brandlinkstructure\/init(title:data:)","title":"init(title: String?, data: [BrandLinkItemsStructure]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkstructure\/data","title":"let data: [BrandLinkItemsStructure]?","type":"property"},{"path":"\/documentation\/divar\/brandlinkstructure\/title","title":"let title: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/data","title":"case data","type":"case"},{"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/title","title":"case title","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandlinkstructure\/codingkeys","title":"BrandLinkStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/brandlinkstructure","title":"BrandLinkStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/init(title:slug:)","title":"init(title: String?, slug: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/slug","title":"let slug: String","type":"property"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/title","title":"let title: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/slug","title":"case slug","type":"case"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/title","title":"case title","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandmodelitemsstructure\/codingkeys","title":"BrandModelItemsStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/brandmodelitemsstructure","title":"BrandModelItemsStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/brandmodelstructure\/init(title:data:)","title":"init(title: String?, data: [BrandModelItemsStructure]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelstructure\/data","title":"let data: [BrandModelItemsStructure]?","type":"property"},{"path":"\/documentation\/divar\/brandmodelstructure\/title","title":"let title: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/data","title":"case data","type":"case"},{"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/title","title":"case title","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandmodelstructure\/codingkeys","title":"BrandModelStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/brandmodelstructure","title":"BrandModelStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyconfig\/init(property:)","title":"init(property: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandmultihierarchyconfig\/issearchenable","title":"var isSearchEnable: Bool?","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyconfig\/searchkey","title":"var searchKey: String?","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyconfig\/searchminconstraint","title":"var searchMinConstraint: Int?","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyconfig\/tag","title":"var tag: String?","type":"property"},{"path":"\/documentation\/divar\/brandmultihierarchyconfig\/title","title":"var title: String?","type":"property"}],"path":"\/documentation\/divar\/brandmultihierarchyconfig","title":"BrandMultiHierarchyConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandoptionstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/brandoptionstructure\/init(title:display:)","title":"init(title: String?, display: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandoptionstructure\/display","title":"let display: String?","type":"property"},{"path":"\/documentation\/divar\/brandoptionstructure\/title","title":"let title: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/display","title":"case display","type":"case"},{"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/title","title":"case title","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandoptionstructure\/codingkeys","title":"BrandOptionStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/brandoptionstructure","title":"BrandOptionStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/brandreportstructure\/init(title:icon:)","title":"init(title: String?, icon: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportstructure\/icon","title":"let icon: String?","type":"property"},{"path":"\/documentation\/divar\/brandreportstructure\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/divar\/brandreportstructure\/title","title":"let title: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/icon","title":"case icon","type":"case"},{"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/title","title":"case title","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandreportstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandreportstructure\/codingkeys","title":"BrandReportStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/brandreportstructure","title":"BrandReportStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvalueroot\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/brandreportvalueroot\/init(reasons:)","title":"init(reasons: [BrandReportValueStructure]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvalueroot\/reasons","title":"let reasons: [BrandReportValueStructure]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/reasons","title":"case reasons","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandreportvalueroot\/codingkeys","title":"BrandReportValueRoot.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/brandreportvalueroot","title":"BrandReportValueRoot","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/init(id:reason:)","title":"init(id: Int?, reason: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/id","title":"let id: Int?","type":"property"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/reason","title":"let reason: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/reason","title":"case reason","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandreportvaluestructure\/codingkeys","title":"BrandReportValueStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/brandreportvaluestructure","title":"BrandReportValueStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsearchstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsearchstructure\/filter","title":"let filter: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/brandsearchstructure\/title","title":"let title: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsearchstructure\/tosearchhistory()","title":"func toSearchHistory() -> SearchFilterHistory","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/filter","title":"case filter","type":"case"},{"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/title","title":"case title","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandsearchstructure\/codingkeys","title":"BrandSearchStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/brandsearchstructure","title":"BrandSearchStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicestatechangeresult\/init(laststate:newstate:complementarystate:)","title":"init(lastState: CallObserverServiceCallState?, newState: CallObserverServiceCallState, complementaryState: CallObserverServiceComplementaryState)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicestatechangeresult\/complementarystate","title":"let complementaryState: CallObserverServiceComplementaryState","type":"property"},{"path":"\/documentation\/divar\/callobserverservicestatechangeresult\/laststate","title":"let lastState: CallObserverServiceCallState?","type":"property"},{"path":"\/documentation\/divar\/callobserverservicestatechangeresult\/newstate","title":"let newState: CallObserverServiceCallState","type":"property"}],"path":"\/documentation\/divar\/callobserverservicestatechangeresult","title":"CallObserverServiceStateChangeResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/canceltransactionrequestbuilder\/init(transactiontoken:sourcepage:)","title":"init(transactionToken: String, sourcePage: Widgets_DivarTransactionCancellationSourcePage.Page)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/canceltransactionrequestbuilder\/sourcepage","title":"let sourcePage: Widgets_DivarTransactionCancellationSourcePage.Page","type":"property"},{"path":"\/documentation\/divar\/canceltransactionrequestbuilder\/transactiontoken","title":"let transactionToken: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/canceltransactionrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> GRPCWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/canceltransactionrequestbuilder","title":"CancelTransactionRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> CarAgentActionHandler","type":"method"}],"path":"\/documentation\/divar\/caragentactionbuilder","title":"CarAgentActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbulkladderrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbulkladderrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/caragentbulkladderrequest\/hasmaxseletablelimit","title":"var hasMaxSeletableLimit: Bool","type":"property"},{"path":"\/documentation\/divar\/caragentbulkladderrequest\/maxselectableitems","title":"var maxSelectableItems: Int32?","type":"property"},{"path":"\/documentation\/divar\/caragentbulkladderrequest\/method","title":"var method: HTTPMethod","type":"property"},{"path":"\/documentation\/divar\/caragentbulkladderrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/caragentbulkladderrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/caragentbulkladderrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/caragentbulkladderrequest","title":"CarAgentBulkLadderRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbulkladdersubmitrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbulkladdersubmitrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/caragentbulkladdersubmitrequest\/method","title":"var method: HTTPMethod","type":"property"},{"path":"\/documentation\/divar\/caragentbulkladdersubmitrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/caragentbulkladdersubmitrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/caragentbulkladdersubmitrequest\/path","title":"var path: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentbulkladdersubmitrequest\/settokens(tokens:)","title":"func setTokens(tokens: [String])","type":"method"}],"path":"\/documentation\/divar\/caragentbulkladdersubmitrequest","title":"CarAgentBulkLadderSubmitRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentregisterresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/caragentregisterresponse\/init(registersuccessful:errormessage:)","title":"init(registerSuccessful: Bool?, errorMessage: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentregisterresponse\/errormessage","title":"let errorMessage: String?","type":"property"},{"path":"\/documentation\/divar\/caragentregisterresponse\/registersuccessful","title":"let registerSuccessful: Bool?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/errormessage","title":"case errorMessage","type":"case"},{"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/registersuccessful","title":"case registerSuccessful","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/caragentregisterresponse\/codingkeys","title":"CarAgentRegisterResponse.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/caragentregisterresponse","title":"CarAgentRegisterResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/caragentrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/caragentrequest","title":"CarAgentRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/caragentrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/caragentrequestbuilder","title":"CarAgentRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carbusinessactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carbusinessactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> CarBusinessActionHandler","type":"method"}],"path":"\/documentation\/divar\/carbusinessactionbuilder","title":"CarBusinessActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalelandingpagerequestbuilder\/init(slug:)","title":"init(slug: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalelandingpagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalelandingpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/carconciergesalelandingpagerequestbuilder","title":"CarConciergeSaleLandingPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalemanagementrequest\/init(saletoken:)","title":"init(saleToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalemanagementrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/carconciergesalemanagementrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/carconciergesalemanagementrequest","title":"CarConciergeSaleManagementRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalemanagementrequestbuilder\/init(saletoken:)","title":"init(saleToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalemanagementrequestbuilder\/path","title":"var path: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalemanagementrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/carconciergesalemanagementrequestbuilder","title":"CarConciergeSaleManagementRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalessubmitpromotionrequestbuilder\/init(payload:)","title":"init(payload: Widgets_CarConciergeSaleSubmitPromotionPayload)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalessubmitpromotionrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/carconciergesalessubmitpromotionrequestbuilder","title":"CarConciergeSalesSubmitPromotionRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalessubmitregisterrequest\/init(payload:)","title":"init(payload: Widgets_CarConciergeSaleRegisterWithDataPayload)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalessubmitregisterrequest\/method","title":"var method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/carconciergesalessubmitregisterrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/carconciergesalessubmitregisterrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/carconciergesalessubmitregisterrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/carconciergesalessubmitregisterrequest","title":"CarConciergeSalesSubmitRegisterRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalessubmitregisterrequestbuilder\/init(payload:)","title":"init(payload: Widgets_CarConciergeSaleRegisterWithDataPayload)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carconciergesalessubmitregisterrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/carconciergesalessubmitregisterrequestbuilder","title":"CarConciergeSalesSubmitRegisterRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cardetailsbrandpagerequest\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cardetailsbrandpagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/cardetailsbrandpagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/cardetailsbrandpagerequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/cardetailsbrandpagerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/cardetailsbrandpagerequest","title":"CarDetailsBrandPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cardetailsbrandpagerequestbuilder\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cardetailsbrandpagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cardetailsbrandpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/cardetailsbrandpagerequestbuilder","title":"CarDetailsBrandPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cardetailscategorypagerequest\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cardetailscategorypagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/cardetailscategorypagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/cardetailscategorypagerequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/cardetailscategorypagerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/cardetailscategorypagerequest","title":"CarDetailsCategoryPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cardetailscategorypagerequestbuilder\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cardetailscategorypagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cardetailscategorypagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/cardetailscategorypagerequestbuilder","title":"CarDetailsCategoryPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cardetailspricechartpagerequestbuilder\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cardetailspricechartpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/cardetailspricechartpagerequestbuilder","title":"CarDetailsPriceChartPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carformactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carformactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> CarFormActionHandler","type":"method"}],"path":"\/documentation\/divar\/carformactionbuilder","title":"CarFormActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> CarInspectionActionHandler","type":"method"}],"path":"\/documentation\/divar\/carinspectionactionbuilder","title":"CarInspectionActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionreportrequestbuilder\/init(carinspectiontoken:managetoken:cardetailslug:)","title":"init(carInspectionToken: String?, manageToken: String?, carDetailSlug: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionreportrequestbuilder\/path","title":"var path: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionreportrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/carinspectionreportrequestbuilder","title":"CarInspectionReportRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionrequest\/init(usertype:carinspectiontoken:)","title":"init(userType: UserType, carInspectionToken: String?)","type":"init"},{"path":"\/documentation\/divar\/carinspectionrequest\/init(usertype:managetoken:)","title":"init(userType: UserType, manageToken: String)","type":"init"},{"path":"\/documentation\/divar\/carinspectionrequest\/init(usertype:token:)","title":"init(userType: UserType, token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/carinspectionrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/carinspectionrequest","title":"CarInspectionRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionrequestbuilder\/init(usertype:carinspectiontoken:)","title":"init(userType: UserType, carInspectionToken: String?)","type":"init"},{"path":"\/documentation\/divar\/carinspectionrequestbuilder\/init(usertype:managetoken:)","title":"init(userType: UserType, manageToken: String)","type":"init"},{"path":"\/documentation\/divar\/carinspectionrequestbuilder\/init(usertype:token:)","title":"init(userType: UserType, token: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carinspectionrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/carinspectionrequestbuilder","title":"CarInspectionRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carlandingactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carlandingactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> CarLandingActionHandler","type":"method"}],"path":"\/documentation\/divar\/carlandingactionbuilder","title":"CarLandingActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carpriceactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carpriceactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> CarPriceActionHandler","type":"method"}],"path":"\/documentation\/divar\/carpriceactionbuilder","title":"CarPriceActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carpricetoolspagerequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carpricetoolspagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/carpricetoolspagerequestbuilder","title":"CarPriceToolsPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carspecactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carspecactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> CarSpecActionHandler","type":"method"}],"path":"\/documentation\/divar\/carspecactionbuilder","title":"CarSpecActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carspecshomepagerequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/carspecshomepagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/carspecshomepagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/carspecshomepagerequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/carspecshomepagerequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/carspecshomepagerequest\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/divar\/carspecshomepagerequest\/searchable","title":"var searchable: Bool","type":"property"}],"path":"\/documentation\/divar\/carspecshomepagerequest","title":"CarSpecsHomePageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/carspecshomepagerequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/carspecshomepagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/carspecshomepagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/carspecshomepagerequestbuilder","title":"CarSpecsHomePageRequestBuilder","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryfields\/==(_:_:)","title":"static func == (CategoryFields, CategoryFields) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryfields\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/categoryfields\/init(name:icon:icondark:id:slug:children:parent:)","title":"init(name: String?, icon: String?, iconDark: String?, id: String?, slug: String, children: [MainCategory]?, parent: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryfields\/children","title":"let children: [MainCategory]?","type":"property"},{"path":"\/documentation\/divar\/categoryfields\/icon","title":"let icon: String?","type":"property"},{"path":"\/documentation\/divar\/categoryfields\/icondark","title":"let iconDark: String?","type":"property"},{"path":"\/documentation\/divar\/categoryfields\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/divar\/categoryfields\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/divar\/categoryfields\/parent","title":"let parent: String","type":"property"},{"path":"\/documentation\/divar\/categoryfields\/slug","title":"let slug: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/children","title":"case children","type":"case"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/icon","title":"case icon","type":"case"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/icondark","title":"case iconDark","type":"case"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/parent","title":"case parent","type":"case"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/slug","title":"case slug","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/categoryfields\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/categoryfields\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryfields\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/categoryfields\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/categoryfields\/codingkeys","title":"CategoryFields.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryfields\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categoryfields\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/categoryfields\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/categoryfields","title":"CategoryFields","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/categorylistrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/categorylistrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/categorylistrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/categorylistrequest","title":"CategoryListRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/categorylistrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categorylistrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/categorylistrequestbuilder","title":"CategoryListRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/changewithindexpath\/init(inserts:deletes:replaces:moves:)","title":"init(inserts: [IndexPath], deletes: [IndexPath], replaces: [IndexPath], moves: [(from: IndexPath, to: IndexPath)])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/changewithindexpath\/deletes","title":"let deletes: [IndexPath]","type":"property"},{"path":"\/documentation\/divar\/changewithindexpath\/inserts","title":"let inserts: [IndexPath]","type":"property"},{"path":"\/documentation\/divar\/changewithindexpath\/moves","title":"let moves: [(from: IndexPath, to: IndexPath)]","type":"property"},{"path":"\/documentation\/divar\/changewithindexpath\/replaces","title":"let replaces: [IndexPath]","type":"property"}],"path":"\/documentation\/divar\/changewithindexpath","title":"ChangeWithIndexPath","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatapiinitstruct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatapiinitstruct\/init(token:status:servers:user:reason:message:)","title":"init(token: String?, status: String?, servers: [String]?, user: ChatUserStructure?, reason: String?, message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatapiinitstruct\/message","title":"let message: String?","type":"property"},{"path":"\/documentation\/divar\/chatapiinitstruct\/reason","title":"let reason: String?","type":"property"},{"path":"\/documentation\/divar\/chatapiinitstruct\/servers","title":"let servers: [String]?","type":"property"},{"path":"\/documentation\/divar\/chatapiinitstruct\/status","title":"let status: String?","type":"property"},{"path":"\/documentation\/divar\/chatapiinitstruct\/token","title":"let token: String?","type":"property"},{"path":"\/documentation\/divar\/chatapiinitstruct\/user","title":"let user: ChatUserStructure?","type":"property"}],"path":"\/documentation\/divar\/chatapiinitstruct","title":"ChatAPIInitStruct","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/init(conversationid:phone:thumbnail:title:id:voipenabled:category:)","title":"init(conversationID: String?, phone: String?, thumbnail: String?, title: String?, id: String?, voipEnabled: Bool?, category: String?)","type":"init"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/category","title":"let category: String?","type":"property"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/conversationid","title":"let conversationID: String?","type":"property"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/phone","title":"let phone: String?","type":"property"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/thumbnail","title":"let thumbnail: String?","type":"property"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/title","title":"let title: String?","type":"property"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/tochatmetadatatable","title":"var toChatMetadataTable: ChatConversationMetadataTable?","type":"property"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/voipenabled","title":"let voipEnabled: Bool?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/category","title":"case category","type":"case"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/conversationid","title":"case conversationID","type":"case"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/phone","title":"case phone","type":"case"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/thumbnail","title":"case thumbnail","type":"case"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/title","title":"case title","type":"case"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/voipenabled","title":"case voipEnabled","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatadvertisementstructure\/codingkeys","title":"ChatAdvertisementStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatadvertisementstructure","title":"ChatAdvertisementStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatannouncementtable\/init(id:sentat:conversationid:rawtype:data:)","title":"init(id: String, sentAt: TimeInterval, conversationID: String, rawType: Int, data: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/content","title":"var content: ContentData?","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/data","title":"var data: String","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/rawtype","title":"var rawType: Int","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/sentat","title":"var sentAt: TimeInterval","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/type","title":"var type: ContentType","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/sortkey","title":"static var sortKey: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/conversationid","title":"case conversationID","type":"case"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/data","title":"case data","type":"case"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/rawtype","title":"case rawType","type":"case"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/sentat","title":"case sentAt","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatannouncementtable\/codingkeys","title":"ChatAnnouncementTable.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/text(_:)","title":"case text(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/init(_:type:)","title":"init?(String, type: ContentType)","type":"init"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/databasevalue","title":"var databaseValue: DatabaseValue","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/fromdatabasevalue(_:)","title":"static func fromDatabaseValue(DatabaseValue) -> Self?","type":"method"}],"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/databasevalueconvertible-implementations","title":"DatabaseValueConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/sqlexpression","title":"var sqlExpression: SQLExpression","type":"property"}],"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/sqlexpressible-implementations","title":"SQLExpressible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/bind(to:at:)","title":"func bind(to: SQLiteStatement, at: CInt) -> CInt","type":"method"}],"path":"\/documentation\/divar\/chatannouncementtable\/contentdata\/statementbinding-implementations","title":"StatementBinding Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatannouncementtable\/contentdata","title":"ChatAnnouncementTable.ContentData","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contenttype\/text","title":"case text","type":"case"},{"path":"\/documentation\/divar\/chatannouncementtable\/contenttype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contenttype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contenttype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatannouncementtable\/contenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contenttype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contenttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/contenttype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/contenttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatannouncementtable\/contenttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatannouncementtable\/contenttype","title":"ChatAnnouncementTable.ContentType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/chatannouncementtable\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatannouncementtable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/init(row:)","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchall(_:keys:)-1fizg","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchall(_:keys:)-1ibwq","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchcursor(_:keys:)-61n2h","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchcursor(_:keys:)-715ju","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchone(_:key:)-4d435","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchone(_:key:)-72u5a","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchset(_:)","title":"static func fetchSet(Database) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchset(_:_:)","title":"static func fetchSet<R>(Database, R) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchset(_:arguments:adapter:)","title":"static func fetchSet(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchset(_:keys:)-14n9k","title":"static func fetchSet<Sequence>(Database, keys: Sequence) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchset(_:keys:)-6xq1l","title":"static func fetchSet(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchset(_:sql:arguments:adapter:)","title":"static func fetchSet(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Set<Self>","type":"method"}],"path":"\/documentation\/divar\/chatannouncementtable\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatannouncementtable\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/chatannouncementtable\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/chatannouncementtable\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/chatannouncementtable\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatannouncementtable\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatannouncementtable\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/annotated(with:)-1ddeo","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/annotated(with:)-38eix","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/annotated(with:)-5khzo","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/annotated(with:)-9z10i","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/belongsto(_:key:using:)-2r2s2","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/belongsto(_:key:using:)-78808","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/deleteall(_:keys:)-5h8xr","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/deleteall(_:keys:)-71mpm","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/deleteone(_:key:)-310g8","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/deleteone(_:key:)-935z5","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/exists(_:key:)-159a9","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/exists(_:key:)-1mzrt","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/filter(_:)-5o46t","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/filter(_:)-8yozg","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/filter(key:)-8mll5","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/filter(key:)-99o9p","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/filter(keys:)-4689k","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/filter(keys:)-ezye","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/hasmany(_:key:using:)-7og2e","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/hasmany(_:key:using:)-9isna","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/hasone(_:key:using:)-1wf3l","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/hasone(_:key:using:)-3eqjn","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/order(_:)-6hpuo","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/order(_:)-83z6r","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/select(_:)-6pma4","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/select(_:)-oe94","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/select(_:as:)-4stx1","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/select(_:as:)-9quz6","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatannouncementtable\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/chatannouncementtable\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatannouncementtable","title":"ChatAnnouncementTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/init(rawplugservice:)","title":"init(rawPlugService: RawPlugService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/rawplugservice","title":"let rawPlugService: RawPlugService","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/fileselected()","title":"func fileSelected()","type":"method"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/imagecameraselected()","title":"func imageCameraSelected()","type":"method"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/imagegalleryselected()","title":"func imageGallerySelected()","type":"method"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/locationselected()","title":"func locationSelected()","type":"method"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/mycontactselected()","title":"func myContactSelected()","type":"method"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/videocameraselected()","title":"func videoCameraSelected()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/file","title":"case file","type":"case"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/imagecamera","title":"case imageCamera","type":"case"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/imagegallery","title":"case imageGallery","type":"case"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/locaation","title":"case locaation","type":"case"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/mycontact","title":"case myContact","type":"case"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/videocamera","title":"case videoCamera","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatattachmentactionloghelpr\/eventname","title":"ChatAttachmentActionLogHelpr.EventName","type":"enum"}],"path":"\/documentation\/divar\/chatattachmentactionloghelpr","title":"ChatAttachmentActionLogHelpr","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockv2model\/init(conversationid:peerid:)","title":"init(conversationID: String, peerID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatblockv2model\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/divar\/chatblockv2model\/peerid","title":"var peerID: String","type":"property"}],"path":"\/documentation\/divar\/chatblockv2model","title":"ChatBlockV2Model","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/callid","title":"let callID: String?","type":"property"},{"path":"\/documentation\/divar\/chatcalllogstructure\/duration","title":"let duration: String?","type":"property"},{"path":"\/documentation\/divar\/chatcalllogstructure\/status","title":"let status: CallStatus?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/callstatus\/finished","title":"case finished","type":"case"},{"path":"\/documentation\/divar\/chatcalllogstructure\/callstatus\/missedcall","title":"case missedCall","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/callstatus\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/callstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/callstatus\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatcalllogstructure\/callstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/callstatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/callstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/callstatus\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/divar\/chatcalllogstructure\/callstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatcalllogstructure\/callstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatcalllogstructure\/callstatus","title":"ChatCallLogStructure.CallStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/callid","title":"case callID","type":"case"},{"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/duration","title":"case duration","type":"case"},{"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/status","title":"case status","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatcalllogstructure\/codingkeys","title":"ChatCallLogStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatcalllogstructure","title":"ChatCallLogStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconfig\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatconfig\/init(ismessageseditable:ismessagesdeletable:)","title":"init(isMessagesEditable: Bool?, isMessagesDeletable: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconfig\/ismessagesdeletable","title":"let isMessagesDeletable: Bool?","type":"property"},{"path":"\/documentation\/divar\/chatconfig\/ismessageseditable","title":"let isMessagesEditable: Bool?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconfig\/codingkeys\/ismessagesdeletable","title":"case isMessagesDeletable","type":"case"},{"path":"\/documentation\/divar\/chatconfig\/codingkeys\/ismessageseditable","title":"case isMessagesEditable","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconfig\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatconfig\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatconfig\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconfig\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatconfig\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatconfig\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconfig\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconfig\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatconfig\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconfig\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconfig\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatconfig\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatconfig\/codingkeys","title":"ChatConfig.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatconfig","title":"ChatConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationhandler\/init(data:networkmanager:dataprovider:)","title":"init(data: ChatConversationStructure?, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"path":"\/documentation\/divar\/chatconversationhandler\/init(networkmanager:dataprovider:)","title":"init(networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationhandler\/conversation","title":"var conversation: ResultType","type":"property"},{"path":"\/documentation\/divar\/chatconversationhandler\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatconversationhandler\/networkmanager","title":"var networkManager: ChatNetworkManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationhandler\/execute(completionblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any?>) -> ChatConversationTable?","type":"method"},{"path":"\/documentation\/divar\/chatconversationhandler\/execute(conversation:)","title":"func execute(conversation: ChatConversationTable)","type":"method"},{"path":"\/documentation\/divar\/chatconversationhandler\/getconversation()","title":"func getConversation()","type":"method"},{"path":"\/documentation\/divar\/chatconversationhandler\/scheduleannouncementsyncaction()","title":"func scheduleAnnouncementSyncAction()","type":"method"},{"path":"\/documentation\/divar\/chatconversationhandler\/scheduleusereventssyncaction()","title":"func scheduleUserEventsSyncAction()","type":"method"},{"path":"\/documentation\/divar\/chatconversationhandler\/scheduleusermessagessyncaction()","title":"func scheduleUserMessagesSyncAction()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationhandler\/resulttype","title":"ChatConversationHandler.ResultType","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationhandler\/updateseenmessage(_:messageid:origin:networkmanager:dataprovider:completion:)","title":"static func updateSeenMessage(String, messageID: String, origin: SeenMessageOriginEnum, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol, completion: CompletionHandlerType)","type":"method"}],"path":"\/documentation\/divar\/chatconversationhandler","title":"ChatConversationHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationlastmessagehandler\/init(_:conversationid:)","title":"init(ChatMessageStructure, conversationID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationlastmessagehandler\/conversationid","title":"let conversationID: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationlastmessagehandler\/data","title":"let data: ChatMessageStructure","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationlastmessagehandler\/execute(completionblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any>) -> ChatConversationMessageTable?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationlastmessagehandler\/resulttype","title":"ChatConversationLastMessageHandler.ResultType","type":"typealias"}],"path":"\/documentation\/divar\/chatconversationlastmessagehandler","title":"ChatConversationLastMessageHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/init(id:type:data:)","title":"init(id: String, type: Int, data: MessageData)","type":"init"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/init(id:type:data:fromme:timestamp:conversationid:blocked:rejectionreason:sent:reference:sender:replyto:state:censored:)","title":"init(id: String, type: Int, data: MessageData, fromMe: Bool, timestamp: TimeInterval, conversationID: String, blocked: Bool, rejectionReason: String?, sent: Bool, reference: String?, sender: String?, replyTo: MessageReplyModel?, state: MessageState?, censored: Bool)","type":"init"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/init(row:)-4hy5b","title":"init(row: Row)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/blocked","title":"var blocked: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/cellreuseidentifier","title":"var cellReuseIdentifier: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/censored","title":"var censored: Bool?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/contentsize","title":"var contentSize: CGSize","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/data","title":"var data: MessageData","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fromme","title":"var fromMe: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/iscalllogmessagetype","title":"var isCallLogMessageType: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/iscontactmessagecelltype","title":"var isContactMessageCellType: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/isdivarpostchi","title":"var isDivarPostchi: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/isfilemessagetype","title":"var isFileMessageType: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/isfirstmessageofday","title":"var isFirstMessageOfDay: Bool?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/isimagemessagecelltype","title":"var isImageMessageCellType: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/isseen","title":"var isSeen: Bool?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/istextmessagecelltype","title":"var isTextMessageCellType: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/isvideomessagecelltype","title":"var isVideoMessageCellType: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/isvoicemessagecelltype","title":"var isVoiceMessageCellType: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/messagetime","title":"var messageTime: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/notsupportedmessagetype","title":"var notSupportedMessageType: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/reference","title":"var reference: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/rejectionreason","title":"var rejectionReason: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/replyto","title":"var replyTo: MessageReplyModel?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/sender","title":"var sender: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/sent","title":"var sent: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/state","title":"var state: MessageState?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/timeuuid","title":"var timeUUID: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/timestamp","title":"var timestamp: TimeInterval","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/tochatmessagestructure","title":"var toChatMessageStructure: ChatMessageStructure","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/type","title":"var type: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/calculaterepresentativecellheight(firstmessageoftheday:isfirstunread:)","title":"func calculateRepresentativeCellHeight(firstMessageOfTheDay: Bool, isFirstUnread: Bool) -> CGFloat","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/changesentstatus(to:dataprovider:)","title":"func changeSentStatus(to: Bool, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/encode(to:)-1hj6s","title":"func encode(to: inout PersistenceContainer)","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/getcontentsize()","title":"func getContentSize() -> CGSize","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/geteditedmessage(text:)","title":"func getEditedMessage(text: String) -> ChatConversationMessageTable?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/getmessagestate(seenstatus:)","title":"func getMessageState(seenStatus: Bool) -> Sonnat.MessageState?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/getreplymodel(conversation:userdefaults:)","title":"func getReplyModel(conversation: ChatConversationTable?, userDefaults: UserDefaults) -> MessageReplyModel","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/isthefirstmessageofday(previousmessagetimestamp:)","title":"func isTheFirstMessageOfDay(previousMessageTimestamp: Double) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/empty","title":"static var empty: ChatConversationMessageTable","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/sortfield","title":"static let sortField: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/description(type:data:censored:conversationid:)","title":"static func description(type: MessageType, data: MessageData, censored: Bool, conversationID: String) -> String?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/getfilemessage(filepath:type:)","title":"static func getFileMessage(filePath: URL, type: MessageType) -> ChatConversationMessageTable","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/getimagemediamessage(image:name:)","title":"static func getImageMediaMessage(image: UIImage, name: String?) -> ChatConversationMessageTable","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/getlocationmessage(lat:long:)","title":"static func getLocationMessage(lat: Double, long: Double) -> ChatConversationMessageTable","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/getsharecontactmessage(user:userdefaults:)","title":"static func getShareContactMessage(user: User, userDefaults: UserDefaults) -> ChatConversationMessageTable","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/getvideomediamessage(videourl:)","title":"static func getVideoMediaMessage(videoURL: URL) -> ChatConversationMessageTable?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/ispostchi(_:)","title":"static func isPostchi(String) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databasevalue","title":"var databaseValue: DatabaseValue","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchall(_:_:)-6muzz","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchall(_:arguments:adapter:)-512ug","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchall(_:sql:arguments:adapter:)-7khxq","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchcursor(_:_:)-3jbai","title":"static func fetchCursor<R>(Database, R) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchcursor(_:arguments:adapter:)-5z7ba","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchcursor(_:sql:arguments:adapter:)-6xu86","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchone(_:_:)-7f4a8","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchone(_:arguments:adapter:)-tmh9","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchone(_:sql:arguments:adapter:)-9xbq2","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchset(_:_:)-3d8mx","title":"static func fetchSet<R>(Database, R) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchset(_:arguments:adapter:)-8zl7l","title":"static func fetchSet(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchset(_:sql:arguments:adapter:)-7nolh","title":"static func fetchSet(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fromdatabasevalue(_:)-387t3","title":"static func fromDatabaseValue(DatabaseValue) -> ChatConversationMessageTable?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fromdatabasevalue(_:)-4sngw","title":"static func fromDatabaseValue(DatabaseValue) -> Self?","type":"method"}],"path":"\/documentation\/divar\/chatconversationmessagetable\/databasevalueconvertible-implementations","title":"DatabaseValueConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/diffid","title":"var diffId: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/comparecontent(_:_:)","title":"static func compareContent(ChatConversationMessageTable, ChatConversationMessageTable) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatconversationmessagetable\/diffaware-implementations","title":"DiffAware Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/encode(to:)-1zkgy","title":"func encode(to: inout PersistenceContainer)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/chatconversationmessagetable\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/==(_:_:)","title":"static func == (ChatConversationMessageTable, ChatConversationMessageTable) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatconversationmessagetable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/init(row:)-7hzdy","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchall(_:_:)-37e76","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchall(_:arguments:adapter:)-1zz7j","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchall(_:keys:)-28sjt","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchall(_:keys:)-9siya","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchall(_:sql:arguments:adapter:)-rjpd","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchcursor(_:_:)-7eatg","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchcursor(_:arguments:adapter:)-8dmfi","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchcursor(_:keys:)-1h5va","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchcursor(_:keys:)-v0bp","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchcursor(_:sql:arguments:adapter:)-wc3t","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchone(_:_:)-fq7r","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchone(_:arguments:adapter:)-97fb","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchone(_:key:)-8xr94","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchone(_:key:)-g06q","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchone(_:sql:arguments:adapter:)-6qnox","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchset(_:)","title":"static func fetchSet(Database) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchset(_:_:)-4kwe4","title":"static func fetchSet<R>(Database, R) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchset(_:arguments:adapter:)-73t2l","title":"static func fetchSet(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchset(_:keys:)-5v2hw","title":"static func fetchSet(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchset(_:keys:)-8646y","title":"static func fetchSet<Sequence>(Database, keys: Sequence) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchset(_:sql:arguments:adapter:)-62pxx","title":"static func fetchSet(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Set<Self>","type":"method"}],"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatconversationmessagetable\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/chatconversationmessagetable\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/chatconversationmessagetable\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/sqlexpression","title":"var sqlExpression: SQLExpression","type":"property"}],"path":"\/documentation\/divar\/chatconversationmessagetable\/sqlexpressible-implementations","title":"SQLExpressible Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/chatconversationmessagetable\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/bind(to:at:)","title":"func bind(to: SQLiteStatement, at: CInt) -> CInt","type":"method"}],"path":"\/documentation\/divar\/chatconversationmessagetable\/statementbinding-implementations","title":"StatementBinding Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/annotated(with:)-32tma","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/annotated(with:)-4p5w4","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/annotated(with:)-577m2","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/annotated(with:)-8ugfm","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/belongsto(_:key:using:)-6zbex","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/belongsto(_:key:using:)-7j41h","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/deleteall(_:keys:)-78zts","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/deleteall(_:keys:)-96oj5","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/deleteone(_:key:)-7hpm1","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/deleteone(_:key:)-v7ki","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/exists(_:key:)-6d2y7","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/exists(_:key:)-9tyzt","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/filter(_:)-24uhh","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/filter(_:)-4rkno","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/filter(key:)-17qde","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/filter(key:)-7mvzr","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/filter(keys:)-8vl7k","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/filter(keys:)-8zu7q","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/hasmany(_:key:using:)-1m1nu","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/hasmany(_:key:using:)-29i53","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/hasone(_:key:using:)-397qz","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/hasone(_:key:using:)-96ox6","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/order(_:)-8ga88","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/order(_:)-n4cn","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/select(_:)-19gm9","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/select(_:)-1rj0v","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/select(_:as:)-1yerv","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/select(_:as:)-8iili","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationmessagetable\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/chatconversationmessagetable\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatconversationmessagetable","title":"ChatConversationMessageTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/init(phone:thumbnail:title:id:conversationid:category:)","title":"init(phone: String?, thumbnail: String?, title: String?, id: String?, conversationID: String, category: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/category","title":"var category: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/phone","title":"var phone: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/thumbnail","title":"var thumbnail: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/title","title":"var title: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/createrelatedmetadata(data:conversationid:)","title":"static func createRelatedMetadata(data: ChatAdvertisementStructure, conversationID: String) -> ChatConversationMetadataTable","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/databasevalue","title":"var databaseValue: DatabaseValue","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/fromdatabasevalue(_:)-3qa3r","title":"static func fromDatabaseValue(DatabaseValue) -> ChatConversationMetadataTable?","type":"method"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/fromdatabasevalue(_:)-873kl","title":"static func fromDatabaseValue(DatabaseValue) -> Self?","type":"method"}],"path":"\/documentation\/divar\/chatconversationmetadatatable\/databasevalueconvertible-implementations","title":"DatabaseValueConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/sqlexpression","title":"var sqlExpression: SQLExpression","type":"property"}],"path":"\/documentation\/divar\/chatconversationmetadatatable\/sqlexpressible-implementations","title":"SQLExpressible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationmetadatatable\/bind(to:at:)","title":"func bind(to: SQLiteStatement, at: CInt) -> CInt","type":"method"}],"path":"\/documentation\/divar\/chatconversationmetadatatable\/statementbinding-implementations","title":"StatementBinding Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatconversationmetadatatable","title":"ChatConversationMetadataTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationresult\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatconversationresult\/init(status:response:)","title":"init(status: String?, response: ChatConversationStructure?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationresult\/response","title":"let response: ChatConversationStructure?","type":"property"},{"path":"\/documentation\/divar\/chatconversationresult\/status","title":"let status: String?","type":"property"}],"path":"\/documentation\/divar\/chatconversationresult","title":"ChatConversationResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/init(_:user:lastmessage:metadata:)","title":"init(String, user: ChatUserTable?, lastMessage: ChatConversationMessageTable?, metadata: ChatConversationMetadataTable?)","type":"init"},{"path":"\/documentation\/divar\/chatconversationtable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatconversationtable\/init(row:)-5m7ta","title":"init(row: Row)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/fromme","title":"var fromMe: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/isbuyer","title":"var isBuyer: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/isconversationdeactive","title":"var isConversationDeactive: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/isdivarpostchi","title":"var isDivarPostchi: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/lastmessage","title":"var lastMessage: ChatConversationMessageTable?","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/lastmessagetypedescription","title":"var lastMessageTypeDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/metadata","title":"var metadata: ChatConversationMetadataTable?","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/ownercontact","title":"var ownerContact: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/ownerlastseenid","title":"var ownerLastSeenID: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/peer","title":"var peer: ChatUserTable?","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/peercontact","title":"var peerContact: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/peerdeleted","title":"var peerDeleted: Bool","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/peerlastseenid","title":"var peerLastSeenID: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/phone","title":"var phone: String?","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.property","title":"var status: Status?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/encode(to:)-3yfkk","title":"func encode(to: inout PersistenceContainer)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/conversationtitlecache","title":"static var conversationTitleCache: NSCache<NSString, NSString>","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/empty","title":"static var empty: ChatConversationTable","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/unreadexists(networkmanager:dataprovider:)","title":"static func UnreadExists(networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol) -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/createchatconversation(message:post:thumbnail:)","title":"static func createChatConversation(message: ChatConversationMessageTable, post: PostViewStructure?, thumbnail: String?) -> ChatConversationTable","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/deleteconversation(conversationid:dataprovider:)","title":"static func deleteConversation(conversationID: String, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/deleteconversations(conversationids:dataprovider:)","title":"static func deleteConversations(conversationIDs: [String], dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fromdatabasevalue(_:)","title":"static func fromDatabaseValue(DatabaseValue) -> ChatConversationTable?","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/getconversationtitle(conversationid:dataprovider:)","title":"static func getConversationTitle(conversationID: String, dataProvider: DataProviderProtocol) -> String","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/hasunread(_:)","title":"static func hasUnread(ChatConversationTable) -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/saveconversations(_:dataprovider:)","title":"static func saveConversations([ChatConversationTable], dataProvider: DataProviderProtocol)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/active","title":"case active","type":"case"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/deleted","title":"case deleted","type":"case"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/expired","title":"case expired","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/databasevalue","title":"var databaseValue: DatabaseValue","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fetchset(_:_:)","title":"static func fetchSet<R>(Database, R) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fetchset(_:arguments:adapter:)","title":"static func fetchSet(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fetchset(_:sql:arguments:adapter:)","title":"static func fetchSet(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/fromdatabasevalue(_:)","title":"static func fromDatabaseValue(DatabaseValue) -> Self?","type":"method"}],"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/databasevalueconvertible-implementations","title":"DatabaseValueConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/sqlexpression","title":"var sqlExpression: SQLExpression","type":"property"}],"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/sqlexpressible-implementations","title":"SQLExpressible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/bind(to:at:)","title":"func bind(to: SQLiteStatement, at: CInt) -> CInt","type":"method"}],"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum\/statementbinding-implementations","title":"StatementBinding Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatconversationtable\/status-swift.enum","title":"ChatConversationTable.Status","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/diffid","title":"var diffId: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/comparecontent(_:_:)","title":"static func compareContent(ChatConversationTable, ChatConversationTable) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatconversationtable\/diffaware-implementations","title":"DiffAware Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/encode(to:)-6r1kd","title":"func encode(to: inout PersistenceContainer)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/chatconversationtable\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/divar\/chatconversationtable\/==(_:_:)","title":"static func == (ChatConversationTable, ChatConversationTable) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatconversationtable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/init(row:)-a5rs","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchall(_:keys:)-1dgyg","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchall(_:keys:)-447sa","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchcursor(_:keys:)-7bl43","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchcursor(_:keys:)-8ngam","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchone(_:key:)-4m0iz","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchone(_:key:)-6ujai","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchset(_:)","title":"static func fetchSet(Database) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchset(_:_:)","title":"static func fetchSet<R>(Database, R) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchset(_:arguments:adapter:)","title":"static func fetchSet(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchset(_:keys:)-98w37","title":"static func fetchSet<Sequence>(Database, keys: Sequence) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchset(_:keys:)-9i02u","title":"static func fetchSet(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchset(_:sql:arguments:adapter:)","title":"static func fetchSet(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Set<Self>","type":"method"}],"path":"\/documentation\/divar\/chatconversationtable\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatconversationtable\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/chatconversationtable\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/chatconversationtable\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/chatconversationtable\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatconversationtable\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatconversationtable\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/annotated(with:)-14apf","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/annotated(with:)-6p9co","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/annotated(with:)-7ehev","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/annotated(with:)-87uw9","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/belongsto(_:key:using:)-1epb9","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/belongsto(_:key:using:)-2buxb","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/deleteall(_:keys:)-9humc","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/deleteall(_:keys:)-wam2","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/deleteone(_:key:)-19uhj","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/deleteone(_:key:)-9ukh9","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/exists(_:key:)-5p9es","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/exists(_:key:)-62dbx","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/filter(_:)-7mv8w","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/filter(_:)-x38z","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/filter(key:)-3z0e4","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/filter(key:)-8fgmk","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/filter(keys:)-6482e","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/filter(keys:)-7x3vk","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/hasmany(_:key:using:)-3ij23","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/hasmany(_:key:using:)-6138x","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/hasone(_:key:using:)-1081b","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/hasone(_:key:using:)-q4cj","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/order(_:)-4psrm","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/order(_:)-8hvzz","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/select(_:)-3lfpb","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/select(_:)-6m1kk","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/select(_:as:)-5mhm1","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/select(_:as:)-d9xs","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatconversationtable\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/chatconversationtable\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatconversationtable","title":"ChatConversationTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeleteconversationactionloghelper\/init(rawplugservice:)","title":"init(rawPlugService: RawPlugService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeleteconversationactionloghelper\/rawplugservice","title":"let rawPlugService: RawPlugService","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatdeleteconversationactionloghelper\/logmulticonversationdelete(conversationsids:conversationscount:)","title":"func logMultiConversationDelete(conversationsIDs: [String], conversationsCount: Int)","type":"method"},{"path":"\/documentation\/divar\/chatdeleteconversationactionloghelper\/logselectmultideletebutton()","title":"func logSelectMultiDeleteButton()","type":"method"}],"path":"\/documentation\/divar\/chatdeleteconversationactionloghelper","title":"ChatDeleteConversationActionLogHelper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/init(conversationid:)","title":"init(conversationID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/conversationid","title":"var conversationID: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/deleteflowcanceled()","title":"func deleteFlowCanceled()","type":"method"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/deleteflowcompleted()","title":"func deleteFlowCompleted()","type":"method"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/deleteflowerror()","title":"func deleteFlowError()","type":"method"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/deleteflowstarted()","title":"func deleteFlowStarted()","type":"method"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/editflowcanceled()","title":"func editFlowCanceled()","type":"method"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/editflowcompleted()","title":"func editFlowCompleted()","type":"method"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/editflowerror()","title":"func editFlowError()","type":"method"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/editflowstarted()","title":"func editFlowStarted()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/deletecanceled","title":"case deleteCanceled","type":"case"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/deletecompleted","title":"case deleteCompleted","type":"case"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/deleteerror","title":"case deleteError","type":"case"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/deletestart","title":"case deleteStart","type":"case"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/editflowcanceled","title":"case editFlowCanceled","type":"case"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/editflowcompleted","title":"case editFlowCompleted","type":"case"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/editflowerror","title":"case editFlowError","type":"case"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/editflowstart","title":"case editFlowStart","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chateditmessageactionloghelper\/eventname","title":"ChatEditMessageActionLogHelper.EventName","type":"enum"}],"path":"\/documentation\/divar\/chateditmessageactionloghelper","title":"ChatEditMessageActionLogHelper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventresponsestructure\/init(event:id:)","title":"init(event: ChatEventModel?, id: String?)","type":"init"},{"path":"\/documentation\/divar\/chateventresponsestructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chateventresponsestructure\/event","title":"let event: ChatEventModel?","type":"property"},{"path":"\/documentation\/divar\/chateventresponsestructure\/id","title":"let id: String?","type":"property"}],"path":"\/documentation\/divar\/chateventresponsestructure","title":"ChatEventResponseStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/init(originalname:name:id:size:mimetype:cdnurl:type:)","title":"init(originalName: String, name: String?, id: String?, size: Float?, mimeType: String?, cdnURL: String?, type: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/cdnurl","title":"var cdnURL: String?","type":"property"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/mimetype","title":"let mimeType: String?","type":"property"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/originalname","title":"let originalName: String","type":"property"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/size","title":"let size: Float?","type":"property"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/type","title":"let type: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/getdownloadurl(cdnurl:)","title":"func getDownloadURL(cdnURL: String) -> String?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/mimetype","title":"case mimeType","type":"case"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/originalname","title":"case originalName","type":"case"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/size","title":"case size","type":"case"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatfilemessagestructure\/codingkeys","title":"ChatFileMessageStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatfilemessagestructure","title":"ChatFileMessageStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfileuploadresult\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatfileuploadresult\/init(id:status:reason:)","title":"init(id: String?, status: String?, reason: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfileuploadresult\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/divar\/chatfileuploadresult\/reason","title":"let reason: String?","type":"property"},{"path":"\/documentation\/divar\/chatfileuploadresult\/status","title":"let status: String?","type":"property"}],"path":"\/documentation\/divar\/chatfileuploadresult","title":"ChatFileUploadResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfillablecellstruct\/init(message:isseen:replysender:configuration:cdnurl:)","title":"init(message: ChatConversationMessageTable, isSeen: Bool, replySender: String, configuration: IntroConfig, cdnURL: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatfillablecellstruct\/cdnurl","title":"var cdnURL: String","type":"property"},{"path":"\/documentation\/divar\/chatfillablecellstruct\/configuration","title":"var configuration: IntroConfig","type":"property"},{"path":"\/documentation\/divar\/chatfillablecellstruct\/isseen","title":"let isSeen: Bool","type":"property"},{"path":"\/documentation\/divar\/chatfillablecellstruct\/message","title":"var message: ChatConversationMessageTable","type":"property"},{"path":"\/documentation\/divar\/chatfillablecellstruct\/replysender","title":"var replySender: String","type":"property"}],"path":"\/documentation\/divar\/chatfillablecellstruct","title":"ChatFillableCellStruct","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/events","title":"let events: [ChatEventResponseStructure]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventkey\/event","title":"case event","type":"case"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventkey\/id","title":"case id","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventkey\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventkey\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventkey\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventkey\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventkey\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventkey","title":"ChatGetEventResponseStructure.EventKey","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventtypekey","title":"ChatGetEventResponseStructure.EventTypeKey","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventskey\/events","title":"case events","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventskey\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventskey\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventskey\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventskey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventskey\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventskey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventskey\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventskey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatgeteventresponsestructure\/eventskey","title":"ChatGetEventResponseStructure.EventsKey","type":"enum"}],"path":"\/documentation\/divar\/chatgeteventresponsestructure","title":"ChatGetEventResponseStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatgeteventstructure\/init(response:status:)","title":"init(response: ChatGetEventResponseStructure?, status: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgeteventstructure\/response","title":"let response: ChatGetEventResponseStructure?","type":"property"},{"path":"\/documentation\/divar\/chatgeteventstructure\/status","title":"let status: String?","type":"property"}],"path":"\/documentation\/divar\/chatgeteventstructure","title":"ChatGetEventStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessageresponsestructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatgetmessageresponsestructure\/init(response:id:)","title":"init(response: ChatGetMessageStructure?, id: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessageresponsestructure\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/divar\/chatgetmessageresponsestructure\/response","title":"let response: ChatGetMessageStructure?","type":"property"}],"path":"\/documentation\/divar\/chatgetmessageresponsestructure","title":"ChatGetMessageResponseStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessagestructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatgetmessagestructure\/init(messages:)","title":"init(messages: [ChatMessageStructure]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatgetmessagestructure\/messages","title":"let messages: [ChatMessageStructure]?","type":"property"}],"path":"\/documentation\/divar\/chatgetmessagestructure","title":"ChatGetMessageStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/init(conversations:blockedusers:cdnurl:servertime:)","title":"init(conversations: [ChatConversationStructure]?, blockedUsers: Set<String>?, cdnURL: String?, serverTime: StringBacked<Double>?)","type":"init"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/blockedusers","title":"var blockedUsers: Set<String>?","type":"property"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/cdnurl","title":"let cdnURL: String?","type":"property"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/conversations","title":"let conversations: [ChatConversationStructure]?","type":"property"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/servertime","title":"let serverTime: StringBacked<Double>?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/blockedusers","title":"case blockedUsers","type":"case"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/cdnurl","title":"case cdnURL","type":"case"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/conversations","title":"case conversations","type":"case"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/servertime","title":"case serverTime","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatinitstateresultstructure\/codingkeys","title":"ChatInitStateResultStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatinitstateresultstructure","title":"ChatInitStateResultStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstatestructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatinitstatestructure\/init(response:)","title":"init(response: ChatInitStateResultStructure?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatinitstatestructure\/response","title":"let response: ChatInitStateResultStructure?","type":"property"}],"path":"\/documentation\/divar\/chatinitstatestructure","title":"ChatInitStateStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/id","title":"let id: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/isloaded(dataprovider:)","title":"func isLoaded(dataProvider: DataProviderProtocol) -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/saveloaded(dataprovider:)","title":"func saveLoaded(dataProvider: DataProviderProtocol)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/chatloadedconversationtable\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/init(row:)","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchall(_:keys:)-5gfz9","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchall(_:keys:)-9efxh","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchcursor(_:keys:)-19ycv","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchcursor(_:keys:)-2raq3","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchone(_:key:)-4dwpp","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchone(_:key:)-8ekce","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"}],"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/chatloadedconversationtable\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/chatloadedconversationtable\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/chatloadedconversationtable\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/annotated(with:)-1cqvb","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/annotated(with:)-2zkdn","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/annotated(with:)-8e0hg","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/annotated(with:)-8g14v","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/belongsto(_:key:using:)-9kyly","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/belongsto(_:key:using:)-9lzbm","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/deleteall(_:keys:)-73cxr","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/deleteall(_:keys:)-9rt3l","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/deleteone(_:key:)-4tbiz","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/deleteone(_:key:)-92rc7","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/exists(_:key:)-95u0f","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/exists(_:key:)-9shle","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/filter(_:)-7olsc","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/filter(_:)-l01e","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/filter(key:)-3v1uj","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/filter(key:)-6wqgp","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/filter(keys:)-6hqsi","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/filter(keys:)-ksl4","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/hasmany(_:key:using:)-14hqb","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/hasmany(_:key:using:)-674yx","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/hasone(_:key:using:)-1zi1u","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/hasone(_:key:using:)-4bhz","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/order(_:)-8hrjj","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/order(_:)-8wrui","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/select(_:)-6lbfn","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/select(_:)-tevj","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/select(_:as:)-22qko","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/select(_:as:)-4uwhp","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatloadedconversationtable\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/chatloadedconversationtable\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatloadedconversationtable","title":"ChatLoadedConversationTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/init(lat:long:)","title":"init(lat: Double?, long: Double?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/lat","title":"var lat: Double?","type":"property"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/long","title":"var long: Double?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/getgooglemapurl()","title":"func getGoogleMapURL() -> URL?","type":"method"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/geturl(templateurl:)","title":"func getURL(templateURL: String?) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/lat","title":"case lat","type":"case"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/long","title":"case long","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatlocationdatastructure\/codingkeys","title":"ChatLocationDataStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatlocationdatastructure","title":"ChatLocationDataStructure","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmediadatastructure\/metadata-swift.struct\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/chatmediadatastructure\/metadata-swift.struct\/init(censored:)","title":"init(censored: Bool?)","type":"init"},{"path":"\/documentation\/divar\/chatmediadatastructure\/metadata-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmediadatastructure\/metadata-swift.struct\/censored","title":"var censored: Bool?","type":"property"}],"path":"\/documentation\/divar\/chatmediadatastructure\/metadata-swift.struct","title":"ChatMediaDataStructure.Metadata","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmediadatastructure\/init(filename:width:height:size:id:metadata:)","title":"init(filename: String?, width: Float, height: Float, size: Float?, id: String?, metadata: Metadata?)","type":"init"},{"path":"\/documentation\/divar\/chatmediadatastructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmediadatastructure\/height","title":"var height: Float?","type":"property"},{"path":"\/documentation\/divar\/chatmediadatastructure\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/divar\/chatmediadatastructure\/mediasize","title":"var mediaSize: CGSize","type":"property"},{"path":"\/documentation\/divar\/chatmediadatastructure\/metadata-swift.property","title":"let metadata: Metadata?","type":"property"},{"path":"\/documentation\/divar\/chatmediadatastructure\/mimetype","title":"let mimeType: String?","type":"property"},{"path":"\/documentation\/divar\/chatmediadatastructure\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/divar\/chatmediadatastructure\/originamname","title":"let originamName: String?","type":"property"},{"path":"\/documentation\/divar\/chatmediadatastructure\/size","title":"let size: Float?","type":"property"},{"path":"\/documentation\/divar\/chatmediadatastructure\/thumbnail","title":"let thumbnail: String?","type":"property"},{"path":"\/documentation\/divar\/chatmediadatastructure\/type","title":"let type: String?","type":"property"},{"path":"\/documentation\/divar\/chatmediadatastructure\/width","title":"var width: Float?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmediadatastructure\/getdownloadurl(cdnurl:)","title":"func getDownloadURL(cdnURL: String) -> String?","type":"method"},{"path":"\/documentation\/divar\/chatmediadatastructure\/getthumbnailurl(cdnurl:)","title":"func getThumbnailURL(cdnURL: String) -> String?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/height","title":"case height","type":"case"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/metadata","title":"case metadata","type":"case"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/mimetype","title":"case mimeType","type":"case"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/originamname","title":"case originamName","type":"case"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/size","title":"case size","type":"case"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/thumbnail","title":"case thumbnail","type":"case"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/type","title":"case type","type":"case"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/width","title":"case width","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatmediadatastructure\/codingkeys","title":"ChatMediaDataStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatmediadatastructure","title":"ChatMediaDataStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagefiller\/init(_:from:forconversationwithid:)","title":"init(ChatConversationMessageTable, from: ChatMessageStructure, forConversationWithID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagefiller\/conversationid","title":"let conversationID: String","type":"property"},{"path":"\/documentation\/divar\/chatmessagefiller\/data","title":"let data: ChatMessageStructure","type":"property"},{"path":"\/documentation\/divar\/chatmessagefiller\/message","title":"let message: ChatConversationMessageTable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagefiller\/execute()","title":"func execute() -> ChatConversationMessageTable?","type":"method"}],"path":"\/documentation\/divar\/chatmessagefiller","title":"ChatMessageFiller","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagehandler\/init(dataprovider:message:)","title":"init(dataProvider: DataProviderProtocol, message: ChatConversationMessageTable)","type":"init"},{"path":"\/documentation\/divar\/chatmessagehandler\/init(dataprovider:messagetype:data:conversationid:)","title":"init(dataProvider: DataProviderProtocol, messageType: MessageHandlerTypeEnum, data: ChatMessageStructure, conversationID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagehandler\/conversationid","title":"let conversationID: String","type":"property"},{"path":"\/documentation\/divar\/chatmessagehandler\/data","title":"let data: ChatMessageStructure?","type":"property"},{"path":"\/documentation\/divar\/chatmessagehandler\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatmessagehandler\/messagedatatype","title":"var messageDataType: MessageType","type":"property"},{"path":"\/documentation\/divar\/chatmessagehandler\/messageobject","title":"var messageObject: ChatConversationMessageTable?","type":"property"},{"path":"\/documentation\/divar\/chatmessagehandler\/messagetype","title":"let messageType: MessageHandlerTypeEnum","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagehandler\/execute(completionblock:)","title":"func execute(completionBlock: (() -> Void)?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagehandler\/sortfield","title":"static let sortField: String","type":"property"}],"path":"\/documentation\/divar\/chatmessagehandler","title":"ChatMessageHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagestructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatmessagestructure\/init(id:data:timestamp:fromme:conversationid:type:state:reference:sender:replyto:censored:)","title":"init(id: String?, data: MessageData, timestamp: Double?, fromMe: Bool?, conversationID: String?, type: MessageType, state: MessageState?, reference: String?, sender: String?, replyTo: MessageReplyModel?, censored: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagestructure\/censored","title":"let censored: Bool?","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/conversationid","title":"var conversationID: String?","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/data","title":"let data: MessageData","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/diffid","title":"var diffId: Int","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/fromme","title":"let fromMe: Bool?","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/reference","title":"let reference: String?","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/replyto","title":"let replyTo: MessageReplyModel?","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/sender","title":"let sender: OptionalField<String>?","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/state","title":"let state: MessageState?","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/timestamp","title":"let timestamp: StringBacked<Double>?","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/topostchimessage","title":"var toPostchiMessage: ChatConversationMessageTable?","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/type","title":"let type: MessageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagestructure\/tochatconversationmessage(id:conversationid:)","title":"func toChatConversationMessage(id: String?, conversationID: String?) -> ChatConversationMessageTable?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagestructure\/comparecontent(_:_:)","title":"static func compareContent(ChatMessageStructure, ChatMessageStructure) -> Bool","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/censored","title":"case censored","type":"case"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/conversationid","title":"case conversationID","type":"case"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/data","title":"case data","type":"case"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/fromme","title":"case fromMe","type":"case"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/reference","title":"case reference","type":"case"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/replyto","title":"case replyTo","type":"case"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/sender","title":"case sender","type":"case"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/state","title":"case state","type":"case"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/timestamp","title":"case timestamp","type":"case"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatmessagestructure\/codingkeys","title":"ChatMessageStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatmessagestructure","title":"ChatMessageStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkconstants\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkconstants\/updateurl","title":"static var updateURL: String?","type":"property"},{"path":"\/documentation\/divar\/chatnetworkconstants\/version","title":"static let version: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkconstants\/baseurl(_:serverlist:)","title":"static func baseURL(URLPrefix, serverList: [String]) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkconstants\/urlprefix\/websocket","title":"case websocket","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkconstants\/urlprefix\/prefix","title":"var prefix: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkconstants\/urlprefix\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkconstants\/urlprefix\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatnetworkconstants\/urlprefix\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatnetworkconstants\/urlprefix","title":"ChatNetworkConstants.URLPrefix","type":"enum"}],"path":"\/documentation\/divar\/chatnetworkconstants","title":"ChatNetworkConstants","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatoptions\/init(handler:option:)","title":"init(handler: ChatOptionActionProtocol?, option: ChatOptions.Options)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatoptions\/handler","title":"var handler: ChatOptionActionProtocol?","type":"property"},{"path":"\/documentation\/divar\/chatoptions\/option","title":"var option: Options","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatoptions\/getaction()","title":"func getAction() -> SheetItem","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatoptions\/options\/block(title:reasong:)","title":"case block(title: String, reasong: String?)","type":"case"},{"path":"\/documentation\/divar\/chatoptions\/options\/delete(conversationid:)","title":"case delete(conversationId: String)","type":"case"},{"path":"\/documentation\/divar\/chatoptions\/options\/support","title":"case support","type":"case"},{"path":"\/documentation\/divar\/chatoptions\/options\/unblock","title":"case unblock","type":"case"}],"path":"\/documentation\/divar\/chatoptions\/options","title":"ChatOptions.Options","type":"enum"}],"path":"\/documentation\/divar\/chatoptions","title":"ChatOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatprofileresultstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatprofileresultstructure\/init(token:status:reason:message:info:)","title":"init(token: String?, status: String?, reason: String?, message: String?, info: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatprofileresultstructure\/info","title":"let info: String?","type":"property"},{"path":"\/documentation\/divar\/chatprofileresultstructure\/message","title":"let message: String?","type":"property"},{"path":"\/documentation\/divar\/chatprofileresultstructure\/reason","title":"let reason: String?","type":"property"},{"path":"\/documentation\/divar\/chatprofileresultstructure\/status","title":"let status: String?","type":"property"},{"path":"\/documentation\/divar\/chatprofileresultstructure\/token","title":"let token: String?","type":"property"}],"path":"\/documentation\/divar\/chatprofileresultstructure","title":"ChatProfileResultStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsharecontactstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatsharecontactstructure\/init(phone:name:id:avatar:)","title":"init(phone: String?, name: String, id: UUID?, avatar: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsharecontactstructure\/avatar","title":"let avatar: OptionalField<String>?","type":"property"},{"path":"\/documentation\/divar\/chatsharecontactstructure\/id","title":"let id: OptionalField<UUID>?","type":"property"},{"path":"\/documentation\/divar\/chatsharecontactstructure\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/divar\/chatsharecontactstructure\/phone","title":"let phone: OptionalField<String>?","type":"property"}],"path":"\/documentation\/divar\/chatsharecontactstructure","title":"ChatShareContactStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocketauthenticationdata\/init()","title":"init()","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocketauthenticationdata\/authenticationpayload","title":"ChatSocketAuthenticationData.AuthenticationPayload","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocketauthenticationdata\/getproperties(authenticationtoken:)","title":"static func getProperties(authenticationToken: String?) -> AuthenticationPayload","type":"method"}],"path":"\/documentation\/divar\/chatsocketauthenticationdata","title":"ChatSocketAuthenticationData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocketwarninghandler\/init(reason:)","title":"init(reason: ChatSocketMessage)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocketwarninghandler\/reason","title":"var reason: ChatSocketMessage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsocketwarninghandler\/handlewarning(onwarning:)","title":"func handleWarning(onWarning: (String) -> Void)","type":"method"}],"path":"\/documentation\/divar\/chatsocketwarninghandler","title":"ChatSocketWarningHandler","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/init(privacywarning:noconversationmessage:seearchive:postchiname:postchimessage:sendfiletitle:mapurl:updateurl:smartsuggestionmore:sellerprivacywarning:buyerprivacywarning:)","title":"init(privacyWarning: [String]?, noConversationMessage: String?, seeArchive: String?, postchiName: String?, postchiMessage: [String]?, sendFileTitle: String?, mapURL: String?, updateURL: String?, smartSuggestionMore: String?, sellerPrivacyWarning: String?, buyerPrivacyWarning: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/buyerprivacywarning","title":"let buyerPrivacyWarning: String?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/mapurl","title":"var mapURL: String?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/noconversationmessage","title":"let noConversationMessage: String?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/postchimessage","title":"let postchiMessage: [String]?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/postchiname","title":"let postchiName: String?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/privacywarning","title":"let privacyWarning: [String]?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/seearchive","title":"let seeArchive: String?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/sellerprivacywarning","title":"let sellerPrivacyWarning: String?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/sendfiletitle","title":"let sendFileTitle: String?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/smartsuggestionmore","title":"let smartSuggestionMore: String?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/updateurl","title":"let updateURL: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/buyerprivacywarning","title":"case buyerPrivacyWarning","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/mapurl","title":"case mapURL","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/noconversationmessage","title":"case noConversationMessage","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/postchimessage","title":"case postchiMessage","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/postchiname","title":"case postchiName","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/privacywarning","title":"case privacyWarning","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/seearchive","title":"case seeArchive","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/sellerprivacywarning","title":"case sellerPrivacyWarning","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/sendfiletitle","title":"case sendFileTitle","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/smartsuggestionmore","title":"case smartSuggestionMore","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/updateurl","title":"case updateURL","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages\/codingkeys","title":"ChatStaticMeta.StaticMessages.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatstaticmeta\/staticmessages","title":"ChatStaticMeta.StaticMessages","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatstaticmeta\/init(strings:blockreasons:errors:limits:fileformats:imagelimits:warnings:)","title":"init(strings: ChatStaticMeta.StaticMessages?, blockReasons: [[String]]?, errors: [String : String]?, limits: MetaLimits?, fileFormats: [String : String]?, imageLimits: ImageLimits?, warnings: [String : String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/blockreasons","title":"let blockReasons: [[String]]?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/errors","title":"let errors: [String : String]?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/fileformats","title":"let fileFormats: [String : String]?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/imagelimits","title":"let imageLimits: ImageLimits?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/limits","title":"let limits: MetaLimits?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/strings","title":"var strings: StaticMessages?","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/validdocumentformats","title":"var validDocumentFormats: [String]","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/warnings","title":"let warnings: [String : String]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/blockreasons","title":"case blockReasons","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/errors","title":"case errors","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/fileformats","title":"case fileFormats","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/imagelimits","title":"case imageLimits","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/limits","title":"case limits","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/strings","title":"case strings","type":"case"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/warnings","title":"case warnings","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatstaticmeta\/codingkeys","title":"ChatStaticMeta.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatstaticmeta","title":"ChatStaticMeta","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/init(suggestions:selectedsuggestion:conversationid:typedmessage:suggestionsource:rawplugservice:)","title":"init(suggestions: [[String : Any]]?, selectedSuggestion: String?, conversationID: String?, typedMessage: String?, suggestionSource: ChatSuggestionActionLogHandler.SuggestionSource, rawPlugService: RawPlugService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/conversationid","title":"let conversationID: String?","type":"property"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/rawplugservice","title":"let rawPlugService: RawPlugService","type":"property"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/selectedsuggestion","title":"let selectedSuggestion: String?","type":"property"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/suggestionsource-swift.property","title":"let suggestionSource: SuggestionSource","type":"property"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/suggestions","title":"let suggestions: [[String : Any]]?","type":"property"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/typedmessage","title":"let typedMessage: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/logsuggestionclicked()","title":"func logSuggestionClicked()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/suggestionsource-swift.enum\/conversation","title":"case conversation","type":"case"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/suggestionsource-swift.enum\/suggestionlist","title":"case suggestionList","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/suggestionsource-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/suggestionsource-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/suggestionsource-swift.enum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/suggestionsource-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/suggestionsource-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/suggestionsource-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/suggestionsource-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatsuggestionactionloghandler\/suggestionsource-swift.enum","title":"ChatSuggestionActionLogHandler.SuggestionSource","type":"enum"}],"path":"\/documentation\/divar\/chatsuggestionactionloghandler","title":"ChatSuggestionActionLogHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactionhandler\/init(for:topic:payload:dataprovider:)","title":"init(for: String, topic: String, payload: ChatPayload, dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactionhandler\/conversationid","title":"var conversationID: String?","type":"property"},{"path":"\/documentation\/divar\/chatsyncactionhandler\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"path":"\/documentation\/divar\/chatsyncactionhandler\/getmessagebatchactions","title":"var getMessageBatchActions: [(conversationID: String, payload: ChatPayload)]","type":"property"},{"path":"\/documentation\/divar\/chatsyncactionhandler\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/divar\/chatsyncactionhandler\/payload","title":"var payload: ChatPayload","type":"property"},{"path":"\/documentation\/divar\/chatsyncactionhandler\/topic","title":"let topic: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactionhandler\/execute(completionblock:)","title":"func execute(completionBlock: RequestCompletionHandlerType<Any?>) -> Void?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactionhandler\/resulttype","title":"ChatSyncActionHandler.ResultType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactionhandler\/runningsyncactions","title":"static var runningSyncActions: [ChatSyncActionTable]","type":"property"},{"path":"\/documentation\/divar\/chatsyncactionhandler\/serialqueue","title":"static let serialQueue: DispatchQueue","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactionhandler\/performsyncactions(actionid:networkmanager:dataprovider:)","title":"static func performSyncActions(actionID: String?, networkManager: ChatNetworkManager, dataProvider: DataProviderProtocol)","type":"method"}],"path":"\/documentation\/divar\/chatsyncactionhandler","title":"ChatSyncActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatsyncactiontable\/init(id:conversationid:topic:)","title":"init(id: String, conversationID: String, topic: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/divar\/chatsyncactiontable\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/divar\/chatsyncactiontable\/payload","title":"var payload: String","type":"property"},{"path":"\/documentation\/divar\/chatsyncactiontable\/time","title":"var time: Date","type":"property"},{"path":"\/documentation\/divar\/chatsyncactiontable\/topic","title":"var topic: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/chatsyncactiontable\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/init(row:)","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchall(_:keys:)-35pk","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchall(_:keys:)-404zd","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchcursor(_:keys:)-2ogrc","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchcursor(_:keys:)-8yg35","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchone(_:key:)-9dktt","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchone(_:key:)-soby","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"}],"path":"\/documentation\/divar\/chatsyncactiontable\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/chatsyncactiontable\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/chatsyncactiontable\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/chatsyncactiontable\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/chatsyncactiontable\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatsyncactiontable\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatsyncactiontable\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatsyncactiontable\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/annotated(with:)-284qg","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/annotated(with:)-5xd9x","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/annotated(with:)-6992d","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/annotated(with:)-710tt","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/belongsto(_:key:using:)-6immc","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/belongsto(_:key:using:)-8456g","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/deleteall(_:keys:)-37e2p","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/deleteall(_:keys:)-7055x","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/deleteone(_:key:)-8emik","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/deleteone(_:key:)-8koex","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/exists(_:key:)-1u1bx","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/exists(_:key:)-2zbh6","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/filter(_:)-1pqiu","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/filter(_:)-5qmha","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/filter(key:)-6tnpx","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/filter(key:)-8503","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/filter(keys:)-145k5","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/filter(keys:)-4gtpw","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/hasmany(_:key:using:)-3dou1","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/hasmany(_:key:using:)-6dtr0","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/hasone(_:key:using:)-7x1m7","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/hasone(_:key:using:)-89cee","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/order(_:)-1vs13","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/order(_:)-98nr2","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/select(_:)-927t5","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/select(_:)-khi7","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/select(_:as:)-6yq9a","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/select(_:as:)-8l0p3","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatsyncactiontable\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/chatsyncactiontable\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatsyncactiontable","title":"ChatSyncActionTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chattopic\/init(name:type:)","title":"init(name: String, type: ChatTopicType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chattopic\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/divar\/chattopic\/type","title":"var type: ChatTopicType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chattopic\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chattopic\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chattopic\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chattopic","title":"ChatTopic","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatuserstructure\/init(userid:name:)","title":"init(userID: String?, name: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserstructure\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/divar\/chatuserstructure\/tochatusertable","title":"var toChatUserTable: ChatUserTable?","type":"property"},{"path":"\/documentation\/divar\/chatuserstructure\/userid","title":"let userID: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/userid","title":"case userID","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatuserstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatuserstructure\/codingkeys","title":"ChatUserStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/chatuserstructure","title":"ChatUserStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/chatusertable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatusertable\/init(id:name:blocked:)","title":"init(id: String, name: String?, blocked: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/blocked","title":"var blocked: Bool","type":"property"},{"path":"\/documentation\/divar\/chatusertable\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/divar\/chatusertable\/name","title":"var name: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/updateblockedlist(_:dataprovider:)","title":"static func updateBlockedList(Set<String>, dataProvider: DataProviderProtocol)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/databasevalue","title":"var databaseValue: DatabaseValue","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/fetchall(_:_:)-72vgs","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchall(_:arguments:adapter:)-1ow73","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchall(_:sql:arguments:adapter:)-hxzm","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchcursor(_:_:)-5rgey","title":"static func fetchCursor<R>(Database, R) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchcursor(_:arguments:adapter:)-4e58y","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchcursor(_:sql:arguments:adapter:)-3511i","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchone(_:_:)-2a1y5","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchone(_:arguments:adapter:)-57mr9","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchone(_:sql:arguments:adapter:)-2emtj","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fromdatabasevalue(_:)-2o93","title":"static func fromDatabaseValue(DatabaseValue) -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fromdatabasevalue(_:)-4tkto","title":"static func fromDatabaseValue(DatabaseValue) -> ChatUserTable?","type":"method"}],"path":"\/documentation\/divar\/chatusertable\/databasevalueconvertible-implementations","title":"DatabaseValueConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatusertable\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatusertable\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/chatusertable\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/chatusertable\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/init(row:)","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatusertable\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatusertable\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchall(_:_:)-5dyiz","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchall(_:arguments:adapter:)-8k817","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchall(_:keys:)-7h04p","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchall(_:keys:)-9dj3f","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchall(_:sql:arguments:adapter:)-4cjbt","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchcursor(_:_:)-4ynqg","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchcursor(_:arguments:adapter:)-9s7ly","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchcursor(_:keys:)-7ctxp","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchcursor(_:keys:)-8yp3p","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchcursor(_:sql:arguments:adapter:)-2wj18","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchone(_:_:)-7f69o","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchone(_:arguments:adapter:)-60d4y","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchone(_:key:)-50mi5","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchone(_:key:)-6f4cx","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchone(_:sql:arguments:adapter:)-59k7m","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"}],"path":"\/documentation\/divar\/chatusertable\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/chatusertable\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/chatusertable\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/sqlexpression","title":"var sqlExpression: SQLExpression","type":"property"}],"path":"\/documentation\/divar\/chatusertable\/sqlexpressible-implementations","title":"SQLExpressible Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/chatusertable\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/bind(to:at:)","title":"func bind(to: SQLiteStatement, at: CInt) -> CInt","type":"method"}],"path":"\/documentation\/divar\/chatusertable\/statementbinding-implementations","title":"StatementBinding Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/chatusertable\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatusertable\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatusertable\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatusertable\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/annotated(with:)-387ps","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/annotated(with:)-3soll","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/annotated(with:)-8gouo","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/annotated(with:)-9jb4b","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/belongsto(_:key:using:)-689f7","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/belongsto(_:key:using:)-xjk1","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/deleteall(_:keys:)-1qfkl","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/deleteall(_:keys:)-8zqj5","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/deleteone(_:key:)-1ww48","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/deleteone(_:key:)-74i3l","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/exists(_:key:)-1z9kv","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/exists(_:key:)-9k2rj","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/filter(_:)-47r6a","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/filter(_:)-4s25g","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/filter(key:)-78pii","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/filter(key:)-7cymp","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/filter(keys:)-1ozg7","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/filter(keys:)-8v2hx","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/hasmany(_:key:using:)-6pg2u","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/hasmany(_:key:using:)-74zs5","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/hasone(_:key:using:)-7horm","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/hasone(_:key:using:)-7prup","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/order(_:)-88kzq","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/order(_:)-k5v1","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/select(_:)-2s5n2","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/select(_:)-87r4i","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/select(_:as:)-19sxa","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/select(_:as:)-5mc7i","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatusertable\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/chatusertable\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatusertable","title":"ChatUserTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningdatahelper\/init(dataprovider:)","title":"init(dataProvider: DataProviderProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningdatahelper\/dataprovider","title":"var dataProvider: DataProviderProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningdatahelper\/getwarnedmessage(for:)","title":"func getWarnedMessage(for: String) -> (ChatConversationMessageTable, ChatWarningTable.Warning)?","type":"method"},{"path":"\/documentation\/divar\/chatwarningdatahelper\/removewarning(for:completion:)","title":"func removeWarning(for: String, completion: CompletionHandlerType)","type":"method"},{"path":"\/documentation\/divar\/chatwarningdatahelper\/setwarning(for:messageid:warning:)","title":"func setWarning(for: String, messageID: String, warning: String)","type":"method"}],"path":"\/documentation\/divar\/chatwarningdatahelper","title":"ChatWarningDataHelper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/chatwarningtable\/init(id:messageid:warning:)","title":"init(id: String, messageID: String, warning: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/divar\/chatwarningtable\/messageid","title":"var messageID: String","type":"property"},{"path":"\/documentation\/divar\/chatwarningtable\/warning-swift.property","title":"var warning: String","type":"property"},{"path":"\/documentation\/divar\/chatwarningtable\/warningtype","title":"var warningType: Warning?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/warning-swift.enum\/harassment","title":"case harassment","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/warning-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/warning-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/warning-swift.enum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatwarningtable\/warning-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/warning-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/warning-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chatwarningtable\/warning-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatwarningtable\/warning-swift.enum","title":"ChatWarningTable.Warning","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatwarningtable\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatwarningtable\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/chatwarningtable\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/chatwarningtable\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/init(row:)","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatwarningtable\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/chatwarningtable\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchall(_:keys:)-3d57z","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchall(_:keys:)-9nred","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchcursor(_:keys:)-45cum","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchcursor(_:keys:)-8ip2m","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchone(_:key:)-14qbs","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchone(_:key:)-66df6","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"}],"path":"\/documentation\/divar\/chatwarningtable\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/chatwarningtable\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/chatwarningtable\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/chatwarningtable\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatwarningtable\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/chatwarningtable\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwarningtable\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/annotated(with:)-1cvhh","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/annotated(with:)-4qs8","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/annotated(with:)-66ohq","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/annotated(with:)-6rrb1","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/belongsto(_:key:using:)-4u9jh","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/belongsto(_:key:using:)-5f6i8","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/deleteall(_:keys:)-1osja","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/deleteall(_:keys:)-5m1y1","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/deleteone(_:key:)-4tl30","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/deleteone(_:key:)-7hvl1","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/exists(_:key:)-62h1h","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/exists(_:key:)-805f5","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/filter(_:)-3em12","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/filter(_:)-8msdx","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/filter(key:)-110mo","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/filter(key:)-798cp","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/filter(keys:)-6fl0i","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/filter(keys:)-8771m","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/hasmany(_:key:using:)-2zzt8","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/hasmany(_:key:using:)-83eo5","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/hasone(_:key:using:)-3c8s6","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/hasone(_:key:using:)-93atn","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/order(_:)-7gahg","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/order(_:)-8ixpf","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/select(_:)-5eq79","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/select(_:)-7ralf","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/select(_:as:)-7k3l","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/select(_:as:)-9bf1z","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/chatwarningtable\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/chatwarningtable\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatwarningtable","title":"ChatWarningTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwidgetactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwidgetactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> ChatWidgetActionHandler","type":"method"}],"path":"\/documentation\/divar\/chatwidgetactionbuilder","title":"ChatWidgetActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwidgetactionhandlerimpl\/init(flow:)","title":"init(flow: BaseFlowController)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwidgetactionhandlerimpl\/flow","title":"var flow: BaseFlowController?","type":"property"},{"path":"\/documentation\/divar\/chatwidgetactionhandlerimpl\/navigationcontroller","title":"var navigationController: NavigationController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatwidgetactionhandlerimpl\/blockchatpeer(_:)","title":"func blockChatPeer(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/chatwidgetactionhandlerimpl\/reportchatpeer(_:)","title":"func reportChatPeer(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/chatwidgetactionhandlerimpl","title":"ChatWidgetActionHandlerImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/checkableviewmodel\/init(title:subtitle:detail:icon:isenabled:isfolder:ischeckboxhidden:)","title":"init(title: String, subtitle: String?, detail: String?, icon: ImageAsset?, isEnabled: Bool, isFolder: Bool, isCheckBoxHidden: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/checkableviewmodel\/detail","title":"var detail: String?","type":"property"},{"path":"\/documentation\/divar\/checkableviewmodel\/icon","title":"var icon: ImageAsset?","type":"property"},{"path":"\/documentation\/divar\/checkableviewmodel\/ischeckboxhidden","title":"var isCheckBoxHidden: Bool","type":"property"},{"path":"\/documentation\/divar\/checkableviewmodel\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/checkableviewmodel\/isfolder","title":"var isFolder: Bool","type":"property"},{"path":"\/documentation\/divar\/checkableviewmodel\/subtitle","title":"var subtitle: String?","type":"property"},{"path":"\/documentation\/divar\/checkableviewmodel\/title","title":"var title: String","type":"property"}],"path":"\/documentation\/divar\/checkableviewmodel","title":"CheckableViewModel","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewcellitem\/==(_:_:)","title":"static func == (ChipViewCellItem, ChipViewCellItem) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewcellitem\/init(key:title:)","title":"init(key: String, title: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewcellitem\/iconasset","title":"var iconAsset: ImageAsset?","type":"property"},{"path":"\/documentation\/divar\/chipviewcellitem\/identifier","title":"var identifier: UUID","type":"property"},{"path":"\/documentation\/divar\/chipviewcellitem\/isactivated","title":"var isActivated: Bool","type":"property"},{"path":"\/documentation\/divar\/chipviewcellitem\/isremovebuttonhiddenonactivation","title":"var isRemoveButtonHiddenOnActivation: Bool","type":"property"},{"path":"\/documentation\/divar\/chipviewcellitem\/key","title":"let key: String","type":"property"},{"path":"\/documentation\/divar\/chipviewcellitem\/title","title":"let title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewcellitem\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewcellitem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewcellitem\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chipviewcellitem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chipviewcellitem","title":"ChipViewCellItem","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewitemsmapper\/==(_:_:)","title":"static func == (ChipViewItemsMapper, ChipViewItemsMapper) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewitemsmapper\/init(title:action:)","title":"init(title: String, action: Widgets_Action)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewitemsmapper\/action","title":"let action: Widgets_Action","type":"property"},{"path":"\/documentation\/divar\/chipviewitemsmapper\/iconasset","title":"var iconAsset: ImageAsset?","type":"property"},{"path":"\/documentation\/divar\/chipviewitemsmapper\/identifier","title":"var identifier: UUID","type":"property"},{"path":"\/documentation\/divar\/chipviewitemsmapper\/isactivated","title":"var isActivated: Bool","type":"property"},{"path":"\/documentation\/divar\/chipviewitemsmapper\/isremovebuttonhiddenonactivation","title":"var isRemoveButtonHiddenOnActivation: Bool","type":"property"},{"path":"\/documentation\/divar\/chipviewitemsmapper\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewitemsmapper\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewitemsmapper\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chipviewitemsmapper\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chipviewitemsmapper\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chipviewitemsmapper","title":"ChipViewItemsMapper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/choicevalue\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/choicevalue\/category","title":"let category: String?","type":"property"},{"path":"\/documentation\/divar\/choicevalue\/isstore","title":"let isStore: Bool?","type":"property"},{"path":"\/documentation\/divar\/choicevalue\/query","title":"let query: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/choicevalue\/codingkeys\/category","title":"case category","type":"case"},{"path":"\/documentation\/divar\/choicevalue\/codingkeys\/isstore","title":"case isStore","type":"case"},{"path":"\/documentation\/divar\/choicevalue\/codingkeys\/query","title":"case query","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/choicevalue\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/choicevalue\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/choicevalue\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/choicevalue\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/choicevalue\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/choicevalue\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/choicevalue\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/choicevalue\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/choicevalue\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/choicevalue\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/choicevalue\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/choicevalue\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/choicevalue\/codingkeys","title":"ChoiceValue.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/choicevalue","title":"ChoiceValue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cities\/init(cities:topcities:)","title":"init(cities: [Place], topCities: [String])","type":"init"},{"path":"\/documentation\/divar\/cities\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cities\/cities","title":"let cities: [Place]","type":"property"},{"path":"\/documentation\/divar\/cities\/topcities","title":"let topCities: [String]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/cities\/codingkeys\/cities","title":"case cities","type":"case"},{"path":"\/documentation\/divar\/cities\/codingkeys\/topcities","title":"case topCities","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cities\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/cities\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/cities\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cities\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/cities\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/cities\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/cities\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cities\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/cities\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cities\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cities\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/cities\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/cities\/codingkeys","title":"Cities.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/cities","title":"Cities","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cityanddistrict\/init(city:districts:)","title":"init(city: Place, districts: [Place])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cityanddistrict\/city","title":"let city: Place","type":"property"},{"path":"\/documentation\/divar\/cityanddistrict\/districts","title":"let districts: [Place]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityanddistrict\/findcitybyid(property:cityid:)","title":"static func findCityById(property: Schema?, cityId: Int) -> Place?","type":"method"},{"path":"\/documentation\/divar\/cityanddistrict\/finddistrictbyid(property:districtid:)","title":"static func findDistrictById(property: Schema?, districtId: Int) -> Place?","type":"method"},{"path":"\/documentation\/divar\/cityanddistrict\/mapcities(property:)","title":"static func mapCities(property: Schema?) -> [CityAndDistrict]","type":"method"},{"path":"\/documentation\/divar\/cityanddistrict\/maptopcities(property:)","title":"static func mapTopCities(property: Schema?) -> [String]","type":"method"}],"path":"\/documentation\/divar\/cityanddistrict","title":"CityAndDistrict","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/claim\/init(value:)","title":"init(value: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/claim\/array","title":"var array: [String]?","type":"property"},{"path":"\/documentation\/divar\/claim\/date","title":"var date: Date?","type":"property"},{"path":"\/documentation\/divar\/claim\/double","title":"var double: Double?","type":"property"},{"path":"\/documentation\/divar\/claim\/integer","title":"var integer: Int?","type":"property"},{"path":"\/documentation\/divar\/claim\/rawvalue","title":"var rawValue: Any?","type":"property"},{"path":"\/documentation\/divar\/claim\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/divar\/claim\/value","title":"let value: Any?","type":"property"}],"path":"\/documentation\/divar\/claim","title":"Claim","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreportposo\/init(id:data:)","title":"init(id: String, data: ClientExporter_Report)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreportposo\/data","title":"var data: ClientExporter_Report","type":"property"},{"path":"\/documentation\/divar\/clientreportposo\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/divar\/clientreportposo","title":"ClientReportPOSO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/init(data:)","title":"init(data: Data)","type":"init"},{"path":"\/documentation\/divar\/clientreporttable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/data","title":"var data: Data","type":"property"},{"path":"\/documentation\/divar\/clientreporttable\/primarykey","title":"var primaryKey: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/clientreporttable\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/clientreporttable\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/clientreporttable\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/clientreporttable\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/init(row:)","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/clientreporttable\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/clientreporttable\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchall(_:keys:)-22ja6","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchall(_:keys:)-8hl6w","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchcursor(_:keys:)-5hamr","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchcursor(_:keys:)-9nmwx","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchone(_:key:)-3wh1d","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchone(_:key:)-7p3so","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"}],"path":"\/documentation\/divar\/clientreporttable\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/clientreporttable\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/clientreporttable\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/clientreporttable\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/clientreporttable\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/clientreporttable\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/clientreporttable\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/clientreporttable\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/annotated(with:)-3tqki","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/annotated(with:)-5e552","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/annotated(with:)-966l2","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/annotated(with:)-wtvr","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/belongsto(_:key:using:)-5l9lt","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/belongsto(_:key:using:)-5lyaq","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/deleteall(_:keys:)-5j5t9","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/deleteall(_:keys:)-km52","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/deleteone(_:key:)-6sgo0","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/deleteone(_:key:)-97f57","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/exists(_:key:)-5ln7a","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/exists(_:key:)-932n7","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/filter(_:)-5g98r","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/filter(_:)-s2tx","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/filter(key:)-3k15c","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/filter(key:)-gw6i","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/filter(keys:)-16771","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/filter(keys:)-4xy2g","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/hasmany(_:key:using:)-1dcqw","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/hasmany(_:key:using:)-1j836","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/hasone(_:key:using:)-1lcwh","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/hasone(_:key:using:)-6c6dp","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/order(_:)-442k0","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/order(_:)-8x53x","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/select(_:)-3qx7u","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/select(_:)-n6bj","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/select(_:as:)-9d3gy","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/select(_:as:)-g3cx","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/clientreporttable\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/clientreporttable\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/clientreporttable","title":"ClientReportTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/configmodel\/init(dynamicendpoints:update:divarforbusinessenabled:isupdatedversion:performancemonitorconfig:didebaanmonitoringconfig:)","title":"init(dynamicEndPoints: DynamicEndpointsModel?, update: String?, divarForBusinessEnabled: Bool?, isUpdatedVersion: Bool?, performanceMonitorConfig: PerformanceMonitorConfig?, didebaanMonitoringConfig: DidebaanConfig?)","type":"init"},{"path":"\/documentation\/divar\/configmodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/configmodel\/didebaanmonitoringconfig","title":"let didebaanMonitoringConfig: DidebaanConfig?","type":"property"},{"path":"\/documentation\/divar\/configmodel\/divarforbusinessenabled","title":"let divarForBusinessEnabled: Bool?","type":"property"},{"path":"\/documentation\/divar\/configmodel\/dynamicendpoints","title":"let dynamicEndPoints: DynamicEndpointsModel?","type":"property"},{"path":"\/documentation\/divar\/configmodel\/isupdatedversion","title":"let isUpdatedVersion: Bool?","type":"property"},{"path":"\/documentation\/divar\/configmodel\/performancemonitorconfig","title":"let performanceMonitorConfig: PerformanceMonitorConfig?","type":"property"},{"path":"\/documentation\/divar\/configmodel\/update","title":"let update: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/didebaanmonitoringconfig","title":"case didebaanMonitoringConfig","type":"case"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/divarforbusinessenabled","title":"case divarForBusinessEnabled","type":"case"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/dynamicendpoints","title":"case dynamicEndPoints","type":"case"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/isupdatedversion","title":"case isUpdatedVersion","type":"case"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/performancemonitorconfig","title":"case performanceMonitorConfig","type":"case"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/update","title":"case update","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/configmodel\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/configmodel\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/configmodel\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/configmodel\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/configmodel\/codingkeys","title":"ConfigModel.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/configmodel","title":"ConfigModel","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/contact\/==(_:_:)","title":"static func == (Contact, Contact) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/contact\/init(phone:email:hidephone:hideemail:chatenabled:chatid:)","title":"init(phone: String?, email: String?, hidePhone: Bool?, hideEmail: Bool?, chatEnabled: Bool?, chatId: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contact\/chatenabled","title":"let chatEnabled: Bool?","type":"property"},{"path":"\/documentation\/divar\/contact\/chatid","title":"let chatId: String?","type":"property"},{"path":"\/documentation\/divar\/contact\/email","title":"let email: String?","type":"property"},{"path":"\/documentation\/divar\/contact\/hideemail","title":"let hideEmail: Bool?","type":"property"},{"path":"\/documentation\/divar\/contact\/hidephone","title":"let hidePhone: Bool?","type":"property"},{"path":"\/documentation\/divar\/contact\/phone","title":"let phone: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/contact\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contact\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/contact\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/contact","title":"Contact","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/contactbookmarkstate\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/contactbookmarkstate\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/contactbookmarkstate\/init(selected:notselected:)","title":"init(selected: ContactItem?, notSelected: ContactItem?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactbookmarkstate\/notselected","title":"var notSelected: ContactItem?","type":"property"},{"path":"\/documentation\/divar\/contactbookmarkstate\/selected","title":"var selected: ContactItem?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/notselected","title":"case notSelected","type":"case"},{"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/selected","title":"case selected","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/contactbookmarkstate\/codingkeys","title":"ContactBookmarkState.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/contactbookmarkstate","title":"ContactBookmarkState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitem\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/contactitem\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/contactitem\/init(text:icon:color:disable:action:param:)","title":"init(text: String?, icon: String?, color: String?, disable: Bool?, action: ContactItemAction?, param: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitem\/action","title":"var action: ContactItemAction?","type":"property"},{"path":"\/documentation\/divar\/contactitem\/color","title":"var color: String?","type":"property"},{"path":"\/documentation\/divar\/contactitem\/disable","title":"var disable: Bool?","type":"property"},{"path":"\/documentation\/divar\/contactitem\/icon","title":"var icon: String?","type":"property"},{"path":"\/documentation\/divar\/contactitem\/param","title":"var param: String?","type":"property"},{"path":"\/documentation\/divar\/contactitem\/text","title":"var text: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/action","title":"case action","type":"case"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/color","title":"case color","type":"case"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/disable","title":"case disable","type":"case"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/icon","title":"case icon","type":"case"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/param","title":"case param","type":"case"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/contactitem\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/contactitem\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitem\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/contactitem\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/contactitem\/codingkeys","title":"ContactItem.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/contactitem","title":"ContactItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/contactwidgetstructure\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/contactwidgetstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/contactwidgetstructure\/init(items:title:alert:isgoodtime:bookmark:voip:)","title":"init(items: [ContactItem]?, title: String?, alert: String?, isGoodTime: Bool?, bookmark: ContactBookmarkState?, voip: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactwidgetstructure\/alert","title":"var alert: String?","type":"property"},{"path":"\/documentation\/divar\/contactwidgetstructure\/bookmark","title":"var bookmark: ContactBookmarkState?","type":"property"},{"path":"\/documentation\/divar\/contactwidgetstructure\/isgoodtime","title":"var isGoodTime: Bool?","type":"property"},{"path":"\/documentation\/divar\/contactwidgetstructure\/items","title":"var items: [ContactItem]?","type":"property"},{"path":"\/documentation\/divar\/contactwidgetstructure\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/divar\/contactwidgetstructure\/voip","title":"var voip: Bool?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/alert","title":"case alert","type":"case"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/bookmark","title":"case bookmark","type":"case"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/isgoodtime","title":"case isGoodTime","type":"case"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/items","title":"case items","type":"case"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/title","title":"case title","type":"case"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/voip","title":"case voip","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/contactwidgetstructure\/codingkeys","title":"ContactWidgetStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/contactwidgetstructure","title":"ContactWidgetStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/creattransactionrequestbuilder\/init(posttoken:)","title":"init(postToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/creattransactionrequestbuilder\/posttoken","title":"let postToken: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/creattransactionrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> GRPCWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/creattransactionrequestbuilder","title":"CreatTransactionRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/customaction\/init(type:payload:)","title":"init(type: CustomAction.TypeEnum, payload: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/customaction\/payload","title":"var payload: Any","type":"property"},{"path":"\/documentation\/divar\/customaction\/type","title":"var type: CustomAction.TypeEnum","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/customaction\/typeenum\/openbooleanratefeedbak","title":"case openBooleanRateFeedbak","type":"case"},{"path":"\/documentation\/divar\/customaction\/typeenum\/openratefeedback","title":"case openRateFeedback","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/customaction\/typeenum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/customaction\/typeenum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/customaction\/typeenum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/customaction\/typeenum","title":"CustomAction.TypeEnum","type":"enum"}],"path":"\/documentation\/divar\/customaction","title":"CustomAction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/derror\/init(aferror:identifier:responsedata:)","title":"init(aferror: AFError?, identifier: String, responseData: Data?)","type":"init"},{"path":"\/documentation\/divar\/derror\/init(code:display:kind:)","title":"init(code: Int, display: DError.DisplayType, kind: DError.ErrorKind)","type":"init"},{"path":"\/documentation\/divar\/derror\/init(identifier:message:)","title":"init(identifier: String, message: String)","type":"init"},{"path":"\/documentation\/divar\/derror\/init(internalmessage:)","title":"init(internalMessage: String)","type":"init"},{"path":"\/documentation\/divar\/derror\/init(protoerror:identifier:)","title":"init(protoError: Base_Error, identifier: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/derror\/code","title":"var code: Int","type":"property"},{"path":"\/documentation\/divar\/derror\/display","title":"var display: DisplayType","type":"property"},{"path":"\/documentation\/divar\/derror\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/divar\/derror\/kind","title":"var kind: ErrorKind","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/derror\/forceshowmessage()","title":"func forceShowMessage() -> DError","type":"method"},{"path":"\/documentation\/divar\/derror\/replace(code:with:and:)","title":"func replace(code: Int, with: DisplayType, and: ErrorKind) -> DError","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/derror\/ignore","title":"static var ignore: DError","type":"property"},{"path":"\/documentation\/divar\/derror\/showmessage","title":"static var showMessage: DError","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/derror\/blockingviewaction\/closepage","title":"case closePage","type":"case"},{"path":"\/documentation\/divar\/derror\/blockingviewaction\/login(phonenumber:identifier:)","title":"case login(phoneNumber: String?, identifier: String)","type":"case"},{"path":"\/documentation\/divar\/derror\/blockingviewaction\/none","title":"case none","type":"case"},{"path":"\/documentation\/divar\/derror\/blockingviewaction\/reload(identifier:)","title":"case reload(identifier: String)","type":"case"}],"path":"\/documentation\/divar\/derror\/blockingviewaction","title":"DError.BlockingViewAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/derror\/displaytype\/blockingview(title:description:buttontext:action:)","title":"case blockingView(title: String, description: String, buttonText: String, action: BlockingViewAction)","type":"case"},{"path":"\/documentation\/divar\/derror\/displaytype\/bottomsheetmessage(_:)","title":"case bottomSheetMessage(String)","type":"case"},{"path":"\/documentation\/divar\/derror\/displaytype\/customblockingview(customblockingview:)","title":"case customBlockingView(customBlockingView: CustomBlockingViewProtocol)","type":"case"},{"path":"\/documentation\/divar\/derror\/displaytype\/ignore","title":"case ignore","type":"case"},{"path":"\/documentation\/divar\/derror\/displaytype\/message(_:)","title":"case message(String)","type":"case"}],"path":"\/documentation\/divar\/derror\/displaytype","title":"DError.DisplayType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/derror\/errorkind\/badrequest","title":"case badRequest","type":"case"},{"path":"\/documentation\/divar\/derror\/errorkind\/badrequestjsonschema(data:)","title":"case badRequestJsonSchema(data: Base_BadRequestJsonSchemaData?)","type":"case"},{"path":"\/documentation\/divar\/derror\/errorkind\/blocked","title":"case blocked","type":"case"},{"path":"\/documentation\/divar\/derror\/errorkind\/captcharequired","title":"case captchaRequired","type":"case"},{"path":"\/documentation\/divar\/derror\/errorkind\/explicitlycancelled","title":"case explicitlyCancelled","type":"case"},{"path":"\/documentation\/divar\/derror\/errorkind\/loginrequired(phonenumber:identifier:)","title":"case loginRequired(phoneNumber: String?, identifier: String)","type":"case"},{"path":"\/documentation\/divar\/derror\/errorkind\/postnotfound","title":"case postNotFound","type":"case"},{"path":"\/documentation\/divar\/derror\/errorkind\/projectinternal","title":"case projectInternal","type":"case"},{"path":"\/documentation\/divar\/derror\/errorkind\/servererror","title":"case serverError","type":"case"},{"path":"\/documentation\/divar\/derror\/errorkind\/unauthorized","title":"case unauthorized","type":"case"},{"path":"\/documentation\/divar\/derror\/errorkind\/unknown","title":"case unknown","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/derror\/errorkind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/derror\/errorkind\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/derror\/errorkind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/derror\/errorkind","title":"DError.ErrorKind","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/derror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/divar\/derror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/derror\/asaferror(or:)","title":"func asAFError(or: () -> AFError) -> AFError","type":"method"},{"path":"\/documentation\/divar\/derror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/divar\/derror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/divar\/derror","title":"DError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/datarequestmodel\/init(url:data:headers:interceptor:)","title":"init(url: String, data: Data, headers: [String : String]?, interceptor: RequestInterceptor?)","type":"init"},{"path":"\/documentation\/divar\/datarequestmodel\/init(url:method:data:headers:interceptor:)","title":"init(url: String, method: RequestMethod, data: Data, headers: [String : String]?, interceptor: RequestInterceptor?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/datarequestmodel\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/divar\/datarequestmodel\/headers","title":"let headers: [String : String]?","type":"property"},{"path":"\/documentation\/divar\/datarequestmodel\/interceptor","title":"let interceptor: RequestInterceptor?","type":"property"},{"path":"\/documentation\/divar\/datarequestmodel\/method","title":"let method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/datarequestmodel\/url","title":"let url: String","type":"property"}],"path":"\/documentation\/divar\/datarequestmodel","title":"DataRequestModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/databasemigratorutility\/init()","title":"init()","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/databasemigratorutility\/migrator(_:)","title":"static func migrator([SQLTableProtocol.Type]) -> DatabaseMigrator","type":"method"}],"path":"\/documentation\/divar\/databasemigratorutility","title":"DatabaseMigratorUtility","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealeractionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealeractionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> DealerActionHandler","type":"method"}],"path":"\/documentation\/divar\/dealeractionbuilder","title":"DealerActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerbulkladderrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerbulkladderrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/dealerbulkladderrequest\/hasmaxseletablelimit","title":"var hasMaxSeletableLimit: Bool","type":"property"},{"path":"\/documentation\/divar\/dealerbulkladderrequest\/maxselectableitems","title":"var maxSelectableItems: Int32?","type":"property"},{"path":"\/documentation\/divar\/dealerbulkladderrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/dealerbulkladderrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/dealerbulkladderrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/dealerbulkladderrequest","title":"DealerBulkLadderRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerbulkladdersubmitrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerbulkladdersubmitrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/dealerbulkladdersubmitrequest\/method","title":"var method: HTTPMethod","type":"property"},{"path":"\/documentation\/divar\/dealerbulkladdersubmitrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/dealerbulkladdersubmitrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/dealerbulkladdersubmitrequest\/path","title":"var path: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerbulkladdersubmitrequest\/settokens(tokens:)","title":"func setTokens(tokens: [String])","type":"method"}],"path":"\/documentation\/divar\/dealerbulkladdersubmitrequest","title":"DealerBulkLadderSubmitRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerlandingpagerequest\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerlandingpagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/dealerlandingpagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/dealerlandingpagerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/dealerlandingpagerequest","title":"DealerLandingPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerlandingpagerequestbuilder\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerlandingpagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerlandingpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/dealerlandingpagerequestbuilder","title":"DealerLandingPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerlistrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerlistrequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealerlistrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/dealerlistrequestbuilder","title":"DealerListRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealermanagementpagerequest\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/dealermanagementpagerequest\/init(defaultpagination:pagination:)","title":"init(defaultPagination: Pagination, pagination: Pagination)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealermanagementpagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/dealermanagementpagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/dealermanagementpagerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/dealermanagementpagerequest","title":"DealerManagementPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealermanagementpagerequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealermanagementpagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealermanagementpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/dealermanagementpagerequestbuilder","title":"DealerManagementPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptiondetails\/init(costid:pagetitle:title:subtitle:price:descriptiontitle:description:buttontitle:paymentrequired:)","title":"init(costId: Int?, pageTitle: String?, title: String?, subtitle: String?, price: String?, descriptionTitle: String?, description: String?, buttonTitle: String?, paymentRequired: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptiondetails\/buttontitle","title":"let buttonTitle: String?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetails\/costid","title":"let costId: Int?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetails\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetails\/descriptiontitle","title":"let descriptionTitle: String?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetails\/pagetitle","title":"let pageTitle: String?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetails\/paymentrequired","title":"let paymentRequired: Bool?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetails\/price","title":"let price: String?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetails\/subtitle","title":"let subtitle: String?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptiondetails\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/divar\/dealersubscriptiondetails","title":"DealerSubscriptionDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptionmodel\/init(title:price:description:buttontitle:details:)","title":"init(title: String?, price: String?, description: String?, buttonTitle: String?, details: DealerSubscriptionDetails?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealersubscriptionmodel\/buttontitle","title":"let buttonTitle: String?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptionmodel\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptionmodel\/details","title":"let details: DealerSubscriptionDetails?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptionmodel\/price","title":"let price: String?","type":"property"},{"path":"\/documentation\/divar\/dealersubscriptionmodel\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/divar\/dealersubscriptionmodel","title":"DealerSubscriptionModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealershipcontactconfig\/init(token:)","title":"init(token: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dealershipcontactconfig\/hasbookmark","title":"var hasBookmark: Bool","type":"property"},{"path":"\/documentation\/divar\/dealershipcontactconfig\/hasheader","title":"var hasHeader: Bool","type":"property"},{"path":"\/documentation\/divar\/dealershipcontactconfig\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/dealershipcontactconfig\/usertype","title":"var userType: UserType","type":"property"}],"path":"\/documentation\/divar\/dealershipcontactconfig","title":"DealershipContactConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dealershipgetcontactactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dealershipgetcontactactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> DealershipGetContactActionHandler","type":"method"}],"path":"\/documentation\/divar\/dealershipgetcontactactionbuilder","title":"DealershipGetContactActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/decodedjwt\/init(jwt:)","title":"init(jwt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/decodedjwt\/audience","title":"var audience: [String]?","type":"property"},{"path":"\/documentation\/divar\/decodedjwt\/body","title":"let body: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/decodedjwt\/expired","title":"var expired: Bool","type":"property"},{"path":"\/documentation\/divar\/decodedjwt\/expiresat","title":"var expiresAt: Date?","type":"property"},{"path":"\/documentation\/divar\/decodedjwt\/header","title":"let header: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/decodedjwt\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/divar\/decodedjwt\/issuedat","title":"var issuedAt: Date?","type":"property"},{"path":"\/documentation\/divar\/decodedjwt\/issuer","title":"var issuer: String?","type":"property"},{"path":"\/documentation\/divar\/decodedjwt\/notbefore","title":"var notBefore: Date?","type":"property"},{"path":"\/documentation\/divar\/decodedjwt\/signature","title":"let signature: String?","type":"property"},{"path":"\/documentation\/divar\/decodedjwt\/string","title":"let string: String","type":"property"},{"path":"\/documentation\/divar\/decodedjwt\/subject","title":"var subject: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/decodedjwt\/claim(name:)","title":"func claim(name: String) -> Claim","type":"method"}],"path":"\/documentation\/divar\/decodedjwt\/jwt-implementations","title":"JWT Implementations","type":"symbol"}],"path":"\/documentation\/divar\/decodedjwt","title":"DecodedJWT","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/delete\/init(item:index:)","title":"init(item: T, index: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/delete\/index","title":"let index: Int","type":"property"},{"path":"\/documentation\/divar\/delete\/item","title":"let item: T","type":"property"}],"path":"\/documentation\/divar\/delete","title":"Delete","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldmodel\/init(text:placeholder:height:accessorytoolbar:minimumcharacters:required:)","title":"init(text: String?, placeHolder: String?, height: CGFloat?, accessoryToolbar: UIView?, minimumCharacters: Int?, required: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionfieldmodel\/accessorytoolbar","title":"let accessoryToolbar: UIView?","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldmodel\/height","title":"let height: CGFloat?","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldmodel\/minimumcharacters","title":"let minimumCharacters: Int?","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldmodel\/placeholder","title":"let placeHolder: String?","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldmodel\/required","title":"let required: Bool","type":"property"},{"path":"\/documentation\/divar\/descriptionfieldmodel\/text","title":"let text: String?","type":"property"}],"path":"\/documentation\/divar\/descriptionfieldmodel","title":"DescriptionFieldModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionmodel\/init(description:defaultheight:)","title":"init(description: String?, defaultHeight: CGFloat?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptionmodel\/defaultheight","title":"let defaultHeight: CGFloat?","type":"property"},{"path":"\/documentation\/divar\/descriptionmodel\/description","title":"let description: String?","type":"property"}],"path":"\/documentation\/divar\/descriptionmodel","title":"DescriptionModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/didreceiveresultdatamodel\/init(value:model:type:tabscount:tabstype:tabstext:)","title":"init(value: PostList, model: GetPostListStruct, type: PostListLoadType, tabsCount: Int, tabsType: Int?, tabsText: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/didreceiveresultdatamodel\/model","title":"let model: GetPostListStruct","type":"property"},{"path":"\/documentation\/divar\/didreceiveresultdatamodel\/tabscount","title":"let tabsCount: Int","type":"property"},{"path":"\/documentation\/divar\/didreceiveresultdatamodel\/tabstext","title":"let tabsText: String?","type":"property"},{"path":"\/documentation\/divar\/didreceiveresultdatamodel\/tabstype","title":"let tabsType: Int?","type":"property"},{"path":"\/documentation\/divar\/didreceiveresultdatamodel\/type","title":"let type: PostListLoadType","type":"property"},{"path":"\/documentation\/divar\/didreceiveresultdatamodel\/value","title":"let value: PostList","type":"property"}],"path":"\/documentation\/divar\/didreceiveresultdatamodel","title":"DidReceiveResultDataModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanconfig\/init(batchsize:networkmonitoringenabled:networkmonitoringsamplerate:eventenabled:eventsessionsamplerate:)","title":"init(batchSize: Int?, networkMonitoringEnabled: Bool?, networkMonitoringSampleRate: Int?, eventEnabled: Bool?, eventSessionSampleRate: Int?)","type":"init"},{"path":"\/documentation\/divar\/didebaanconfig\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanconfig\/batchsize","title":"let batchSize: Int?","type":"property"},{"path":"\/documentation\/divar\/didebaanconfig\/eventenabled","title":"let eventEnabled: Bool?","type":"property"},{"path":"\/documentation\/divar\/didebaanconfig\/eventsessionsamplerate","title":"let eventSessionSampleRate: Int?","type":"property"},{"path":"\/documentation\/divar\/didebaanconfig\/networkmonitoringenabled","title":"let networkMonitoringEnabled: Bool?","type":"property"},{"path":"\/documentation\/divar\/didebaanconfig\/networkmonitoringsamplerate","title":"let networkMonitoringSampleRate: Int?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/batchsize","title":"case batchSize","type":"case"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/eventenabled","title":"case eventEnabled","type":"case"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/eventsessionsamplerate","title":"case eventSessionSampleRate","type":"case"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/networkmonitoringenabled","title":"case networkMonitoringEnabled","type":"case"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/networkmonitoringsamplerate","title":"case networkMonitoringSampleRate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/didebaanconfig\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/didebaanconfig\/codingkeys","title":"DidebaanConfig.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/didebaanconfig","title":"DidebaanConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanreportingthreshold\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanreportingthreshold\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanreportingthreshold\/fire()","title":"func fire()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/didebaanreportingthreshold\/didebaanthreashhold","title":"static var didebaanThreashhold: Int","type":"property"}],"path":"\/documentation\/divar\/didebaanreportingthreshold","title":"DidebaanReportingThreshold","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/disablelistpagerequest\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/disablelistpagerequest\/init(maxselectableitems:pagination:defaultpagination:)","title":"init(maxSelectableItems: Int32?, pagination: Pagination, defaultPagination: Pagination)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/disablelistpagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/disablelistpagerequest\/hasmaxseletablelimit","title":"var hasMaxSeletableLimit: Bool","type":"property"},{"path":"\/documentation\/divar\/disablelistpagerequest\/maxselectableitems","title":"var maxSelectableItems: Int32?","type":"property"},{"path":"\/documentation\/divar\/disablelistpagerequest\/pagination","title":"var pagination: Pagination","type":"property"}],"path":"\/documentation\/divar\/disablelistpagerequest","title":"DisableListPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/displayformatstruct\/init(widget:data:itemscount:)","title":"init(widget: BrandWidgets, data: Any, itemsCount: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/displayformatstruct\/data","title":"let data: Any","type":"property"},{"path":"\/documentation\/divar\/displayformatstruct\/itemscount","title":"let itemsCount: Int","type":"property"},{"path":"\/documentation\/divar\/displayformatstruct\/widget","title":"let widget: BrandWidgets","type":"property"}],"path":"\/documentation\/divar\/displayformatstruct","title":"DisplayFormatStruct","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/district\/init(id:name:coordinate:)","title":"init(id: Int, name: String, coordinate: CLLocationCoordinate2D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/district\/coordinate","title":"let coordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/divar\/district\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/divar\/district\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/divar\/district","title":"District","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/districttagitem\/init(item:)","title":"init(item: SingleMultiModel)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/districttagitem\/iconasset","title":"var iconAsset: ImageAsset?","type":"property"},{"path":"\/documentation\/divar\/districttagitem\/isfilled","title":"var isFilled: Bool","type":"property"},{"path":"\/documentation\/divar\/districttagitem\/item","title":"var item: SingleMultiModel","type":"property"},{"path":"\/documentation\/divar\/districttagitem\/nonremovable","title":"var nonRemovable: Bool","type":"property"},{"path":"\/documentation\/divar\/districttagitem\/showicon","title":"var showIcon: Bool","type":"property"},{"path":"\/documentation\/divar\/districttagitem\/showiconandremovebutton","title":"var showIconAndRemoveButton: Bool","type":"property"},{"path":"\/documentation\/divar\/districttagitem\/showremovebutton","title":"var showRemoveButton: Bool","type":"property"},{"path":"\/documentation\/divar\/districttagitem\/text","title":"var text: String?","type":"property"}],"path":"\/documentation\/divar\/districttagitem","title":"DistrictTagItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/divarforbusinessesrequest\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/divarforbusinessesrequest\/init(path:pagination:)","title":"init(path: String, pagination: Pagination)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/divarforbusinessesrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/divarforbusinessesrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/divarforbusinessesrequest","title":"DivarForBusinessesRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/divarforbusinessesrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/divarforbusinessesrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/divarforbusinessesrequestbuilder","title":"DivarForBusinessesRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/init(stats:updateurl:)","title":"init(stats: String?, updateURL: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/stats","title":"let stats: String?","type":"property"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/updateurl","title":"let updateURL: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/stats","title":"case stats","type":"case"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/updateurl","title":"case updateURL","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/dynamicendpointsmodel\/codingkeys","title":"DynamicEndpointsModel.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/dynamicendpointsmodel","title":"DynamicEndpointsModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationdescriptionrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationdescriptionrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/evaluationdescriptionrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/evaluationdescriptionrequest","title":"EvaluationDescriptionRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationdescriptionrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/evaluationdescriptionrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/evaluationdescriptionrequestbuilder","title":"EvaluationDescriptionRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/faqrequest\/init(type:)","title":"init(type: Widgets_RealEstateFAQPayload.FAQTypes)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/faqrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/faqrequest\/method","title":"var method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/faqrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/faqrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/faqrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/faqrequest","title":"FAQRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/faqrequestbuilder\/init(type:)","title":"init(type: Widgets_RealEstateFAQPayload.FAQTypes)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/faqrequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/faqrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/faqrequestbuilder","title":"FAQRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/featureflagconfig\/init(enabled:)","title":"init(enabled: Bool?)","type":"init"},{"path":"\/documentation\/divar\/featureflagconfig\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/featureflagconfig\/enabled","title":"let enabled: Bool?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/enabled","title":"case enabled","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/featureflagconfig\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/featureflagconfig\/codingkeys","title":"FeatureFlagConfig.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/featureflagconfig","title":"FeatureFlagConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackdatastructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/feedbackdatastructure\/init(type:token:isactive:notbefore:expiration:options:title:descript:id:assetsmodel:)","title":"init(type: String?, token: String?, isActive: Bool?, notBefore: String?, expiration: String?, options: [Options]?, title: String?, descript: String?, id: String?, assetsModel: AssetsModel?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackdatastructure\/assetsmodel","title":"let assetsModel: AssetsModel?","type":"property"},{"path":"\/documentation\/divar\/feedbackdatastructure\/descript","title":"let descript: String?","type":"property"},{"path":"\/documentation\/divar\/feedbackdatastructure\/expiration","title":"let expiration: String?","type":"property"},{"path":"\/documentation\/divar\/feedbackdatastructure\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/divar\/feedbackdatastructure\/isactive","title":"let isActive: Bool?","type":"property"},{"path":"\/documentation\/divar\/feedbackdatastructure\/notbefore","title":"let notBefore: String?","type":"property"},{"path":"\/documentation\/divar\/feedbackdatastructure\/options","title":"let options: [Options]?","type":"property"},{"path":"\/documentation\/divar\/feedbackdatastructure\/title","title":"let title: String?","type":"property"},{"path":"\/documentation\/divar\/feedbackdatastructure\/token","title":"let token: String?","type":"property"},{"path":"\/documentation\/divar\/feedbackdatastructure\/type","title":"let type: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/assetsmodel","title":"case assetsModel","type":"case"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/descript","title":"case descript","type":"case"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/expiration","title":"case expiration","type":"case"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/isactive","title":"case isActive","type":"case"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/notbefore","title":"case notBefore","type":"case"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/options","title":"case options","type":"case"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/title","title":"case title","type":"case"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/token","title":"case token","type":"case"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/feedbackdatastructure\/codingkeys","title":"FeedBackDataStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/feedbackdatastructure","title":"FeedBackDataStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackqastruct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/feedbackqastruct\/init(value:text:)","title":"init(value: String?, text: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackqastruct\/text","title":"let text: String?","type":"property"},{"path":"\/documentation\/divar\/feedbackqastruct\/value","title":"let value: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/text","title":"case text","type":"case"},{"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/value","title":"case value","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/feedbackqastruct\/codingkeys","title":"FeedbackQAStruct.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/feedbackqastruct","title":"FeedbackQAStruct","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacksubtitle\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/feedbacksubtitle\/init(text:hasdivider:)","title":"init(text: String, hasDivider: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacksubtitle\/hasdivider","title":"let hasDivider: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbacksubtitle\/text","title":"let text: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/hasdivider","title":"case hasDivider","type":"case"},{"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/feedbacksubtitle\/codingkeys","title":"FeedbackSubtitle.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/feedbacksubtitle","title":"FeedbackSubtitle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktitle\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/feedbacktitle\/init(text:hasdivider:color:textcolor:)","title":"init(text: String, hasDivider: Bool, color: String, textColor: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktitle\/color","title":"let color: String","type":"property"},{"path":"\/documentation\/divar\/feedbacktitle\/hasdivider","title":"let hasDivider: Bool","type":"property"},{"path":"\/documentation\/divar\/feedbacktitle\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/divar\/feedbacktitle\/textcolor","title":"let textColor: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/color","title":"case color","type":"case"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/hasdivider","title":"case hasDivider","type":"case"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/text","title":"case text","type":"case"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/textcolor","title":"case textColor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/feedbacktitle\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/feedbacktitle\/codingkeys","title":"FeedbackTitle.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/feedbacktitle","title":"FeedbackTitle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackwidgets\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/feedbackwidgets\/init(title:subtitle:raterow:)","title":"init(title: FeedbackTitle, subtitle: FeedbackSubtitle, rateRow: Widgets_RateRowData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackwidgets\/raterow","title":"let rateRow: Widgets_RateRowData","type":"property"},{"path":"\/documentation\/divar\/feedbackwidgets\/subtitle","title":"let subtitle: FeedbackSubtitle","type":"property"},{"path":"\/documentation\/divar\/feedbackwidgets\/title","title":"let title: FeedbackTitle","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/raterow","title":"case rateRow","type":"case"},{"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/subtitle","title":"case subtitle","type":"case"},{"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/title","title":"case title","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/feedbackwidgets\/codingkeys","title":"FeedbackWidgets.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/feedbackwidgets","title":"FeedbackWidgets","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/filelimits\/init(filecategories:videocategories:valifileformats:validimageformats:validvoiceformats:maxsize:maxduration:)","title":"init(fileCategories: [String]?, videoCategories: [String]?, valiFileFormats: [String]?, validImageFormats: [String]?, validVoiceFormats: [String]?, maxSize: AttachmentMaxSize?, maxDuration: [String : Int]?)","type":"init"},{"path":"\/documentation\/divar\/filelimits\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filelimits\/filecategories","title":"let fileCategories: [String]?","type":"property"},{"path":"\/documentation\/divar\/filelimits\/maxduration","title":"let maxDuration: [String : Int]?","type":"property"},{"path":"\/documentation\/divar\/filelimits\/maxsize","title":"let maxSize: AttachmentMaxSize?","type":"property"},{"path":"\/documentation\/divar\/filelimits\/valifileformats","title":"let valiFileFormats: [String]?","type":"property"},{"path":"\/documentation\/divar\/filelimits\/validimageformats","title":"let validImageFormats: [String]?","type":"property"},{"path":"\/documentation\/divar\/filelimits\/validvoiceformats","title":"let validVoiceFormats: [String]?","type":"property"},{"path":"\/documentation\/divar\/filelimits\/videocategories","title":"let videoCategories: [String]?","type":"property"},{"path":"\/documentation\/divar\/filelimits\/videomaxduration","title":"var videoMaxDuration: Int","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/filecategories","title":"case fileCategories","type":"case"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/maxduration","title":"case maxDuration","type":"case"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/maxsize","title":"case maxSize","type":"case"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/valifileformats","title":"case valiFileFormats","type":"case"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/validimageformats","title":"case validImageFormats","type":"case"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/validvoiceformats","title":"case validVoiceFormats","type":"case"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/videocategories","title":"case videoCategories","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/filelimits\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/filelimits\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filelimits\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/filelimits\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/filelimits\/codingkeys","title":"FileLimits.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/filelimits","title":"FileLimits","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/fileuploaderparameterstruct\/init(networkmanager:payload:image:filepath:type:messageid:completionblock:errorhandlingblock:)","title":"init(networkManager: ChatNetworkManager, payload: ChatPayload, image: UIImage?, filePath: URL?, type: MessageType, messageID: String, completionBlock: ((Any) -> Void)?, errorHandlingBlock: ErrorHandlingType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/fileuploaderparameterstruct\/completionblock","title":"let completionBlock: ((Any) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/fileuploaderparameterstruct\/errorhandlingblock","title":"let errorHandlingBlock: ErrorHandlingType","type":"property"},{"path":"\/documentation\/divar\/fileuploaderparameterstruct\/filepath","title":"let filePath: URL?","type":"property"},{"path":"\/documentation\/divar\/fileuploaderparameterstruct\/image","title":"let image: UIImage?","type":"property"},{"path":"\/documentation\/divar\/fileuploaderparameterstruct\/messageid","title":"let messageID: String","type":"property"},{"path":"\/documentation\/divar\/fileuploaderparameterstruct\/networkmanager","title":"let networkManager: ChatNetworkManager","type":"property"},{"path":"\/documentation\/divar\/fileuploaderparameterstruct\/payload","title":"let payload: ChatPayload","type":"property"},{"path":"\/documentation\/divar\/fileuploaderparameterstruct\/type","title":"let type: MessageType","type":"property"}],"path":"\/documentation\/divar\/fileuploaderparameterstruct","title":"FileUploaderParameterStruct","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/filtersearchactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtersearchactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> FilterSearchActionHandler","type":"method"}],"path":"\/documentation\/divar\/filtersearchactionbuilder","title":"FilterSearchActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/filtersearchactionhandlerimpl\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/filtersearchactionhandlerimpl\/init(flow:)","title":"init(flow: BaseFlowController?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filtersearchactionhandlerimpl\/flow","title":"var flow: BaseFlowController?","type":"property"},{"path":"\/documentation\/divar\/filtersearchactionhandlerimpl\/navigationcontroller","title":"var navigationController: NavigationController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/filtersearchactionhandlerimpl\/filtersearchresult(_:)","title":"func filterSearchResult(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/filtersearchactionhandlerimpl","title":"FilterSearchActionHandlerImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/filtertranslation\/init(json:)","title":"init?(json: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filtertranslation\/category","title":"let category: String?","type":"property"},{"path":"\/documentation\/divar\/filtertranslation\/categoryslug","title":"let categorySlug: String?","type":"property"},{"path":"\/documentation\/divar\/filtertranslation\/tags","title":"let tags: [FilterTranslationTag]","type":"property"}],"path":"\/documentation\/divar\/filtertranslation","title":"FilterTranslation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/filtertranslationtag\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/filtertranslationtag\/text","title":"let text: String","type":"property"}],"path":"\/documentation\/divar\/filtertranslationtag","title":"FilterTranslationTag","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/finalconfirmtransactionrequestbuilder\/init(transactiontoken:)","title":"init(transactionToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/finalconfirmtransactionrequestbuilder\/transactiontoken","title":"let transactionToken: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/finalconfirmtransactionrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> GRPCWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/finalconfirmtransactionrequestbuilder","title":"FinalConfirmTransactionRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/formaccessoryviewattribute\/init(donebuttonaction:custombuttontitle:custombuttonaction:centerlabeltext:)","title":"init(doneButtonAction: Selector?, customButtonTitle: String?, customButtonAction: Selector?, centerLabelText: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/formaccessoryviewattribute\/centerlabeltext","title":"let centerLabelText: String?","type":"property"},{"path":"\/documentation\/divar\/formaccessoryviewattribute\/custombuttonaction","title":"let customButtonAction: Selector?","type":"property"},{"path":"\/documentation\/divar\/formaccessoryviewattribute\/custombuttontitle","title":"let customButtonTitle: String?","type":"property"},{"path":"\/documentation\/divar\/formaccessoryviewattribute\/donebuttonaction","title":"let doneButtonAction: Selector?","type":"property"}],"path":"\/documentation\/divar\/formaccessoryviewattribute","title":"FormAccessoryViewAttribute","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/formactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> FormActionHandlerProtocol","type":"method"}],"path":"\/documentation\/divar\/formactionbuilder","title":"FormActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcheaders\/init(user:)","title":"init(user: User)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcheaders\/user","title":"var user: User","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcheaders\/getheaders(withextraheaders:)","title":"func getHeaders(withExtraHeaders: [String : String]?) -> [String : String]","type":"method"}],"path":"\/documentation\/divar\/grpcheaders","title":"GRPCHeaders","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcwidgetbaserequestpayload\/init(path:message:)","title":"init(path: String, message: Message)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcwidgetbaserequestpayload\/message","title":"let message: Message","type":"property"},{"path":"\/documentation\/divar\/grpcwidgetbaserequestpayload\/path","title":"let path: String","type":"property"}],"path":"\/documentation\/divar\/grpcwidgetbaserequestpayload","title":"GRPCWidgetBaseRequestPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcwidgetbasedworker\/init(service:datasource:)","title":"init(service: GRPCWidgetBasedServiceProtocol, dataSource: GRPCWidgetBasedRequestBuilder & WidgetBasedConfigurable)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcwidgetbasedworker\/config","title":"var config: WidgetBasedConfig","type":"property"},{"path":"\/documentation\/divar\/grpcwidgetbasedworker\/datasource","title":"let dataSource: GRPCWidgetBasedRequestBuilder & WidgetBasedConfigurable","type":"property"},{"path":"\/documentation\/divar\/grpcwidgetbasedworker\/responsetype","title":"var responseType: ExtractableMessage.Type","type":"property"},{"path":"\/documentation\/divar\/grpcwidgetbasedworker\/service","title":"let service: GRPCWidgetBasedServiceProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/grpcwidgetbasedworker\/createpredictionworker(with:)","title":"func createPredictionWorker(with: String) -> WidgetBasedWorkerProtocol?","type":"method"},{"path":"\/documentation\/divar\/grpcwidgetbasedworker\/loaddata(with:completion:)","title":"func loadData(with: WidgetBaseRequestMetadata, completion: ExtractableResult) -> Cancellable?","type":"method"}],"path":"\/documentation\/divar\/grpcwidgetbasedworker","title":"GRPCWidgetBasedWorker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/init(announcements:hasmore:)","title":"init(announcements: [ChatAnnouncementTable], hasMore: Bool)","type":"init"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/announcements","title":"var announcements: [ChatAnnouncementTable]","type":"property"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/hasmore","title":"var hasMore: Bool","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/announcements","title":"case announcements","type":"case"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/hasmore","title":"case hasMore","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/getannouncementresponsemodel\/codingkeys","title":"GetAnnouncementResponseModel.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/getannouncementresponsemodel","title":"GetAnnouncementResponseModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactstructure\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/getcontactstructure\/init(contact:feedback:)","title":"init(contact: PostContactsStructure?, feedback: FeedBackDataStructure?)","type":"init"},{"path":"\/documentation\/divar\/getcontactstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactstructure\/contact","title":"var contact: PostContactsStructure?","type":"property"},{"path":"\/documentation\/divar\/getcontactstructure\/feedback","title":"var feedback: FeedBackDataStructure?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/contact","title":"case contact","type":"case"},{"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/feedback","title":"case feedback","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/getcontactstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/getcontactstructure\/codingkeys","title":"GetContactStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/getcontactstructure","title":"GetContactStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactwidgets\/init(_:)","title":"init(GetContactStructure)","type":"init"},{"path":"\/documentation\/divar\/getcontactwidgets\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/getcontactwidgets\/init(widgets:token:)","title":"init(widgets: GetContactStructure, token: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactwidgets\/token","title":"var token: String?","type":"property"},{"path":"\/documentation\/divar\/getcontactwidgets\/widgets","title":"var widgets: GetContactStructure","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/token","title":"case token","type":"case"},{"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/widgets","title":"case widgets","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/getcontactwidgets\/condingkey\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/getcontactwidgets\/condingkey","title":"GetContactWidgets.CondingKey","type":"enum"}],"path":"\/documentation\/divar\/getcontactwidgets","title":"GetContactWidgets","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getlastseenstatusstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/getlastseenstatusstructure\/init(status:response:)","title":"init(status: String?, response: LastSeenStatusStructure?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getlastseenstatusstructure\/response","title":"let response: LastSeenStatusStructure?","type":"property"},{"path":"\/documentation\/divar\/getlastseenstatusstructure\/status","title":"let status: String?","type":"property"}],"path":"\/documentation\/divar\/getlastseenstatusstructure","title":"GetLastSeenStatusStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getpostliststruct\/init(cityid:slug:jsonschema:lastpostdate:pagenumber:filteredcities:tabfilters:currenttabindex:isfromsearchsuggestion:nocatpage:recentactionslog:)","title":"init(cityID: Int, slug: String, jsonSchema: SearchFilterHistory, lastPostDate: CLongLong, pageNumber: Int, filteredCities: [String], tabFilters: [String : Any]?, currentTabIndex: Int, isFromSearchSuggestion: Bool, noCatPage: Bool, recentActionsLog: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getpostliststruct\/cityid","title":"let cityID: Int","type":"property"},{"path":"\/documentation\/divar\/getpostliststruct\/currenttabindex","title":"let currentTabIndex: Int","type":"property"},{"path":"\/documentation\/divar\/getpostliststruct\/filteredcities","title":"let filteredCities: [String]","type":"property"},{"path":"\/documentation\/divar\/getpostliststruct\/isfromsearchsuggestion","title":"let isFromSearchSuggestion: Bool","type":"property"},{"path":"\/documentation\/divar\/getpostliststruct\/jsonschema","title":"let jsonSchema: SearchFilterHistory","type":"property"},{"path":"\/documentation\/divar\/getpostliststruct\/lastpostdate","title":"let lastPostDate: CLongLong","type":"property"},{"path":"\/documentation\/divar\/getpostliststruct\/nocatpage","title":"let noCatPage: Bool","type":"property"},{"path":"\/documentation\/divar\/getpostliststruct\/pagenumber","title":"let pageNumber: Int","type":"property"},{"path":"\/documentation\/divar\/getpostliststruct\/recentactionslog","title":"let recentActionsLog: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/getpostliststruct\/slug","title":"let slug: String","type":"property"},{"path":"\/documentation\/divar\/getpostliststruct\/tabfilters","title":"let tabFilters: [String : Any]?","type":"property"}],"path":"\/documentation\/divar\/getpostliststruct","title":"GetPostListStruct","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getschemamodel\/init(for:slug:cityid:mngtoken:fortype:page:cities:)","title":"init(for: SchemaType, slug: String, cityId: Int?, mngToken: String?, forType: UserType, page: Int, cities: [String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getschemamodel\/cities","title":"var cities: [String]?","type":"property"},{"path":"\/documentation\/divar\/getschemamodel\/cityid","title":"let cityId: Int?","type":"property"},{"path":"\/documentation\/divar\/getschemamodel\/fortype","title":"let forType: UserType","type":"property"},{"path":"\/documentation\/divar\/getschemamodel\/mngtoken","title":"let mngToken: String?","type":"property"},{"path":"\/documentation\/divar\/getschemamodel\/page","title":"let page: Int","type":"property"},{"path":"\/documentation\/divar\/getschemamodel\/slug","title":"let slug: String","type":"property"},{"path":"\/documentation\/divar\/getschemamodel\/type","title":"let type: SchemaType","type":"property"}],"path":"\/documentation\/divar\/getschemamodel","title":"GetSchemaModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getsuggestionsstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/getsuggestionsstructure\/init(suggestions:)","title":"init(suggestions: [Suggestion]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getsuggestionsstructure\/suggestions","title":"let suggestions: [Suggestion]?","type":"property"}],"path":"\/documentation\/divar\/getsuggestionsstructure","title":"GetSuggestionsStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/gettransactionstatuspagerequestbuilder\/init(transactiontoken:)","title":"init(transactionToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/gettransactionstatuspagerequestbuilder\/transactiontoken","title":"let transactionToken: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/gettransactionstatuspagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> GRPCWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/gettransactionstatuspagerequestbuilder","title":"GetTransactionStatusPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/getuserauthenticationpagerequestbuilder\/init(usertype:sourcepage:sourceposttoken:)","title":"init(userType: Widgets_DivarTransactionUserType.TypeEnum, sourcePage: Widgets_DivarTransactionAddUserSourcePage.Page, sourcePostToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/getuserauthenticationpagerequestbuilder\/sourcepage","title":"let sourcePage: Widgets_DivarTransactionAddUserSourcePage.Page","type":"property"},{"path":"\/documentation\/divar\/getuserauthenticationpagerequestbuilder\/sourceposttoken","title":"let sourcePostToken: String","type":"property"},{"path":"\/documentation\/divar\/getuserauthenticationpagerequestbuilder\/usertype","title":"let userType: Widgets_DivarTransactionUserType.TypeEnum","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/getuserauthenticationpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> GRPCWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/getuserauthenticationpagerequestbuilder","title":"GetUserAuthenticationPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/headerbarconfig\/init(title:subtitle:)","title":"init(title: String, subtitle: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/headerbarconfig\/subtitle","title":"let subtitle: String?","type":"property"},{"path":"\/documentation\/divar\/headerbarconfig\/title","title":"let title: String","type":"property"}],"path":"\/documentation\/divar\/headerbarconfig","title":"HeaderBarConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/init(results:)","title":"init(results: [UIOptionsDataStruct]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/results","title":"var results: [UIOptionsDataStruct]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/results","title":"case results","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/hierarchycontentsearchresponse\/codingkeys","title":"HierarchyContentSearchResponse.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/hierarchycontentsearchresponse","title":"HierarchyContentSearchResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageitem\/init(id:mediatype:isedited:)","title":"init(id: String, mediaType: IVMediaType, isEdited: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageitem\/id-8v3pk","title":"let id: String","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageitem\/isedited","title":"let isEdited: Bool","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageitem\/mediatype","title":"let mediaType: IVMediaType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageitem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageitem\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorimageitem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorimageitem\/id-15dof","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/divar\/ivcollectionassetselectorimageitem\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionassetselectorimageitem","title":"IVCollectionAssetSelectorImageItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorvideoitem\/init(id:mediatype:isedited:)","title":"init(id: String, mediaType: IVMediaType, isEdited: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorvideoitem\/id-5w996","title":"let id: String","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorvideoitem\/isedited","title":"let isEdited: Bool","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectorvideoitem\/mediatype","title":"let mediaType: IVMediaType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorvideoitem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorvideoitem\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorvideoitem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorvideoitem\/id-wbhg","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/divar\/ivcollectionassetselectorvideoitem\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionassetselectorvideoitem","title":"IVCollectionAssetSelectorVideoItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchresult\/init(assetcollection:assetcount:)","title":"init(assetCollection: PHAssetCollection, assetCount: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchresult\/assetcollection","title":"let assetCollection: PHAssetCollection","type":"property"},{"path":"\/documentation\/divar\/ivcollectionfetchresult\/assetcount","title":"let assetCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchresult\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivcollectionfetchresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionfetchresult","title":"IVCollectionFetchResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorcellmodel\/init(title:assetscount:)","title":"init(title: String?, assetsCount: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionselectorcellmodel\/assetscount","title":"let assetsCount: String","type":"property"},{"path":"\/documentation\/divar\/ivcollectionselectorcellmodel\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/divar\/ivcollectionselectorcellmodel","title":"IVCollectionSelectorCellModel","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/holder\/init(width:height:)","title":"init(width: CGFloat, height: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/holder\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/holder\/height","title":"let height: CGFloat","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/holder\/width","title":"let width: CGFloat","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/holder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/holder\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/holder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/holder","title":"IVImageAspectRatioRule.Ratio.Holder","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/init(rawvalue:)","title":"init?(rawValue: Holder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/heightitem","title":"var heightItem: CGFloat","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/rawvalue","title":"var rawValue: Holder","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/widthitem","title":"var widthItem: CGFloat","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/square","title":"static let square: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standard1","title":"static let standard1: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standard2","title":"static let standard2: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standard3","title":"static let standard3: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standardfullscreen1","title":"static let standardFullscreen1: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standardfullscreen2","title":"static let standardFullscreen2: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standardwidescreen","title":"static let standardWidescreen: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standardwidescreen1","title":"static let standardWidescreen1: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standardwidescreen2","title":"static let standardWidescreen2: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standardwidescreen3","title":"static let standardWidescreen3: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standardwidescreen4","title":"static let standardWidescreen4: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standardwidescreen5","title":"static let standardWidescreen5: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standardwidescreen6","title":"static let standardWidescreen6: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standardwidescreen7","title":"static let standardWidescreen7: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standardwidescreen8","title":"static let standardWidescreen8: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/standardwidescreen9","title":"static let standardWidescreen9: IVImageAspectRatioRule.Ratio","type":"property"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio\/verticalvideo","title":"static let verticalVideo: IVImageAspectRatioRule.Ratio","type":"property"}],"path":"\/documentation\/divar\/ivimageaspectratiorule\/ratio","title":"IVImageAspectRatioRule.Ratio","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/init(aspectratio:)","title":"init(aspectRatio: Ratio)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/aspectratio","title":"let aspectRatio: Ratio","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageaspectratiorule\/validate(image:)","title":"func validate(image: PHAssetToUIImageConvertor) -> IVValidationResult","type":"method"}],"path":"\/documentation\/divar\/ivimageaspectratiorule","title":"IVImageAspectRatioRule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageassetresolveserviceimpl\/init(photomanager:urlgenerator:)","title":"init(photoManager: PHImageManager, urlGenerator: IVCacheURLGeneratorService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageassetresolveserviceimpl\/requestimage(for:with:)","title":"func requestImage(for: PHAsset, with: CGSize) async -> Data?","type":"method"},{"path":"\/documentation\/divar\/ivimageassetresolveserviceimpl\/requestimageurl(for:with:)","title":"func requestImageURL(for: PHAsset, with: CGSize) async throws -> ImageAssetResolveResponse","type":"method"},{"path":"\/documentation\/divar\/ivimageassetresolveserviceimpl\/requestplaceholderimage(for:with:)","title":"func requestPlaceHolderImage(for: PHAsset, with: CGSize) async -> Data?","type":"method"}],"path":"\/documentation\/divar\/ivimageassetresolveserviceimpl","title":"IVImageAssetResolveServiceImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageeditingresult\/init(editedimage:)","title":"init(editedImage: UIImage)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageeditingresult\/editedimage","title":"let editedImage: UIImage","type":"property"}],"path":"\/documentation\/divar\/ivimageeditingresult","title":"IVImageEditingResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimagemaximumsizerule\/init(maximumsize:)","title":"init(maximumSize: CGSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimagemaximumsizerule\/maximumsize","title":"let maximumSize: CGSize","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimagemaximumsizerule\/validate(image:)","title":"func validate(image: PHAssetToUIImageConvertor) -> IVValidationResult","type":"method"}],"path":"\/documentation\/divar\/ivimagemaximumsizerule","title":"IVImageMaximumSizeRule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageminimumsizerule\/init(minimumsize:)","title":"init(minimumSize: CGSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageminimumsizerule\/minimumsize","title":"let minimumSize: CGSize","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivimageminimumsizerule\/validate(image:)","title":"func validate(image: PHAssetToUIImageConvertor) -> IVValidationResult","type":"method"}],"path":"\/documentation\/divar\/ivimageminimumsizerule","title":"IVImageMinimumSizeRule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorpickbuttonserviceimpl\/init(maximumimageselected:maximumvideoselected:)","title":"init(maximumImageSelected: Int, maximumVideoSelected: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorpickbuttonserviceimpl\/generatestate(totalselecteditemcount:imageselectedcount:videoselectedcount:)","title":"func generateState(totalSelectedItemCount: Int, imageSelectedCount: Int, videoSelectedCount: Int) -> IVItemSelectorPickButtonState","type":"method"}],"path":"\/documentation\/divar\/ivitemselectorpickbuttonserviceimpl","title":"IVItemSelectorPickButtonServiceImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorpickbuttonstateimpl\/init(shouldenablebutton:toasterrormessage:buttontext:)","title":"init(shouldEnableButton: Bool, toastErrorMessage: String?, buttonText: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorpickbuttonstateimpl\/buttontext","title":"let buttonText: String","type":"property"},{"path":"\/documentation\/divar\/ivitemselectorpickbuttonstateimpl\/shouldenablebutton","title":"let shouldEnableButton: Bool","type":"property"},{"path":"\/documentation\/divar\/ivitemselectorpickbuttonstateimpl\/toasterrormessage","title":"let toastErrorMessage: String?","type":"property"}],"path":"\/documentation\/divar\/ivitemselectorpickbuttonstateimpl","title":"IVItemSelectorPickButtonStateImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivphassettocollectionassetselectoritemsconverterserviceimpl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivphassettocollectionassetselectoritemsconverterserviceimpl\/convert(asset:)","title":"func convert(asset: PHAsset?) -> IVCollectionAssetSelectorItems?","type":"method"}],"path":"\/documentation\/divar\/ivphassettocollectionassetselectoritemsconverterserviceimpl","title":"IVPHAssetToCollectionAssetSelectorItemsConverterServiceImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivpickedimagedata\/init(imageurl:)","title":"init(imageURL: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivpickedimagedata\/imageurl","title":"let imageURL: URL","type":"property"}],"path":"\/documentation\/divar\/ivpickedimagedata","title":"IVPickedImageData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivpickedvideodata\/init(videoduration:videosize:videourl:)","title":"init(videoDuration: Double, videoSize: UInt, videoURL: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivpickedvideodata\/videoduration","title":"let videoDuration: Double","type":"property"},{"path":"\/documentation\/divar\/ivpickedvideodata\/videosize","title":"let videoSize: UInt","type":"property"},{"path":"\/documentation\/divar\/ivpickedvideodata\/videourl","title":"let videoURL: URL","type":"property"}],"path":"\/documentation\/divar\/ivpickedvideodata","title":"IVPickedVideoData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivselecteditemfinalizerserviceimpl\/init(fetchservice:imageassetresolveservice:videoassetresolveservice:)","title":"init(fetchService: IVAssetCollectionFetchService, imageAssetResolveService: IVImageAssetResolveService, videoAssetResolveService: IVVideoAssetResolveService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivselecteditemfinalizerserviceimpl\/finalizeselection(of:)","title":"func finalizeSelection(of: [IVCollectionAssetSelectorItems]) async -> [IVPickedData]","type":"method"}],"path":"\/documentation\/divar\/ivselecteditemfinalizerserviceimpl","title":"IVSelectedItemFinalizerServiceImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoassetresolveserviceimpl\/init(manager:urlgenerator:videoinfoattainmentservice:)","title":"init(manager: PHImageManager, urlGenerator: IVCacheURLGeneratorService, videoInfoAttainmentService: IVVideoInfoAttainmentService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoassetresolveserviceimpl\/requestplaceholderimage(for:with:)","title":"func requestPlaceHolderImage(for: PHAsset, with: CGSize) async -> Data?","type":"method"},{"path":"\/documentation\/divar\/ivvideoassetresolveserviceimpl\/requestvideodetail(for:)","title":"func requestVideoDetail(for: PHAsset) async -> IVVideoInfoAttainmentResponse?","type":"method"},{"path":"\/documentation\/divar\/ivvideoassetresolveserviceimpl\/requestvideourl(for:)","title":"func requestVideoURL(for: PHAsset) async throws -> AlbumVideoItemRequestResponse","type":"method"}],"path":"\/documentation\/divar\/ivvideoassetresolveserviceimpl","title":"IVVideoAssetResolveServiceImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoassetresolvevideoinforesponseimpl\/init(videoduration:videosize:)","title":"init(videoDuration: Double, videoSize: UInt?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoassetresolvevideoinforesponseimpl\/videoduration","title":"var videoDuration: Double","type":"property"},{"path":"\/documentation\/divar\/ivvideoassetresolvevideoinforesponseimpl\/videosize","title":"var videoSize: UInt?","type":"property"}],"path":"\/documentation\/divar\/ivvideoassetresolvevideoinforesponseimpl","title":"IVVideoAssetResolveVideoInfoResponseImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexportpresetpredictorserviceimpl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexportpresetpredictorserviceimpl\/predictpreset(basedon:thresholdsize:)","title":"func predictPreset(basedOn: UInt, thresholdSize: UInt) -> IVVideoExportPreset","type":"method"}],"path":"\/documentation\/divar\/ivvideoexportpresetpredictorserviceimpl","title":"IVVideoExportPresetPredictorServiceImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexportresultimpl\/init(outputurl:elapsedtime:)","title":"init(outputURL: URL, elapsedTime: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexportresultimpl\/elapsedtime","title":"var elapsedTime: TimeInterval","type":"property"},{"path":"\/documentation\/divar\/ivvideoexportresultimpl\/outputurl","title":"var outputURL: URL","type":"property"}],"path":"\/documentation\/divar\/ivvideoexportresultimpl","title":"IVVideoExportResultImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoinfoattainmentresponseimpl\/init(asset:)","title":"init(asset: AVURLAsset)","type":"init"},{"path":"\/documentation\/divar\/ivvideoinfoattainmentresponseimpl\/init(videoduration:videosize:)","title":"init(videoDuration: Double, videoSize: UInt?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoinfoattainmentresponseimpl\/videoduration","title":"let videoDuration: Double","type":"property"},{"path":"\/documentation\/divar\/ivvideoinfoattainmentresponseimpl\/videosize","title":"let videoSize: UInt?","type":"property"}],"path":"\/documentation\/divar\/ivvideoinfoattainmentresponseimpl","title":"IVVideoInfoAttainmentResponseImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoinfoattainmentserviceimpl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoinfoattainmentserviceimpl\/videoinfo(for:)-72q8w","title":"func videoInfo(for: AVURLAsset) -> IVVideoInfoAttainmentResponse","type":"method"},{"path":"\/documentation\/divar\/ivvideoinfoattainmentserviceimpl\/videoinfo(for:)-7vdm7","title":"func videoInfo(for: URL) throws -> IVVideoInfoAttainmentResponse","type":"method"}],"path":"\/documentation\/divar\/ivvideoinfoattainmentserviceimpl","title":"IVVideoInfoAttainmentServiceImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideomaximumdurationrule\/init(maximumduration:errormessage:)","title":"init(maximumDuration: Double, errorMessage: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideomaximumdurationrule\/validatevideo(container:)","title":"func validateVideo(container: IVVideoRuleInfoContainer) -> IVValidationResult","type":"method"}],"path":"\/documentation\/divar\/ivvideomaximumdurationrule","title":"IVVideoMaximumDurationRule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideominimumdurationrule\/init(minimumduration:errormessage:)","title":"init(minimumDuration: Double, errorMessage: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideominimumdurationrule\/validatevideo(container:)","title":"func validateVideo(container: IVVideoRuleInfoContainer) -> IVValidationResult","type":"method"}],"path":"\/documentation\/divar\/ivvideominimumdurationrule","title":"IVVideoMinimumDurationRule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderrecordedvideoimpl\/init(videourl:videoduration:videosize:)","title":"init(videoURL: URL, videoDuration: Double, videoSize: UInt?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideorecorderrecordedvideoimpl\/videoduration","title":"let videoDuration: Double","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderrecordedvideoimpl\/videosize","title":"let videoSize: UInt?","type":"property"},{"path":"\/documentation\/divar\/ivvideorecorderrecordedvideoimpl\/videourl","title":"let videoURL: URL","type":"property"}],"path":"\/documentation\/divar\/ivvideorecorderrecordedvideoimpl","title":"IVVideoRecorderRecordedVideoImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoruleinfocontainer\/init(duration:size:)","title":"init(duration: Double, size: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoruleinfocontainer\/duration","title":"let duration: Double","type":"property"},{"path":"\/documentation\/divar\/ivvideoruleinfocontainer\/size","title":"let size: UInt","type":"property"}],"path":"\/documentation\/divar\/ivvideoruleinfocontainer","title":"IVVideoRuleInfoContainer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideosizerule\/init(sizeinbyte:errormessage:)","title":"init(sizeInByte: UInt, errorMessage: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideosizerule\/validatevideo(container:)","title":"func validateVideo(container: IVVideoRuleInfoContainer) -> IVValidationResult","type":"method"}],"path":"\/documentation\/divar\/ivvideosizerule","title":"IVVideoSizeRule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imageassetresolveresponse\/init(imageurl:)","title":"init(imageUrl: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageassetresolveresponse\/imageurl","title":"let imageUrl: URL","type":"property"}],"path":"\/documentation\/divar\/imageassetresolveresponse","title":"ImageAssetResolveResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecompressor\/init()","title":"init()","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagecompressor\/compress(image:suggestedmaxbytes:minsize:completion:)","title":"static func compress(image: UIImage, suggestedMaxBytes: Int, minSize: CGSize?, completion: ((UIImage) -> Void))","type":"method"},{"path":"\/documentation\/divar\/imagecompressor\/compress(images:suggestedmaxbytes:minsize:completion:)","title":"static func compress(images: [UIImage], suggestedMaxBytes: Int, minSize: CGSize?, completion: (([UIImage]) -> Void))","type":"method"}],"path":"\/documentation\/divar\/imagecompressor","title":"ImageCompressor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imagelimits\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/imagelimits\/init(minwidth:minheight:countlimit:maxheight:maxwidth:maxsizemb:)","title":"init(minWidth: Int?, minHeight: Int?, countLimit: Int?, maxHeight: Int?, maxWidth: Int?, maxSizeMB: Double?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagelimits\/countlimit","title":"let countLimit: Int?","type":"property"},{"path":"\/documentation\/divar\/imagelimits\/maxheight","title":"let maxHeight: Int?","type":"property"},{"path":"\/documentation\/divar\/imagelimits\/maxsize","title":"var maxSize: CGSize?","type":"property"},{"path":"\/documentation\/divar\/imagelimits\/maxsizemb","title":"let maxSizeMB: Double?","type":"property"},{"path":"\/documentation\/divar\/imagelimits\/maxwidth","title":"let maxWidth: Int?","type":"property"},{"path":"\/documentation\/divar\/imagelimits\/minheight","title":"let minHeight: Int?","type":"property"},{"path":"\/documentation\/divar\/imagelimits\/minsize","title":"var minSize: CGSize?","type":"property"},{"path":"\/documentation\/divar\/imagelimits\/minwidth","title":"let minWidth: Int?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/countlimit","title":"case countLimit","type":"case"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/maxheight","title":"case maxHeight","type":"case"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/maxsizemb","title":"case maxSizeMB","type":"case"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/maxwidth","title":"case maxWidth","type":"case"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/minheight","title":"case minHeight","type":"case"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/minwidth","title":"case minWidth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/imagelimits\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/imagelimits\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagelimits\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/imagelimits\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/imagelimits\/codingkeys","title":"ImageLimits.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/imagelimits","title":"ImageLimits","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/init(darkurl:lighturl:text:)","title":"init(darkUrl: String?, lightUrl: String?, text: String?)","type":"init"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/darkurl","title":"let darkUrl: String?","type":"property"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/lighturl","title":"let lightUrl: String?","type":"property"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/text","title":"let text: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/darkurl","title":"case darkUrl","type":"case"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/lighturl","title":"case lightUrl","type":"case"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/imageselectorplaceholder\/codingkeys","title":"ImageSelectorPlaceholder.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/imageselectorplaceholder","title":"ImageSelectorPlaceholder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imageuploadheaders\/init(user:)","title":"init(user: User)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageuploadheaders\/user","title":"var user: User","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageuploadheaders\/getheaders(withextraheaders:)","title":"func getHeaders(withExtraHeaders: [String : String]?) -> [String : String]","type":"method"}],"path":"\/documentation\/divar\/imageuploadheaders","title":"ImageUploadHeaders","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imageuploadresponse\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/imageuploadresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/imageuploadresponse\/init(imagename:)","title":"init(imageName: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageuploadresponse\/imagename","title":"var imageName: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/imagename","title":"case imageName","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/imageuploadresponse\/codingkeys","title":"ImageUploadResponse.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/imageuploadresponse","title":"ImageUploadResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/inapplinkactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inapplinkactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> InAppLinkActionHandler","type":"method"}],"path":"\/documentation\/divar\/inapplinkactionbuilder","title":"InAppLinkActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/independentagentonboardingpagerequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/independentagentonboardingpagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/independentagentonboardingpagerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/independentagentonboardingpagerequest","title":"IndependentAgentOnboardingPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/independentagentonboardingpagerequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/independentagentonboardingpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/independentagentonboardingpagerequestbuilder","title":"IndependentAgentOnboardingPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowmodel\/init(title:value:)","title":"init(title: String?, value: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowmodel\/title","title":"let title: String?","type":"property"},{"path":"\/documentation\/divar\/inforowmodel\/value","title":"let value: String?","type":"property"}],"path":"\/documentation\/divar\/inforowmodel","title":"InfoRowModel","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowunexpandableeurekadata\/==(_:_:)","title":"static func == (InfoRowUnExpandableEurekaData, InfoRowUnExpandableEurekaData) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowunexpandableeurekadata\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/inforowunexpandableeurekadata\/init(title:value:)","title":"init(title: String?, value: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowunexpandableeurekadata\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/divar\/inforowunexpandableeurekadata\/value","title":"var value: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowunexpandableeurekadata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/inforowunexpandableeurekadata\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/inforowunexpandableeurekadata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/inforowunexpandableeurekadata","title":"InfoRowUnExpandableEurekaData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/insert\/init(item:index:)","title":"init(item: T, index: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/insert\/index","title":"let index: Int","type":"property"},{"path":"\/documentation\/divar\/insert\/item","title":"let item: T","type":"property"}],"path":"\/documentation\/divar\/insert","title":"Insert","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/inspectionservicetokens\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/inspectionservicetokens\/init(managetoken:posttoken:carinspectiontoken:)","title":"init(manageToken: String?, postToken: String?, carInspectionToken: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/inspectionservicetokens\/carinspectiontoken","title":"var carInspectionToken: String?","type":"property"},{"path":"\/documentation\/divar\/inspectionservicetokens\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/divar\/inspectionservicetokens\/managetoken","title":"var manageToken: String?","type":"property"},{"path":"\/documentation\/divar\/inspectionservicetokens\/posttoken","title":"var postToken: String?","type":"property"}],"path":"\/documentation\/divar\/inspectionservicetokens","title":"InspectionServiceTokens","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/introconfig\/init(config:feedback:note:banners:voip:postchi:chatconfig:actionlog:multicitysearch:smartsuggestion:urls:)","title":"init(config: ConfigModel?, feedback: FeedBackDataStructure?, note: NoteConfig?, banners: BannersConfig?, voip: FeatureFlagConfig?, postchi: FeatureFlagConfig?, chatConfig: ChatConfig?, actionLog: ActionLogConfig?, multiCitySearch: FeatureFlagConfig?, smartSuggestion: SmartSuggestion?, urls: IntroUrls?)","type":"init"},{"path":"\/documentation\/divar\/introconfig\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/introconfig\/actionlog","title":"let actionLog: ActionLogConfig?","type":"property"},{"path":"\/documentation\/divar\/introconfig\/banners","title":"let banners: BannersConfig?","type":"property"},{"path":"\/documentation\/divar\/introconfig\/chatconfig","title":"let chatConfig: ChatConfig?","type":"property"},{"path":"\/documentation\/divar\/introconfig\/config","title":"let config: ConfigModel?","type":"property"},{"path":"\/documentation\/divar\/introconfig\/feedback","title":"let feedback: FeedBackDataStructure?","type":"property"},{"path":"\/documentation\/divar\/introconfig\/multicitysearch","title":"let multiCitySearch: FeatureFlagConfig?","type":"property"},{"path":"\/documentation\/divar\/introconfig\/note","title":"let note: NoteConfig?","type":"property"},{"path":"\/documentation\/divar\/introconfig\/postchi","title":"let postchi: FeatureFlagConfig?","type":"property"},{"path":"\/documentation\/divar\/introconfig\/smartsuggestion","title":"let smartSuggestion: SmartSuggestion?","type":"property"},{"path":"\/documentation\/divar\/introconfig\/urls","title":"let urls: IntroUrls?","type":"property"},{"path":"\/documentation\/divar\/introconfig\/voip","title":"let voip: FeatureFlagConfig?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/introconfig\/save()","title":"func save()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/introconfig\/shouldshowapp","title":"static var shouldShowApp: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/introconfig\/getconfig()","title":"static func getConfig() -> IntroConfig","type":"method"},{"path":"\/documentation\/divar\/introconfig\/getsavedintroconfig()","title":"static func getSavedIntroConfig() -> IntroConfig?","type":"method"},{"path":"\/documentation\/divar\/introconfig\/getupdateinfo()","title":"static func getUpdateInfo() -> SoftHardUpdatePayload?","type":"method"},{"path":"\/documentation\/divar\/introconfig\/initialconfig()","title":"static func initialConfig() -> IntroConfig","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/actionlog","title":"case actionLog","type":"case"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/banners","title":"case banners","type":"case"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/chatconfig","title":"case chatConfig","type":"case"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/config","title":"case config","type":"case"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/feedback","title":"case feedback","type":"case"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/multicitysearch","title":"case multiCitySearch","type":"case"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/note","title":"case note","type":"case"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/postchi","title":"case postchi","type":"case"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/smartsuggestion","title":"case smartSuggestion","type":"case"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/urls","title":"case urls","type":"case"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/voip","title":"case voip","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/introconfig\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/introconfig\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/introconfig\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/introconfig\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/introconfig\/codingkeys","title":"IntroConfig.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/introconfig","title":"IntroConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/introurls\/init(chat:help:gateway:baseweb:imageupload:sentry:gatewaywithoutversion:grpcgateway:)","title":"init(chat: String?, help: String?, gateway: String?, baseWeb: String?, imageUpload: String?, sentry: String?, gatewayWithoutVersion: String?, grpcGateway: String?)","type":"init"},{"path":"\/documentation\/divar\/introurls\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/introurls\/baseweb","title":"let baseWeb: String?","type":"property"},{"path":"\/documentation\/divar\/introurls\/chat","title":"let chat: String?","type":"property"},{"path":"\/documentation\/divar\/introurls\/gateway","title":"let gateway: String?","type":"property"},{"path":"\/documentation\/divar\/introurls\/gatewaywithoutversion","title":"let gatewayWithoutVersion: String?","type":"property"},{"path":"\/documentation\/divar\/introurls\/grpcgateway","title":"let grpcGateway: String?","type":"property"},{"path":"\/documentation\/divar\/introurls\/help","title":"let help: String?","type":"property"},{"path":"\/documentation\/divar\/introurls\/imageupload","title":"let imageUpload: String?","type":"property"},{"path":"\/documentation\/divar\/introurls\/sentry","title":"let sentry: String?","type":"property"}],"path":"\/documentation\/divar\/introurls","title":"IntroUrls","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/jsontooctetstreamheaders\/init(user:)","title":"init(user: User)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/jsontooctetstreamheaders\/user","title":"var user: User","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jsontooctetstreamheaders\/getheaders(withextraheaders:)","title":"func getHeaders(withExtraHeaders: [String : String]?) -> [String : String]","type":"method"}],"path":"\/documentation\/divar\/jsontooctetstreamheaders","title":"JSONToOctetStreamHeaders","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> JobsActionHandler","type":"method"}],"path":"\/documentation\/divar\/jobsactionbuilder","title":"JobsActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsbulkladderrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsbulkladderrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/jobsbulkladderrequest\/hasmaxseletablelimit","title":"var hasMaxSeletableLimit: Bool","type":"property"},{"path":"\/documentation\/divar\/jobsbulkladderrequest\/maxselectableitems","title":"var maxSelectableItems: Int32?","type":"property"},{"path":"\/documentation\/divar\/jobsbulkladderrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/jobsbulkladderrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/jobsbulkladderrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/jobsbulkladderrequest","title":"JobsBulkLadderRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsbulkladdersubmitrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsbulkladdersubmitrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/jobsbulkladdersubmitrequest\/method","title":"var method: HTTPMethod","type":"property"},{"path":"\/documentation\/divar\/jobsbulkladdersubmitrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/jobsbulkladdersubmitrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/jobsbulkladdersubmitrequest\/path","title":"var path: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsbulkladdersubmitrequest\/settokens(tokens:)","title":"func setTokens(tokens: [String])","type":"method"}],"path":"\/documentation\/divar\/jobsbulkladdersubmitrequest","title":"JobsBulkLadderSubmitRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/jobscontactconfig\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/jobscontactconfig\/hasbookmark","title":"var hasBookmark: Bool","type":"property"},{"path":"\/documentation\/divar\/jobscontactconfig\/hasheader","title":"var hasHeader: Bool","type":"property"},{"path":"\/documentation\/divar\/jobscontactconfig\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/jobscontactconfig\/usertype","title":"var userType: UserType","type":"property"}],"path":"\/documentation\/divar\/jobscontactconfig","title":"JobsContactConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsformactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/jobsformactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> JobsFormActionHandler","type":"method"}],"path":"\/documentation\/divar\/jobsformactionbuilder","title":"JobsFormActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> KalaDetailsActionHandler","type":"method"}],"path":"\/documentation\/divar\/kaladetailsactionbuilder","title":"KalaDetailsActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfobrandpagerequest\/init(brand:)","title":"init(brand: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfobrandpagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/kaladetailsmobileinfobrandpagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/kaladetailsmobileinfobrandpagerequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/kaladetailsmobileinfobrandpagerequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/kaladetailsmobileinfobrandpagerequest\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/divar\/kaladetailsmobileinfobrandpagerequest\/searchable","title":"var searchable: Bool","type":"property"}],"path":"\/documentation\/divar\/kaladetailsmobileinfobrandpagerequest","title":"KalaDetailsMobileInfoBrandPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfobrandpagerequestbuilder\/init(brand:)","title":"init(brand: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfobrandpagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfobrandpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/kaladetailsmobileinfobrandpagerequestbuilder","title":"KalaDetailsMobileInfoBrandPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfohomepagerequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfohomepagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/kaladetailsmobileinfohomepagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/kaladetailsmobileinfohomepagerequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/kaladetailsmobileinfohomepagerequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/kaladetailsmobileinfohomepagerequest\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/divar\/kaladetailsmobileinfohomepagerequest\/searchable","title":"var searchable: Bool","type":"property"}],"path":"\/documentation\/divar\/kaladetailsmobileinfohomepagerequest","title":"KalaDetailsMobileInfoHomePageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfohomepagerequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfohomepagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfohomepagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/kaladetailsmobileinfohomepagerequestbuilder","title":"KalaDetailsMobileInfoHomePageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfomodelpagerequest\/init(brandmodel:)","title":"init(brandModel: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfomodelpagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/kaladetailsmobileinfomodelpagerequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/kaladetailsmobileinfomodelpagerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/kaladetailsmobileinfomodelpagerequest","title":"KalaDetailsMobileInfoModelPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfomodelpagerequestbuilder\/init(brandmodel:)","title":"init(brandModel: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/kaladetailsmobileinfomodelpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/kaladetailsmobileinfomodelpagerequestbuilder","title":"KalaDetailsMobileInfoModelPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/lagacywidgetbasedfilterworker\/init(service:requestmodel:)","title":"init(service: WidgetBasedServiceProtocol, requestModel: WidgetBasedFilterRequest)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/lagacywidgetbasedfilterworker\/requestmodel","title":"let requestModel: WidgetBasedFilterRequest","type":"property"},{"path":"\/documentation\/divar\/lagacywidgetbasedfilterworker\/service","title":"let service: WidgetBasedServiceProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/lagacywidgetbasedfilterworker\/request(filters:completion:)","title":"func request(filters: Google_Protobuf_Struct, completion: ExtractableResult)","type":"method"}],"path":"\/documentation\/divar\/lagacywidgetbasedfilterworker","title":"LagacyWidgetBasedFilterWorker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/landingactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landingactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> LandingActionHandler","type":"method"}],"path":"\/documentation\/divar\/landingactionbuilder","title":"LandingActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineinput\/init(service:_:managetoken:)","title":"init(service: LandlineAuthenticationProtocol, NumberInputModel, manageToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineinput\/managetoken","title":"let manageToken: String","type":"property"},{"path":"\/documentation\/divar\/landlineinput\/model","title":"var model: NumberInputModel","type":"property"},{"path":"\/documentation\/divar\/landlineinput\/service","title":"let service: LandlineAuthenticationProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineinput\/buttonclicked(vc:value:)","title":"func buttonClicked(vc: NumberInputViewController, value: String?)","type":"method"}],"path":"\/documentation\/divar\/landlineinput","title":"LandlineInput","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/landlinestate\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/landlinestate\/phonenumber","title":"let phoneNumber: String?","type":"property"},{"path":"\/documentation\/divar\/landlinestate\/shouldverify","title":"let shouldVerify: Bool?","type":"property"}],"path":"\/documentation\/divar\/landlinestate","title":"LandlineState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationactionbuilder\/init(_:)","title":"init?(Widgets_Action)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationactionbuilder\/managetoken","title":"var manageToken: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> LandlineVerificationActionHandler","type":"method"}],"path":"\/documentation\/divar\/landlineverificationactionbuilder","title":"LandlineVerificationActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationcodeinput\/init(service:_:phonenumber:managetoken:)","title":"init(service: LandlineAuthenticationProtocol, VerificationCodeInputModel, phoneNumber: String, manageToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationcodeinput\/managetoken","title":"let manageToken: String","type":"property"},{"path":"\/documentation\/divar\/landlineverificationcodeinput\/model","title":"var model: VerificationCodeInputModel","type":"property"},{"path":"\/documentation\/divar\/landlineverificationcodeinput\/phonenumber","title":"var phoneNumber: String","type":"property"},{"path":"\/documentation\/divar\/landlineverificationcodeinput\/service","title":"let service: LandlineAuthenticationProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/landlineverificationcodeinput\/fetchverificationcode(vc:)","title":"func fetchVerificationCode(vc: VerificationCodeInputViewController)","type":"method"},{"path":"\/documentation\/divar\/landlineverificationcodeinput\/isvalid(input:)","title":"func isValid(input: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/landlineverificationcodeinput\/sendverificationcode(vc:code:)","title":"func sendVerificationCode(vc: VerificationCodeInputViewController, code: String?)","type":"method"}],"path":"\/documentation\/divar\/landlineverificationcodeinput","title":"LandlineVerificationCodeInput","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/lastactivity","title":"let lastActivity: String?","type":"property"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/online","title":"let online: StringBacked<Bool>?","type":"property"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/responsetime","title":"let responseTime: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/gettime()","title":"func getTime() -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/lastactivity","title":"case lastActivity","type":"case"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/online","title":"case online","type":"case"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/responsetime","title":"case responseTime","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/lastseenstatusstructure\/codingkeys","title":"LastSeenStatusStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/lastseenstatusstructure","title":"LastSeenStatusStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/legaciesactionlogconfiguration\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/legaciesactionlogconfiguration\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/legaciesactionlogconfiguration\/fire()","title":"func fire()","type":"method"}],"path":"\/documentation\/divar\/legaciesactionlogconfiguration","title":"LegaciesActionLogConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/legacywidgetbasedsegmentedhandler\/init(container:actiondelegate:widgetviewcontrollerdelegate:request:)","title":"init(container: LegacyWidgetBasedSegmentedHandlerDIContainer, actionDelegate: WidgetBasedActionDelegate?, widgetViewControllerDelegate: WidgetViewControllerDelegate?, request: TabularWidgetBasedRequest)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/legacywidgetbasedsegmentedhandler\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/legacywidgetbasedsegmentedhandler\/container","title":"var container: LegacyWidgetBasedSegmentedHandlerDIContainer","type":"property"},{"path":"\/documentation\/divar\/legacywidgetbasedsegmentedhandler\/request","title":"let request: TabularWidgetBasedRequest","type":"property"},{"path":"\/documentation\/divar\/legacywidgetbasedsegmentedhandler\/widgetviewcontrollerdelegate","title":"var widgetViewControllerDelegate: WidgetViewControllerDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/legacywidgetbasedsegmentedhandler\/createviewcontroller(for:prefetchedresult:isembeded:)","title":"func createViewController(for: String?, prefetchedResult: ExtractableMessage?, isEmbeded: Bool) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/legacywidgetbasedsegmentedhandler\/request(completion:)","title":"func request(completion: ExtractableResult)","type":"method"}],"path":"\/documentation\/divar\/legacywidgetbasedsegmentedhandler","title":"LegacyWidgetBasedSegmentedHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitlemodel\/init(title:subtitle:hasseperator:)","title":"init(title: String, subtitle: String, hasSeperator: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/legendtitlemodel\/hasseperator","title":"var hasSeperator: Bool","type":"property"},{"path":"\/documentation\/divar\/legendtitlemodel\/subtitle","title":"let subtitle: String","type":"property"},{"path":"\/documentation\/divar\/legendtitlemodel\/title","title":"let title: String","type":"property"}],"path":"\/documentation\/divar\/legendtitlemodel","title":"LegendTitleModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorloghelper\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/limitedlocationselectorloghelper\/logchangefrommap(newlocation:oldlocation:)","title":"func logChangeFromMap(newLocation: Location, oldLocation: Location)","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorloghelper\/logcitychanged(city:oldcity:selectiontype:)","title":"func logCityChanged(city: Place, oldCity: Place, selectionType: CitySelectionType)","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorloghelper\/logdistricchaged(newdistrict:olddistrict:selectiontype:)","title":"func logDistricChaged(newDistrict: Place, oldDistrict: Place?, selectionType: OptionSelectionType)","type":"method"},{"path":"\/documentation\/divar\/limitedlocationselectorloghelper\/logsubmit(newlocation:oldlocation:)","title":"func logSubmit(newLocation: Location?, oldLocation: Location?)","type":"method"}],"path":"\/documentation\/divar\/limitedlocationselectorloghelper","title":"LimitedLocationSelectorLogHelper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/linechartmodel\/init()","title":"init()","type":"init"}],"path":"\/documentation\/divar\/linechartmodel","title":"LineChartModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/linkactionhandler\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/linkactionhandler\/makecall(_:)","title":"func makeCall(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/linkactionhandler\/openurloutside(_:)","title":"func openURLOutside(Widgets_Action)","type":"method"},{"path":"\/documentation\/divar\/linkactionhandler\/openurloutside(link:)","title":"func openURLOutside(link: String)","type":"method"}],"path":"\/documentation\/divar\/linkactionhandler","title":"LinkActionHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatapayload\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/listdatapayload\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/listdatapayload\/init(token:link:action:)","title":"init(token: String?, link: String?, action: ListDataActions?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatapayload\/action","title":"var action: ListDataActions?","type":"property"},{"path":"\/documentation\/divar\/listdatapayload\/link","title":"var link: String?","type":"property"},{"path":"\/documentation\/divar\/listdatapayload\/token","title":"var token: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/action","title":"case action","type":"case"},{"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/link","title":"case link","type":"case"},{"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/token","title":"case token","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/listdatapayload\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/listdatapayload\/codingkeys","title":"ListDataPayload.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/listdatapayload","title":"ListDataPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatastructure\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/listdatastructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/listdatastructure\/init(title:value:format:mode:payload:indicatorindex:selectorrowtitle:description:lefttext:middletext:righttext:)","title":"init(title: String?, value: String?, format: ListDataFormat?, mode: ListDataMode?, payload: ListDataPayload?, indicatorIndex: Double?, selectorRowTitle: String?, description: String?, leftText: String?, middleText: String?, rightText: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatastructure\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/divar\/listdatastructure\/format","title":"var format: ListDataFormat?","type":"property"},{"path":"\/documentation\/divar\/listdatastructure\/indicatorindex","title":"var indicatorIndex: Double?","type":"property"},{"path":"\/documentation\/divar\/listdatastructure\/lefttext","title":"var leftText: String?","type":"property"},{"path":"\/documentation\/divar\/listdatastructure\/middletext","title":"var middleText: String?","type":"property"},{"path":"\/documentation\/divar\/listdatastructure\/mode","title":"var mode: ListDataMode?","type":"property"},{"path":"\/documentation\/divar\/listdatastructure\/payload","title":"var payload: ListDataPayload?","type":"property"},{"path":"\/documentation\/divar\/listdatastructure\/righttext","title":"var rightText: String?","type":"property"},{"path":"\/documentation\/divar\/listdatastructure\/selectorrowtitle","title":"var selectorRowTitle: String?","type":"property"},{"path":"\/documentation\/divar\/listdatastructure\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/divar\/listdatastructure\/value","title":"var value: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/description-swift.enum.case","title":"case description","type":"case"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/format","title":"case format","type":"case"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/indicatorindex","title":"case indicatorIndex","type":"case"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/lefttext","title":"case leftText","type":"case"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/middletext","title":"case middleText","type":"case"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/mode","title":"case mode","type":"case"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/payload","title":"case payload","type":"case"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/righttext","title":"case rightText","type":"case"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/selectorrowtitle","title":"case selectorRowTitle","type":"case"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/title","title":"case title","type":"case"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/value","title":"case value","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/description-swift.property","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/listdatastructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/listdatastructure\/codingkeys","title":"ListDataStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/listdatastructure","title":"ListDataStructure","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/location\/==(_:_:)","title":"static func == (Location, Location) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/location\/init(city:district:mapcoordinate:street:)","title":"init(city: Place, district: Place?, mapCoordinate: CLLocationCoordinate2D?, street: String?)","type":"init"},{"path":"\/documentation\/divar\/location\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/location\/approximatecoordinate","title":"var approximateCoordinate: CLLocationCoordinate2D?","type":"property"},{"path":"\/documentation\/divar\/location\/city","title":"let city: Place","type":"property"},{"path":"\/documentation\/divar\/location\/displaytext","title":"var displayText: String?","type":"property"},{"path":"\/documentation\/divar\/location\/district","title":"var district: Place?","type":"property"},{"path":"\/documentation\/divar\/location\/mapcoordinate","title":"var mapCoordinate: CLLocationCoordinate2D?","type":"property"},{"path":"\/documentation\/divar\/location\/radius","title":"var radius: Double?","type":"property"},{"path":"\/documentation\/divar\/location\/street","title":"var street: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/location\/codingkeys\/city","title":"case city","type":"case"},{"path":"\/documentation\/divar\/location\/codingkeys\/displaytext","title":"case displayText","type":"case"},{"path":"\/documentation\/divar\/location\/codingkeys\/district","title":"case district","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/location\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/location\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/location\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/location\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/location\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/location\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/location\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/location\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/location\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/location\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/location\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/location\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/location\/codingkeys","title":"Location.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/location\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/location\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/location\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/location","title":"Location","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/logloadpostpagemodel\/init(newpostscount:tokens:lastpostdate:tabscount:tabstype:tabstext:)","title":"init(newPostsCount: Int, tokens: [String?]?, lastPostDate: CLongLong, tabsCount: Int, tabsType: Int?, tabsText: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/logloadpostpagemodel\/lastpostdate","title":"let lastPostDate: CLongLong","type":"property"},{"path":"\/documentation\/divar\/logloadpostpagemodel\/newpostscount","title":"let newPostsCount: Int","type":"property"},{"path":"\/documentation\/divar\/logloadpostpagemodel\/tabscount","title":"let tabsCount: Int","type":"property"},{"path":"\/documentation\/divar\/logloadpostpagemodel\/tabstext","title":"let tabsText: String?","type":"property"},{"path":"\/documentation\/divar\/logloadpostpagemodel\/tabstype","title":"let tabsType: Int?","type":"property"},{"path":"\/documentation\/divar\/logloadpostpagemodel\/tokens","title":"let tokens: [String?]?","type":"property"}],"path":"\/documentation\/divar\/logloadpostpagemodel","title":"LogLoadPostPageModel","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/==(_:_:)","title":"static func == (MainCategory, MainCategory) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/maincategory\/init(widget:templateid:fields:postcategories:)","title":"init(widget: String?, templateId: Int?, fields: CategoryFields, postCategories: [PostCategory])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/fields","title":"let fields: CategoryFields","type":"property"},{"path":"\/documentation\/divar\/maincategory\/postcategories","title":"var postCategories: [PostCategory]","type":"property"},{"path":"\/documentation\/divar\/maincategory\/templateid","title":"let templateId: Int?","type":"property"},{"path":"\/documentation\/divar\/maincategory\/widget","title":"let widget: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/getparentslug(_:parent:index:)","title":"func getParentSlug(String, parent: MainCategory, index: Int) -> String","type":"method"},{"path":"\/documentation\/divar\/maincategory\/topostcategory(_:with:)","title":"func toPostCategory([MainCategory]?, with: MainCategory)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/codingkeys\/fields","title":"case fields","type":"case"},{"path":"\/documentation\/divar\/maincategory\/codingkeys\/templateid","title":"case templateId","type":"case"},{"path":"\/documentation\/divar\/maincategory\/codingkeys\/widget","title":"case widget","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/maincategory\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/maincategory\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/maincategory\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/maincategory\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/maincategory\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/maincategory\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/maincategory\/codingkeys","title":"MainCategory.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/maincategory\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/maincategory\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/maincategory","title":"MainCategory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/makretplacequickeditpostslistrequest\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/makretplacequickeditpostslistrequest\/init(pagination:defaultpagination:)","title":"init(pagination: Pagination, defaultPagination: Pagination)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/makretplacequickeditpostslistrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/makretplacequickeditpostslistrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/makretplacequickeditpostslistrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/makretplacequickeditpostslistrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/makretplacequickeditpostslistrequest","title":"MakretplaceQuickEditPostsListRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/makretplacequickeditpostslistrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/makretplacequickeditpostslistrequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/makretplacequickeditpostslistrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/makretplacequickeditpostslistrequestbuilder","title":"MakretplaceQuickEditPostsListRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mapactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> MapActionHandler","type":"method"}],"path":"\/documentation\/divar\/mapactionbuilder","title":"MapActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mapactionhandlerimpl\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/mapactionhandlerimpl\/init(flow:)","title":"init(flow: BaseFlowController?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mapactionhandlerimpl\/flow","title":"var flow: BaseFlowController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapactionhandlerimpl\/openmapbottomsheet(_:)","title":"func openMapBottomSheet(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/mapactionhandlerimpl","title":"MapActionHandlerImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> MarketPlaceActionHandler","type":"method"}],"path":"\/documentation\/divar\/marketplaceactionbuilder","title":"MarketPlaceActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceassistantmanagementrequest\/init(storetoken:)","title":"init(storeToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceassistantmanagementrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplaceassistantmanagementrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/marketplaceassistantmanagementrequest","title":"MarketplaceAssistantManagementRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceassistantmanagementrequestbuilder\/init(storetoken:)","title":"init(storeToken: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceassistantmanagementrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplaceassistantmanagementrequestbuilder","title":"MarketplaceAssistantManagementRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceassistantpagerequest\/init(phonenumber:)","title":"init(phoneNumber: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceassistantpagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplaceassistantpagerequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/marketplaceassistantpagerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/marketplaceassistantpagerequest","title":"MarketplaceAssistantPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceassistantpagerequestbuilder\/init(phonenumber:)","title":"init(phoneNumber: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceassistantpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplaceassistantpagerequestbuilder","title":"MarketplaceAssistantPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacebulkladderrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacebulkladderrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacebulkladderrequest\/hasmaxseletablelimit","title":"var hasMaxSeletableLimit: Bool","type":"property"},{"path":"\/documentation\/divar\/marketplacebulkladderrequest\/maxselectableitems","title":"var maxSelectableItems: Int32?","type":"property"},{"path":"\/documentation\/divar\/marketplacebulkladderrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacebulkladderrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/marketplacebulkladderrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/marketplacebulkladderrequest","title":"MarketplaceBulkLadderRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacebulkladdersubmitrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacebulkladdersubmitrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacebulkladdersubmitrequest\/method","title":"var method: HTTPMethod","type":"property"},{"path":"\/documentation\/divar\/marketplacebulkladdersubmitrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacebulkladdersubmitrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/marketplacebulkladdersubmitrequest\/path","title":"var path: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacebulkladdersubmitrequest\/settokens(tokens:)","title":"func setTokens(tokens: [String])","type":"method"}],"path":"\/documentation\/divar\/marketplacebulkladdersubmitrequest","title":"MarketplaceBulkLadderSubmitRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacecontactconfig\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacecontactconfig\/hasbookmark","title":"var hasBookmark: Bool","type":"property"},{"path":"\/documentation\/divar\/marketplacecontactconfig\/hasheader","title":"var hasHeader: Bool","type":"property"},{"path":"\/documentation\/divar\/marketplacecontactconfig\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/marketplacecontactconfig\/usertype","title":"var userType: UserType","type":"property"}],"path":"\/documentation\/divar\/marketplacecontactconfig","title":"MarketplaceContactConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceeditstoredetails\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/marketplaceeditstoredetails\/init(path:pagination:)","title":"init(path: String, pagination: Pagination)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceeditstoredetails\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplaceeditstoredetails\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/marketplaceeditstoredetails","title":"MarketplaceEditStoreDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceeditstoredetailsrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceeditstoredetailsrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplaceeditstoredetailsrequestbuilder","title":"MarketplaceEditStoreDetailsRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacefeatureslistrequest\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/marketplacefeatureslistrequest\/init(pagination:)","title":"init(pagination: Pagination)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacefeatureslistrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacefeatureslistrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/marketplacefeatureslistrequest","title":"MarketplaceFeaturesListRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacefeatureslistrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacefeatureslistrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplacefeatureslistrequestbuilder","title":"MarketplaceFeaturesListRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacefeedbackoptionspagerequest\/init(posttoken:storetoken:)","title":"init(postToken: String, storeToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacefeedbackoptionspagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacefeedbackoptionspagerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/marketplacefeedbackoptionspagerequest","title":"MarketplaceFeedbackOptionsPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacefeedbackoptionspagerequestbuilder\/init(posttoken:storetoken:)","title":"init(postToken: String, storeToken: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacefeedbackoptionspagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplacefeedbackoptionspagerequestbuilder","title":"MarketplaceFeedbackOptionsPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceformactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceformactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> MarketplaceFormActionHandler","type":"method"}],"path":"\/documentation\/divar\/marketplaceformactionbuilder","title":"MarketplaceFormActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacelandingpagerequestbuilder\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacelandingpagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacelandingpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplacelandingpagerequestbuilder","title":"MarketplaceLandingPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacemanagementpagerequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacemanagementpagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacemanagementpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplacemanagementpagerequestbuilder","title":"MarketplaceManagementPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepostfeedbacklistrequest\/init(posttoken:)","title":"init(postToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepostfeedbacklistrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacepostfeedbacklistrequest\/method","title":"var method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/marketplacepostfeedbacklistrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacepostfeedbacklistrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/marketplacepostfeedbacklistrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/marketplacepostfeedbacklistrequest","title":"MarketplacePostFeedbackListRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepostfeedbacklistrequestbuilder\/init(posttoken:)","title":"init(postToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepostfeedbacklistrequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepostfeedbacklistrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplacepostfeedbacklistrequestbuilder","title":"MarketplacePostFeedbackListRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepostsmanagementrequest\/init(storetoken:)","title":"init(storeToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepostsmanagementrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacepostsmanagementrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/marketplacepostsmanagementrequest","title":"MarketplacePostsManagementRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepostsmanagementrequestbuilder\/init(storetoken:)","title":"init(storeToken: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepostsmanagementrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplacepostsmanagementrequestbuilder","title":"MarketplacePostsManagementRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepriceactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacepriceactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> MarketplacePriceActionHandler","type":"method"}],"path":"\/documentation\/divar\/marketplacepriceactionbuilder","title":"MarketplacePriceActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacequickeditpostactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacequickeditpostactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> MarketplaceQuickEditPostActionHandler","type":"method"}],"path":"\/documentation\/divar\/marketplacequickeditpostactionbuilder","title":"MarketplaceQuickEditPostActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceregisteractionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceregisteractionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> MarketplaceRegisterActionHandler","type":"method"}],"path":"\/documentation\/divar\/marketplaceregisteractionbuilder","title":"MarketplaceRegisterActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceregisterstoredetails\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/marketplaceregisterstoredetails\/init(path:pagination:)","title":"init(path: String, pagination: Pagination)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceregisterstoredetails\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplaceregisterstoredetails\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/marketplaceregisterstoredetails","title":"MarketplaceRegisterStoreDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceregisterstoredetailsrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplaceregisterstoredetailsrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplaceregisterstoredetailsrequestbuilder","title":"MarketplaceRegisterStoreDetailsRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestoreprizerequest\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/marketplacestoreprizerequest\/init(pagination:)","title":"init(pagination: Pagination)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestoreprizerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacestoreprizerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/marketplacestoreprizerequest","title":"MarketplaceStorePrizeRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestoreprizerequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestoreprizerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplacestoreprizerequestbuilder","title":"MarketplaceStorePrizeRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestorestatspagerequest\/init(storetoken:)","title":"init(storeToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestorestatspagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacestorestatspagerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/marketplacestorestatspagerequest","title":"MarketplaceStoreStatsPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestorestatspagerequestbuilder\/init(storetoken:)","title":"init(storeToken: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestorestatspagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplacestorestatspagerequestbuilder","title":"MarketplaceStoreStatsPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestoreslistrequest\/init(payload:)","title":"init(payload: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestoreslistrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacestoreslistrequest\/method","title":"var method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/marketplacestoreslistrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/marketplacestoreslistrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/marketplacestoreslistrequest\/parameters","title":"var parameters: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/marketplacestoreslistrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/marketplacestoreslistrequest","title":"MarketplaceStoresListRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestoreslistrequestbuilder\/init(payload:)","title":"init(payload: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestoreslistrequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/marketplacestoreslistrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/marketplacestoreslistrequestbuilder","title":"MarketplaceStoresListRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mechaniccarblogpostrequest\/init(_:)","title":"init(Widgets_MechanicCarBlogPostPayload)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mechaniccarblogpostrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/mechaniccarblogpostrequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/mechaniccarblogpostrequest\/payload","title":"let payload: Widgets_MechanicCarBlogPostPayload","type":"property"}],"path":"\/documentation\/divar\/mechaniccarblogpostrequest","title":"MechanicCarBlogPostRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mechaniccarblogpostrequestbuilder\/init(_:)","title":"init(Widgets_MechanicCarBlogPostPayload)","type":"init"},{"path":"\/documentation\/divar\/mechaniccarblogpostrequestbuilder\/init(brand:model:)","title":"init(brand: String, model: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mechaniccarblogpostrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/mechaniccarblogpostrequestbuilder","title":"MechanicCarBlogPostRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/messagereplymodel\/init(fromme:preview:data:type:id:sender:censored:)","title":"init(fromMe: Bool, preview: String, data: MessageData, type: MessageType, id: String, sender: String?, censored: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/censored","title":"let censored: Bool?","type":"property"},{"path":"\/documentation\/divar\/messagereplymodel\/data","title":"let data: MessageData","type":"property"},{"path":"\/documentation\/divar\/messagereplymodel\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/divar\/messagereplymodel\/fromme","title":"let fromMe: Bool","type":"property"},{"path":"\/documentation\/divar\/messagereplymodel\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/divar\/messagereplymodel\/preview","title":"let preview: String?","type":"property"},{"path":"\/documentation\/divar\/messagereplymodel\/sender","title":"let sender: String?","type":"property"},{"path":"\/documentation\/divar\/messagereplymodel\/type","title":"let type: MessageType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/censored","title":"case censored","type":"case"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/data","title":"case data","type":"case"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/fromme","title":"case fromMe","type":"case"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/preview","title":"case preview","type":"case"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/sender","title":"case sender","type":"case"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/messagereplymodel\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagereplymodel\/codingkeys","title":"MessageReplyModel.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/databasevalue","title":"var databaseValue: DatabaseValue","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fetchset(_:_:)","title":"static func fetchSet<R>(Database, R) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fetchset(_:arguments:adapter:)","title":"static func fetchSet(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fetchset(_:sql:arguments:adapter:)","title":"static func fetchSet(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fromdatabasevalue(_:)-7pzfu","title":"static func fromDatabaseValue(DatabaseValue) -> MessageReplyModel?","type":"method"},{"path":"\/documentation\/divar\/messagereplymodel\/fromdatabasevalue(_:)-7v4he","title":"static func fromDatabaseValue(DatabaseValue) -> Self?","type":"method"}],"path":"\/documentation\/divar\/messagereplymodel\/databasevalueconvertible-implementations","title":"DatabaseValueConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/messagereplymodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/sqlexpression","title":"var sqlExpression: SQLExpression","type":"property"}],"path":"\/documentation\/divar\/messagereplymodel\/sqlexpressible-implementations","title":"SQLExpressible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagereplymodel\/bind(to:at:)","title":"func bind(to: SQLiteStatement, at: CInt) -> CInt","type":"method"}],"path":"\/documentation\/divar\/messagereplymodel\/statementbinding-implementations","title":"StatementBinding Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagereplymodel","title":"MessageReplyModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/metalimits\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/metalimits\/init(maxmultideletecout:file:nicknamelimits:limitmodifyafterseen:modifytimelimit:smartsuggestion:)","title":"init(maxMultiDeleteCout: Int?, file: FileLimits?, nicknameLimits: NicknameLimits?, limitModifyAfterSeen: Bool?, modifyTimeLimit: TimeInterval?, smartSuggestion: SmartSuggestionLimits?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/metalimits\/file","title":"let file: FileLimits?","type":"property"},{"path":"\/documentation\/divar\/metalimits\/limitmodifyafterseen","title":"let limitModifyAfterSeen: Bool?","type":"property"},{"path":"\/documentation\/divar\/metalimits\/maxmultideletecout","title":"let maxMultiDeleteCout: Int?","type":"property"},{"path":"\/documentation\/divar\/metalimits\/modifytimelimit","title":"let modifyTimeLimit: TimeInterval?","type":"property"},{"path":"\/documentation\/divar\/metalimits\/nicknamelimits","title":"let nicknameLimits: NicknameLimits?","type":"property"},{"path":"\/documentation\/divar\/metalimits\/smartsuggestion","title":"let smartSuggestion: SmartSuggestionLimits?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/file","title":"case file","type":"case"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/limitmodifyafterseen","title":"case limitModifyAfterSeen","type":"case"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/maxmultideletecout","title":"case maxMultiDeleteCout","type":"case"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/modifytimelimit","title":"case modifyTimeLimit","type":"case"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/nicknamelimits","title":"case nicknameLimits","type":"case"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/smartsuggestion","title":"case smartSuggestion","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/metalimits\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/metalimits\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/metalimits\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/metalimits\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/metalimits\/codingkeys","title":"MetaLimits.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/metalimits","title":"MetaLimits","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/init(slug:)","title":"init(slug: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/slug","title":"var slug: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/mobilezeropricemodel\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/init(row:)","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchall(_:keys:)-4bwao","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchall(_:keys:)-dqww","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchcursor(_:keys:)-5802t","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchcursor(_:keys:)-c7d3","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchone(_:key:)-29xaq","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchone(_:key:)-684j6","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"}],"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/mobilezeropricemodel\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/mobilezeropricemodel\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/mobilezeropricemodel\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/annotated(with:)-1hyu6","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/annotated(with:)-28xp2","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/annotated(with:)-2i0gi","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/annotated(with:)-6p3ng","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/belongsto(_:key:using:)-31nft","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/belongsto(_:key:using:)-7jna0","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/deleteall(_:keys:)-5sqh6","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/deleteall(_:keys:)-7lj2w","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/deleteone(_:key:)-6y0aw","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/deleteone(_:key:)-702u7","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/exists(_:key:)-7g0ty","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/exists(_:key:)-7gdt9","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/filter(_:)-2574v","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/filter(_:)-2nqgs","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/filter(key:)-2qkjf","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/filter(key:)-9aiac","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/filter(keys:)-326na","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/filter(keys:)-8tp01","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/hasmany(_:key:using:)-11pr5","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/hasmany(_:key:using:)-6jyeq","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/hasone(_:key:using:)-7b3jx","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/hasone(_:key:using:)-8i341","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/order(_:)-3lsoi","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/order(_:)-4qxmq","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/select(_:)-6in3s","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/select(_:)-7egfl","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/select(_:as:)-9xwx4","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/select(_:as:)-aegq","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/mobilezeropricemodel\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/mobilezeropricemodel\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mobilezeropricemodel","title":"MobileZeroPriceModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/move\/init(item:fromindex:toindex:)","title":"init(item: T, fromIndex: Int, toIndex: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/move\/fromindex","title":"let fromIndex: Int","type":"property"},{"path":"\/documentation\/divar\/move\/item","title":"let item: T","type":"property"},{"path":"\/documentation\/divar\/move\/toindex","title":"let toIndex: Int","type":"property"}],"path":"\/documentation\/divar\/move","title":"Move","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mydealerrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydealerrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/mydealerrequestbuilder","title":"MyDealerRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivaractionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivaractionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> MyDivarActionHandler","type":"method"}],"path":"\/documentation\/divar\/mydivaractionbuilder","title":"MyDivarActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarrequest\/grpcpath","title":"var gRPCPath: String","type":"property"},{"path":"\/documentation\/divar\/mydivarrequest\/message","title":"var message: Message?","type":"property"},{"path":"\/documentation\/divar\/mydivarrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/mydivarrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/mydivarrequest","title":"MyDivarRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mydivarrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> GRPCWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/mydivarrequestbuilder","title":"MyDivarRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/myjobspanelrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/myjobspanelrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/myjobspanelrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/myjobspanelrequest","title":"MyJobsPanelRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/myjobspanelrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/myjobspanelrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/myjobspanelrequestbuilder","title":"MyJobsPanelRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mymarketplacerequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mymarketplacerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/mymarketplacerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/mymarketplacerequest","title":"MyMarketplaceRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/mymarketplacerequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mymarketplacerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/mymarketplacerequestbuilder","title":"MyMarketplaceRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/myrealestaterequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/myrealestaterequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/myrealestaterequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/myrealestaterequest","title":"MyRealEstateRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/myrealestaterequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/myrealestaterequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/myrealestaterequestbuilder","title":"MyRealEstateRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/nationalidinput\/init(service:_:)","title":"init(service: FraudProtocol, NumberInputModel)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/nationalidinput\/model","title":"var model: NumberInputModel","type":"property"},{"path":"\/documentation\/divar\/nationalidinput\/service","title":"let service: FraudProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/nationalidinput\/buttonclicked(vc:value:)","title":"func buttonClicked(vc: NumberInputViewController, value: String?)","type":"method"}],"path":"\/documentation\/divar\/nationalidinput","title":"NationalIdInput","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknamelimits\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/nicknamelimits\/init(minlength:maxlength:)","title":"init(minLength: Int?, maxLength: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknamelimits\/maxlength","title":"let maxLength: Int?","type":"property"},{"path":"\/documentation\/divar\/nicknamelimits\/minlength","title":"let minLength: Int?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/maxlength","title":"case maxLength","type":"case"},{"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/minlength","title":"case minLength","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/nicknamelimits\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/nicknamelimits\/codingkeys","title":"NicknameLimits.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/nicknamelimits","title":"NicknameLimits","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/noteconfig\/init(enabled:syncwithserver:)","title":"init(enabled: Bool?, syncWithServer: Bool?)","type":"init"},{"path":"\/documentation\/divar\/noteconfig\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/noteconfig\/enabled","title":"let enabled: Bool?","type":"property"},{"path":"\/documentation\/divar\/noteconfig\/syncwithserver","title":"let syncWithServer: Bool?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/noteconfig\/codingkeys\/enabled","title":"case enabled","type":"case"},{"path":"\/documentation\/divar\/noteconfig\/codingkeys\/syncwithserver","title":"case syncWithServer","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/noteconfig\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/noteconfig\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/noteconfig\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/noteconfig\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/noteconfig\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/noteconfig\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/noteconfig\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noteconfig\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/noteconfig\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/noteconfig\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noteconfig\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/noteconfig\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/noteconfig\/codingkeys","title":"NoteConfig.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/noteconfig","title":"NoteConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/noterowmodel\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/noterowmodel\/init(title:)","title":"init(title: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/noterowmodel\/title","title":"var title: String?","type":"property"}],"path":"\/documentation\/divar\/noterowmodel","title":"NoteRowModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/notificationactionloghandler\/init(payload:rawplugservice:)","title":"init(payload: UniversalNotificationPayload, rawPlugService: RawPlugService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/notificationactionloghandler\/payload","title":"let payload: UniversalNotificationPayload","type":"property"},{"path":"\/documentation\/divar\/notificationactionloghandler\/rawplugservice","title":"let rawPlugService: RawPlugService","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notificationactionloghandler\/logchatnotification(state:ispostchi:isinsideapp:)","title":"func logChatNotification(state: NotificationState, isPostchi: Bool, isInsideApp: Bool)","type":"method"},{"path":"\/documentation\/divar\/notificationactionloghandler\/lognotification(state:)","title":"func logNotification(state: NotificationState)","type":"method"},{"path":"\/documentation\/divar\/notificationactionloghandler\/lognotificationaction(state:isinsideapp:)","title":"func logNotificationAction(state: NotificationState, isInsideApp: Bool)","type":"method"}],"path":"\/documentation\/divar\/notificationactionloghandler","title":"NotificationActionLogHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numberinputmodel\/init(pagetitle:title:description:buttontitle:textfieldplaceholder:textfieldkeyboardtype:subtitle:)","title":"init(pageTitle: String, title: String, description: String, buttonTitle: String, textfieldPlaceholder: String?, textfieldKeyboardType: UIKeyboardType, subtitle: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numberinputmodel\/buttontitle","title":"var buttonTitle: String","type":"property"},{"path":"\/documentation\/divar\/numberinputmodel\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/divar\/numberinputmodel\/pagetitle","title":"var pageTitle: String","type":"property"},{"path":"\/documentation\/divar\/numberinputmodel\/subtitle","title":"var subtitle: String","type":"property"},{"path":"\/documentation\/divar\/numberinputmodel\/textfieldplaceholder","title":"var textFieldPlaceholder: String?","type":"property"},{"path":"\/documentation\/divar\/numberinputmodel\/textfieldkeyboardtype","title":"var textfieldKeyboardType: UIKeyboardType","type":"property"},{"path":"\/documentation\/divar\/numberinputmodel\/title","title":"var title: String","type":"property"}],"path":"\/documentation\/divar\/numberinputmodel","title":"NumberInputModel","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecelldescriptionmodel\/==(_:_:)","title":"static func == (NumberTextFieldPageCellDescriptionModel, NumberTextFieldPageCellDescriptionModel) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecelldescriptionmodel\/init(description:)","title":"init(description: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecelldescriptionmodel\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagecelldescriptionmodel\/identifier","title":"let identifier: NumberTextFieldPageCellIdentidier","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecelldescriptionmodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecelldescriptionmodel\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagecelldescriptionmodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numbertextfieldpagecelldescriptionmodel","title":"NumberTextFieldPageCellDescriptionModel","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagetextconvertedcell\/==(_:_:)","title":"static func == (NumberTextFieldPageTextConvertedCell, NumberTextFieldPageTextConvertedCell) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagetextconvertedcell\/init(title:)","title":"init(title: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagetextconvertedcell\/identifier","title":"let identifier: NumberTextFieldPageCellIdentidier","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagetextconvertedcell\/title","title":"var title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagetextconvertedcell\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagetextconvertedcell\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagetextconvertedcell\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numbertextfieldpagetextconvertedcell","title":"NumberTextFieldPageTextConvertedCell","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagetextfieldcellmodel\/==(_:_:)","title":"static func == (NumberTextFieldPageTextFieldCellModel, NumberTextFieldPageTextFieldCellModel) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagetextfieldcellmodel\/init(title:placeholder:subtitle:textfieldtext:)","title":"init(title: String, placeholder: String, subtitle: String, textFieldText: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagetextfieldcellmodel\/identifier","title":"let identifier: NumberTextFieldPageCellIdentidier","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagetextfieldcellmodel\/placeholder","title":"var placeholder: String","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagetextfieldcellmodel\/subtitle","title":"var subtitle: String","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagetextfieldcellmodel\/textfieldtext","title":"var textFieldText: String","type":"property"},{"path":"\/documentation\/divar\/numbertextfieldpagetextfieldcellmodel\/title","title":"var title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagetextfieldcellmodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagetextfieldcellmodel\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagetextfieldcellmodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numbertextfieldpagetextfieldcellmodel","title":"NumberTextFieldPageTextFieldCellModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/octetstreamheaders\/init(user:)","title":"init(user: User)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/octetstreamheaders\/user","title":"var user: User","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/octetstreamheaders\/getheaders(withextraheaders:)","title":"func getHeaders(withExtraHeaders: [String : String]?) -> [String : String]","type":"method"}],"path":"\/documentation\/divar\/octetstreamheaders","title":"OctetStreamHeaders","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/openfeebackpayload\/init(feedback:handler:)","title":"init(feedback: FeedBackDataStructure, handler: FeedBackVCDelegate)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/openfeebackpayload\/feedback","title":"var feedback: FeedBackDataStructure","type":"property"},{"path":"\/documentation\/divar\/openfeebackpayload\/handler","title":"var handler: FeedBackVCDelegate","type":"property"}],"path":"\/documentation\/divar\/openfeebackpayload","title":"OpenFeebackPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/openpageactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/openpageactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> OpenPageActionHandler","type":"method"}],"path":"\/documentation\/divar\/openpageactionbuilder","title":"OpenPageActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/openpagerequest\/init(_:)","title":"init(Widgets_OpenPagePayload)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/openpagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/openpagerequest\/filters","title":"var filters: Google_Protobuf_Struct","type":"property"},{"path":"\/documentation\/divar\/openpagerequest\/method","title":"var method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/openpagerequest\/openpageabstractdata","title":"var openPageAbstractData: Data","type":"property"},{"path":"\/documentation\/divar\/openpagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/openpagerequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/openpagerequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/openpagerequest\/payload","title":"var payload: Widgets_OpenPagePayload","type":"property"},{"path":"\/documentation\/divar\/openpagerequest\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/divar\/openpagerequest\/schemarefetchonly","title":"var schemaRefetchOnly: Bool","type":"property"},{"path":"\/documentation\/divar\/openpagerequest\/searchable","title":"var searchable: Bool","type":"property"},{"path":"\/documentation\/divar\/openpagerequest\/tabidentifier","title":"var tabIdentifier: String?","type":"property"}],"path":"\/documentation\/divar\/openpagerequest","title":"OpenPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/openpagerequestbuilder\/init(_:)","title":"init(Widgets_OpenPagePayload)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/openpagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/openpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"},{"path":"\/documentation\/divar\/openpagerequestbuilder\/createpredictable(withprediction:)","title":"func createPredictable(withPrediction: String) -> OpenPageRequestBuilder","type":"method"},{"path":"\/documentation\/divar\/openpagerequestbuilder\/createrequestbuilder(withprediction:)","title":"func createRequestBuilder(withPrediction: String) -> OpenPageRequestBuilder","type":"method"},{"path":"\/documentation\/divar\/openpagerequestbuilder\/decoraterequestbuilder(with:)","title":"func decorateRequestBuilder(with: String) -> RESTWidgetBasedRequestBuilder & WidgetBasedConfigurable","type":"method"}],"path":"\/documentation\/divar\/openpagerequestbuilder","title":"OpenPageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/operatormanagementrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/operatormanagementrequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/operatormanagementrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/operatormanagementrequestbuilder","title":"OperatorManagementRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/operatormanageractionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/operatormanageractionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> OperatorManagementActionHandler","type":"method"}],"path":"\/documentation\/divar\/operatormanageractionbuilder","title":"OperatorManagerActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/optionalfield\/init(_:)","title":"init(Value?)","type":"init"},{"path":"\/documentation\/divar\/optionalfield\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/optionalfield\/wrappedvalue","title":"var wrappedValue: Value?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/optionalfield\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/divar\/optionalfield","title":"OptionalField","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/options\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/options\/init(slug:displaystring:)","title":"init(slug: String?, displayString: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/options\/displaystring","title":"let displayString: String?","type":"property"},{"path":"\/documentation\/divar\/options\/slug","title":"let slug: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/options\/codingkeys\/displaystring","title":"case displayString","type":"case"},{"path":"\/documentation\/divar\/options\/codingkeys\/slug","title":"case slug","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/options\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/options\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/options\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/options\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/options\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/options\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/options\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/options\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/options\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/options\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/options\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/options\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/options\/codingkeys","title":"Options.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/options","title":"Options","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/outsidelinkactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/outsidelinkactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> OutsideLinkActionHandler","type":"method"}],"path":"\/documentation\/divar\/outsidelinkactionbuilder","title":"OutsideLinkActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/phassettouiimageconvertor\/init(imagedata:)","title":"init?(imageData: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/phassettouiimageconvertor\/image","title":"let image: UIImage","type":"property"}],"path":"\/documentation\/divar\/phassettouiimageconvertor","title":"PHAssetToUIImageConvertor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/packagemodel\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"path":"\/documentation\/divar\/packagemodel\/init(title:lefttext:leftstrikethroughtext:description:buttonsubtitle:subtitle:)","title":"init(title: String?, leftText: String?, leftStrikeThroughText: String?, description: String?, buttonSubtitle: String?, subtitle: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/packagemodel\/buttonsubtitle","title":"let buttonSubtitle: String?","type":"property"},{"path":"\/documentation\/divar\/packagemodel\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/divar\/packagemodel\/leftstrikethroughtext","title":"let leftStrikeThroughText: String?","type":"property"},{"path":"\/documentation\/divar\/packagemodel\/lefttext","title":"let leftText: String?","type":"property"},{"path":"\/documentation\/divar\/packagemodel\/subtitle","title":"let subtitle: String?","type":"property"},{"path":"\/documentation\/divar\/packagemodel\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/divar\/packagemodel","title":"PackageModel","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalanimator\/constants\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalanimator\/constants\/defaulttransitionduration","title":"static let defaultTransitionDuration: TimeInterval","type":"property"}],"path":"\/documentation\/divar\/panmodalanimator\/constants","title":"PanModalAnimator.Constants","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalanimator\/init()","title":"init()","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalanimator\/animate(_:config:_:)","title":"static func animate(PanModalPresentable.AnimationBlockType, config: PanModalPresentable?, PanModalPresentable.AnimationCompletionType?)","type":"method"}],"path":"\/documentation\/divar\/panmodalanimator","title":"PanModalAnimator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> PaymentActionHandler","type":"method"}],"path":"\/documentation\/divar\/paymentactionbuilder","title":"PaymentActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentactionhandlerimpl\/init(flow:)","title":"init(flow: BaseFlowController)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentactionhandlerimpl\/flow","title":"var flow: BaseFlowController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentactionhandlerimpl\/startpayment(_:)","title":"func startPayment(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/paymentactionhandlerimpl","title":"PaymentActionHandlerImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/paymenthistoryrequest\/init(usertype:)","title":"init(userType: UserType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paymenthistoryrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/paymenthistoryrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/paymenthistoryrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/paymenthistoryrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/paymenthistoryrequest","title":"PaymentHistoryRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/paymenthistoryrequestbuilder\/init(usertype:)","title":"init(userType: UserType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paymenthistoryrequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/paymenthistoryrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/paymenthistoryrequestbuilder","title":"PaymentHistoryRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentredeemstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/paymentredeemstructure\/init(message:)","title":"init(message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paymentredeemstructure\/message","title":"let message: String?","type":"property"}],"path":"\/documentation\/divar\/paymentredeemstructure","title":"PaymentRedeemStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitorconfig\/init(enable:sentrysamplerate:sentrynetworktrackingenabled:)","title":"init(enable: Bool?, sentrySampleRate: Int?, sentryNetworkTrackingEnabled: Bool?)","type":"init"},{"path":"\/documentation\/divar\/performancemonitorconfig\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitorconfig\/enable","title":"let enable: Bool?","type":"property"},{"path":"\/documentation\/divar\/performancemonitorconfig\/sentrydividedrate","title":"var sentryDividedRate: Double?","type":"property"},{"path":"\/documentation\/divar\/performancemonitorconfig\/sentrynetworktrackingenabled","title":"let sentryNetworkTrackingEnabled: Bool?","type":"property"},{"path":"\/documentation\/divar\/performancemonitorconfig\/sentrysamplerate","title":"let sentrySampleRate: Int?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/enable","title":"case enable","type":"case"},{"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/sentrynetworktrackingenabled","title":"case sentryNetworkTrackingEnabled","type":"case"},{"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/sentrysamplerate","title":"case sentrySampleRate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/performancemonitorconfig\/codingkeys","title":"PerformanceMonitorConfig.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/performancemonitorconfig","title":"PerformanceMonitorConfig","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/camera\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/camera\/deniedtitle","title":"static var deniedTitle: String","type":"property"},{"path":"\/documentation\/divar\/permission\/camera\/requesttitle","title":"static var requestTitle: String","type":"property"},{"path":"\/documentation\/divar\/permission\/camera\/status","title":"static var status: Status","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/camera\/requestauthorize(completion:)","title":"static func requestAuthorize(completion: (Bool) -> Void)","type":"method"}],"path":"\/documentation\/divar\/permission\/camera","title":"Permission.Camera","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/location\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/location\/deniedtitle","title":"static var deniedTitle: String","type":"property"},{"path":"\/documentation\/divar\/permission\/location\/requesttitle","title":"static var requestTitle: String","type":"property"},{"path":"\/documentation\/divar\/permission\/location\/status","title":"static var status: Status","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/location\/requestauthorize(completion:)","title":"static func requestAuthorize(completion: (Bool) -> Void)","type":"method"}],"path":"\/documentation\/divar\/permission\/location","title":"Permission.Location","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/microphone\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/microphone\/deniedtitle","title":"static var deniedTitle: String","type":"property"},{"path":"\/documentation\/divar\/permission\/microphone\/requesttitle","title":"static var requestTitle: String","type":"property"},{"path":"\/documentation\/divar\/permission\/microphone\/status","title":"static var status: Status","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/microphone\/requestauthorize(completion:)","title":"static func requestAuthorize(completion: (Bool) -> Void)","type":"method"}],"path":"\/documentation\/divar\/permission\/microphone","title":"Permission.Microphone","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/photos\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/photos\/deniedtitle","title":"static var deniedTitle: String","type":"property"},{"path":"\/documentation\/divar\/permission\/photos\/requesttitle","title":"static var requestTitle: String","type":"property"},{"path":"\/documentation\/divar\/permission\/photos\/status","title":"static var status: Status","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/photos\/requestauthorize(completion:)","title":"static func requestAuthorize(completion: (Bool) -> Void)","type":"method"}],"path":"\/documentation\/divar\/permission\/photos","title":"Permission.Photos","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/remotenotification\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/remotenotification\/deniedtitle","title":"static var deniedTitle: String","type":"property"},{"path":"\/documentation\/divar\/permission\/remotenotification\/requesttitle","title":"static var requestTitle: String","type":"property"},{"path":"\/documentation\/divar\/permission\/remotenotification\/status","title":"static var status: Permission.Status","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/remotenotification\/requestauthorize(completion:)","title":"static func requestAuthorize(completion: (Bool) -> Void)","type":"method"}],"path":"\/documentation\/divar\/permission\/remotenotification","title":"Permission.RemoteNotification","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/init()","title":"init()","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/status\/authorized","title":"case authorized","type":"case"},{"path":"\/documentation\/divar\/permission\/status\/denied","title":"case denied","type":"case"},{"path":"\/documentation\/divar\/permission\/status\/notdetermined","title":"case notDetermined","type":"case"},{"path":"\/documentation\/divar\/permission\/status\/restricted","title":"case restricted","type":"case"},{"path":"\/documentation\/divar\/permission\/status\/undefined","title":"case undefined","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/status\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/permission\/status\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/permission\/status\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/permission\/status","title":"Permission.Status","type":"enum"}],"path":"\/documentation\/divar\/permission","title":"Permission","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/personalcontactconfig\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/personalcontactconfig\/hasbookmark","title":"var hasBookmark: Bool","type":"property"},{"path":"\/documentation\/divar\/personalcontactconfig\/hasheader","title":"var hasHeader: Bool","type":"property"},{"path":"\/documentation\/divar\/personalcontactconfig\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/personalcontactconfig\/usertype","title":"var userType: UserType","type":"property"}],"path":"\/documentation\/divar\/personalcontactconfig","title":"PersonalContactConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/phonenumberinput\/init(container:_:source:)","title":"init(container: PhoneNumberInputDIContainer, NumberInputModel, source: ActionLog_LoginSource)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/phonenumberinput\/model","title":"var model: NumberInputModel","type":"property"},{"path":"\/documentation\/divar\/phonenumberinput\/source","title":"var source: ActionLog_LoginSource","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/phonenumberinput\/buttonclicked(vc:value:)","title":"func buttonClicked(vc: NumberInputViewController, value: String?)","type":"method"},{"path":"\/documentation\/divar\/phonenumberinput\/isvalid(input:)","title":"func isValid(input: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/phonenumberinput\/isvalidrange(input:)","title":"func isValidRange(input: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/phonenumberinput\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/phonenumberinput","title":"PhoneNumberInput","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrowmodel\/==(_:_:)","title":"static func == (PickerRowModel, PickerRowModel) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrowmodel\/init(keys:values:selectedkey:selectedvalue:)","title":"init(keys: [String], values: [Any], selectedKey: String?, selectedValue: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrowmodel\/keys","title":"let keys: [String]","type":"property"},{"path":"\/documentation\/divar\/pickerrowmodel\/selectedkey","title":"var selectedKey: String?","type":"property"},{"path":"\/documentation\/divar\/pickerrowmodel\/selectedvalue","title":"var selectedValue: Any?","type":"property"},{"path":"\/documentation\/divar\/pickerrowmodel\/values","title":"let values: [Any]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrowmodel\/empty","title":"static var empty: PickerRowModel","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrowmodel\/convertdicttomodel(_:)","title":"static func convertDictToModel([String : String]) -> PickerRowModel","type":"method"},{"path":"\/documentation\/divar\/pickerrowmodel\/fillpickerenummodel(_:)","title":"static func fillPickerEnumModel(Schema) -> PickerRowModel","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrowmodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pickerrowmodel\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/pickerrowmodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/pickerrowmodel","title":"PickerRowModel","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/pictures\/==(_:_:)","title":"static func == (Pictures, Pictures) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pictures\/init(urlarray:)","title":"init(urlArray: [UIImage])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pictures\/urlarray","title":"var urlArray: [UIImage]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/pictures\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pictures\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/pictures\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/pictures","title":"Pictures","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/==(_:_:)","title":"static func == (Place, Place) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/place\/init(id:name:coordinate:radius:slug:)","title":"init(id: Int, name: String, coordinate: CLLocationCoordinate2D?, radius: Double, slug: String)","type":"init"},{"path":"\/documentation\/divar\/place\/init(place:)","title":"init(place: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/coordinate","title":"let coordinate: CLLocationCoordinate2D?","type":"property"},{"path":"\/documentation\/divar\/place\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/divar\/place\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/divar\/place\/radius","title":"let radius: Double","type":"property"},{"path":"\/documentation\/divar\/place\/slug","title":"let slug: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/createdefaultcity()","title":"static func createDefaultCity() -> Place","type":"method"},{"path":"\/documentation\/divar\/place\/fakeplace()","title":"static func fakePlace() -> Place","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/codingkeys\/centroid","title":"case centroid","type":"case"},{"path":"\/documentation\/divar\/place\/codingkeys\/enum","title":"case `enum`","type":"case"},{"path":"\/documentation\/divar\/place\/codingkeys\/enumname","title":"case enumName","type":"case"},{"path":"\/documentation\/divar\/place\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/place\/codingkeys\/latitude","title":"case latitude","type":"case"},{"path":"\/documentation\/divar\/place\/codingkeys\/longitude","title":"case longitude","type":"case"},{"path":"\/documentation\/divar\/place\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/divar\/place\/codingkeys\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/divar\/place\/codingkeys\/slug","title":"case slug","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/place\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/place\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/place\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/place\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/place\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/place\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/place\/codingkeys","title":"Place.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/place\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/place\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/place","title":"Place","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/placearray\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/placearray\/array","title":"var array: [Place]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/placearray\/codingkeys\/districts","title":"case districts","type":"case"},{"path":"\/documentation\/divar\/placearray\/codingkeys\/results","title":"case results","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/placearray\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/placearray\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/placearray\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/placearray\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/placearray\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/placearray\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/placearray\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/placearray\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/placearray\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/placearray\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/placearray\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/placearray\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/placearray\/codingkeys","title":"PlaceArray.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/placearray","title":"PlaceArray","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/popandperformactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/popandperformactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> PopAndPerformActionHandler","type":"method"}],"path":"\/documentation\/divar\/popandperformactionbuilder","title":"PopAndPerformActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/popandperformactionhandlerimpl\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/popandperformactionhandlerimpl\/init(flow:)","title":"init(flow: BaseFlowController?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/popandperformactionhandlerimpl\/flow","title":"var flow: BaseFlowController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/popandperformactionhandlerimpl\/perform(_:)","title":"func perform(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/popandperformactionhandlerimpl","title":"PopAndPerformActionHandlerImpl","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postcategory\/==(_:_:)","title":"static func == (PostCategory, PostCategory) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postcategory\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/postcategory\/init(parent_slug:title:slug:icon:)","title":"init(parent_slug: String?, title: String?, slug: String, icon: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcategory\/icon","title":"let icon: String?","type":"property"},{"path":"\/documentation\/divar\/postcategory\/parent_slug","title":"let parent_slug: String?","type":"property"},{"path":"\/documentation\/divar\/postcategory\/slug","title":"let slug: String","type":"property"},{"path":"\/documentation\/divar\/postcategory\/title","title":"let title: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/icon","title":"case icon","type":"case"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/parent_slug","title":"case parent_slug","type":"case"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/slug","title":"case slug","type":"case"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/title","title":"case title","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/postcategory\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postcategory\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcategory\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postcategory\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postcategory\/codingkeys","title":"PostCategory.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postcategory\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcategory\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postcategory\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postcategory","title":"PostCategory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postcontactmethod\/init(_:type:value:isgoodtime:indicator:hidephone:)","title":"init(String, type: PostGetContactsViewController.ContactInfoType, value: String, isGoodTime: Bool, indicator: SonnatImages?, hidePhone: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcontactmethod\/hidephone","title":"var hidePhone: Bool","type":"property"},{"path":"\/documentation\/divar\/postcontactmethod\/indicator","title":"var indicator: SonnatImages?","type":"property"},{"path":"\/documentation\/divar\/postcontactmethod\/isgoodtime","title":"var isGoodTime: Bool","type":"property"},{"path":"\/documentation\/divar\/postcontactmethod\/text","title":"var text: String","type":"property"},{"path":"\/documentation\/divar\/postcontactmethod\/type","title":"var type: PostGetContactsViewController.ContactInfoType","type":"property"},{"path":"\/documentation\/divar\/postcontactmethod\/value","title":"var value: String","type":"property"}],"path":"\/documentation\/divar\/postcontactmethod","title":"PostContactMethod","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postcontactsstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcontactsstructure\/chat","title":"var chat: Bool?","type":"property"},{"path":"\/documentation\/divar\/postcontactsstructure\/email","title":"var email: String?","type":"property"},{"path":"\/documentation\/divar\/postcontactsstructure\/hidephone","title":"var hidePhone: Bool?","type":"property"},{"path":"\/documentation\/divar\/postcontactsstructure\/isgoodtime","title":"var isGoodTime: Bool?","type":"property"},{"path":"\/documentation\/divar\/postcontactsstructure\/phone","title":"var phone: String?","type":"property"},{"path":"\/documentation\/divar\/postcontactsstructure\/phonenumberstring","title":"var phoneNumberString: String?","type":"property"},{"path":"\/documentation\/divar\/postcontactsstructure\/phonestring","title":"var phoneString: String?","type":"property"},{"path":"\/documentation\/divar\/postcontactsstructure\/telephone","title":"var telephone: String?","type":"property"},{"path":"\/documentation\/divar\/postcontactsstructure\/voip","title":"var voip: Bool?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/chat","title":"case chat","type":"case"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/email","title":"case email","type":"case"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/hidephone","title":"case hidePhone","type":"case"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/isgoodtime","title":"case isGoodTime","type":"case"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/phonenumberstring","title":"case phoneNumberString","type":"case"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/phonestring","title":"case phoneString","type":"case"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/telephone","title":"case telephone","type":"case"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/voip","title":"case voip","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postcontactsstructure\/codingkeys","title":"PostContactsStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/postcontactsstructure","title":"PostContactsStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postcreateconfig\/init(mngtoken:fortype:)","title":"init(mngToken: String?, forType: UserType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postcreateconfig\/fortype","title":"var forType: UserType","type":"property"},{"path":"\/documentation\/divar\/postcreateconfig\/isedit","title":"var isEdit: Bool","type":"property"},{"path":"\/documentation\/divar\/postcreateconfig\/mngtoken","title":"var mngToken: String?","type":"property"}],"path":"\/documentation\/divar\/postcreateconfig","title":"PostCreateConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postdatamodel\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postdatamodel\/action","title":"let action: PostWidgetAction?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/brandslug","title":"let brandSlug: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/changes","title":"let changes: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/desc","title":"let desc: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/filters","title":"let filters: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/haschat","title":"let hasChat: Bool?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/image","title":"let image: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/imagetoplefttag","title":"let imageTopLeftTag: TagOverlayModel?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/items","title":"let items: [PostDataModel]?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/link","title":"let link: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/mngtoken","title":"let mngToken: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/models","title":"let models: [PostDataModel]?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/normaltext","title":"let normalText: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/note","title":"var note: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/noticeaction","title":"let noticeAction: PostListWidgetAction?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/noticeicon","title":"let noticeIcon: BaseIcon?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/noticeimageurl","title":"let noticeImageUrl: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/noticetitle","title":"let noticeTitle: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/overlaytag","title":"let overlayTag: TagOverlayModel?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/payload","title":"let payload: PostDataPayload?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/pricestate","title":"let priceState: PriceRowState?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/redtext","title":"let redText: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/status","title":"let status: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/statuscolor","title":"let statusColor: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/statuscolordark","title":"let statusColorDark: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/statuscolorlight","title":"let statusColorLight: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/text","title":"let text: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/title","title":"let title: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/token","title":"let token: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/value","title":"let value: String?","type":"property"},{"path":"\/documentation\/divar\/postdatamodel\/visiblewhenfiltered","title":"let visibleWhenFiltered: Bool?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postdatamodel\/tosearchhistory()","title":"func toSearchHistory() -> SearchFilterHistory","type":"method"}],"path":"\/documentation\/divar\/postdatamodel","title":"PostDataModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postdatapayload\/init(json:)","title":"init?(json: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postdatapayload\/latitude","title":"let latitude: Double?","type":"property"},{"path":"\/documentation\/divar\/postdatapayload\/longitude","title":"let longitude: Double?","type":"property"},{"path":"\/documentation\/divar\/postdatapayload\/placename","title":"let placeName: String?","type":"property"},{"path":"\/documentation\/divar\/postdatapayload\/token","title":"let token: String?","type":"property"}],"path":"\/documentation\/divar\/postdatapayload","title":"PostDataPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailsactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailsactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> PostDetailsActionHandler","type":"method"}],"path":"\/documentation\/divar\/postdetailsactionbuilder","title":"PostDetailsActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailspreviewrequest\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailspreviewrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/postdetailspreviewrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/postdetailspreviewrequest","title":"PostDetailsPreviewRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailspreviewrequestbuilder\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailspreviewrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/postdetailspreviewrequestbuilder","title":"PostDetailsPreviewRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailsrequest\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailsrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/postdetailsrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/postdetailsrequest","title":"PostDetailsRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailsrequestbuilder\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailsrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/postdetailsrequestbuilder","title":"PostDetailsRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postget\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postget\/meta_version","title":"let meta_version: Int?","type":"property"},{"path":"\/documentation\/divar\/postget\/post","title":"let post: [String : Any]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postget\/codingkeys\/meta_version","title":"case meta_version","type":"case"},{"path":"\/documentation\/divar\/postget\/codingkeys\/post","title":"case post","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postget\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/postget\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/postget\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postget\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/postget\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/postget\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postget\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postget\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postget\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postget\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postget\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postget\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postget\/codingkeys","title":"PostGet.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/postget","title":"PostGet","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactrequest\/init(posttoken:)","title":"init(postToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/postgetcontactrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/postgetcontactrequest","title":"PostGetContactRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactrequestbuilder\/init(posttoken:)","title":"init(postToken: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postgetcontactrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/postgetcontactrequestbuilder","title":"PostGetContactRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postlist\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlist\/filterdata","title":"let filterData: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/postlist\/filtersetquerystring","title":"var filterSetQueryString: String?","type":"property"},{"path":"\/documentation\/divar\/postlist\/filtertranslation","title":"let filterTranslation: FilterTranslation?","type":"property"},{"path":"\/documentation\/divar\/postlist\/lastpostdate","title":"let lastPostDate: CLongLong?","type":"property"},{"path":"\/documentation\/divar\/postlist\/postlist","title":"let postList: [PostModel]?","type":"property"},{"path":"\/documentation\/divar\/postlist\/stickycategories","title":"let stickyCategories: [StickyCategory]?","type":"property"},{"path":"\/documentation\/divar\/postlist\/subtitle","title":"let subtitle: String?","type":"property"},{"path":"\/documentation\/divar\/postlist\/suggestionlist","title":"let suggestionList: [TagListSuggestion]?","type":"property"},{"path":"\/documentation\/divar\/postlist\/tablist","title":"let tabList: TabList?","type":"property"},{"path":"\/documentation\/divar\/postlist\/title","title":"let title: String?","type":"property"},{"path":"\/documentation\/divar\/postlist\/token","title":"let token: String?","type":"property"},{"path":"\/documentation\/divar\/postlist\/tokens","title":"var tokens: [String?]?","type":"property"},{"path":"\/documentation\/divar\/postlist\/userownsdealership","title":"let userOwnsDealership: Bool?","type":"property"}],"path":"\/documentation\/divar\/postlist","title":"PostList","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> PostListActionHandler","type":"method"}],"path":"\/documentation\/divar\/postlistactionbuilder","title":"PostListActionBuilder","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistcityfilterchangesinformation\/city\/init(cityid:name:parentid:isprovince:)","title":"init(cityID: String, name: String, parentID: String, isProvince: Bool)","type":"init"},{"path":"\/documentation\/divar\/postlistcityfilterchangesinformation\/city\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistcityfilterchangesinformation\/city\/cityid","title":"let cityID: String","type":"property"},{"path":"\/documentation\/divar\/postlistcityfilterchangesinformation\/city\/isprovince","title":"let isProvince: Bool","type":"property"},{"path":"\/documentation\/divar\/postlistcityfilterchangesinformation\/city\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/divar\/postlistcityfilterchangesinformation\/city\/parentid","title":"let parentID: String","type":"property"}],"path":"\/documentation\/divar\/postlistcityfilterchangesinformation\/city","title":"PostListCityFilterChangesInformation.City","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistcityfilterchangesinformation\/init(showwarning:showtooltip:cities:)","title":"init(showWarning: Bool, showTooltip: Bool, cities: [CityFilterChangesCityInformation])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistcityfilterchangesinformation\/cities","title":"let cities: [CityFilterChangesCityInformation]","type":"property"},{"path":"\/documentation\/divar\/postlistcityfilterchangesinformation\/showtooltip","title":"let showTooltip: Bool","type":"property"},{"path":"\/documentation\/divar\/postlistcityfilterchangesinformation\/showwarning","title":"let showWarning: Bool","type":"property"}],"path":"\/documentation\/divar\/postlistcityfilterchangesinformation","title":"PostListCityFilterChangesInformation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewmodelbuilder\/init(_:)","title":"init(BaseFlowController)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewmodelbuilder\/configuration","title":"var configuration: IntroConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistviewmodelbuilder\/build(delegate:)","title":"func build(delegate: PostListViewModelDelegate?) -> PostListViewModel","type":"method"}],"path":"\/documentation\/divar\/postlistviewmodelbuilder","title":"PostListViewModelBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistwidgetaction\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistwidgetaction\/fallbacklink","title":"var fallbackLink: String?","type":"property"},{"path":"\/documentation\/divar\/postlistwidgetaction\/payload","title":"var payload: Any?","type":"property"},{"path":"\/documentation\/divar\/postlistwidgetaction\/type","title":"var type: ActionEnum?","type":"property"}],"path":"\/documentation\/divar\/postlistwidgetaction","title":"PostListWidgetAction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanageactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanageactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> PostManageActionHandler","type":"method"}],"path":"\/documentation\/divar\/postmanageactionbuilder","title":"PostManageActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanagerequest\/init(managetoken:)","title":"init(manageToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanagerequest\/extraparameters","title":"var extraParameters: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/postmanagerequest\/managetoken","title":"var manageToken: String","type":"property"},{"path":"\/documentation\/divar\/postmanagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/postmanagerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/postmanagerequest","title":"PostManageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanagerequestbuilder\/init(managetoken:)","title":"init(manageToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postmanagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/postmanagerequestbuilder","title":"PostManageRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postmodel\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postmodel\/data","title":"var data: PostDataModel?","type":"property"},{"path":"\/documentation\/divar\/postmodel\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/divar\/postmodel\/postviewmodel","title":"var postViewModel: PostViewStructure","type":"property"},{"path":"\/documentation\/divar\/postmodel\/searchdata","title":"var searchData: SearchSuggestionDataModel?","type":"property"},{"path":"\/documentation\/divar\/postmodel\/widget","title":"var widget: Widgets_Widget?","type":"property"},{"path":"\/documentation\/divar\/postmodel\/widgetdata","title":"var widgetData: Message?","type":"property"},{"path":"\/documentation\/divar\/postmodel\/widgettype","title":"var widgetType: PostWidgetType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postmodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/divar\/postmodel\/==(_:_:)","title":"static func == (PostModel, PostModel) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postmodel\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postmodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postmodel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postmodel\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postmodel","title":"PostModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postmodelsresult\/init(posts:offset:emptysatemessage:)","title":"init(posts: [PostModel]?, offset: CLongLong?, emptySateMessage: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postmodelsresult\/emptysatemessage","title":"let emptySateMessage: String?","type":"property"},{"path":"\/documentation\/divar\/postmodelsresult\/offset","title":"let offset: CLongLong?","type":"property"},{"path":"\/documentation\/divar\/postmodelsresult\/posts","title":"let posts: [PostModel]?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postmodelsresult\/emptyresult","title":"static var emptyResult: PostModelsResult","type":"property"}],"path":"\/documentation\/divar\/postmodelsresult","title":"PostModelsResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/formstring","title":"var formString: String?","type":"property"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/url","title":"var url: URL?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/formstring","title":"case formString","type":"case"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/url","title":"case url","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postpaymentbankformstructure\/codingkeys","title":"PostPaymentBankFormStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/postpaymentbankformstructure","title":"PostPaymentBankFormStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/orderid","title":"var orderId: String?","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/price","title":"var price: String?","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/time","title":"var time: String?","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/unit","title":"var unit: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/orderid","title":"case orderId","type":"case"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/price","title":"case price","type":"case"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/source","title":"case source","type":"case"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/time","title":"case time","type":"case"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/title","title":"case title","type":"case"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/unit","title":"case unit","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postpaymenthistorystructure\/codingkeys","title":"PostPaymentHistoryStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/postpaymenthistorystructure","title":"PostPaymentHistoryStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentstructure\/init(id:)","title":"init(id: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentstructure\/available","title":"var available: Bool?","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/conflicts","title":"var conflicts: [String]?","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/desc","title":"var desc: String?","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/identifier","title":"var identifier: Int","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/mandatory","title":"var mandatory: Bool?","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/paid","title":"var paid: Bool?","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/payid","title":"var payID: Int?","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/price","title":"var price: Int?","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/reason","title":"var reason: String?","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/slug","title":"var slug: String?","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/unit","title":"var unit: String?","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/until","title":"var until: Int?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/available","title":"case available","type":"case"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/conflicts","title":"case conflicts","type":"case"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/desc","title":"case desc","type":"case"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/identifier","title":"case identifier","type":"case"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/mandatory","title":"case mandatory","type":"case"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/paid","title":"case paid","type":"case"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/payid","title":"case payID","type":"case"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/price","title":"case price","type":"case"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/reason","title":"case reason","type":"case"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/slug","title":"case slug","type":"case"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/title","title":"case title","type":"case"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/unit","title":"case unit","type":"case"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/until","title":"case until","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postpaymentstructure\/codingkeys","title":"PostPaymentStructure.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postpaymentstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/divar\/postpaymentstructure\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postpaymentstructure","title":"PostPaymentStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postresult\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/postresult\/init(token:mng_token:captchakey:result:code:message:errors:properties:)","title":"init(token: String?, mng_token: String?, captchaKey: String?, result: String?, code: Int?, message: String?, errors: [String]?, properties: [String : PostResult]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postresult\/captchakey","title":"let captchaKey: String?","type":"property"},{"path":"\/documentation\/divar\/postresult\/code","title":"let code: Int?","type":"property"},{"path":"\/documentation\/divar\/postresult\/errors","title":"let errors: [String]?","type":"property"},{"path":"\/documentation\/divar\/postresult\/message","title":"let message: String?","type":"property"},{"path":"\/documentation\/divar\/postresult\/mng_token","title":"let mng_token: String?","type":"property"},{"path":"\/documentation\/divar\/postresult\/properties","title":"let properties: [String : PostResult]?","type":"property"},{"path":"\/documentation\/divar\/postresult\/result","title":"let result: String?","type":"property"},{"path":"\/documentation\/divar\/postresult\/token","title":"let token: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/captchakey","title":"case captchaKey","type":"case"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/code","title":"case code","type":"case"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/errors","title":"case errors","type":"case"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/message","title":"case message","type":"case"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/mng_token","title":"case mng_token","type":"case"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/properties","title":"case properties","type":"case"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/result","title":"case result","type":"case"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/token","title":"case token","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/postresult\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postresult\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postresult\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postresult\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postresult\/codingkeys","title":"PostResult.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/postresult","title":"PostResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewstructure\/init(title:token:mngtoken:)","title":"init(title: String?, token: String?, mngToken: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewstructure\/mngtoken","title":"var mngToken: String?","type":"property"},{"path":"\/documentation\/divar\/postviewstructure\/posttitle","title":"var postTitle: String?","type":"property"},{"path":"\/documentation\/divar\/postviewstructure\/token","title":"var token: String?","type":"property"}],"path":"\/documentation\/divar\/postviewstructure","title":"PostViewStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postchimodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/postchimodel\/init(postchimessages:lastseenid:)","title":"init(postchiMessages: [ChatMessageStructure]?, lastSeenID: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postchimodel\/lastmessage","title":"var lastMessage: ChatConversationMessageTable","type":"property"},{"path":"\/documentation\/divar\/postchimodel\/lastseenid","title":"let lastSeenID: String?","type":"property"},{"path":"\/documentation\/divar\/postchimodel\/postchimessages","title":"var postchiMessages: [ChatMessageStructure]?","type":"property"},{"path":"\/documentation\/divar\/postchimodel\/tochatconversation","title":"var toChatConversation: ChatConversationTable","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postchimodel\/savemessages(user:dataprovider:)","title":"func saveMessages(user: User, dataProvider: DataProviderProtocol)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postchimodel\/tochatconversation(with:lastseenid:)","title":"static func toChatConversation(with: ChatConversationMessageTable?, lastSeenID: String?) -> ChatConversationTable","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postchimodel\/codingkeys\/lastseenid","title":"case lastSeenID","type":"case"},{"path":"\/documentation\/divar\/postchimodel\/codingkeys\/postchimessages","title":"case postchiMessages","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postchimodel\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/postchimodel\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/postchimodel\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postchimodel\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/postchimodel\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/postchimodel\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postchimodel\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postchimodel\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postchimodel\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postchimodel\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postchimodel\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postchimodel\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postchimodel\/codingkeys","title":"PostchiModel.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/postchimodel","title":"PostchiModel","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/price\/==(_:_:)","title":"static func == (Price, Price) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/price\/init(mode:value:)","title":"init(mode: String, value: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/price\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/divar\/price\/mode","title":"let mode: String","type":"property"},{"path":"\/documentation\/divar\/price\/value","title":"let value: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/price\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/price\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/price\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/price","title":"Price","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/priceevaluationmodel\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/priceevaluationmodel\/init(action:percent:intervals:)","title":"init(action: CustomAction?, percent: CGFloat, intervals: [(title: String, color: SonnatColors)])","type":"init"},{"path":"\/documentation\/divar\/priceevaluationmodel\/init(percent:)","title":"init(percent: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/priceevaluationmodel\/action","title":"var action: CustomAction?","type":"property"},{"path":"\/documentation\/divar\/priceevaluationmodel\/intervals","title":"var intervals: [(title: String, color: SonnatColors)]","type":"property"},{"path":"\/documentation\/divar\/priceevaluationmodel\/isuserinteractionenabled","title":"var isUserInteractionEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/priceevaluationmodel\/percent","title":"var percent: CGFloat","type":"property"}],"path":"\/documentation\/divar\/priceevaluationmodel","title":"PriceEvaluationModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pricelistrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pricelistrequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pricelistrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/pricelistrequestbuilder","title":"PriceListRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/protoconfiguration\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/protoconfiguration\/config(data:)","title":"func config(data: IntroConfig?)","type":"method"}],"path":"\/documentation\/divar\/protoconfiguration","title":"ProtoConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pushsubscriberequest\/init(playerid:provider:token:)","title":"init(playerID: String?, provider: PushProviders, token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pushsubscriberequest\/playerid","title":"let playerID: String?","type":"property"},{"path":"\/documentation\/divar\/pushsubscriberequest\/provider","title":"let provider: PushProviders","type":"property"},{"path":"\/documentation\/divar\/pushsubscriberequest\/requestparams","title":"var requestParams: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/pushsubscriberequest\/token","title":"let token: String","type":"property"}],"path":"\/documentation\/divar\/pushsubscriberequest","title":"PushSubscribeRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/init(playerid:)","title":"init(playerID: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/playerid","title":"let playerID: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/playerid","title":"case playerID","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/pushsubscriberesponse\/codingkeys","title":"PushSubscribeResponse.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/pushsubscriberesponse","title":"PushSubscribeResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/qaopenwidgetbase\/init(container:)","title":"init?(container: QAOpenWidgetBaseDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/qaopenwidgetbase\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/qaopenwidgetbase\/fire()","title":"func fire()","type":"method"}],"path":"\/documentation\/divar\/qaopenwidgetbase","title":"QAOpenWidgetBase","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/qawidgetpagerequest\/init(urlstring:)","title":"init(urlString: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/qawidgetpagerequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/qawidgetpagerequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/qawidgetpagerequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/qawidgetpagerequest","title":"QaWidgetPageRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/qawidgetpagerequestbuilder\/init(urlstring:)","title":"init(urlString: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/qawidgetpagerequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/qawidgetpagerequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/qawidgetpagerequestbuilder","title":"QaWidgetPageRequestBuilder","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/query\/category-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/query\/category-swift.struct\/init(value:)","title":"init(value: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/query\/category-swift.struct\/value","title":"var value: String","type":"property"}],"path":"\/documentation\/divar\/query\/category-swift.struct","title":"Query.Category","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/query\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/query\/init(query:category:isstore:)","title":"init(query: String, category: String, isStore: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/query\/category-swift.property","title":"let category: Category","type":"property"},{"path":"\/documentation\/divar\/query\/isstore","title":"let isStore: Bool?","type":"property"},{"path":"\/documentation\/divar\/query\/query","title":"let query: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/query\/codingkeys\/category","title":"case category","type":"case"},{"path":"\/documentation\/divar\/query\/codingkeys\/isstore","title":"case isStore","type":"case"},{"path":"\/documentation\/divar\/query\/codingkeys\/query","title":"case query","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/query\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/query\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/query\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/query\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/query\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/query\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/query\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/query\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/query\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/query\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/query\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/query\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/query\/codingkeys","title":"Query.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/query","title":"Query","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/queryfilter\/init(format:arguments:)","title":"init(format: String, arguments: Codable...)","type":"init"},{"path":"\/documentation\/divar\/queryfilter\/init(sqlliteral:)","title":"init(sqlLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/queryfilter\/arguments","title":"let arguments: [Codable]","type":"property"},{"path":"\/documentation\/divar\/queryfilter\/format","title":"let format: String","type":"property"},{"path":"\/documentation\/divar\/queryfilter\/statementarguments","title":"var statementArguments: StatementArguments","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/queryfilter\/getconversationmessages(_:)","title":"static func getConversationMessages(String) -> QueryFilter","type":"method"}],"path":"\/documentation\/divar\/queryfilter","title":"QueryFilter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/restdefaulttabdecorator\/init(decoratee:tabidentifier:)","title":"init(decoratee: RESTWidgetBasedRequestBuilder & WidgetBasedConfigurable, tabIdentifier: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/restdefaulttabdecorator\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/restdefaulttabdecorator\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/restdefaulttabdecorator","title":"RESTDefaultTabDecorator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/resttabularwidgetbasedworker\/init(service:datasource:)","title":"init(service: RestWidgetBasedServiceProtocol, dataSource: RESTTabularWidgetBasedRequestBuilder & WidgetBasedConfigurable)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/resttabularwidgetbasedworker\/config","title":"var config: WidgetBasedConfig","type":"property"},{"path":"\/documentation\/divar\/resttabularwidgetbasedworker\/datasource","title":"let dataSource: RESTTabularWidgetBasedRequestBuilder & WidgetBasedConfigurable","type":"property"},{"path":"\/documentation\/divar\/resttabularwidgetbasedworker\/responsetype","title":"var responseType: ExtractableMessage.Type","type":"property"},{"path":"\/documentation\/divar\/resttabularwidgetbasedworker\/service","title":"let service: RestWidgetBasedServiceProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/resttabularwidgetbasedworker\/createpredictionworker(with:)","title":"func createPredictionWorker(with: String) -> WidgetBasedWorkerProtocol?","type":"method"},{"path":"\/documentation\/divar\/resttabularwidgetbasedworker\/createworker(with:)","title":"func createWorker(with: String) -> WidgetBasedWorkerProtocol","type":"method"},{"path":"\/documentation\/divar\/resttabularwidgetbasedworker\/loaddata(with:completion:)","title":"func loadData(with: WidgetBaseRequestMetadata, completion: ExtractableResult) -> Cancellable?","type":"method"}],"path":"\/documentation\/divar\/resttabularwidgetbasedworker","title":"RESTTabularWidgetBasedWorker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/restwidgetbaserequestpayload\/init(path:method:parameter:)","title":"init(path: String, method: RequestMethod, parameter: ParameterType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/restwidgetbaserequestpayload\/method","title":"let method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/restwidgetbaserequestpayload\/parameter","title":"let parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/restwidgetbaserequestpayload\/path","title":"let path: String","type":"property"}],"path":"\/documentation\/divar\/restwidgetbaserequestpayload","title":"RESTWidgetBaseRequestPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/restwidgetbasedworker\/init(service:datasource:)","title":"init(service: RestWidgetBasedServiceProtocol, dataSource: RESTWidgetBasedRequestBuilder & WidgetBasedConfigurable)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/restwidgetbasedworker\/config","title":"var config: WidgetBasedConfig","type":"property"},{"path":"\/documentation\/divar\/restwidgetbasedworker\/datasource","title":"let dataSource: RESTWidgetBasedRequestBuilder & WidgetBasedConfigurable","type":"property"},{"path":"\/documentation\/divar\/restwidgetbasedworker\/responsetype","title":"var responseType: ExtractableMessage.Type","type":"property"},{"path":"\/documentation\/divar\/restwidgetbasedworker\/service","title":"let service: RestWidgetBasedServiceProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/restwidgetbasedworker\/createpredictionworker(with:)","title":"func createPredictionWorker(with: String) -> WidgetBasedWorkerProtocol?","type":"method"},{"path":"\/documentation\/divar\/restwidgetbasedworker\/loaddata(with:completion:)","title":"func loadData(with: WidgetBaseRequestMetadata, completion: ExtractableResult) -> Cancellable?","type":"method"}],"path":"\/documentation\/divar\/restwidgetbasedworker","title":"RESTWidgetBasedWorker","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeobject\/==(_:_:)","title":"static func == (RangeObject, RangeObject) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeobject\/init(dic:)","title":"init(dic: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeobject\/dic","title":"let dic: [String : Any]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeobject\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rangeobject\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/rangeobject\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/rangeobject","title":"RangeObject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ratefeedbackrequest\/init(_:rate:text:)","title":"init(String, rate: Widgets_RateScore.Score, text: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ratefeedbackrequest\/method","title":"var method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/ratefeedbackrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/ratefeedbackrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/ratefeedbackrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/ratefeedbackrequest","title":"RateFeedbackRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ratefeedbackrequestbuilder\/init(_:rate:text:)","title":"init(String, rate: Widgets_RateScore.Score, text: String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ratefeedbackrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/ratefeedbackrequestbuilder","title":"RateFeedbackRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/raterowpayload\/init(submissionrequestpath:selectedrate:)","title":"init(submissionRequestPath: String, selectedRate: Widgets_RateScore.Score)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/raterowpayload\/selectedrate","title":"var selectedRate: Widgets_RateScore.Score","type":"property"},{"path":"\/documentation\/divar\/raterowpayload\/submissionrequestpath","title":"var submissionRequestPath: String","type":"property"}],"path":"\/documentation\/divar\/raterowpayload","title":"RateRowPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugclientinfoprovider\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/rawplugclientinfoprovider\/init(user:)","title":"init(user: User?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugclientinfoprovider\/clientinfo","title":"var clientInfo: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/rawplugclientinfoprovider\/user","title":"var user: User?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugclientinfoprovider\/getclientinfo()","title":"func getClientInfo() -> [String : Any]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugclientinfoprovider\/resetclientinfo()","title":"static func resetClientInfo()","type":"method"}],"path":"\/documentation\/divar\/rawplugclientinfoprovider","title":"RawPlugClientInfoProvider","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateactionhandlerbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateactionhandlerbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> RealEstateActionHandler","type":"method"}],"path":"\/documentation\/divar\/realestateactionhandlerbuilder","title":"RealEstateActionHandlerBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateagencyinformationrequest\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/realestateagencyinformationrequest\/init(pagination:)","title":"init(pagination: Pagination)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateagencyinformationrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/realestateagencyinformationrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/realestateagencyinformationrequest","title":"RealEstateAgencyInformationRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateagencyinformationrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateagencyinformationrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/realestateagencyinformationrequestbuilder","title":"RealEstateAgencyInformationRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateagencyrequest\/init(businessref:)","title":"init(businessRef: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateagencyrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/realestateagencyrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/realestateagencyrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/realestateagencyrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/realestateagencyrequest","title":"RealEstateAgencyRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateagencyrequestbuilder\/init(businessref:)","title":"init(businessRef: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateagencyrequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateagencyrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/realestateagencyrequestbuilder","title":"RealEstateAgencyRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateanswerpanelinvitationrequest\/init(payload:)","title":"init(payload: Widgets_RealEstateAnswerPanelInvitationPayload)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateanswerpanelinvitationrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/realestateanswerpanelinvitationrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/realestateanswerpanelinvitationrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/realestateanswerpanelinvitationrequest","title":"RealEstateAnswerPanelInvitationRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatebulkladderrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatebulkladderrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladderrequest\/filters","title":"var filters: Google_Protobuf_Struct","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladderrequest\/hasmaxseletablelimit","title":"var hasMaxSeletableLimit: Bool","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladderrequest\/maxselectableitems","title":"var maxSelectableItems: Int32?","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladderrequest\/method","title":"var method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladderrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladderrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladderrequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladderrequest\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladderrequest\/schemarefetchonly","title":"var schemaRefetchOnly: Bool","type":"property"}],"path":"\/documentation\/divar\/realestatebulkladderrequest","title":"RealEstateBulkLadderRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatebulkladdersubmitrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatebulkladdersubmitrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladdersubmitrequest\/method","title":"var method: HTTPMethod","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladdersubmitrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladdersubmitrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/realestatebulkladdersubmitrequest\/path","title":"var path: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatebulkladdersubmitrequest\/settokens(tokens:)","title":"func setTokens(tokens: [String])","type":"method"}],"path":"\/documentation\/divar\/realestatebulkladdersubmitrequest","title":"RealEstateBulkLadderSubmitRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatecontactconfig\/init(token:)","title":"init(token: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatecontactconfig\/hasbookmark","title":"var hasBookmark: Bool","type":"property"},{"path":"\/documentation\/divar\/realestatecontactconfig\/hasheader","title":"var hasHeader: Bool","type":"property"},{"path":"\/documentation\/divar\/realestatecontactconfig\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/realestatecontactconfig\/usertype","title":"var userType: UserType","type":"property"}],"path":"\/documentation\/divar\/realestatecontactconfig","title":"RealEstateContactConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateformactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestateformactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> RealEstateFormActionHandler","type":"method"}],"path":"\/documentation\/divar\/realestateformactionbuilder","title":"RealEstateFormActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatemanagementrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatemanagementrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/realestatemanagementrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/realestatemanagementrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/realestatemanagementrequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/realestatemanagementrequest\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/divar\/realestatemanagementrequest\/searchable","title":"var searchable: Bool","type":"property"}],"path":"\/documentation\/divar\/realestatemanagementrequest","title":"RealEstateManagementRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatemanagementrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatemanagementrequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatemanagementrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/realestatemanagementrequestbuilder","title":"RealEstateManagementRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatepanelinvitationlistrequest\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/realestatepanelinvitationlistrequest\/init(pagination:)","title":"init(pagination: Pagination)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatepanelinvitationlistrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/realestatepanelinvitationlistrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/realestatepanelinvitationlistrequest","title":"RealEstatePanelInvitationListRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatepanelinvitationlistrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/realestatepanelinvitationlistrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/realestatepanelinvitationlistrequestbuilder","title":"RealEstatePanelInvitationListRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/reasonanswer\/init(answer:desc:)","title":"init(answer: String?, desc: String?)","type":"init"},{"path":"\/documentation\/divar\/reasonanswer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/reasonanswer\/answer","title":"let answer: String?","type":"property"},{"path":"\/documentation\/divar\/reasonanswer\/desc","title":"let desc: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/answer","title":"case answer","type":"case"},{"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/desc","title":"case desc","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/reasonanswer\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/reasonanswer\/codingkeys","title":"ReasonAnswer.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/reasonanswer","title":"ReasonAnswer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/redeemcodedata\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/redeemcodedata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/redeemcodedata\/init(message:statuscode:)","title":"init(message: String?, statusCode: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/redeemcodedata\/message","title":"var message: String?","type":"property"},{"path":"\/documentation\/divar\/redeemcodedata\/statuscode","title":"var statusCode: Int?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/message","title":"case message","type":"case"},{"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/statuscode","title":"case statusCode","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/redeemcodedata\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/redeemcodedata\/codingkeys","title":"RedeemCodeData.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/redeemcodedata","title":"RedeemCodeData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/registermarketplaceverificationcodeinput\/init(marketplaceservice:_:phonenumber:)","title":"init(marketplaceService: MarketplaceServiceProtocol, VerificationCodeInputModel, phoneNumber: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/registermarketplaceverificationcodeinput\/marketplaceservice","title":"let marketplaceService: MarketplaceServiceProtocol","type":"property"},{"path":"\/documentation\/divar\/registermarketplaceverificationcodeinput\/model","title":"var model: VerificationCodeInputModel","type":"property"},{"path":"\/documentation\/divar\/registermarketplaceverificationcodeinput\/phonenumber","title":"var phoneNumber: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/registermarketplaceverificationcodeinput\/fetchverificationcode(vc:)","title":"func fetchVerificationCode(vc: VerificationCodeInputViewController)","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceverificationcodeinput\/isvalid(input:)","title":"func isValid(input: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceverificationcodeinput\/sendverificationcode(vc:code:)","title":"func sendVerificationCode(vc: VerificationCodeInputViewController, code: String?)","type":"method"},{"path":"\/documentation\/divar\/registermarketplaceverificationcodeinput\/userlogedinsuccessfully(with:)","title":"func userLogedinSuccessfully(with: String)","type":"method"}],"path":"\/documentation\/divar\/registermarketplaceverificationcodeinput","title":"RegisterMarketplaceVerificationCodeInput","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rendermanageauthrequest\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/rendermanageauthrequest\/init(path:pagination:)","title":"init(path: String, pagination: Pagination)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rendermanageauthrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/rendermanageauthrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/rendermanageauthrequest","title":"RenderManageAuthRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rendermanageauthrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rendermanageauthrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/rendermanageauthrequestbuilder","title":"RenderManageAuthRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/replace\/init(olditem:newitem:index:)","title":"init(oldItem: T, newItem: T, index: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/replace\/index","title":"let index: Int","type":"property"},{"path":"\/documentation\/divar\/replace\/newitem","title":"let newItem: T","type":"property"},{"path":"\/documentation\/divar\/replace\/olditem","title":"let oldItem: T","type":"property"}],"path":"\/documentation\/divar\/replace","title":"Replace","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/reportpeermodel\/init(conversationid:peerid:reason:description:)","title":"init(conversationID: String, peerID: String, reason: String, description: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/reportpeermodel\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/divar\/reportpeermodel\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/divar\/reportpeermodel\/peerid","title":"var peerID: String","type":"property"},{"path":"\/documentation\/divar\/reportpeermodel\/reason","title":"var reason: String","type":"property"}],"path":"\/documentation\/divar\/reportpeermodel","title":"ReportPeerModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/reportproblemtransactionrequestbuilder\/init(transactiontoken:)","title":"init(transactionToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/reportproblemtransactionrequestbuilder\/transactiontoken","title":"let transactionToken: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/reportproblemtransactionrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> GRPCWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/reportproblemtransactionrequestbuilder","title":"ReportProblemTransactionRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/reportreason\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/reportreason\/children","title":"let children: [ReportReason]?","type":"property"},{"path":"\/documentation\/divar\/reportreason\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/divar\/reportreason\/descriptionneeded","title":"let descriptionNeeded: Bool","type":"property"},{"path":"\/documentation\/divar\/reportreason\/descriptionrequired","title":"let descriptionRequired: Bool","type":"property"},{"path":"\/documentation\/divar\/reportreason\/haschildren","title":"var hasChildren: Bool","type":"property"},{"path":"\/documentation\/divar\/reportreason\/loginrequired","title":"let loginRequired: Bool","type":"property"},{"path":"\/documentation\/divar\/reportreason\/reason","title":"let reason: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/children","title":"case children","type":"case"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/description-swift.enum.case","title":"case description","type":"case"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/descriptionneeded","title":"case descriptionNeeded","type":"case"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/descriptionrequired","title":"case descriptionRequired","type":"case"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/loginrequired","title":"case loginRequired","type":"case"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/reason","title":"case reason","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/description-swift.property","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/reportreason\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/reportreason\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/reportreason\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/reportreason\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/reportreason\/codingkeys","title":"ReportReason.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/reportreason","title":"ReportReason","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/requestmodel\/init(url:method:parameters:headers:interceptor:)","title":"init(url: String, method: RequestMethod, parameters: [String : Any]?, headers: [String : String]?, interceptor: RequestInterceptor?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/requestmodel\/headers","title":"let headers: [String : String]?","type":"property"},{"path":"\/documentation\/divar\/requestmodel\/interceptor","title":"let interceptor: RequestInterceptor?","type":"property"},{"path":"\/documentation\/divar\/requestmodel\/method","title":"let method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/requestmodel\/parameters","title":"let parameters: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/requestmodel\/url","title":"let url: String","type":"property"}],"path":"\/documentation\/divar\/requestmodel","title":"RequestModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/responsemodel\/init(request:response:data:result:)","title":"init(request: URLRequest?, response: HTTPURLResponse?, data: Data?, result: Result<Success, Failure>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/responsemodel\/data","title":"let data: Data?","type":"property"},{"path":"\/documentation\/divar\/responsemodel\/error","title":"var error: Failure?","type":"property"},{"path":"\/documentation\/divar\/responsemodel\/request","title":"let request: URLRequest?","type":"property"},{"path":"\/documentation\/divar\/responsemodel\/response","title":"let response: HTTPURLResponse?","type":"property"},{"path":"\/documentation\/divar\/responsemodel\/result","title":"let result: Result<Success, Failure>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/responsemodel\/converttoderror(identifier:responsedata:)","title":"func convertToDError(identifier: String, responseData: Data?) -> ResponseModel<Success, DError>","type":"method"},{"path":"\/documentation\/divar\/responsemodel\/serializejson()","title":"func serializeJson() throws -> [String : Any]?","type":"method"}],"path":"\/documentation\/divar\/responsemodel","title":"ResponseModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rulemaxlengthdiffablevalidationerror\/init(maxlength:msg:id:diffablewith:)","title":"init(maxLength: UInt, msg: String?, id: String?, diffableWith: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rulemaxlengthdiffablevalidationerror\/diffablewith","title":"var diffableWith: String","type":"property"},{"path":"\/documentation\/divar\/rulemaxlengthdiffablevalidationerror\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/divar\/rulemaxlengthdiffablevalidationerror\/max","title":"let max: UInt","type":"property"},{"path":"\/documentation\/divar\/rulemaxlengthdiffablevalidationerror\/validationerror","title":"var validationError: ValidationError","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rulemaxlengthdiffablevalidationerror\/isvalid(value:)","title":"func isValid(value: String?) -> ValidationError?","type":"method"}],"path":"\/documentation\/divar\/rulemaxlengthdiffablevalidationerror","title":"RuleMaxLengthDiffableValidationError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ruleminitems\/init(minitems:message:id:)","title":"init(minItems: Int, message: String, id: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ruleminitems\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/divar\/ruleminitems\/minitems","title":"var minItems: Int","type":"property"},{"path":"\/documentation\/divar\/ruleminitems\/validationerror","title":"var validationError: ValidationError","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ruleminitems\/isvalid(value:)","title":"func isValid(value: [T]?) -> ValidationError?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/ruleminitems\/rowvaluetype","title":"RuleMinItems.RowValueType","type":"typealias"}],"path":"\/documentation\/divar\/ruleminitems","title":"RuleMinItems","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rulerangeminmax\/init(rangeobj:property:id:)","title":"init(rangeObj: RangeObject?, property: Schema?, id: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rulerangeminmax\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/divar\/rulerangeminmax\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/rulerangeminmax\/validationerror","title":"var validationError: ValidationError","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rulerangeminmax\/isvalid(value:)","title":"func isValid(value: RangeObject?) -> ValidationError?","type":"method"}],"path":"\/documentation\/divar\/rulerangeminmax","title":"RuleRangeMinMax","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/saleassistantactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/saleassistantactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> SaleAssistantActionHandler","type":"method"}],"path":"\/documentation\/divar\/saleassistantactionbuilder","title":"SaleAssistantActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/schema\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/schema\/additionalproperties","title":"let additionalProperties: Bool?","type":"property"},{"path":"\/documentation\/divar\/schema\/currentpage","title":"var currentPage: Int","type":"property"},{"path":"\/documentation\/divar\/schema\/defaultvalue","title":"var defaultValue: Any?","type":"property"},{"path":"\/documentation\/divar\/schema\/dependencies","title":"var dependencies: [String : [Schema]]?","type":"property"},{"path":"\/documentation\/divar\/schema\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/divar\/schema\/enumnames","title":"let enumNames: [String]?","type":"property"},{"path":"\/documentation\/divar\/schema\/enums","title":"let enums: [Any]?","type":"property"},{"path":"\/documentation\/divar\/schema\/errors","title":"let errors: [String : String]?","type":"property"},{"path":"\/documentation\/divar\/schema\/format","title":"let format: String?","type":"property"},{"path":"\/documentation\/divar\/schema\/hasdefaultinchildren","title":"var hasDefaultInChildren: Bool","type":"property"},{"path":"\/documentation\/divar\/schema\/hasnextpage","title":"var hasNextPage: Bool","type":"property"},{"path":"\/documentation\/divar\/schema\/haspostsetrefetchinchildren","title":"var hasPostSetRefetchInChildren: Bool","type":"property"},{"path":"\/documentation\/divar\/schema\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/divar\/schema\/items","title":"let items: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/schema\/jsondict","title":"let jsonDict: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/schema\/key","title":"var key: String","type":"property"},{"path":"\/documentation\/divar\/schema\/maxitems","title":"let maxItems: Int?","type":"property"},{"path":"\/documentation\/divar\/schema\/maxlength","title":"let maxLength: Int?","type":"property"},{"path":"\/documentation\/divar\/schema\/maximum","title":"let maximum: Int64?","type":"property"},{"path":"\/documentation\/divar\/schema\/metaversion","title":"var metaVersion: Int?","type":"property"},{"path":"\/documentation\/divar\/schema\/minitems","title":"let minItems: Int?","type":"property"},{"path":"\/documentation\/divar\/schema\/minlength","title":"let minLength: Int?","type":"property"},{"path":"\/documentation\/divar\/schema\/minimum","title":"let minimum: Int64?","type":"property"},{"path":"\/documentation\/divar\/schema\/parentkey","title":"var parentKey: String","type":"property"},{"path":"\/documentation\/divar\/schema\/pattern","title":"let pattern: String?","type":"property"},{"path":"\/documentation\/divar\/schema\/properties","title":"var properties: [Schema]?","type":"property"},{"path":"\/documentation\/divar\/schema\/required","title":"var required: Bool?","type":"property"},{"path":"\/documentation\/divar\/schema\/title","title":"let title: String?","type":"property"},{"path":"\/documentation\/divar\/schema\/totalpage","title":"var totalPage: Int","type":"property"},{"path":"\/documentation\/divar\/schema\/type","title":"let type: String","type":"property"},{"path":"\/documentation\/divar\/schema\/ui","title":"var ui: UISchema?","type":"property"},{"path":"\/documentation\/divar\/schema\/uniqueitems","title":"let uniqueItems: Bool?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/schema\/adddependenciesui(_:)","title":"func addDependenciesUI([String : Any])","type":"method"},{"path":"\/documentation\/divar\/schema\/addrequiredfield(jsonschema:)","title":"func addRequiredField(jsonSchema: [String : Any]?)","type":"method"},{"path":"\/documentation\/divar\/schema\/adduischema(_:)","title":"func addUISchema([String : Any])","type":"method"},{"path":"\/documentation\/divar\/schema\/adduischema(uischema:jsonschema:)","title":"func addUISchema(uischema: [String : Any], jsonSchema: [String : Any])","type":"method"},{"path":"\/documentation\/divar\/schema\/defaultsdict(dict:)","title":"func defaultsDict(dict: [String : Any]) -> [String : Any]","type":"method"},{"path":"\/documentation\/divar\/schema\/postsetrefetchsdict(dict:)","title":"func postSetRefetchsDict(dict: [String : Bool]) -> [String : Bool]","type":"method"},{"path":"\/documentation\/divar\/schema\/property(for:)","title":"func property(for: String) -> Schema?","type":"method"},{"path":"\/documentation\/divar\/schema\/sortbyorder()","title":"func sortByOrder()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/schema\/getproperty(key:title:placeholder:)","title":"static func getProperty(key: String, title: String, placeholder: String) -> Schema","type":"method"}],"path":"\/documentation\/divar\/schema","title":"Schema","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/jsonschema","title":"var jsonSchema: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/schema","title":"var schema: Schema","type":"property"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/uischema","title":"var uiSchema: [String : Any]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/jsonschema","title":"case jsonSchema","type":"case"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/uischema","title":"case uiSchema","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/schemaliteresponsemodel\/codingkeys","title":"SchemaLiteResponseModel.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/schemaliteresponsemodel","title":"SchemaLiteResponseModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/schemarequestmodel\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"path":"\/documentation\/divar\/schemarequestmodel\/init(page:editid:currentdata:isrefetching:cities:submitwithoutpromotion:)","title":"init(page: Int, editID: String?, currentData: [String : Any], isRefetching: Bool, cities: [String]?, submitWithoutPromotion: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/schemarequestmodel\/cities","title":"var cities: [String]?","type":"property"},{"path":"\/documentation\/divar\/schemarequestmodel\/currentdata","title":"let currentData: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/schemarequestmodel\/defaultparameters","title":"var defaultParameters: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/schemarequestmodel\/editid","title":"let editID: String?","type":"property"},{"path":"\/documentation\/divar\/schemarequestmodel\/isrefetching","title":"let isRefetching: Bool","type":"property"},{"path":"\/documentation\/divar\/schemarequestmodel\/page","title":"let page: Int","type":"property"},{"path":"\/documentation\/divar\/schemarequestmodel\/searchfitlercategoryslug","title":"var searchFitlerCategorySlug: String","type":"property"},{"path":"\/documentation\/divar\/schemarequestmodel\/submitwithoutpromotion","title":"let submitWithoutPromotion: Bool?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/schemarequestmodel\/empty","title":"static var empty: SchemaRequestModel","type":"property"}],"path":"\/documentation\/divar\/schemarequestmodel","title":"SchemaRequestModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaresponsemodel\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"path":"\/documentation\/divar\/schemaresponsemodel\/init(protomodel:)","title":"init?(protoModel: Widgets_SchemaResponse)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/schemaresponsemodel\/action","title":"var action: Widgets_Action?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/aftersubmitaction","title":"var afterSubmitAction: Widgets_Action?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/buttontext","title":"let buttonText: String?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/conciergesaletoken","title":"var conciergeSaleToken: String?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/currentdata","title":"let currentData: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/deletable","title":"let deletable: Bool?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/landlinestate","title":"let landlineState: LandlineState?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/message","title":"let message: String?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/mngtoken","title":"let mngToken: String?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/orderid","title":"let orderId: String?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/paymentrequired","title":"let paymentRequired: Bool","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/previousdata","title":"let previousData: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/schema","title":"var schema: Schema?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/submissionmessage","title":"var submissionMessage: SubmissionMessage?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/submitbutton","title":"var submitButton: SubmitButton?","type":"property"},{"path":"\/documentation\/divar\/schemaresponsemodel\/token","title":"var token: String?","type":"property"}],"path":"\/documentation\/divar\/schemaresponsemodel","title":"SchemaResponseModel","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetdata\/==(_:_:)","title":"static func == (ScreenWidgetData, ScreenWidgetData) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetdata\/init(data:)","title":"init(data: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetdata\/data","title":"var data: [String : Any]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/screenwidgetdata\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/screenwidgetdata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/screenwidgetdata","title":"ScreenWidgetData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchboxviewmodel\/init(hassearchbox:placeholder:predictionviewmodel:)","title":"init(hasSearchBox: Bool, placeholder: String?, predictionViewModel: WidgetViewModelProtocol?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchboxviewmodel\/hassearchbox","title":"let hasSearchBox: Bool","type":"property"},{"path":"\/documentation\/divar\/searchboxviewmodel\/placeholder","title":"let placeholder: String?","type":"property"},{"path":"\/documentation\/divar\/searchboxviewmodel\/predictionviewmodel","title":"let predictionViewModel: WidgetViewModelProtocol?","type":"property"}],"path":"\/documentation\/divar\/searchboxviewmodel","title":"SearchBoxViewModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistory\/init(category:querystring:title:subtitle:count:pinned:pageidentifier:)","title":"init(category: String, queryString: String, title: String, subtitle: String?, count: String?, pinned: Bool, pageIdentifier: String)","type":"init"},{"path":"\/documentation\/divar\/searchfilterhistory\/init(category:tags:querystring:pinned:pageidentifier:displaytext:)","title":"init(category: String, tags: [String], queryString: String, pinned: Bool, pageIdentifier: String, displayText: String)","type":"init"},{"path":"\/documentation\/divar\/searchfilterhistory\/init(from:)-6b4dz","title":"init(from: SearchFilterHistoryTable)","type":"init"},{"path":"\/documentation\/divar\/searchfilterhistory\/init(from:)-8p4ob","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/searchfilterhistory\/init(key:timestamp:category:tags:querystring:ispinned:title:subtitle:count:pageidentifier:)","title":"init(key: String, timestamp: TimeInterval, category: String, tags: [String], queryString: String, isPinned: Bool, title: String, subtitle: String, count: String, pageIdentifier: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistory\/absolutequery","title":"var absoluteQuery: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/alltagsstring","title":"var allTagsString: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/category","title":"var category: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/count","title":"var count: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/filterdesc","title":"var filterDesc: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/getcategoryslug","title":"var getCategorySlug: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/ispinned","title":"var isPinned: Bool","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/key","title":"var key: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/pageidentifier","title":"var pageIdentifier: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/queryremoved","title":"var queryRemoved: SearchFilterHistory","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/querystring","title":"var queryString: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/resetwithcategoryandquerypreserve","title":"var resetWithCategoryAndQueryPreserve: SearchFilterHistory","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/resetwithquerypreserve","title":"var resetWithQueryPreserve: SearchFilterHistory","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/subtitle","title":"var subtitle: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/tags","title":"var tags: [String]","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/timestamp","title":"var timestamp: TimeInterval","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistory\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistory\/contains(key:)","title":"func contains(key: String?) -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistory\/createkey()","title":"func createKey() -> String","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistory\/remove(key:)","title":"func remove(key: String?) -> SearchFilterHistory","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistory\/replace(key:with:)","title":"func replace(key: String?, with: Any) -> SearchFilterHistory","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistory\/value(for:)","title":"func value(for: String?) -> Any?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistory\/empty","title":"static var empty: SearchFilterHistory","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistory\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/divar\/searchfilterhistory\/==(_:_:)","title":"static func == (SearchFilterHistory, SearchFilterHistory) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistory\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/searchfilterhistory\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/searchfilterhistory","title":"SearchFilterHistory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/init(from:)-8croj","title":"init(from: SearchFilterHistory)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/category","title":"var category: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/count","title":"var count: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/ispinned","title":"var isPinned: Bool","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/key","title":"var key: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/pageidentifier","title":"var pageIdentifier: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/querystring","title":"var queryString: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/subtitle","title":"var subtitle: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/tags","title":"var tags: [String]","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/timestamp","title":"var timestamp: TimeInterval","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/title","title":"var title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/init(from:)-141c5","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/divar\/searchfilterhistorytable\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/searchfilterhistorytable\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/init(row:)","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchall(_:keys:)-47m31","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchall(_:keys:)-4815n","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchcursor(_:keys:)-4lfxz","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchcursor(_:keys:)-8u0tp","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchone(_:key:)-846lw","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchone(_:key:)-op0r","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"}],"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/searchfilterhistorytable\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/searchfilterhistorytable\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/searchfilterhistorytable\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/annotated(with:)-2fk4q","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/annotated(with:)-3jgqe","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/annotated(with:)-4wx31","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/annotated(with:)-k9up","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/belongsto(_:key:using:)-287p3","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/belongsto(_:key:using:)-4lc2r","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/deleteall(_:keys:)-76afp","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/deleteall(_:keys:)-g93w","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/deleteone(_:key:)-38s9","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/deleteone(_:key:)-5ylke","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/exists(_:key:)-4ec2a","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/exists(_:key:)-95zmd","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/filter(_:)-31t9d","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/filter(_:)-379cz","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/filter(key:)-6r2o7","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/filter(key:)-81qgk","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/filter(keys:)-8ebqi","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/filter(keys:)-9rtf6","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/hasmany(_:key:using:)-5yihn","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/hasmany(_:key:using:)-73lfb","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/hasone(_:key:using:)-78a9r","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/hasone(_:key:using:)-8mrwk","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/order(_:)-8nyxx","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/order(_:)-rta4","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/select(_:)-5978j","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/select(_:)-8tarj","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/select(_:as:)-7j3n4","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/select(_:as:)-qvb9","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/searchfilterhistorytable\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/searchfilterhistorytable\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/searchfilterhistorytable","title":"SearchFilterHistoryTable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchpredictionrequest\/init(path:filters:requestdata:)","title":"init(path: String, filters: Google_Protobuf_Struct, requestdata: Google_Protobuf_Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchpredictionrequest\/filters","title":"var filters: Google_Protobuf_Struct","type":"property"},{"path":"\/documentation\/divar\/searchpredictionrequest\/method","title":"var method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/searchpredictionrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/searchpredictionrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/searchpredictionrequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/searchpredictionrequest\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/divar\/searchpredictionrequest\/requestdata","title":"var requestData: Google_Protobuf_Any","type":"property"}],"path":"\/documentation\/divar\/searchpredictionrequest","title":"SearchPredictionRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestiondataaction\/init(json:)","title":"init?(json: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestiondataaction\/payload","title":"let payload: SearchSuggestionDataPayload?","type":"property"},{"path":"\/documentation\/divar\/searchsuggestiondataaction\/type","title":"let type: String","type":"property"}],"path":"\/documentation\/divar\/searchsuggestiondataaction","title":"SearchSuggestionDataAction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestiondatamodel\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestiondatamodel\/action","title":"let action: SearchSuggestionDataAction?","type":"property"},{"path":"\/documentation\/divar\/searchsuggestiondatamodel\/category","title":"let category: String?","type":"property"},{"path":"\/documentation\/divar\/searchsuggestiondatamodel\/count","title":"let count: String?","type":"property"},{"path":"\/documentation\/divar\/searchsuggestiondatamodel\/hasdivider","title":"let hasDivider: Bool?","type":"property"},{"path":"\/documentation\/divar\/searchsuggestiondatamodel\/query","title":"let query: String?","type":"property"}],"path":"\/documentation\/divar\/searchsuggestiondatamodel","title":"SearchSuggestionDataModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestiondatapayload\/init(json:)","title":"init?(json: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestiondatapayload\/filters","title":"let filters: [String : Any]?","type":"property"}],"path":"\/documentation\/divar\/searchsuggestiondatapayload","title":"SearchSuggestionDataPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionresult\/init(choices:)","title":"init(choices: [SuggestionChoices]?)","type":"init"},{"path":"\/documentation\/divar\/searchsuggestionresult\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionresult\/choices","title":"let choices: [SuggestionChoices]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/choices","title":"case choices","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/searchsuggestionresult\/codingkeys","title":"SearchSuggestionResult.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/searchsuggestionresult","title":"SearchSuggestionResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttonmodel\/init(title:isenable:action:)","title":"init(title: String, isEnable: Bool, action: SecondaryButtonAction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttonmodel\/action","title":"var action: SecondaryButtonAction","type":"property"},{"path":"\/documentation\/divar\/secondarybuttonmodel\/isenable","title":"var isEnable: Bool","type":"property"},{"path":"\/documentation\/divar\/secondarybuttonmodel\/title","title":"var title: String","type":"property"}],"path":"\/documentation\/divar\/secondarybuttonmodel","title":"SecondaryButtonModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbulkladderrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbulkladderrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderrequest\/hasmaxseletablelimit","title":"var hasMaxSeletableLimit: Bool","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderrequest\/maxselectableitems","title":"var maxSelectableItems: Int32?","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderrequest\/method","title":"var method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderrequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/segmentedbulkladderrequest\/tabidentifier","title":"var tabIdentifier: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedbulkladderrequest\/getrequestfortab(identifier:)","title":"func getRequestForTab(identifier: String) -> TabularWidgetBasedRequest?","type":"method"}],"path":"\/documentation\/divar\/segmentedbulkladderrequest","title":"SegmentedBulkLadderRequest","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollerdata\/==(_:_:)","title":"static func == (SegmentedControllerData, SegmentedControllerData) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollerdata\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/segmentedcontrollerdata\/init(selectedsegment:)","title":"init(selectedSegment: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollerdata\/selectedsegment","title":"var selectedSegment: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollerdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/segmentedcontrollerdata\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/segmentedcontrollerdata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/segmentedcontrollerdata","title":"SegmentedControllerData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowmodel\/init(title:icon:hasindicator:hasdivider:action:)","title":"init(title: String, icon: SonnatImages?, hasIndicator: Bool?, hasDivider: Bool?, action: SelectorRowAction?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowmodel\/action","title":"var action: SelectorRowAction?","type":"property"},{"path":"\/documentation\/divar\/selectorrowmodel\/hasdivider","title":"var hasDivider: Bool?","type":"property"},{"path":"\/documentation\/divar\/selectorrowmodel\/hasindicator","title":"var hasIndicator: Bool?","type":"property"},{"path":"\/documentation\/divar\/selectorrowmodel\/icon","title":"var icon: SonnatImages?","type":"property"},{"path":"\/documentation\/divar\/selectorrowmodel\/title","title":"var title: String","type":"property"}],"path":"\/documentation\/divar\/selectorrowmodel","title":"SelectorRowModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowstateholder\/init(title:hasunread:hasdivider:hasindicator:icon:)","title":"init(title: String, hasUnread: Bool, hasDivider: Bool, hasIndicator: Bool, icon: SelectorRowStateHolder.Icon)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowstateholder\/hasdivider","title":"var hasDivider: Bool","type":"property"},{"path":"\/documentation\/divar\/selectorrowstateholder\/hasindicator","title":"var hasIndicator: Bool","type":"property"},{"path":"\/documentation\/divar\/selectorrowstateholder\/hasunread","title":"var hasUnread: Bool","type":"property"},{"path":"\/documentation\/divar\/selectorrowstateholder\/icon-swift.property","title":"var icon: Icon","type":"property"},{"path":"\/documentation\/divar\/selectorrowstateholder\/title","title":"var title: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowstateholder\/icon-swift.enum\/baseicon(_:)","title":"case baseIcon(Base_Icon)","type":"case"},{"path":"\/documentation\/divar\/selectorrowstateholder\/icon-swift.enum\/icon(_:)","title":"case icon(SonnatImages)","type":"case"},{"path":"\/documentation\/divar\/selectorrowstateholder\/icon-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/divar\/selectorrowstateholder\/icon-swift.enum\/url(_:)","title":"case url(URL)","type":"case"}],"path":"\/documentation\/divar\/selectorrowstateholder\/icon-swift.enum","title":"SelectorRowStateHolder.Icon","type":"enum"}],"path":"\/documentation\/divar\/selectorrowstateholder","title":"SelectorRowStateHolder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sellerconfirmtransactionrequestbuilder\/init(transactiontoken:)","title":"init(transactionToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sellerconfirmtransactionrequestbuilder\/transactiontoken","title":"let transactionToken: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sellerconfirmtransactionrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> GRPCWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/sellerconfirmtransactionrequestbuilder","title":"SellerConfirmTransactionRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sendmessageactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sendmessageactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> SendMessageActionHandler","type":"method"}],"path":"\/documentation\/divar\/sendmessageactionbuilder","title":"SendMessageActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sentryconfiguration\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/sentryconfiguration\/init(samplerate:)","title":"init(sampleRate: Double?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sentryconfiguration\/samplerate","title":"var sampleRate: Double?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sentryconfiguration\/config(data:)","title":"func config(data: IntroConfig?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sentryconfiguration\/token","title":"static let token: String","type":"property"}],"path":"\/documentation\/divar\/sentryconfiguration","title":"SentryConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sentryeventarguments\/init(message:logger:extra:)","title":"init(message: SentryMessageNames, logger: String, extra: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sentryeventarguments\/eventlevel","title":"let eventLevel: SentryEventLevel","type":"property"},{"path":"\/documentation\/divar\/sentryeventarguments\/extra","title":"var extra: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/sentryeventarguments\/logger","title":"var logger: String","type":"property"},{"path":"\/documentation\/divar\/sentryeventarguments\/message","title":"let message: SentryMessageNames","type":"property"}],"path":"\/documentation\/divar\/sentryeventarguments","title":"SentryEventArguments","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/servicerequest\/init(completion:method:parameters:url:)-3ge0v","title":"init(completion: (_ response: DataResponse<Data, DError>) -> Void, method: HTTPMethod, parameters: Data?, url: String)","type":"init"},{"path":"\/documentation\/divar\/servicerequest\/init(completion:method:parameters:url:)-4kwtj","title":"init(completion: (_ response: DataResponse<Data, DError>) -> Void, method: HTTPMethod, parameters: Parameters?, url: String)","type":"init"},{"path":"\/documentation\/divar\/servicerequest\/init(completion:method:parameters:url:)-fozv","title":"init(completion: RequestCompletion, method: HTTPMethod, parameters: Parameters?, url: String)","type":"init"},{"path":"\/documentation\/divar\/servicerequest\/init(method:parameters:completion:url:requesttpe:)","title":"init(method: HTTPMethod, parameters: ServiceRequest.ServiceRequestParameters, completion: ServiceRequest.ServiceRequestCompletion, url: String, requestTpe: ServiceRequest.ServiceRequestType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/servicerequest\/completion","title":"let completion: ServiceRequestCompletion","type":"property"},{"path":"\/documentation\/divar\/servicerequest\/method","title":"let method: HTTPMethod","type":"property"},{"path":"\/documentation\/divar\/servicerequest\/parameters","title":"let parameters: ServiceRequestParameters","type":"property"},{"path":"\/documentation\/divar\/servicerequest\/requesttpe","title":"let requestTpe: ServiceRequestType","type":"property"},{"path":"\/documentation\/divar\/servicerequest\/url","title":"let url: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/servicerequest\/servicerequestcompletion\/any(completion:)","title":"case any(completion: RequestCompletion)","type":"case"},{"path":"\/documentation\/divar\/servicerequest\/servicerequestcompletion\/data(completion:)","title":"case data(completion: DataRequestCompletion)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/servicerequest\/servicerequestcompletion\/any","title":"var any: RequestCompletion?","type":"property"},{"path":"\/documentation\/divar\/servicerequest\/servicerequestcompletion\/data","title":"var data: DataRequestCompletion?","type":"property"}],"path":"\/documentation\/divar\/servicerequest\/servicerequestcompletion","title":"ServiceRequest.ServiceRequestCompletion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/servicerequest\/servicerequestparameters\/data(params:)","title":"case data(params: Data?)","type":"case"},{"path":"\/documentation\/divar\/servicerequest\/servicerequestparameters\/parameters(params:)","title":"case parameters(params: Parameters?)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/servicerequest\/servicerequestparameters\/data","title":"var data: Data?","type":"property"},{"path":"\/documentation\/divar\/servicerequest\/servicerequestparameters\/parameters","title":"var parameters: Parameters?","type":"property"}],"path":"\/documentation\/divar\/servicerequest\/servicerequestparameters","title":"ServiceRequest.ServiceRequestParameters","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/servicerequest\/servicerequesttype\/jsonwithbinaryresponse","title":"case jsonWithBinaryResponse","type":"case"},{"path":"\/documentation\/divar\/servicerequest\/servicerequesttype\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/divar\/servicerequest\/servicerequesttype\/octetstream","title":"case octetStream","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/servicerequest\/servicerequesttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/servicerequest\/servicerequesttype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/servicerequest\/servicerequesttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/servicerequest\/servicerequesttype","title":"ServiceRequest.ServiceRequestType","type":"enum"}],"path":"\/documentation\/divar\/servicerequest","title":"ServiceRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/settingsactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> SettingsActionHandler","type":"method"}],"path":"\/documentation\/divar\/settingsactionbuilder","title":"SettingsActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarlandlineinput\/init(service:_:)","title":"init(service: FraudProtocol, NumberInputModel)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarlandlineinput\/model","title":"var model: NumberInputModel","type":"property"},{"path":"\/documentation\/divar\/shahkarlandlineinput\/service","title":"let service: FraudProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarlandlineinput\/buttonclicked(vc:value:)","title":"func buttonClicked(vc: NumberInputViewController, value: String?)","type":"method"},{"path":"\/documentation\/divar\/shahkarlandlineinput\/handlesuccessresponse(_:response:telephone:)","title":"func handleSuccessResponse(NumberInputViewController, response: Authentication_AuthenticateResponse, telephone: String)","type":"method"}],"path":"\/documentation\/divar\/shahkarlandlineinput","title":"ShahkarLandlineInput","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarlandlineverificationcodeinput\/init(service:_:phonenumber:)","title":"init(service: FraudProtocol, VerificationCodeInputModel, phoneNumber: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarlandlineverificationcodeinput\/model","title":"var model: VerificationCodeInputModel","type":"property"},{"path":"\/documentation\/divar\/shahkarlandlineverificationcodeinput\/phonenumber","title":"var phoneNumber: String","type":"property"},{"path":"\/documentation\/divar\/shahkarlandlineverificationcodeinput\/service","title":"let service: FraudProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/shahkarlandlineverificationcodeinput\/fetchverificationcode(vc:)","title":"func fetchVerificationCode(vc: VerificationCodeInputViewController)","type":"method"},{"path":"\/documentation\/divar\/shahkarlandlineverificationcodeinput\/handlesucessresponse(_:response:)","title":"func handleSucessResponse(VerificationCodeInputViewController, response: Authentication_AuthenticateResponse)","type":"method"},{"path":"\/documentation\/divar\/shahkarlandlineverificationcodeinput\/isvalid(input:)","title":"func isValid(input: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/shahkarlandlineverificationcodeinput\/sendverificationcode(vc:code:)","title":"func sendVerificationCode(vc: VerificationCodeInputViewController, code: String?)","type":"method"}],"path":"\/documentation\/divar\/shahkarlandlineverificationcodeinput","title":"ShahkarLandlineVerificationCodeInput","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sheetbannermodel\/init(title:text:image:)","title":"init(title: String?, text: String?, image: ImageAsset?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sheetbannermodel\/image","title":"let image: ImageAsset?","type":"property"},{"path":"\/documentation\/divar\/sheetbannermodel\/text","title":"let text: String?","type":"property"},{"path":"\/documentation\/divar\/sheetbannermodel\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/divar\/sheetbannermodel","title":"SheetBannerModel","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sheetitem\/resultbuilder\/init()","title":"init()","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sheetitem\/resultbuilder\/buildblock(_:)","title":"static func buildBlock(SheetItem...) -> [SheetItem]","type":"method"}],"path":"\/documentation\/divar\/sheetitem\/resultbuilder","title":"SheetItem.ResultBuilder","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sheetitem\/init(title:imageasset:iconstring:image:imagecolor:disabled:disabledmessage:data:action:)","title":"init(title: String, imageAsset: ImageAsset?, iconString: String?, image: SonnatImages?, imageColor: SonnatColors?, disabled: Bool, disabledMessage: String?, data: Any?, action: ((SheetItem) -> Void)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sheetitem\/action","title":"let action: ((SheetItem) -> Void)?","type":"property"},{"path":"\/documentation\/divar\/sheetitem\/data","title":"let data: Any?","type":"property"},{"path":"\/documentation\/divar\/sheetitem\/disabled","title":"let disabled: Bool","type":"property"},{"path":"\/documentation\/divar\/sheetitem\/disabledmessage","title":"let disabledMessage: String?","type":"property"},{"path":"\/documentation\/divar\/sheetitem\/iconstring","title":"let iconString: String?","type":"property"},{"path":"\/documentation\/divar\/sheetitem\/image","title":"let image: SonnatImages?","type":"property"},{"path":"\/documentation\/divar\/sheetitem\/imageasset","title":"let imageAsset: ImageAsset?","type":"property"},{"path":"\/documentation\/divar\/sheetitem\/imagecolor","title":"let imageColor: SonnatColors?","type":"property"},{"path":"\/documentation\/divar\/sheetitem\/title","title":"let title: String","type":"property"}],"path":"\/documentation\/divar\/sheetitem","title":"SheetItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/showalertactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/showalertactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> ShowAlertActionHandler","type":"method"}],"path":"\/documentation\/divar\/showalertactionbuilder","title":"ShowAlertActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/showalertactionhandlerimpl\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/showalertactionhandlerimpl\/init(flow:)","title":"init(flow: BaseFlowController?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/showalertactionhandlerimpl\/flow","title":"var flow: BaseFlowController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/showalertactionhandlerimpl\/showwidebuttonalert(_:)","title":"func showWideButtonAlert(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/showalertactionhandlerimpl","title":"ShowAlertActionHandlerImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/showbottomsheetactionhandlerimpl\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/showbottomsheetactionhandlerimpl\/init(flow:)","title":"init(flow: BaseFlowController?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/showbottomsheetactionhandlerimpl\/flow","title":"var flow: BaseFlowController?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/showbottomsheetactionhandlerimpl\/showwidebottomsheet(_:)","title":"func showWideBottomSheet(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/showbottomsheetactionhandlerimpl","title":"ShowBottomSheetActionHandlerImpl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsdata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/similarbrandsdata\/init(image:title:slug:)","title":"init(image: String?, title: String?, slug: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsdata\/image","title":"let image: String?","type":"property"},{"path":"\/documentation\/divar\/similarbrandsdata\/slug","title":"let slug: String?","type":"property"},{"path":"\/documentation\/divar\/similarbrandsdata\/title","title":"let title: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/image","title":"case image","type":"case"},{"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/slug","title":"case slug","type":"case"},{"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/title","title":"case title","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/similarbrandsdata\/codingkeys","title":"SimilarBrandsData.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/similarbrandsdata","title":"SimilarBrandsData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsstructure\/init(data:title:)","title":"init(data: [SimilarBrandsData]?, title: String?)","type":"init"},{"path":"\/documentation\/divar\/similarbrandsstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsstructure\/data","title":"let data: [SimilarBrandsData]?","type":"property"},{"path":"\/documentation\/divar\/similarbrandsstructure\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/divar\/similarbrandsstructure\/title","title":"let title: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/data","title":"case data","type":"case"},{"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/title","title":"case title","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/similarbrandsstructure\/codingkeys","title":"SimilarBrandsStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/similarbrandsstructure","title":"SimilarBrandsStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/simplebuttonrowmodel\/init(supportlink:title:action:imageurl:hasdivider:)","title":"init(supportLink: String?, title: String?, action: SimpleButtonRowActions?, imageUrl: String?, hasDivider: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/simplebuttonrowmodel\/action","title":"let action: SimpleButtonRowActions?","type":"property"},{"path":"\/documentation\/divar\/simplebuttonrowmodel\/hasdivider","title":"let hasDivider: Bool?","type":"property"},{"path":"\/documentation\/divar\/simplebuttonrowmodel\/imageurl","title":"let imageUrl: String?","type":"property"},{"path":"\/documentation\/divar\/simplebuttonrowmodel\/supportlink","title":"let supportLink: String?","type":"property"},{"path":"\/documentation\/divar\/simplebuttonrowmodel\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/divar\/simplebuttonrowmodel","title":"SimpleButtonRowModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontrollerconfig\/init(_:)","title":"init(SingleMultiEurekaConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontrollerconfig\/defaultcityid","title":"var defaultCityId: [Int]","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontrollerconfig\/items","title":"var items: [SingleMultiModel]","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontrollerconfig\/switchlabel","title":"var switchLabel: String","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontrollerconfig\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontrollerconfig\/views","title":"var views: [SingleMultiSubviews]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontrollerconfig\/displayvaluefor(_:)","title":"func displayValueFor([SingleMultiModel]) -> String","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontrollerconfig\/getviewcontrollerconfig(selecteddata:)","title":"func getViewControllerConfig(selectedData: [SingleMultiModel]?) -> SingleMultiBaseViewControllerConfig","type":"method"},{"path":"\/documentation\/divar\/singlemultieurekaviewcontrollerconfig\/switchlabelenabel(selecteddata:)","title":"func switchLabelEnabel(selectedData: [SingleMultiModel]?) -> Bool","type":"method"}],"path":"\/documentation\/divar\/singlemultieurekaviewcontrollerconfig","title":"SingleMultiEurekaViewControllerConfig","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/==(_:_:)","title":"static func == (SingleMultiModel, SingleMultiModel) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/singlemultimodel\/init(id:name:nearbyenabled:children:data:payload:tags:)","title":"init(id: String?, name: String?, nearbyEnabled: Bool?, children: [SingleMultiModel]?, data: Any?, payload: SingleMultiReportPayload?, tags: [String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/children","title":"var children: [SingleMultiModel]?","type":"property"},{"path":"\/documentation\/divar\/singlemultimodel\/data","title":"var data: Any?","type":"property"},{"path":"\/documentation\/divar\/singlemultimodel\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/divar\/singlemultimodel\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/divar\/singlemultimodel\/nearbyenabled","title":"var nearbyEnabled: Bool?","type":"property"},{"path":"\/documentation\/divar\/singlemultimodel\/payload","title":"var payload: SingleMultiReportPayload?","type":"property"},{"path":"\/documentation\/divar\/singlemultimodel\/tags","title":"var tags: [String]?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/getarchivereasons(from:)","title":"static func getArchiveReasons(from: [ArchiveReasons]) -> [SingleMultiModel]","type":"method"},{"path":"\/documentation\/divar\/singlemultimodel\/getbrandarray(with:)","title":"static func getBrandArray(with: Schema) -> [SingleMultiModel]","type":"method"},{"path":"\/documentation\/divar\/singlemultimodel\/getlocationsarray(with:)","title":"static func getLocationsArray(with: Schema) -> [SingleMultiModel]","type":"method"},{"path":"\/documentation\/divar\/singlemultimodel\/getname(with:key:)","title":"static func getName(with: Schema, key: String) -> String?","type":"method"},{"path":"\/documentation\/divar\/singlemultimodel\/getoptionsarray(with:)","title":"static func getOptionsArray(with: Schema) -> [SingleMultiModel]","type":"method"},{"path":"\/documentation\/divar\/singlemultimodel\/getreportreasons(from:)","title":"static func getReportReasons(from: [ReportReason]) -> [SingleMultiModel]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/children","title":"case children","type":"case"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/data","title":"case data","type":"case"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/nearbyenabled","title":"case nearbyEnabled","type":"case"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/payload","title":"case payload","type":"case"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/tags","title":"case tags","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlemultimodel\/codabelkeys","title":"SingleMultiModel.CodabelKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/diffid-swift.property","title":"var diffId: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/diffid-swift.typealias","title":"SingleMultiModel.DiffId","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/comparecontent(_:_:)","title":"static func compareContent(SingleMultiModel, SingleMultiModel) -> Bool","type":"method"}],"path":"\/documentation\/divar\/singlemultimodel\/diffaware-implementations","title":"DiffAware Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodel\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/singlemultimodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlemultimodel","title":"SingleMultiModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodelresults\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/singlemultimodelresults\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/singlemultimodelresults\/init(results:)","title":"init(results: [SingleMultiModel])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodelresults\/results","title":"var results: [SingleMultiModel]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodelresults\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultimodelresults\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/singlemultimodelresults\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlemultimodelresults","title":"SingleMultiModelResults","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultireportpayload\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/singlemultireportpayload\/init(loginrequired:descriptionrequired:descriptionneeded:)","title":"init(loginRequired: Bool, descriptionRequired: Bool, descriptionNeeded: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultireportpayload\/descriptionneeded","title":"var descriptionNeeded: Bool","type":"property"},{"path":"\/documentation\/divar\/singlemultireportpayload\/descriptionrequired","title":"var descriptionRequired: Bool","type":"property"},{"path":"\/documentation\/divar\/singlemultireportpayload\/loginrequired","title":"var loginRequired: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultireportpayload\/nextaction(islogin:)","title":"func nextAction(isLogin: Bool) -> SingleMultiReportNextAction","type":"method"}],"path":"\/documentation\/divar\/singlemultireportpayload","title":"SingleMultiReportPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestion\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/smartsuggestion\/init(log:)","title":"init(log: SmartSuggestionLog?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestion\/log","title":"let log: SmartSuggestionLog?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/log","title":"case log","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/smartsuggestion\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/smartsuggestion\/codingkeys","title":"SmartSuggestion.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/smartsuggestion","title":"SmartSuggestion","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionitem\/init(category:token:)","title":"init(category: String, token: String?)","type":"init"},{"path":"\/documentation\/divar\/smartsuggestionitem\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionitem\/category","title":"var category: String","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionitem\/createat","title":"var createAt: TimeInterval","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionitem\/token","title":"var token: String?","type":"property"}],"path":"\/documentation\/divar\/smartsuggestionitem","title":"SmartSuggestionItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/init(maxlength:)","title":"init(maxLength: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/maxlength","title":"let maxLength: Int?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/maxlength","title":"case maxLength","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/smartsuggestionlimits\/codingkeys","title":"SmartSuggestionLimits.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/smartsuggestionlimits","title":"SmartSuggestionLimits","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlog\/init(enabled:postlistcount:postcount:contactcount:)","title":"init(enabled: Bool?, postListCount: Int?, postCount: Int?, contactCount: Int?)","type":"init"},{"path":"\/documentation\/divar\/smartsuggestionlog\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlog\/contactcount","title":"let contactCount: Int?","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionlog\/enabled","title":"let enabled: Bool?","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionlog\/postcount","title":"let postCount: Int?","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionlog\/postlistcount","title":"let postListCount: Int?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/contactcount","title":"case contactCount","type":"case"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/enabled","title":"case enabled","type":"case"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/postcount","title":"case postCount","type":"case"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/postlistcount","title":"case postListCount","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/smartsuggestionlog\/codingkeys","title":"SmartSuggestionLog.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/smartsuggestionlog","title":"SmartSuggestionLog","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/init(key:postlist:post:contact:)","title":"init(key: String, postList: [SmartSuggestionItem], post: [SmartSuggestionItem], contact: [SmartSuggestionItem])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/contact","title":"var contact: [SmartSuggestionItem]","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/key","title":"var key: String","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/post","title":"var post: [SmartSuggestionItem]","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/postlist","title":"var postList: [SmartSuggestionItem]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/appendlog(log:fortype:)","title":"func appendLog(log: SmartSuggestionItem, forType: SmartSuggestionLogType)","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/removelastlog(fortype:)","title":"func removeLastLog(forType: SmartSuggestionLogType)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/init(row:)","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchall(_:keys:)-1vqv2","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchall(_:keys:)-6sbp7","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchcursor(_:keys:)-6tbfr","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchcursor(_:keys:)-di40","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchone(_:key:)-7r753","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchone(_:key:)-nada","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"}],"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/annotated(with:)-50k12","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/annotated(with:)-5c9if","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/annotated(with:)-7urd8","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/annotated(with:)-8wkvu","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/belongsto(_:key:using:)-1f5x6","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/belongsto(_:key:using:)-5htd2","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/deleteall(_:keys:)-4jdcp","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/deleteall(_:keys:)-773hl","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/deleteone(_:key:)-6f0xb","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/deleteone(_:key:)-6phzt","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/exists(_:key:)-4uh7t","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/exists(_:key:)-8qi2x","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/filter(_:)-790st","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/filter(_:)-9oif3","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/filter(key:)-4737w","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/filter(key:)-gyu6","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/filter(keys:)-1jbho","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/filter(keys:)-62zbu","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/hasmany(_:key:using:)-266rc","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/hasmany(_:key:using:)-8vtew","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/hasone(_:key:using:)-23odh","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/hasone(_:key:using:)-856s0","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/order(_:)-1ursc","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/order(_:)-5es5z","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/select(_:)-3216s","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/select(_:)-48p75","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/select(_:as:)-oawn","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/select(_:as:)-tm6d","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/smartsuggestionsrecentactions\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/smartsuggestionsrecentactions","title":"SmartSuggestionsRecentActions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/init(reason:)","title":"init(reason: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/reason","title":"let reason: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/reason","title":"case reason","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/socketerrorreasonstruct\/codingkeys","title":"SocketErrorReasonStruct.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/socketerrorreasonstruct","title":"SocketErrorReasonStruct","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/init(response:)","title":"init(response: SocketErrorReasonStruct?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/response","title":"let response: SocketErrorReasonStruct?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/response","title":"case response","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/socketerrorresponsestruct\/codingkeys","title":"SocketErrorResponseStruct.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/socketerrorresponsestruct","title":"SocketErrorResponseStruct","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/softhardupdatepayload\/init(updatetype:updateurl:)","title":"init(updateType: UpdateType, updateUrl: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/softhardupdatepayload\/updatetype","title":"let updateType: UpdateType","type":"property"},{"path":"\/documentation\/divar\/softhardupdatepayload\/updateurl","title":"let updateUrl: URL","type":"property"}],"path":"\/documentation\/divar\/softhardupdatepayload","title":"SoftHardUpdatePayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sonnatconfiguration\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sonnatconfiguration\/config(data:)","title":"func config(data: IntroConfig?)","type":"method"}],"path":"\/documentation\/divar\/sonnatconfiguration","title":"SonnatConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/splitbuttonbarconfig\/init(primarybuttontitle:primarytext:defaultprimaryenabled:)","title":"init(primaryButtonTitle: String, primaryText: String, defaultPrimaryEnabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/splitbuttonbarconfig\/defaultprimaryenabled","title":"let defaultPrimaryEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/splitbuttonbarconfig\/primarybuttontitle","title":"let primaryButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/splitbuttonbarconfig\/primarytext","title":"let primaryText: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/splitbuttonbarconfig\/empty","title":"static var empty: SplitButtonBarConfig","type":"property"}],"path":"\/documentation\/divar\/splitbuttonbarconfig","title":"SplitButtonBarConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/standarderror\/init(error:code:message:)","title":"init(error: String?, code: Int?, message: String?)","type":"init"},{"path":"\/documentation\/divar\/standarderror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/standarderror\/code","title":"let code: Int?","type":"property"},{"path":"\/documentation\/divar\/standarderror\/display","title":"var display: DError.DisplayType?","type":"property"},{"path":"\/documentation\/divar\/standarderror\/error","title":"let error: String?","type":"property"},{"path":"\/documentation\/divar\/standarderror\/message","title":"let message: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/standarderror\/fromresponsedata(_:)","title":"static func fromResponseData(Data?) -> StandardError?","type":"method"}],"path":"\/documentation\/divar\/standarderror","title":"StandardError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/startpaymenttransactionrequestbuilder\/init(transactiontoken:)","title":"init(transactionToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/startpaymenttransactionrequestbuilder\/transactiontoken","title":"let transactionToken: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/startpaymenttransactionrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> GRPCWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/startpaymenttransactionrequestbuilder","title":"StartPaymentTransactionRequestBuilder","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbareurekadata\/==(_:_:)","title":"static func == (StepIndicatorBarEurekaData, StepIndicatorBarEurekaData) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbareurekadata\/init(totalpage:currentpage:)","title":"init(totalPage: Int32, currentPage: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbareurekadata\/currentpage","title":"var currentPage: Int32","type":"property"},{"path":"\/documentation\/divar\/stepindicatorbareurekadata\/totalpage","title":"var totalPage: Int32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbareurekadata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/stepindicatorbareurekadata\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/stepindicatorbareurekadata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/stepindicatorbareurekadata","title":"StepIndicatorBarEurekaData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/stickycategory\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"path":"\/documentation\/divar\/stickycategory\/init(title:property:icon:)","title":"init(title: String, property: Schema?, icon: BaseIcon?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/stickycategory\/icon","title":"var icon: BaseIcon?","type":"property"},{"path":"\/documentation\/divar\/stickycategory\/property","title":"var property: Schema?","type":"property"},{"path":"\/documentation\/divar\/stickycategory\/title","title":"var title: String","type":"property"}],"path":"\/documentation\/divar\/stickycategory","title":"StickyCategory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/stickywidgetactionwrapper\/init(widget:)","title":"init(widget: Widgets_StickyWidget)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/stickywidgetactionwrapper\/primaryaction","title":"var primaryAction: Widgets_Action?","type":"property"},{"path":"\/documentation\/divar\/stickywidgetactionwrapper\/secondaryaction","title":"var secondaryAction: Widgets_Action?","type":"property"},{"path":"\/documentation\/divar\/stickywidgetactionwrapper\/widget","title":"let widget: Widgets_StickyWidget","type":"property"}],"path":"\/documentation\/divar\/stickywidgetactionwrapper","title":"StickyWidgetActionWrapper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/street\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/street\/init(name:mainstreet:)","title":"init(name: String, mainStreet: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/street\/mainstreet","title":"var mainStreet: String","type":"property"},{"path":"\/documentation\/divar\/street\/name","title":"var name: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/street\/codingkeys\/mainstreet","title":"case mainStreet","type":"case"},{"path":"\/documentation\/divar\/street\/codingkeys\/name","title":"case name","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/street\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/street\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/street\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/street\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/street\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/street\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/street\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/street\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/street\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/street\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/street\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/street\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/street\/codingkeys","title":"Street.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/street","title":"Street","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/streetlistresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/streetlistresponse\/init(list:)","title":"init(list: [Street])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/streetlistresponse\/list","title":"var list: [Street]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/list","title":"case list","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/streetlistresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/streetlistresponse\/codingkeys","title":"StreetListResponse.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/streetlistresponse","title":"StreetListResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/stringbacked\/init(_:)","title":"init(Value?)","type":"init"},{"path":"\/documentation\/divar\/stringbacked\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/stringbacked\/wrappedvalue","title":"var wrappedValue: Value?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/stringbacked\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/divar\/stringbacked","title":"StringBacked","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/submissionmessage\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"path":"\/documentation\/divar\/submissionmessage\/init(protomodel:)","title":"init?(protoModel: Widgets_SchemaResponse.SubmissionMessage)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/submissionmessage\/message","title":"let message: String?","type":"property"},{"path":"\/documentation\/divar\/submissionmessage\/type","title":"let type: SubmissionMessageType?","type":"property"}],"path":"\/documentation\/divar\/submissionmessage","title":"SubmissionMessage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/submitbutton\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"path":"\/documentation\/divar\/submitbutton\/init(protomodel:)","title":"init?(protoModel: Widgets_SchemaResponse)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/submitbutton\/formbuttonbartype","title":"var formButtonBarType: BaseFormBottomBarType","type":"property"},{"path":"\/documentation\/divar\/submitbutton\/text","title":"let text: String?","type":"property"},{"path":"\/documentation\/divar\/submitbutton\/type","title":"let type: String","type":"property"}],"path":"\/documentation\/divar\/submitbutton","title":"SubmitButton","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/submitinforequest\/init(usertype:)","title":"init(userType: UserType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/submitinforequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/submitinforequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/submitinforequest","title":"SubmitInfoRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/submitinforequestbuilder\/init(usertype:)","title":"init(userType: UserType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/submitinforequestbuilder\/path","title":"var path: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/submitinforequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/submitinforequestbuilder","title":"SubmitInfoRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/submitrequeststruct\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/submitrequeststruct\/init(editid:newdata:previousdata:schemaresponse:extradata:)","title":"init(editID: String?, newData: [String : Any], previousData: [String : Any], schemaResponse: SchemaResponseModel?, extraData: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/submitrequeststruct\/editid","title":"var editID: String?","type":"property"},{"path":"\/documentation\/divar\/submitrequeststruct\/extradata","title":"var extraData: Any?","type":"property"},{"path":"\/documentation\/divar\/submitrequeststruct\/newdata","title":"var newData: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/submitrequeststruct\/previousdata","title":"var previousData: [String : Any]","type":"property"},{"path":"\/documentation\/divar\/submitrequeststruct\/schemaresponse","title":"var schemaResponse: SchemaResponseModel?","type":"property"}],"path":"\/documentation\/divar\/submitrequeststruct","title":"SubmitRequestStruct","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/submitvalidationerror\/init(code:message:errors:error:properties:)","title":"init(code: Int?, message: String?, errors: [String]?, error: String?, properties: [String : SubmitValidationError]?)","type":"init"},{"path":"\/documentation\/divar\/submitvalidationerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/submitvalidationerror\/code","title":"let code: Int?","type":"property"},{"path":"\/documentation\/divar\/submitvalidationerror\/error","title":"let error: String?","type":"property"},{"path":"\/documentation\/divar\/submitvalidationerror\/errors","title":"let errors: [String]?","type":"property"},{"path":"\/documentation\/divar\/submitvalidationerror\/message","title":"let message: String?","type":"property"},{"path":"\/documentation\/divar\/submitvalidationerror\/properties","title":"let properties: [String : SubmitValidationError]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/code","title":"case code","type":"case"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/error","title":"case error","type":"case"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/errors","title":"case errors","type":"case"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/message","title":"case message","type":"case"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/properties","title":"case properties","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/submitvalidationerror\/codingkeys","title":"SubmitValidationError.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/submitvalidationerror","title":"SubmitValidationError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptiondetailwithtabbasedrequest\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptiondetailwithtabbasedrequest\/method","title":"var method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/subscriptiondetailwithtabbasedrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/subscriptiondetailwithtabbasedrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/subscriptiondetailwithtabbasedrequest\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/divar\/subscriptiondetailwithtabbasedrequest\/tabidentifier","title":"var tabIdentifier: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptiondetailwithtabbasedrequest\/getrequestfortab(identifier:)","title":"func getRequestForTab(identifier: String) -> TabularWidgetBasedRequest?","type":"method"}],"path":"\/documentation\/divar\/subscriptiondetailwithtabbasedrequest","title":"SubscriptionDetailWithTabBasedRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptiondetailwithtabbasedrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptiondetailwithtabbasedrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"},{"path":"\/documentation\/divar\/subscriptiondetailwithtabbasedrequestbuilder\/decoraterequestbuilder(with:)","title":"func decorateRequestBuilder(with: String) -> RESTWidgetBasedRequestBuilder & WidgetBasedConfigurable","type":"method"}],"path":"\/documentation\/divar\/subscriptiondetailwithtabbasedrequestbuilder","title":"SubscriptionDetailWithTabBasedRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptiondetailsrequestbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptiondetailsrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/subscriptiondetailsrequestbuilder","title":"SubscriptionDetailsRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptionstatusrequest\/init(usertype:)","title":"init(userType: UserType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptionstatusrequest\/defaultpagination","title":"var defaultPagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/subscriptionstatusrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/subscriptionstatusrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/subscriptionstatusrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/subscriptionstatusrequest","title":"SubscriptionStatusRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptionstatusrequestbuilder\/init(usertype:)","title":"init(userType: UserType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptionstatusrequestbuilder\/config","title":"var config: WidgetBasedConfig","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/subscriptionstatusrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/subscriptionstatusrequestbuilder","title":"SubscriptionStatusRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/successmessage\/init(message:)","title":"init(message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/successmessage\/message","title":"let message: String?","type":"property"}],"path":"\/documentation\/divar\/successmessage","title":"SuccessMessage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestion\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/suggestion\/init(id:text:)","title":"init(id: String, text: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestion\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/divar\/suggestion\/text","title":"let text: String?","type":"property"}],"path":"\/documentation\/divar\/suggestion","title":"Suggestion","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionchoices\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/suggestionchoices\/init(value:title:subtitle:count:)","title":"init(value: ChoiceValue?, title: String?, subtitle: String?, count: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionchoices\/count","title":"let count: String?","type":"property"},{"path":"\/documentation\/divar\/suggestionchoices\/subtitle","title":"let subtitle: String?","type":"property"},{"path":"\/documentation\/divar\/suggestionchoices\/title","title":"let title: String?","type":"property"},{"path":"\/documentation\/divar\/suggestionchoices\/value","title":"let value: ChoiceValue?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/count","title":"case count","type":"case"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/subtitle","title":"case subtitle","type":"case"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/title","title":"case title","type":"case"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/value","title":"case value","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/suggestionchoices\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/suggestionchoices\/codingkeys","title":"SuggestionChoices.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/suggestionchoices","title":"SuggestionChoices","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/switchbarconfig\/init(labeltitle:defaultvalue:)","title":"init(labelTitle: String, defaultValue: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/switchbarconfig\/defaultvalue","title":"let defaultValue: Bool","type":"property"},{"path":"\/documentation\/divar\/switchbarconfig\/labeltitle","title":"let labelTitle: String","type":"property"}],"path":"\/documentation\/divar\/switchbarconfig","title":"SwitchBarConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/sysctl\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sysctl\/activecpus","title":"static var activeCPUs: Int32","type":"property"},{"path":"\/documentation\/divar\/sysctl\/boottime","title":"static var bootTime: Int64","type":"property"},{"path":"\/documentation\/divar\/sysctl\/hostname","title":"static var hostName: String","type":"property"},{"path":"\/documentation\/divar\/sysctl\/kernelversion","title":"static var kernelVersion: String","type":"property"},{"path":"\/documentation\/divar\/sysctl\/machine","title":"static var machine: String","type":"property"},{"path":"\/documentation\/divar\/sysctl\/model","title":"static var model: String","type":"property"},{"path":"\/documentation\/divar\/sysctl\/osrelease","title":"static var osRelease: String","type":"property"},{"path":"\/documentation\/divar\/sysctl\/ostype","title":"static var osType: String","type":"property"},{"path":"\/documentation\/divar\/sysctl\/osversion","title":"static var osVersion: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sysctl\/data(for:)","title":"static func data(for: [Int32]) throws -> [Int8]","type":"method"},{"path":"\/documentation\/divar\/sysctl\/keys(for:)","title":"static func keys(for: String) throws -> [Int32]","type":"method"},{"path":"\/documentation\/divar\/sysctl\/string(for:)-2ed9y","title":"static func string(for: String) throws -> String","type":"method"},{"path":"\/documentation\/divar\/sysctl\/string(for:)-2f9wj","title":"static func string(for: [Int32]) throws -> String","type":"method"},{"path":"\/documentation\/divar\/sysctl\/string(for:)-2yqet","title":"static func string(for: Int32...) throws -> String","type":"method"},{"path":"\/documentation\/divar\/sysctl\/value(oftype:forkeys:)-24lgl","title":"static func value<T>(ofType: T.Type, forKeys: Int32...) throws -> T","type":"method"},{"path":"\/documentation\/divar\/sysctl\/value(oftype:forkeys:)-9x2b8","title":"static func value<T>(ofType: T.Type, forKeys: [Int32]) throws -> T","type":"method"},{"path":"\/documentation\/divar\/sysctl\/value(oftype:forname:)","title":"static func value<T>(ofType: T.Type, forName: String) throws -> T","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/sysctl\/error\/invalidsize","title":"case invalidSize","type":"case"},{"path":"\/documentation\/divar\/sysctl\/error\/malformedutf8","title":"case malformedUTF8","type":"case"},{"path":"\/documentation\/divar\/sysctl\/error\/posixerror(_:)","title":"case posixError(POSIXErrorCode)","type":"case"},{"path":"\/documentation\/divar\/sysctl\/error\/unknown","title":"case unknown","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sysctl\/error\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/divar\/sysctl\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sysctl\/error\/asaferror(or:)","title":"func asAFError(or: () -> AFError) -> AFError","type":"method"},{"path":"\/documentation\/divar\/sysctl\/error\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/divar\/sysctl\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/divar\/sysctl\/error","title":"Sysctl.Error","type":"enum"}],"path":"\/documentation\/divar\/sysctl","title":"Sysctl","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/tab\/==(_:_:)","title":"static func == (Tab, Tab) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/tab\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tab\/emptystatemessage","title":"let emptyStateMessage: String?","type":"property"},{"path":"\/documentation\/divar\/tab\/filters","title":"let filters: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/tab\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/divar\/tab\/type","title":"let type: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/tab\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/tab\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/tab\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/tab","title":"Tab","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/tabdata\/init(postsviewmodel:title:)","title":"init(postsViewModel: PostsViewModelProtocol, title: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tabdata\/postsviewmodel","title":"let postsViewModel: PostsViewModelProtocol","type":"property"},{"path":"\/documentation\/divar\/tabdata\/title","title":"let title: String","type":"property"}],"path":"\/documentation\/divar\/tabdata","title":"TabData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/tablist\/init(json:)","title":"init?(json: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tablist\/currenttab","title":"let currentTab: Int","type":"property"},{"path":"\/documentation\/divar\/tablist\/tabs","title":"let tabs: [Tab]","type":"property"},{"path":"\/documentation\/divar\/tablist\/tooltip","title":"let tooltip: TooltipTab?","type":"property"}],"path":"\/documentation\/divar\/tablist","title":"TabList","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestion\/==(_:_:)","title":"static func == (TagListSuggestion, TagListSuggestion) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestion\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"path":"\/documentation\/divar\/taglistsuggestion\/init(widgettype:data:anydata:suggestiondict:)","title":"init(widgetType: TagListSuggestionWidgetType, data: TagListSuggestionData?, anyData: Any?, suggestionDict: [String : Any]?)","type":"init"},{"path":"\/documentation\/divar\/taglistsuggestion\/init(with:)","title":"init(with: UIOptionsDataStruct?)","type":"init"},{"path":"\/documentation\/divar\/taglistsuggestion\/init(with:image:)","title":"init(with: Suggestion, image: LocalImage?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestion\/anydata","title":"let anyData: Any?","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/data","title":"let data: TagListSuggestionData?","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/filterset","title":"var filterSet: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/iconasset","title":"var iconAsset: ImageAsset?","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/identifier","title":"var identifier: UUID","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/isactivated","title":"var isActivated: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/isremovebuttonhiddenonactivation","title":"var isRemoveButtonHiddenOnActivation: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/shouldshowicon","title":"var shouldShowIcon: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/shouldshowiconandremovebutton","title":"var shouldShowIconAndRemoveButton: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/shouldshowremovebutton","title":"var shouldShowRemoveButton: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/suggestiondict","title":"let suggestionDict: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/title","title":"var title: String","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/widgettype","title":"let widgetType: TagListSuggestionWidgetType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestion\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/taglistsuggestion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestion\/isfilled","title":"var isFilled: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/nonremovable","title":"var nonRemovable: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/showicon","title":"var showIcon: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/showiconandremovebutton","title":"var showIconAndRemoveButton: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/showremovebutton","title":"var showRemoveButton: Bool","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestion\/text","title":"var text: String?","type":"property"}],"path":"\/documentation\/divar\/taglistsuggestion\/taglistitem-implementations","title":"TagListItem Implementations","type":"symbol"}],"path":"\/documentation\/divar\/taglistsuggestion","title":"TagListSuggestion","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestiondata\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"path":"\/documentation\/divar\/taglistsuggestiondata\/init(title:hasfilter:icon:image:key:value:schema:)","title":"init(title: String?, hasFilter: Bool?, icon: String?, image: LocalImage?, key: String?, value: [String : Any]?, schema: Schema?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestiondata\/hasfilter","title":"let hasFilter: Bool?","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestiondata\/icon","title":"let icon: String?","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestiondata\/image","title":"let image: LocalImage?","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestiondata\/key","title":"let key: String?","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestiondata\/schema","title":"var schema: Schema?","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestiondata\/title","title":"let title: String?","type":"property"},{"path":"\/documentation\/divar\/taglistsuggestiondata\/value","title":"let value: [String : Any]?","type":"property"}],"path":"\/documentation\/divar\/taglistsuggestiondata","title":"TagListSuggestionData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/tagoverlaymodel\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tagoverlaymodel\/icon","title":"let icon: String?","type":"property"},{"path":"\/documentation\/divar\/tagoverlaymodel\/iconcolor","title":"let iconColor: String?","type":"property"},{"path":"\/documentation\/divar\/tagoverlaymodel\/isiconleft","title":"let isIconLeft: Bool?","type":"property"},{"path":"\/documentation\/divar\/tagoverlaymodel\/newiconcolor","title":"let newIconColor: BaseIcon?","type":"property"},{"path":"\/documentation\/divar\/tagoverlaymodel\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/divar\/tagoverlaymodel","title":"TagOverlayModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/termsandconditionsviewmodel\/init(termofservicesurl:privacypoliciesurl:)","title":"init(termOfServicesURL: URL, privacyPoliciesURL: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/termsandconditionsviewmodel\/rulesacceptancetitle","title":"var rulesAcceptanceTitle: String","type":"property"}],"path":"\/documentation\/divar\/termsandconditionsviewmodel","title":"TermsAndConditionsViewModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldassociatedkeys\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldassociatedkeys\/maxlength","title":"static var maxLength: Int?","type":"property"}],"path":"\/documentation\/divar\/textfieldassociatedkeys","title":"TextFieldAssociatedKeys","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldconfig\/init(text:placeholder:keyboardtype:handler:hint:)","title":"init(text: String?, placeholder: String?, keyboardType: UIKeyboardType, handler: TextFieldHintViewHandler?, hint: HintType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldconfig\/handler","title":"var handler: TextFieldHintViewHandler?","type":"property"},{"path":"\/documentation\/divar\/textfieldconfig\/hint","title":"var hint: HintType","type":"property"},{"path":"\/documentation\/divar\/textfieldconfig\/keyboardtype","title":"var keyboardType: UIKeyboardType","type":"property"},{"path":"\/documentation\/divar\/textfieldconfig\/placeholder","title":"var placeholder: String?","type":"property"},{"path":"\/documentation\/divar\/textfieldconfig\/text","title":"var text: String?","type":"property"}],"path":"\/documentation\/divar\/textfieldconfig","title":"TextFieldConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldmodel\/init(text:placeholder:keyboardtype:textalignment:iseditable:accessorytoolbar:minimumcharacters:)","title":"init(text: String?, placeHolder: String?, keyboardType: UIKeyboardType?, textAlignment: NSTextAlignment?, isEditable: Bool?, accessoryToolbar: UIView?, minimumCharacters: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textfieldmodel\/accessorytoolbar","title":"let accessoryToolbar: UIView?","type":"property"},{"path":"\/documentation\/divar\/textfieldmodel\/iseditable","title":"let isEditable: Bool?","type":"property"},{"path":"\/documentation\/divar\/textfieldmodel\/keyboardtype","title":"let keyboardType: UIKeyboardType?","type":"property"},{"path":"\/documentation\/divar\/textfieldmodel\/minimumcharacters","title":"let minimumCharacters: Int?","type":"property"},{"path":"\/documentation\/divar\/textfieldmodel\/placeholder","title":"let placeHolder: String?","type":"property"},{"path":"\/documentation\/divar\/textfieldmodel\/text","title":"let text: String?","type":"property"},{"path":"\/documentation\/divar\/textfieldmodel\/textalignment","title":"let textAlignment: NSTextAlignment?","type":"property"}],"path":"\/documentation\/divar\/textfieldmodel","title":"TextFieldModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/textstruct\/init(enable:text:)","title":"init(enable: Bool?, text: String?)","type":"init"},{"path":"\/documentation\/divar\/textstruct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/textstruct\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textstruct\/enable","title":"let enable: Bool?","type":"property"},{"path":"\/documentation\/divar\/textstruct\/text","title":"let text: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/textstruct\/codingkeys\/enable","title":"case enable","type":"case"},{"path":"\/documentation\/divar\/textstruct\/codingkeys\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/textstruct\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/textstruct\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/textstruct\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textstruct\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/textstruct\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/textstruct\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/textstruct\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textstruct\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/textstruct\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/textstruct\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textstruct\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/textstruct\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/textstruct\/codingkeys","title":"TextStruct.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/textstruct","title":"TextStruct","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/titlerowmodel\/init(title:)","title":"init(title: String?)","type":"init"},{"path":"\/documentation\/divar\/titlerowmodel\/init(title:color:)","title":"init(title: String?, color: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/titlerowmodel\/color","title":"let color: String?","type":"property"},{"path":"\/documentation\/divar\/titlerowmodel\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/divar\/titlerowmodel","title":"TitleRowModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/titlevalue\/init(title:value:)","title":"init(title: T, value: S)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/titlevalue\/title","title":"let title: T","type":"property"},{"path":"\/documentation\/divar\/titlevalue\/value","title":"let value: S","type":"property"}],"path":"\/documentation\/divar\/titlevalue","title":"TitleValue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltiptab\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/tooltiptab\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/divar\/tooltiptab\/text","title":"let text: String","type":"property"}],"path":"\/documentation\/divar\/tooltiptab","title":"TooltipTab","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transactionactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transactionactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> TransactionActionHandlerProtcol","type":"method"}],"path":"\/documentation\/divar\/transactionactionbuilder","title":"TransactionActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/twinbuttonsconfig\/init(primarybuttontitle:secondarybuttontitle:)","title":"init(primaryButtonTitle: String, secondaryButtonTitle: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/twinbuttonsconfig\/primarybuttontitle","title":"let primaryButtonTitle: String","type":"property"},{"path":"\/documentation\/divar\/twinbuttonsconfig\/secondarybuttontitle","title":"let secondaryButtonTitle: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/twinbuttonsconfig\/empty","title":"static var empty: TwinButtonsConfig","type":"property"}],"path":"\/documentation\/divar\/twinbuttonsconfig","title":"TwinButtonsConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/init(json:)","title":"init(json: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/enumname","title":"let enumName: String?","type":"property"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/enumstring","title":"let enumString: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/enumname","title":"case enumName","type":"case"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/enumstring","title":"case enumString","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/uioptionbrandshortcut\/codingkeys","title":"UIOptionBrandShortcut.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/uioptionbrandshortcut","title":"UIOptionBrandShortcut","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionbrandsuggestion\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/uioptionbrandsuggestion\/init(json:)","title":"init(json: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionbrandsuggestion\/items","title":"let items: [UIOptionSuggestionItem]?","type":"property"},{"path":"\/documentation\/divar\/uioptionbrandsuggestion\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/divar\/uioptionbrandsuggestion","title":"UIOptionBrandSuggestion","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionlegendtitle\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/uioptionlegendtitle\/init(json:)","title":"init(json: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionlegendtitle\/imageurl","title":"let imageUrl: String?","type":"property"},{"path":"\/documentation\/divar\/uioptionlegendtitle\/subtitle","title":"let subtitle: String?","type":"property"},{"path":"\/documentation\/divar\/uioptionlegendtitle\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/divar\/uioptionlegendtitle","title":"UIOptionLegendTitle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/init(json:)","title":"init(json: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/enumname","title":"let enumName: String?","type":"property"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/enumstring","title":"let enumString: String?","type":"property"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/imageurl","title":"let imageUrl: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/enumname","title":"case enumName","type":"case"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/enumstring","title":"case enumString","type":"case"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/imageurl","title":"case imageUrl","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/uioptionsuggestionitem\/codingkeys","title":"UIOptionSuggestionItem.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/uioptionsuggestionitem","title":"UIOptionSuggestionItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/init(children:enumname:enumstring:iconurl:icondarkurl:hint:helpertext:headerchildren:)","title":"init(children: [UIOptionsDataStruct]?, enumName: String?, enumString: String?, iconUrl: String?, iconDarkUrl: String?, hint: String?, helperText: String?, headerChildren: [UIOptionsDataStruct]?)","type":"init"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/init(property:)","title":"init(property: Schema)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/children","title":"var children: [UIOptionsDataStruct]?","type":"property"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/enumname","title":"let enumName: String?","type":"property"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/enumstring","title":"let enumString: String?","type":"property"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/haschild","title":"var hasChild: Bool","type":"property"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/helpertext","title":"var helperText: String?","type":"property"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/hint","title":"var hint: String?","type":"property"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/icondarkurl","title":"let iconDarkUrl: String?","type":"property"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/iconurl","title":"let iconUrl: String?","type":"property"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/legendrow","title":"let legendRow: UIOptionLegendTitle?","type":"property"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/shortcutchildren","title":"let shortcutChildren: [UIOptionBrandShortcut]?","type":"property"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/suggestion","title":"var suggestion: UIOptionBrandSuggestion?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/getenumnamefor(enumstring:with:)","title":"func getEnumNameFor(enumString: String, with: UIOptionsDataStruct?) -> String?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/children","title":"case children","type":"case"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/enumname","title":"case enumName","type":"case"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/enumstring","title":"case enumString","type":"case"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/helpertext","title":"case helperText","type":"case"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/hint","title":"case hint","type":"case"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/icondarkurl","title":"case iconDarkUrl","type":"case"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/iconurl","title":"case iconUrl","type":"case"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/legendrow","title":"case legendRow","type":"case"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/shortcutchildren","title":"case shortcutChildren","type":"case"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/suggestion","title":"case suggestion","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/uioptionsdatastruct\/codingkeys","title":"UIOptionsDataStruct.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/==(_:_:)","title":"static func == (UIOptionsDataStruct, UIOptionsDataStruct) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionsdatastruct\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/uioptionsdatastruct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/uioptionsdatastruct","title":"UIOptionsDataStruct","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionssearchstruct\/init(enabled:min:searchkey:)","title":"init(enabled: Bool?, min: Int?, searchKey: String?)","type":"init"},{"path":"\/documentation\/divar\/uioptionssearchstruct\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uioptionssearchstruct\/enabled","title":"let enabled: Bool?","type":"property"},{"path":"\/documentation\/divar\/uioptionssearchstruct\/min","title":"let min: Int?","type":"property"},{"path":"\/documentation\/divar\/uioptionssearchstruct\/searchkey","title":"let searchKey: String?","type":"property"}],"path":"\/documentation\/divar\/uioptionssearchstruct","title":"UIOptionsSearchStruct","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/uischema\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"path":"\/documentation\/divar\/uischema\/init(title:secondarytitle:description:widget:field:placeholder:order:inputtype:help:options:readonly:enums:enumnames:data:datatitle:pinneddata:pinneddatatitle:search:autoopen:multiline:style:iconurl:packagedata:defaultbuttonsubtitle:postset-6zbf4","title":"init(title: String?, secondaryTitle: String?, description: String?, widget: String?, field: String?, placeholder: String?, order: [String]?, inputType: String?, help: String?, options: [String : Any]?, readOnly: Bool?, enums: [Any]?, enumNames: [String]?, data: UIOptionsDataStruct?, dataTitle: String?, pinnedData: UIOptionsDataStruct?, pinnedDataTitle: String?, search: UIOptionsSearchStruct?, autoOpen: String?, multiLine: Bool?, style: String?, iconUrl: String?, packageData: [PackageModel]?, defaultButtonSubtitle: String?, postSetRefetch: Bool, placeholdersCount: Int?, valueholder: String?, hintSwitch: TextStruct?, minWidth: Int?, minHeight: Int?, maxWidth: Int?, maxHeight: Int?, suggestedMaxBytes: Int?, aspectRatio: String?, hasDivider: Bool, validatorTitle: String?, validatorSubtitle: String?, validationApi: String?, validatorPlaceholder: String?, validatorButtonTitle: String?, validatorCancelButtonTitle: String?, validatorResetButtonTitle: String?, validatorResetTitle: String?, validatorResetConfirmButton: String?, validatorResetCancelButton: String?, validatorEmptyTextError: String?, currentPage: Int?, totalPage: Int?, ignoreOn: Any?, primaryButtonText: String?, zeroValueHolder: String?, pageDescription: String?, dividedBy: Int?, fraction: Int?, pageValueHolder: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uischema\/aspectratio","title":"let aspectRatio: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/autoopen","title":"var autoOpen: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/currentpage","title":"let currentPage: Int?","type":"property"},{"path":"\/documentation\/divar\/uischema\/data","title":"var data: UIOptionsDataStruct?","type":"property"},{"path":"\/documentation\/divar\/uischema\/datatitle","title":"var dataTitle: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/defaultbuttonsubtitle","title":"let defaultButtonSubtitle: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/dividedby","title":"let dividedBy: Int?","type":"property"},{"path":"\/documentation\/divar\/uischema\/enumnames","title":"let enumNames: [String]?","type":"property"},{"path":"\/documentation\/divar\/uischema\/enums","title":"let enums: [Any]?","type":"property"},{"path":"\/documentation\/divar\/uischema\/field","title":"let field: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/fraction","title":"let fraction: Int?","type":"property"},{"path":"\/documentation\/divar\/uischema\/hasdivider","title":"let hasDivider: Bool","type":"property"},{"path":"\/documentation\/divar\/uischema\/help","title":"let help: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/hintswitch","title":"let hintSwitch: TextStruct?","type":"property"},{"path":"\/documentation\/divar\/uischema\/iconurl","title":"let iconUrl: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/ignoreon","title":"let ignoreOn: Any?","type":"property"},{"path":"\/documentation\/divar\/uischema\/inputtype","title":"let inputType: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/maxheight","title":"let maxHeight: Int?","type":"property"},{"path":"\/documentation\/divar\/uischema\/maxwidth","title":"let maxWidth: Int?","type":"property"},{"path":"\/documentation\/divar\/uischema\/minheight","title":"let minHeight: Int?","type":"property"},{"path":"\/documentation\/divar\/uischema\/minwidth","title":"let minWidth: Int?","type":"property"},{"path":"\/documentation\/divar\/uischema\/multiline","title":"let multiLine: Bool?","type":"property"},{"path":"\/documentation\/divar\/uischema\/options","title":"let options: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/uischema\/order","title":"let order: [String]?","type":"property"},{"path":"\/documentation\/divar\/uischema\/packagedata","title":"let packageData: [PackageModel]?","type":"property"},{"path":"\/documentation\/divar\/uischema\/pagedescription","title":"let pageDescription: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/pagevalueholder","title":"let pageValueHolder: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/pinneddata","title":"var pinnedData: UIOptionsDataStruct?","type":"property"},{"path":"\/documentation\/divar\/uischema\/pinneddatatitle","title":"var pinnedDataTitle: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/placeholder","title":"let placeholder: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/placeholderscount","title":"let placeholdersCount: Int?","type":"property"},{"path":"\/documentation\/divar\/uischema\/postsetrefetch","title":"let postSetRefetch: Bool","type":"property"},{"path":"\/documentation\/divar\/uischema\/primarybuttontext","title":"let primaryButtonText: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/readonly","title":"let readOnly: Bool?","type":"property"},{"path":"\/documentation\/divar\/uischema\/search","title":"let search: UIOptionsSearchStruct?","type":"property"},{"path":"\/documentation\/divar\/uischema\/secondarytitle","title":"let secondaryTitle: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/style","title":"let style: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/suggestedmaxbytes","title":"let suggestedMaxBytes: Int?","type":"property"},{"path":"\/documentation\/divar\/uischema\/title","title":"let title: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/totalpage","title":"let totalPage: Int?","type":"property"},{"path":"\/documentation\/divar\/uischema\/validationapi","title":"let validationApi: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/validatorbuttontitle","title":"let validatorButtonTitle: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/validatorcancelbuttontitle","title":"let validatorCancelButtonTitle: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/validatoremptytexterror","title":"let validatorEmptyTextError: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/validatorplaceholder","title":"let validatorPlaceholder: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/validatorresetbuttontitle","title":"let validatorResetButtonTitle: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/validatorresetcancelbutton","title":"let validatorResetCancelButton: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/validatorresetconfirmbutton","title":"let validatorResetConfirmButton: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/validatorresettitle","title":"let validatorResetTitle: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/validatorsubtitle","title":"let validatorSubtitle: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/validatortitle","title":"let validatorTitle: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/valueholder","title":"let valueholder: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/widget","title":"let widget: String?","type":"property"},{"path":"\/documentation\/divar\/uischema\/zerovalueholder","title":"let zeroValueHolder: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/uischema\/getprotobufmodel(from:by:)","title":"func getProtoBufModel<M>(from: KeyPath<`Self`, [String : Any]?>, by: String...) throws -> M","type":"method"},{"path":"\/documentation\/divar\/uischema\/getwidgetlist()","title":"func getWidgetList<M>() throws -> [M]","type":"method"}],"path":"\/documentation\/divar\/uischema","title":"UISchema","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalblogpayload\/init(from:)","title":"init(from: [String : Any]) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalblogpayload\/query","title":"var query: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/query","title":"case query","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/universalblogpayload\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/universalblogpayload\/codingkeys","title":"UniversalBlogPayload.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/universalblogpayload","title":"UniversalBlogPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/init(from:)","title":"init(from: [String : Any]) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/carbrand","title":"var carBrand: String?","type":"property"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/carmodel","title":"var carModel: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/carbrand","title":"case carBrand","type":"case"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/carmodel","title":"case carModel","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/universalcarbrandmodelpayload\/codingkeys","title":"UniversalCarBrandModelPayload.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/universalcarbrandmodelpayload","title":"UniversalCarBrandModelPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandpayload\/init(from:)","title":"init(from: [String : Any]) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandpayload\/carbrand","title":"var carBrand: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/carbrand","title":"case carBrand","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/universalcarbrandpayload\/codingkeys","title":"UniversalCarBrandPayload.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/universalcarbrandpayload","title":"UniversalCarBrandPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcategoryslugpayload\/init(from:)","title":"init(from: [String : Any]) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalcategoryslugpayload\/slug","title":"var slug: String?","type":"property"}],"path":"\/documentation\/divar\/universalcategoryslugpayload","title":"UniversalCategorySlugPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalinspectionmanagementpayload\/init(from:)","title":"init(from: [String : Any]) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalinspectionmanagementpayload\/posttoken","title":"var postToken: String?","type":"property"}],"path":"\/documentation\/divar\/universalinspectionmanagementpayload","title":"UniversalInspectionManagementPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalinspectionreportpayload\/init(from:)","title":"init(from: [String : Any]) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalinspectionreportpayload\/carinspectiontoken","title":"var carInspectionToken: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/carinspectiontoken","title":"case carInspectionToken","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/universalinspectionreportpayload\/codingkeys","title":"UniversalInspectionReportPayload.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/universalinspectionreportpayload","title":"UniversalInspectionReportPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalmanagepayload\/init(from:)","title":"init(from: [String : Any]) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalmanagepayload\/managetoken","title":"var manageToken: String?","type":"property"},{"path":"\/documentation\/divar\/universalmanagepayload\/verificationtoken","title":"var verificationToken: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/managetoken","title":"case manageToken","type":"case"},{"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/verificationtoken","title":"case verificationToken","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/universalmanagepayload\/codingkeys","title":"UniversalManagePayload.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/universalmanagepayload","title":"UniversalManagePayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalnotificationpayload\/init(from:)","title":"init(from: [String : Any]) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalnotificationpayload\/action","title":"var action: String?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/alert","title":"var alert: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/aps","title":"var aps: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/body","title":"var body: String?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/callbackurl","title":"var callbackURL: String?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/campaign","title":"var campaign: String?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/conversationid","title":"var conversationID: String?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/customdata","title":"var customData: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/managetoken","title":"var manageToken: String?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/messageid","title":"var messageID: String?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/notificationid","title":"var notificationID: String?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/payload","title":"let payload: [AnyHashable : Any]?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/payloadinapp","title":"var payloadInApp: Bool?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/pushid","title":"var pushID: String?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/divar\/universalnotificationpayload\/title","title":"var title: String?","type":"property"}],"path":"\/documentation\/divar\/universalnotificationpayload","title":"UniversalNotificationPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalpayload\/init(action:)","title":"init(action: UniversalPayload.Action)","type":"init"},{"path":"\/documentation\/divar\/universalpayload\/init(action:payload:)","title":"init(action: UniversalPayload.Action, payload: UniversalPayloadProtocol?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.property","title":"let action: Action","type":"property"},{"path":"\/documentation\/divar\/universalpayload\/payload","title":"let payload: UniversalPayloadProtocol?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalpayload\/empty","title":"static var empty: UniversalPayload","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/chat","title":"case chat","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/customerinspectionmanagement","title":"case customerInspectionManagement","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/deletepost","title":"case deletePost","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/dosearch","title":"case doSearch","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/inspectionreport","title":"case inspectionReport","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/manage","title":"case manage","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/mydivar","title":"case myDivar","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/newpost","title":"case newPost","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/notification","title":"case notification","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/openbookmarks","title":"case openBookmarks","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/opencarbranddetail","title":"case openCarBrandDetail","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/opencarbrandmodeldetail","title":"case openCarBrandModelDetail","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/opencarspecs","title":"case openCarSpecs","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/opencarusedprice","title":"case openCarUsedPrice","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/opencarzeroprice","title":"case openCarZeroPrice","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/opencategories","title":"case openCategories","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/opencategorywithslug","title":"case openCategoryWithSlug","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/openchat","title":"case openChat","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/openhome","title":"case openHome","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/openindependentagent","title":"case openIndependentAgent","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/openlogin","title":"case openLogin","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/openmarketplacefeatures","title":"case openMarketplaceFeatures","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/openmyposts","title":"case openMyPosts","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/opennotes","title":"case openNotes","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/openpostchi","title":"case openPostchi","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/openrecentposts","title":"case openRecentPosts","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/openregisterindependentagent","title":"case openRegisterIndependentAgent","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/opens","title":"case openS","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/opensettings","title":"case openSettings","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/search","title":"case search","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/updatetransactionstatuspage","title":"case updateTransactionStatusPage","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/validatepayment","title":"case validatePayment","type":"case"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/view","title":"case view","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/destinationtabindex","title":"var destinationTabIndex: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/universalpayload\/action-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/universalpayload\/action-swift.enum","title":"UniversalPayload.Action","type":"enum"}],"path":"\/documentation\/divar\/universalpayload","title":"UniversalPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalspayload\/init(from:)","title":"init(from: [String : Any]) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalspayload\/extra","title":"var extra: String?","type":"property"},{"path":"\/documentation\/divar\/universalspayload\/nocatpage","title":"var noCatPage: Bool?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/universalspayload\/codingkeys\/nocatpage","title":"case noCatPage","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalspayload\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/universalspayload\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/universalspayload\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalspayload\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/universalspayload\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/universalspayload\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/universalspayload\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalspayload\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/universalspayload\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalspayload\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalspayload\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/universalspayload\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/universalspayload\/codingkeys","title":"UniversalSPayload.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/universalspayload","title":"UniversalSPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/init(from:)","title":"init(from: [String : Any]) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/orderid","title":"var orderId: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/orderid","title":"case orderId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/universalvalidatepaymentpayload\/codingkeys","title":"UniversalValidatePaymentPayload.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/universalvalidatepaymentpayload","title":"UniversalValidatePaymentPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/universalviewpayload\/init(from:)","title":"init(from: [String : Any]) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/universalviewpayload\/token","title":"var token: String?","type":"property"}],"path":"\/documentation\/divar\/universalviewpayload","title":"UniversalViewPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/unknownactionbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/unknownactionbuilder\/build(from:)","title":"func build(from: BaseFlowController) -> UnknownActionHandler","type":"method"}],"path":"\/documentation\/divar\/unknownactionbuilder","title":"UnknownActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/unknownactionperformer\/init(flow:)","title":"init(flow: BaseFlowController)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/unknownactionperformer\/flow","title":"var flow: BaseFlowController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/unknownactionperformer\/perform(_:)","title":"func perform(Widgets_Action)","type":"method"}],"path":"\/documentation\/divar\/unknownactionperformer","title":"UnknownActionPerformer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/updateconfiguration\/init(userdefaults:)","title":"init(userDefaults: UserDefaults)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/updateconfiguration\/userdefaults","title":"let userDefaults: UserDefaults","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/updateconfiguration\/config(data:)","title":"func config(data: IntroConfig?)","type":"method"}],"path":"\/documentation\/divar\/updateconfiguration","title":"UpdateConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/updateinfo\/init(forceupdate:updateurl:)","title":"init(forceUpdate: Bool, updateURL: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/updateinfo\/forceupdate","title":"let forceUpdate: Bool","type":"property"},{"path":"\/documentation\/divar\/updateinfo\/updateurl","title":"let updateURL: String?","type":"property"}],"path":"\/documentation\/divar\/updateinfo","title":"UpdateInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/uploadmodel\/init(data:name:filename:mimtype:)","title":"init(data: Data, name: String, fileName: String?, mimType: MimType?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uploadmodel\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/divar\/uploadmodel\/filename","title":"let fileName: String?","type":"property"},{"path":"\/documentation\/divar\/uploadmodel\/mimtype-swift.property","title":"let mimType: MimType?","type":"property"},{"path":"\/documentation\/divar\/uploadmodel\/name","title":"let name: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/uploadmodel\/mimtype-swift.enum\/image","title":"case image","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/uploadmodel\/mimtype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/uploadmodel\/mimtype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/uploadmodel\/mimtype-swift.enum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/uploadmodel\/mimtype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/uploadmodel\/mimtype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/uploadmodel\/mimtype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/uploadmodel\/mimtype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/uploadmodel\/mimtype-swift.enum","title":"UploadModel.MimType","type":"enum"}],"path":"\/documentation\/divar\/uploadmodel","title":"UploadModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/usedpriseestimationrequestbuilder\/init(params:)","title":"init(params: [String : Any]?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/usedpriseestimationrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/usedpriseestimationrequestbuilder","title":"UsedPriseEstimationRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/userpostlisttable\/init(token:posttype:note:)","title":"init(token: String, postType: SavedPostListType, note: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/issavedpostlistneedsupdate","title":"var isSavedPostListNeedsUpdate: Bool","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/key","title":"var key: String","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/note","title":"var note: String?","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/posttype","title":"var postType: Int","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/savedpostlistneddsupdate","title":"var savedPostListNeddsUpdate: [Int : Bool]","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/timestamp","title":"var timestamp: TimeInterval","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/token","title":"var token: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/resetsavedpostneedsupdatestate()","title":"func resetSavedPostNeedsUpdateState()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/getpost(token:posttype:dataprovider:)","title":"static func getPost(token: String, postType: SavedPostListType, dataProvider: DataProviderProtocol) -> UserPostListTable?","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/getposts(for:dataprovider:)","title":"static func getPosts(for: SavedPostListType, dataProvider: DataProviderProtocol) -> [UserPostListTable]?","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/gettokenlistforlist(posttype:dataprovider:)","title":"static func getTokenListForList(postType: SavedPostListType, dataProvider: DataProviderProtocol) -> [String]?","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/ispostinlist(token:posttype:dataprovider:)","title":"static func isPostInList(token: String, postType: SavedPostListType, dataProvider: DataProviderProtocol) -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/removepostfromlist(token:posttype:dataprovider:)","title":"static func removePostFromList(token: String, postType: SavedPostListType, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/resetlist(posttype:dataprovider:)","title":"static func resetList(postType: SavedPostListType, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/savepost(post:dataprovider:)","title":"static func savePost(post: UserPostListTable, dataProvider: DataProviderProtocol)","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/savepost(token:posttype:dataprovider:)","title":"static func savePost(token: String, postType: SavedPostListType, dataProvider: DataProviderProtocol)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/encode(to:)-5184u","title":"func encode(to: inout PersistenceContainer)","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/encode(to:)-5dw1m","title":"func encode(to: inout PersistenceContainer)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/userpostlisttable\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/init(row:)-2m390","title":"init(row: Row)","type":"init"},{"path":"\/documentation\/divar\/userpostlisttable\/init(row:)-3ci28","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchall(_:keys:)-4f5xw","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchall(_:keys:)-4nd1r","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchcursor(_:keys:)-127um","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchcursor(_:keys:)-4swwl","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchone(_:key:)-1dkqs","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchone(_:key:)-5vp9z","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"}],"path":"\/documentation\/divar\/userpostlisttable\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/userpostlisttable\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/userpostlisttable\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/userpostlisttable\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/userpostlisttable\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlisttable\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/annotated(with:)-2us7d","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/annotated(with:)-5l1rt","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/annotated(with:)-7oa46","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/annotated(with:)-8wovc","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/belongsto(_:key:using:)-5xwu2","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/belongsto(_:key:using:)-9ft91","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/deleteall(_:keys:)-5g8aw","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/deleteall(_:keys:)-9s10d","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/deleteone(_:key:)-493qj","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/deleteone(_:key:)-4ca4z","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/exists(_:key:)-40m5g","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/exists(_:key:)-8hlyl","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/filter(_:)-3sz41","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/filter(_:)-9ksog","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/filter(key:)-5mk2h","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/filter(key:)-6r7x9","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/filter(keys:)-2jik4","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/filter(keys:)-3r2ki","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/hasmany(_:key:using:)-44zgk","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/hasmany(_:key:using:)-4dp6w","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/hasone(_:key:using:)-5sm6h","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/hasone(_:key:using:)-76cpg","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/order(_:)-742tp","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/order(_:)-767f8","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/select(_:)-6z2i3","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/select(_:)-742ig","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/select(_:as:)-2hq2f","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/select(_:as:)-68qbk","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/userpostlisttable\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/userpostlisttable\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/userpostlisttable","title":"UserPostListTable","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlists\/filterbutton-swift.struct\/init(json:)","title":"init(json: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlists\/filterbutton-swift.struct\/isvisible","title":"let isVisible: Bool?","type":"property"},{"path":"\/documentation\/divar\/userpostlists\/filterbutton-swift.struct\/title","title":"let title: String?","type":"property"}],"path":"\/documentation\/divar\/userpostlists\/filterbutton-swift.struct","title":"UserPostLists.FilterButton","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlists\/init(json:)","title":"init(json: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/userpostlists\/filterbutton-swift.property","title":"let filterButton: FilterButton?","type":"property"},{"path":"\/documentation\/divar\/userpostlists\/widgetlist","title":"let widgetList: [PostModel]?","type":"property"}],"path":"\/documentation\/divar\/userpostlists","title":"UserPostLists","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/usersuggestionrequest\/init(_:phonenumber:)","title":"init(Widgets_UserSuggestionPagePayload, phoneNumber: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/usersuggestionrequest\/method","title":"var method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/usersuggestionrequest\/pagination","title":"var pagination: Pagination","type":"property"},{"path":"\/documentation\/divar\/usersuggestionrequest\/parameter","title":"var parameter: ParameterType","type":"property"},{"path":"\/documentation\/divar\/usersuggestionrequest\/path","title":"var path: String","type":"property"}],"path":"\/documentation\/divar\/usersuggestionrequest","title":"UserSuggestionRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/usersuggestionrequestbuilder\/init(_:phonenumber:)","title":"init(Widgets_UserSuggestionPagePayload, phoneNumber: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/usersuggestionrequestbuilder\/buildrequest(with:)","title":"func buildRequest(with: WidgetBaseRequestMetadata) -> RESTWidgetBaseRequestPayload","type":"method"}],"path":"\/documentation\/divar\/usersuggestionrequestbuilder","title":"UserSuggestionRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinput\/init(container:_:phonenumber:source:actionloghelper:)","title":"init(container: VerificationCodeInputDIContainer, VerificationCodeInputModel, phoneNumber: String, source: ActionLog_LoginSource, actionLogHelper: LoginActionLogHelper?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinput\/loginactionloghelper","title":"let loginActionLogHelper: LoginActionLogHelper?","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinput\/model","title":"var model: VerificationCodeInputModel","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinput\/phonenumber","title":"var phoneNumber: String","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinput\/source","title":"var source: ActionLog_LoginSource","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinput\/fetchverificationcode(vc:)","title":"func fetchVerificationCode(vc: VerificationCodeInputViewController)","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinput\/isvalid(input:)","title":"func isValid(input: String) -> Bool","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinput\/sendverificationcode(vc:code:)","title":"func sendVerificationCode(vc: VerificationCodeInputViewController, code: String?)","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinput\/userlogedinsuccessfully(with:)","title":"func userLogedinSuccessfully(with: String)","type":"method"},{"path":"\/documentation\/divar\/verificationcodeinput\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/divar\/verificationcodeinput","title":"VerificationCodeInput","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputmodel\/init(pagetitle:title:description:buttontitle:textfieldplaceholder:textfieldkeyboardtype:subtitle:)","title":"init(pageTitle: String, title: String, description: String, buttonTitle: String, textfieldPlaceholder: String?, textfieldKeyboardType: UIKeyboardType, subtitle: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/verificationcodeinputmodel\/buttontitle","title":"var buttonTitle: String","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputmodel\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputmodel\/pagetitle","title":"var pageTitle: String","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputmodel\/subtitle","title":"var subtitle: String","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputmodel\/textfieldplaceholder","title":"var textFieldPlaceholder: String?","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputmodel\/textfieldkeyboardtype","title":"var textfieldKeyboardType: UIKeyboardType","type":"property"},{"path":"\/documentation\/divar\/verificationcodeinputmodel\/title","title":"var title: String","type":"property"}],"path":"\/documentation\/divar\/verificationcodeinputmodel","title":"VerificationCodeInputModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrowlastuploadstateholder\/init(imageplaceholderdata:compressedvideourl:videoduration:videourl:)","title":"init(imagePlaceholderData: Data, compressedVideoURL: URL, videoDuration: Double, videoURL: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videoselectorwidgetrowlastuploadstateholder\/compressedvideourl","title":"let compressedVideoURL: URL","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrowlastuploadstateholder\/imageplaceholderdata","title":"let imagePlaceholderData: Data","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrowlastuploadstateholder\/videoduration","title":"let videoDuration: Double","type":"property"},{"path":"\/documentation\/divar\/videoselectorwidgetrowlastuploadstateholder\/videourl","title":"let videoURL: URL","type":"property"}],"path":"\/documentation\/divar\/videoselectorwidgetrowlastuploadstateholder","title":"VideoSelectorWidgetRowLastUploadStateHolder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadheaders\/init(user:)","title":"init(user: User)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadheaders\/user","title":"var user: User","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadheaders\/getheaders(withextraheaders:)","title":"func getHeaders(withExtraHeaders: [String : String]?) -> [String : String]","type":"method"}],"path":"\/documentation\/divar\/videouploadheaders","title":"VideoUploadHeaders","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadmodel\/init(url:fileurl:mimtype:method:headers:)","title":"init(url: String, fileURL: URL, mimType: VideoUploadModel.MimType, method: RequestMethod, headers: [String : String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadmodel\/fileurl","title":"let fileURL: URL","type":"property"},{"path":"\/documentation\/divar\/videouploadmodel\/headers","title":"let headers: [String : String]?","type":"property"},{"path":"\/documentation\/divar\/videouploadmodel\/method","title":"let method: RequestMethod","type":"property"},{"path":"\/documentation\/divar\/videouploadmodel\/mimtype-swift.property","title":"let mimType: MimType","type":"property"},{"path":"\/documentation\/divar\/videouploadmodel\/url","title":"let url: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadmodel\/mimtype-swift.enum\/videomp4","title":"case videoMP4","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadmodel\/mimtype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadmodel\/mimtype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadmodel\/mimtype-swift.enum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/videouploadmodel\/mimtype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadmodel\/mimtype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadmodel\/mimtype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/videouploadmodel\/mimtype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/videouploadmodel\/mimtype-swift.enum","title":"VideoUploadModel.MimType","type":"enum"}],"path":"\/documentation\/divar\/videouploadmodel","title":"VideoUploadModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadresponse\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/videouploadresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/videouploadresponse\/init(videoname:thumbnailname:)","title":"init(videoName: String?, thumbnailName: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadresponse\/thumbnailname","title":"var thumbnailName: String?","type":"property"},{"path":"\/documentation\/divar\/videouploadresponse\/videoname","title":"var videoName: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/thumbnailname","title":"case thumbnailName","type":"case"},{"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/videoname","title":"case videoName","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/videouploadresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/videouploadresponse\/codingkeys","title":"VideoUploadResponse.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/videouploadresponse","title":"VideoUploadResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/videowidgetcellmodel\/init(afteruploadvideoname:afteruploadthumbnailname:lastvideoduration:)","title":"init(afterUploadVideoName: String, afterUploadThumbnailName: String, lastVideoDuration: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videowidgetcellmodel\/afteruploadthumbnailname","title":"let afterUploadThumbnailName: String","type":"property"},{"path":"\/documentation\/divar\/videowidgetcellmodel\/afteruploadvideoname","title":"let afterUploadVideoName: String","type":"property"},{"path":"\/documentation\/divar\/videowidgetcellmodel\/lastvideoduration","title":"let lastVideoDuration: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/videowidgetcellmodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videowidgetcellmodel\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/videowidgetcellmodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/videowidgetcellmodel","title":"VideoWidgetCellModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessageactionloghandler\/init(conversationid:type:rawplugservice:)","title":"init(conversationID: String, type: VoiceMessageActionLogHandler.LogType, rawPlugService: RawPlugService)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessageactionloghandler\/conversationid","title":"let conversationID: String","type":"property"},{"path":"\/documentation\/divar\/voicemessageactionloghandler\/rawplugservice","title":"let rawPlugService: RawPlugService","type":"property"},{"path":"\/documentation\/divar\/voicemessageactionloghandler\/type","title":"let type: LogType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessageactionloghandler\/logvoicemessage()","title":"func logVoiceMessage()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessageactionloghandler\/logtype\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/divar\/voicemessageactionloghandler\/logtype\/record","title":"case record","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessageactionloghandler\/logtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessageactionloghandler\/logtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessageactionloghandler\/logtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/voicemessageactionloghandler\/logtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessageactionloghandler\/logtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/voicemessageactionloghandler\/logtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/voicemessageactionloghandler\/logtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/voicemessageactionloghandler\/logtype","title":"VoiceMessageActionLogHandler.LogType","type":"enum"}],"path":"\/documentation\/divar\/voicemessageactionloghandler","title":"VoiceMessageActionLogHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonconfig\/init(buttontitle:isprimary:)","title":"init(buttonTitle: String, isPrimary: Bool?)","type":"init"},{"path":"\/documentation\/divar\/widebuttonconfig\/init(buttontitle:isprimary:hasshadow:)","title":"init(buttonTitle: String, isPrimary: Bool, hasShadow: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonconfig\/buttontitle","title":"let buttonTitle: String","type":"property"},{"path":"\/documentation\/divar\/widebuttonconfig\/hasshadow","title":"let hasShadow: Bool","type":"property"},{"path":"\/documentation\/divar\/widebuttonconfig\/isprimary","title":"let isPrimary: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widebuttonconfig\/empty","title":"static var empty: WideButtonConfig","type":"property"}],"path":"\/documentation\/divar\/widebuttonconfig","title":"WideButtonConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbaserequestmetadata\/init(pagination:filters:query:schemarefetchonly:)","title":"init(pagination: Pagination?, filters: Google_Protobuf_Struct?, query: String?, schemaRefetchOnly: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbaserequestmetadata\/filters","title":"var filters: Google_Protobuf_Struct?","type":"property"},{"path":"\/documentation\/divar\/widgetbaserequestmetadata\/pagination","title":"let pagination: Pagination?","type":"property"},{"path":"\/documentation\/divar\/widgetbaserequestmetadata\/query","title":"let query: String?","type":"property"},{"path":"\/documentation\/divar\/widgetbaserequestmetadata\/schemarefetchonly","title":"let schemaRefetchOnly: Bool","type":"property"}],"path":"\/documentation\/divar\/widgetbaserequestmetadata","title":"WidgetBaseRequestMetadata","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedconfig\/init(paginationtype:searchable:searchontextchange:minchartosearch:searchpageid:defaultsearchplaceholder:extraparameters:)","title":"init(paginationType: PaginationType, searchable: Bool, searchOnTextChange: Bool, minCharToSearch: Int, searchPageID: String?, defaultSearchPlaceholder: String?, extraParameters: [String : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedconfig\/defaultsearchplaceholder","title":"let defaultSearchPlaceholder: String?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedconfig\/extraparameters","title":"let extraParameters: [String : Any]?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedconfig\/minchartosearch","title":"let minCharToSearch: Int","type":"property"},{"path":"\/documentation\/divar\/widgetbasedconfig\/paginationtype","title":"let paginationType: PaginationType","type":"property"},{"path":"\/documentation\/divar\/widgetbasedconfig\/searchontextchange","title":"let searchOnTextChange: Bool","type":"property"},{"path":"\/documentation\/divar\/widgetbasedconfig\/searchpageid","title":"let searchPageID: String?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedconfig\/searchable","title":"let searchable: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedconfig\/default()","title":"static func `default`() -> WidgetBasedConfig","type":"method"}],"path":"\/documentation\/divar\/widgetbasedconfig","title":"WidgetBasedConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedfilterworker\/init(worker:)","title":"init(worker: WidgetBasedWorkerProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedfilterworker\/worker","title":"let worker: WidgetBasedWorkerProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedfilterworker\/request(filters:completion:)","title":"func request(filters: Google_Protobuf_Struct, completion: ExtractableResult)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedfilterworker","title":"WidgetBasedFilterWorker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasecollection","title":"static let WidgetBaseCollection: String","type":"property"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailsviewcontrollereventcategory","title":"static let WidgetBasedPostDetailsViewControllerEventCategory: String","type":"property"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailsviewcontrollereventparent","title":"static let WidgetBasedPostDetailsViewControllerEventParent: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/confignotebookmark","title":"case ConfigNoteBookmark","type":"case"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/networkrequest","title":"case NetworkRequest","type":"case"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/savelog","title":"case SaveLog","type":"case"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/saveposttodb","title":"case SavePostToDB","type":"case"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/setwidgets","title":"case SetWidgets","type":"case"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/setupbottomstack","title":"case SetupBottomStack","type":"case"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/setupstackholder","title":"case SetupStackHolder","type":"case"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/viewdidappear","title":"case viewDidAppear","type":"case"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/viewdidlayoutsubviews","title":"case viewDidLayoutSubviews","type":"case"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/viewdidload","title":"case viewDidLoad","type":"case"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/viewwillappear","title":"case viewWillAppear","type":"case"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/viewwilllayoutsubviews","title":"case viewWillLayoutSubviews","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper\/widgetbasedpostdetailschildevents","title":"WidgetBasedPostDetailsPerformaceHelper.WidgetBasedPostDetailsChildEvents","type":"enum"}],"path":"\/documentation\/divar\/widgetbasedpostdetailsperformacehelper","title":"WidgetBasedPostDetailsPerformaceHelper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedsegmentedhandler\/init(container:actiondelegate:viewmodeldelegate:worker:)","title":"init(container: WidgetBasedSegmentedHandlerDIContainer, actionDelegate: WidgetBasedActionDelegate?, viewModelDelegate: WidgetViewModelDelegate?, worker: TabularWidgetBasedWorkerProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedsegmentedhandler\/actiondelegate","title":"var actionDelegate: WidgetBasedActionDelegate?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedsegmentedhandler\/container","title":"let container: WidgetBasedSegmentedHandlerDIContainer","type":"property"},{"path":"\/documentation\/divar\/widgetbasedsegmentedhandler\/viewmodeldelegate","title":"var viewModelDelegate: WidgetViewModelDelegate?","type":"property"},{"path":"\/documentation\/divar\/widgetbasedsegmentedhandler\/worker","title":"let worker: TabularWidgetBasedWorkerProtocol","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetbasedsegmentedhandler\/createviewcontroller(for:prefetchedresult:isembeded:)","title":"func createViewController(for: String?, prefetchedResult: ExtractableMessage?, isEmbeded: Bool) -> UIViewController","type":"method"},{"path":"\/documentation\/divar\/widgetbasedsegmentedhandler\/request(completion:)","title":"func request(completion: ExtractableResult)","type":"method"}],"path":"\/documentation\/divar\/widgetbasedsegmentedhandler","title":"WidgetBasedSegmentedHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/init(contactlist:feedback:)","title":"init(contactList: ContactWidgetStructure?, feedback: FeedBackDataStructure?)","type":"init"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/contactlist","title":"var contactList: ContactWidgetStructure?","type":"property"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/feedback","title":"var feedback: FeedBackDataStructure?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/contactlist","title":"case contactList","type":"case"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/feedback","title":"case feedback","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetgetcontactstructure\/codingkeys","title":"WidgetGetContactStructure.CodingKeys","type":"enum"}],"path":"\/documentation\/divar\/widgetgetcontactstructure","title":"WidgetGetContactStructure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/init(_:)","title":"init(WidgetGetContactStructure)","type":"init"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/init(widgets:token:)","title":"init(widgets: WidgetGetContactStructure, token: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/token","title":"var token: String?","type":"property"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/widgets","title":"var widgets: WidgetGetContactStructure","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/token","title":"case token","type":"case"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/widgets","title":"case widgets","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetgetcontactwidgets\/condingkey","title":"WidgetGetContactWidgets.CondingKey","type":"enum"}],"path":"\/documentation\/divar\/widgetgetcontactwidgets","title":"WidgetGetContactWidgets","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgettag\/init(chip:isfilled:isstaticchip:)","title":"init(chip: Widgets_FilterWidget.FilterChip, isFilled: Bool, isStaticChip: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgettag\/chip","title":"let chip: Widgets_FilterWidget.FilterChip","type":"property"},{"path":"\/documentation\/divar\/widgettag\/iconasset","title":"var iconAsset: ImageAsset?","type":"property"},{"path":"\/documentation\/divar\/widgettag\/isfilled","title":"let isFilled: Bool","type":"property"},{"path":"\/documentation\/divar\/widgettag\/isstaticchip","title":"var isStaticChip: Bool","type":"property"},{"path":"\/documentation\/divar\/widgettag\/nonremovable","title":"var nonRemovable: Bool","type":"property"},{"path":"\/documentation\/divar\/widgettag\/showicon","title":"var showIcon: Bool","type":"property"},{"path":"\/documentation\/divar\/widgettag\/showiconandremovebutton","title":"var showIconAndRemoveButton: Bool","type":"property"},{"path":"\/documentation\/divar\/widgettag\/showremovebutton","title":"var showRemoveButton: Bool","type":"property"},{"path":"\/documentation\/divar\/widgettag\/text","title":"var text: String?","type":"property"}],"path":"\/documentation\/divar\/widgettag","title":"WidgetTag","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetbasecollection","title":"static let WidgetBaseCollection: String","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollereventcategory","title":"static let WidgetViewControllerEventCategory: String","type":"property"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollereventparent","title":"static let WidgetViewControllerEventParent: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/networkrequest","title":"case NetworkRequest","type":"case"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/setwidgets","title":"case SetWidgets","type":"case"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/setupmaintable","title":"case SetupMainTable","type":"case"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/setupstackholder","title":"case SetupStackHolder","type":"case"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/preparereloadcollection","title":"case prepareReloadCollection","type":"case"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/setupsearchandfilter","title":"case setupSearchAndFilter","type":"case"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/viewdidappear","title":"case viewDidAppear","type":"case"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/viewdidlayoutsubviews","title":"case viewDidLayoutSubviews","type":"case"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/viewdidload","title":"case viewDidLoad","type":"case"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/viewwillappear","title":"case viewWillAppear","type":"case"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/viewwilllayoutsubviews","title":"case viewWillLayoutSubviews","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper\/widgetviewcontrollerchildevents","title":"WidgetViewControllerPerformaceHelper.WidgetViewControllerChildEvents","type":"enum"}],"path":"\/documentation\/divar\/widgetviewcontrollerperformacehelper","title":"WidgetViewControllerPerformaceHelper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetsactionlogconfiguration\/init(container:)","title":"init?(container: WidgetsActionLogConfigurationDIContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetsactionlogconfiguration\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetsactionlogconfiguration\/fire()","title":"func fire()","type":"method"}],"path":"\/documentation\/divar\/widgetsactionlogconfiguration","title":"WidgetsActionLogConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/zeropricemodel\/init(slug:)","title":"init(slug: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/slug","title":"var slug: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/databasedictionary","title":"var databaseDictionary: [String : DatabaseValue]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/databasechanges(from:)","title":"func databaseChanges<Record>(from: Record) -> [String : DatabaseValue]","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/databaseequals(_:)","title":"func databaseEquals(Self) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/databasecolumnencodingstrategy","title":"static var databaseColumnEncodingStrategy: DatabaseColumnEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/zeropricemodel\/databasedateencodingstrategy","title":"static var databaseDateEncodingStrategy: DatabaseDateEncodingStrategy","type":"property"},{"path":"\/documentation\/divar\/zeropricemodel\/databaseencodinguserinfo","title":"static var databaseEncodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"path":"\/documentation\/divar\/zeropricemodel\/databaseuuidencodingstrategy","title":"static var databaseUUIDEncodingStrategy: DatabaseUUIDEncodingStrategy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/databasejsonencoder(for:)","title":"static func databaseJSONEncoder(for: String) -> JSONEncoder","type":"method"}],"path":"\/documentation\/divar\/zeropricemodel\/encodablerecord-implementations","title":"EncodableRecord Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/init(row:)","title":"init(row: Row)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/databasecolumndecodingstrategy","title":"static var databaseColumnDecodingStrategy: DatabaseColumnDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/zeropricemodel\/databasedatedecodingstrategy","title":"static var databaseDateDecodingStrategy: DatabaseDateDecodingStrategy","type":"property"},{"path":"\/documentation\/divar\/zeropricemodel\/databasedecodinguserinfo","title":"static var databaseDecodingUserInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/databasejsondecoder(for:)","title":"static func databaseJSONDecoder(for: String) -> JSONDecoder","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchall(_:)","title":"static func fetchAll(Database) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchall(_:keys:)-2ew6v","title":"static func fetchAll<Sequence>(Database, keys: Sequence) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchall(_:keys:)-52wpf","title":"static func fetchAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchcursor(_:)","title":"static func fetchCursor(Database) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchcursor(_:keys:)-1dsgg","title":"static func fetchCursor<Sequence>(Database, keys: Sequence) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchcursor(_:keys:)-e9c8","title":"static func fetchCursor(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> RecordCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchone(_:)","title":"static func fetchOne(Database) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchone(_:key:)-1133c","title":"static func fetchOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchone(_:key:)-5iex3","title":"static func fetchOne(Database, key: [String : DatabaseValueConvertible?]?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"}],"path":"\/documentation\/divar\/zeropricemodel\/fetchablerecord-implementations","title":"FetchableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/delete(_:)","title":"func delete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/exists(_:)","title":"func exists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/inserted(_:)","title":"func inserted(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/performdelete(_:)","title":"func performDelete(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/performexists(_:)","title":"func performExists(Database) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/performupdate(_:columns:)","title":"func performUpdate(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/primarykey(_:)","title":"func primaryKey(Database) throws -> [String : DatabaseValue]?","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/saved(_:)","title":"func saved(Database) throws -> Self","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/update(_:)","title":"func update(Database) throws","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/update(_:columns:)","title":"func update(Database, columns: Set<String>) throws","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/updatechanges(_:from:)","title":"func updateChanges<Record>(Database, from: Record) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/updatechanges(_:with:)","title":"func updateChanges(Database, with: (Self) throws -> Void) throws -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/persistenceconflictpolicy","title":"static var persistenceConflictPolicy: PersistenceConflictPolicy","type":"property"}],"path":"\/documentation\/divar\/zeropricemodel\/mutablepersistablerecord-implementations","title":"MutablePersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/didinsert(with:for:)","title":"func didInsert(with: Int64, for: String?)","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/insert(_:)","title":"func insert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/performinsert(_:)","title":"func performInsert(Database) throws","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/performsave(_:)","title":"func performSave(Database) throws","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/save(_:)","title":"func save(Database) throws","type":"method"}],"path":"\/documentation\/divar\/zeropricemodel\/persistablerecord-implementations","title":"PersistableRecord Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/builderblock","title":"static var builderBlock: BuilderBlock","type":"property"}],"path":"\/documentation\/divar\/zeropricemodel\/sqltableprotocol-implementations","title":"SQLTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/request(for:)","title":"func request<A>(for: A) -> QueryInterfaceRequest<A.RowDecoder>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/databaseselection","title":"static var databaseSelection: [SQLSelectable]","type":"property"},{"path":"\/documentation\/divar\/zeropricemodel\/databasetablename","title":"static var databaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/zeropricemodel\/defaultdatabasetablename","title":"static var defaultDatabaseTableName: String","type":"property"},{"path":"\/documentation\/divar\/zeropricemodel\/relationforall","title":"static var relationForAll: SQLRelation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/zeropricemodel\/aliased(_:)","title":"static func aliased(TableAlias) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/all()","title":"static func all() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/annotated(with:)-3znv5","title":"static func annotated(with: [AssociationAggregate<Self>]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/annotated(with:)-5o3b1","title":"static func annotated(with: AssociationAggregate<Self>...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/annotated(with:)-5tke9","title":"static func annotated(with: [SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/annotated(with:)-81auy","title":"static func annotated(with: SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/association(to:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/association(to:on:)","title":"static func association<Destination>(to: CommonTableExpression<Destination>, on: (TableAlias, TableAlias) -> SQLExpressible) -> JoinAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/belongsto(_:key:using:)-24o87","title":"static func belongsTo<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/belongsto(_:key:using:)-4n66","title":"static func belongsTo<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> BelongsToAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/deleteall(_:)","title":"static func deleteAll(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/deleteall(_:keys:)-1j8cj","title":"static func deleteAll(Database, keys: [[String : DatabaseValueConvertible?]]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/deleteall(_:keys:)-1kmv5","title":"static func deleteAll<Sequence>(Database, keys: Sequence) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/deleteone(_:key:)-5zemp","title":"static func deleteOne(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/deleteone(_:key:)-8jfzs","title":"static func deleteOne<PrimaryKeyType>(Database, key: PrimaryKeyType?) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/exists(_:key:)-7swye","title":"static func exists<PrimaryKeyType>(Database, key: PrimaryKeyType) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/exists(_:key:)-7xs55","title":"static func exists(Database, key: [String : DatabaseValueConvertible?]) throws -> Bool","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/fetchcount(_:)","title":"static func fetchCount(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/filter(_:)-3h5e1","title":"static func filter(SQLSpecificExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/filter(_:)-72t2f","title":"static func filter(SQLExpressible) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/filter(key:)-6q926","title":"static func filter<PrimaryKeyType>(key: PrimaryKeyType?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/filter(key:)-ym6b","title":"static func filter(key: [String : DatabaseValueConvertible?]?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/filter(keys:)-110or","title":"static func filter(keys: [[String : DatabaseValueConvertible?]]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/filter(keys:)-56j68","title":"static func filter<Sequence>(keys: Sequence) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/filter(literal:)","title":"static func filter(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/filter(sql:arguments:)","title":"static func filter(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/hasmany(_:key:using:)-4v9ts","title":"static func hasMany<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/hasmany(_:key:using:)-64yb6","title":"static func hasMany<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasManyAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/hasmany(_:through:using:key:)","title":"static func hasMany<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasManyThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/hasone(_:key:using:)-3nzg0","title":"static func hasOne<Destination>(Table<Destination>, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/hasone(_:key:using:)-5cwv0","title":"static func hasOne<Destination>(Destination.Type, key: String?, using: ForeignKey?) -> HasOneAssociation<Self, Destination>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/hasone(_:through:using:key:)","title":"static func hasOne<Pivot, Target>(Target.RowDecoder.Type, through: Pivot, using: Target, key: String?) -> HasOneThroughAssociation<Self, Target.RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/having(_:)","title":"static func having(AssociationAggregate<Self>) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/including(all:)","title":"static func including<A>(all: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/including(optional:)","title":"static func including<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/including(required:)","title":"static func including<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/joining(optional:)","title":"static func joining<A>(optional: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/joining(required:)","title":"static func joining<A>(required: A) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/limit(_:offset:)","title":"static func limit(Int, offset: Int?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/matching(_:)","title":"static func matching(FTS3Pattern?) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/none()","title":"static func none() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/numberofselectedcolumns(_:)","title":"static func numberOfSelectedColumns(Database) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/order(_:)-6bfsm","title":"static func order(SQLOrderingTerm...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/order(_:)-8z7um","title":"static func order([SQLOrderingTerm]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/order(literal:)","title":"static func order(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/order(sql:arguments:)","title":"static func order(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/orderbyprimarykey()","title":"static func orderByPrimaryKey() -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/select(_:)-3eu5v","title":"static func select(SQLSelectable...) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/select(_:)-9atzm","title":"static func select([SQLSelectable]) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/select(_:as:)-2jico","title":"static func select<RowDecoder>(SQLSelectable..., as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/select(_:as:)-ok8p","title":"static func select<RowDecoder>([SQLSelectable], as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/select(literal:)","title":"static func select(literal: SQL) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/select(literal:as:)","title":"static func select<RowDecoder>(literal: SQL, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/select(sql:arguments:)","title":"static func select(sql: String, arguments: StatementArguments) -> QueryInterfaceRequest<Self>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/select(sql:arguments:as:)","title":"static func select<RowDecoder>(sql: String, arguments: StatementArguments, as: RowDecoder.Type) -> QueryInterfaceRequest<RowDecoder>","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/updateall(_:onconflict:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, [ColumnAssignment]) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/updateall(_:onconflict:_:_:)","title":"static func updateAll(Database, onConflict: Database.ConflictResolution?, ColumnAssignment, ColumnAssignment...) throws -> Int","type":"method"},{"path":"\/documentation\/divar\/zeropricemodel\/with(_:)","title":"static func with<RowDecoder>(CommonTableExpression<RowDecoder>) -> QueryInterfaceRequest<Self>","type":"method"}],"path":"\/documentation\/divar\/zeropricemodel\/tablerecord-implementations","title":"TableRecord Implementations","type":"symbol"}],"path":"\/documentation\/divar\/zeropricemodel","title":"ZeroPriceModel","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/divar\/intestmode","title":"let inTestMode: Bool","type":"var"},{"path":"\/documentation\/divar\/phonehashextraid","title":"let phoneHashExtraID: String","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/divar\/decode(jwt:)","title":"func decode(jwt: String) throws -> JWT","type":"func"},{"path":"\/documentation\/divar\/diff(old:new:)","title":"func diff<T>(old: [T], new: [T]) -> [Change<T>]","type":"func"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/--_(_:_:)","title":"func --> (IVCompostionManipulator, IVCompostionManipulator) -> IVCompostionManipulator","type":"op"},{"path":"\/documentation\/divar\/==(_:_:)","title":"func == (Image, Image) -> Bool","type":"op"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/abstractformviewcontrollerdicontainer","title":"AbstractFormViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/addeditagentviewcontrollerdicontainer","title":"AddEditAgentViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/addsalesmanviewcontrollerdicontainer","title":"AddSalesmanViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/addstoremanagerviewcontrollerdicontainer","title":"AddStoreManagerViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/addusertransactionformviewcontrollerdicontainer","title":"AddUserTransactionFormViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/addvrviewcontrollerdicontainer","title":"AddVRViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/angoolakwidgetactionhandlerimpldicontainer","title":"AngoolakWidgetActionHandlerImplDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/appconfigurations","title":"AppConfigurations","type":"typealias"},{"path":"\/documentation\/divar\/asynccalltype","title":"AsyncCallType","type":"typealias"},{"path":"\/documentation\/divar\/baseflowdicontainer","title":"BaseFlowDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/baseformcontrollerdicontainer","title":"BaseFormControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/baseformviewcontrollerdicontainer","title":"BaseFormViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/baseformviewprotocol","title":"BaseFormViewProtocol","type":"typealias"},{"path":"\/documentation\/divar\/bookmarksviewcontrollerdicontainer","title":"BookmarksViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/booleanrateformviewcontrollerdicontainer","title":"BooleanRateFormViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/bottomsheetcontactviewcontrollerdicontainer","title":"BottomSheetContactViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/brandmultihierarchyviewcontrollerdicontainer","title":"BrandMultiHierarchyViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/builderblock","title":"BuilderBlock","type":"typealias"},{"path":"\/documentation\/divar\/bulkladdersubmitrequest","title":"BulkLadderSubmitRequest","type":"typealias"},{"path":"\/documentation\/divar\/bulkladderviewcontrollerdicontainer","title":"BulkLadderViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/businesssubscriptionviewcontrollerdicontainer","title":"BusinessSubscriptionViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/buybulkladderviewcontrollerdicontainer","title":"BuyBulkLadderViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/calltype","title":"CallType","type":"typealias"},{"path":"\/documentation\/divar\/caragentbuyladderpackageviewcontrollerdicontainer","title":"CarAgentBuyLadderPackageViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/caragentbuypackageviewcontrollerdicontainer","title":"CarAgentBuyPackageViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/caragentsubmitviewcontrollerdicontainer","title":"CarAgentSubmitViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/carinspectionregisterviewcontrollerdicontainer","title":"CarInspectionRegisterViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/carinspectionsubmitviewcontrollerdicontainer","title":"CarInspectionSubmitViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/categorycontrollerdicontainer","title":"CategoryControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/chatpayload","title":"ChatPayload","type":"typealias"},{"path":"\/documentation\/divar\/chatsettingscontrollerdicontainer","title":"ChatSettingsControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/chatsocketmessage","title":"ChatSocketMessage","type":"typealias"},{"path":"\/documentation\/divar\/chattopictype","title":"ChatTopicType","type":"typealias"},{"path":"\/documentation\/divar\/chatviewcontrollerdicontainer","title":"ChatViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/chatwidgetactionhandlerimpldicontainer","title":"ChatWidgetActionHandlerImplDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/citymultiselectviewcontrollerdicontainer","title":"CityMultiSelectViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/cityselectviewcontrollerdicontainer","title":"CitySelectViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/closure","title":"Closure","type":"typealias"},{"path":"\/documentation\/divar\/completionhandlertype","title":"CompletionHandlerType","type":"typealias"},{"path":"\/documentation\/divar\/componentbuttoncontroller","title":"ComponentButtonController","type":"typealias"},{"path":"\/documentation\/divar\/componentdelegates","title":"ComponentDelegates","type":"typealias"},{"path":"\/documentation\/divar\/componentviewcontorller","title":"ComponentViewContorller","type":"typealias"},{"path":"\/documentation\/divar\/conversationsviewcontrollerdicontainer","title":"ConversationsViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/createandeditoperatorviewcontrollerdicontainer","title":"CreateAndEditOperatorViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/customuiactivityviewcontrollerdicontainer","title":"CustomUIActivityViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/derrorclosure","title":"DErrorClosure","type":"typealias"},{"path":"\/documentation\/divar\/dicontainerprotocol","title":"DIContainerProtocol","type":"typealias"},{"path":"\/documentation\/divar\/datarequestcompletion","title":"DataRequestCompletion","type":"typealias"},{"path":"\/documentation\/divar\/dealersubmitviewcontrollerdicontainer","title":"DealerSubmitViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/dealersubscriptiondetailsviewcontrollerdicontainer","title":"DealerSubscriptionDetailsViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/dealersubscriptionviewcontrollerdicontainer","title":"DealerSubscriptionViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/disablelistviewcontrollerdicontainer","title":"DisableListViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/disablepageviewcontrollerdicontainer","title":"DisablePageViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/editmarketplacestoreviewcontrollerdicontainer","title":"EditMarketplaceStoreViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/errorclosure","title":"ErrorClosure","type":"typealias"},{"path":"\/documentation\/divar\/errorhandlingtype","title":"ErrorHandlingType","type":"typealias"},{"path":"\/documentation\/divar\/extractablemessage","title":"ExtractableMessage","type":"typealias"},{"path":"\/documentation\/divar\/extractableresult","title":"ExtractableResult","type":"typealias"},{"path":"\/documentation\/divar\/extractableresultvalue","title":"ExtractableResultValue","type":"typealias"},{"path":"\/documentation\/divar\/feedbackhandlerdicontainer","title":"FeedBackHandlerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/filterablebulkladderrequest","title":"FilterableBulkLadderRequest","type":"typealias"},{"path":"\/documentation\/divar\/filterablewidgetbasedrequest","title":"FilterableWidgetBasedRequest","type":"typealias"},{"path":"\/documentation\/divar\/firsttimeviewcontrollerdicontainer","title":"FirstTimeViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/formresult","title":"FormResult","type":"typealias"},{"path":"\/documentation\/divar\/formresultvalue","title":"FormResultValue","type":"typealias"},{"path":"\/documentation\/divar\/grpcasynccalltype","title":"GRPCAsyncCallType","type":"typealias"},{"path":"\/documentation\/divar\/grpccalltype","title":"GRPCCallType","type":"typealias"},{"path":"\/documentation\/divar\/grpcresponsetype","title":"GRPCResponseType","type":"typealias"},{"path":"\/documentation\/divar\/generalbulkladderviewcontrollerdicontainer","title":"GeneralBulkLadderViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/getcontactviewcontrollerdicontainer","title":"GetContactViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/ivflowdicontainer","title":"IVFlowDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/inputareaviewcontrollerdicontainer","title":"InputAreaViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/int64rowcellupdate","title":"Int64RowCellUpdate","type":"typealias"},{"path":"\/documentation\/divar\/jobssubmitviewcontrollerdicontainer","title":"JobsSubmitViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/legacyactionlog","title":"LegacyActionLog","type":"typealias"},{"path":"\/documentation\/divar\/legacywidgetbasedsegmentedhandlerdicontainer","title":"LegacyWidgetBasedSegmentedHandlerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/limitedlocationselectorviewcontrollerdicontainer","title":"LimitedLocationSelectorViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/locationselectorviewcontrollerdicontainer","title":"LocationSelectorViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/mainflowcontrollerdicontainer","title":"MainFlowControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/mapselectorviewcontrollerdicontainer","title":"MapSelectorViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/mapsharehelperdicontainer","title":"MapShareHelperDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/marketpalcefeedbackviewcontrollerdicontainer","title":"MarketpalceFeedbackViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/marketplaceeditassistantviewcontrollerdicontainer","title":"MarketplaceEditAssistantViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/marketplacequickeditpostvcdicontainer","title":"MarketplaceQuickEditPostVCDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/marketplacesubmitviewcontrollerdicontainer","title":"MarketplaceSubmitViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/marketplacesubscriptionviewcontrollerdicontainer","title":"MarketplaceSubscriptionViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/messagecelltype","title":"MessageCellType","type":"typealias"},{"path":"\/documentation\/divar\/messagehandlingtype","title":"MessageHandlingType","type":"typealias"},{"path":"\/documentation\/divar\/messagepreviewbarviewcontrollerdicontainer","title":"MessagePreviewBarViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/messagingviewcontrollerdicontainer","title":"MessagingViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/mydivarholderviewcontrollerdicontainer","title":"MyDivarHolderViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/mypostsviewcontrollerdicontainer","title":"MyPostsViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/nicknameviewcontrollerdicontainer","title":"NickNameViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/noteviewcontrollerdicontainer","title":"NoteViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/notesviewcontrollerdicontainer","title":"NotesViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/offlineformviewcontrollerdicontainer","title":"OfflineFormViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/paymentactionhandlerimpldicontainer","title":"PaymentActionHandlerImplDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/phonenumberconfigurationdicontainer","title":"PhoneNumberConfigurationDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/phonenumberinputdicontainer","title":"PhoneNumberInputDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/postarchiveviewcontrollerdicontainer","title":"PostArchiveViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/postchatnavigatordicontainer","title":"PostChatNavigatorDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/postcreateviewcontrollerdicontainer","title":"PostCreateViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/postfeedbackviewcontrollerdicontainer","title":"PostFeedBackViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/postgetcontactsviewcontrollerdicontainer","title":"PostGetContactsViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/postlistviewmodelbuilderdicontainer","title":"PostListViewModelBuilderDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/postlistviewmodeldicontainer","title":"PostListViewModelDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/postmanageflowcontrollerdicontainer","title":"PostManageFlowControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/postmodelsresultclosure","title":"PostModelsResultClosure","type":"typealias"},{"path":"\/documentation\/divar\/postpaymenthistoryviewcontrollerdicontainer","title":"PostPaymentHistoryViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/postpaymentviewcontrollerdicontainer","title":"PostPaymentViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/postredeemcodecontrollerdicontainer","title":"PostRedeemCodeControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/postreportdescriptionviewcontrollerdicontainer","title":"PostReportDescriptionViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/privatebottomsheetnext","title":"PrivateBottomSheetNext","type":"typealias"},{"path":"\/documentation\/divar\/privatepagenext","title":"PrivatePageNext","type":"typealias"},{"path":"\/documentation\/divar\/privatepagewithsearchnext","title":"PrivatePageWithSearchNext","type":"typealias"},{"path":"\/documentation\/divar\/privatestickynext","title":"PrivateStickyNext","type":"typealias"},{"path":"\/documentation\/divar\/privatewidgetnext","title":"PrivateWidgetNext","type":"typealias"},{"path":"\/documentation\/divar\/progressblock","title":"ProgressBlock","type":"typealias"},{"path":"\/documentation\/divar\/qaconfigurations","title":"QAConfigurations","type":"typealias"},{"path":"\/documentation\/divar\/qaopenwidgetbasedicontainer","title":"QAOpenWidgetBaseDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/realestatelocationselectorviewcontrollerdicontainer","title":"RealEstateLocationSelectorViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/realestateregistrationviewcontrollerdicontainer","title":"RealEstateRegistrationViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/realestatesubmitviewcontrollerdicontainer","title":"RealEstateSubmitViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/recentvisitsviewcontrollerdicontainer","title":"RecentVisitsViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/registeragentviewcontrollerdicontainer","title":"RegisterAgentViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/registerdealerviewcontrollerdicontainer","title":"RegisterDealerViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/registermarketplaceviewcontrollerdicontainer","title":"RegisterMarketplaceViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/reloadclosure","title":"ReloadClosure","type":"typealias"},{"path":"\/documentation\/divar\/request","title":"Request","type":"typealias"},{"path":"\/documentation\/divar\/requestcompletion","title":"RequestCompletion","type":"typealias"},{"path":"\/documentation\/divar\/requestcompletionhandlertype","title":"RequestCompletionHandlerType","type":"typealias"},{"path":"\/documentation\/divar\/responsehandlerprotocol","title":"ResponseHandlerProtocol","type":"typealias"},{"path":"\/documentation\/divar\/schemaformviewcontrollerdicontainer","title":"SchemaFormViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/searchfilterviewcontrollerdicontainer","title":"SearchFilterViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/searchhistoryviewmodeldicontainer","title":"SearchHistoryViewModelDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/searchquery","title":"SearchQuery","type":"typealias"},{"path":"\/documentation\/divar\/searchsuggestionsviewmodeldicontainer","title":"SearchSuggestionsViewModelDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/segmentedbulkladderviewcontrollerdicontainer","title":"SegmentedBulkLadderViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/sendfeedbackviewcontrollerdicontainer","title":"SendFeedbackViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/setablegetablerow","title":"SetableGetableRow","type":"typealias"},{"path":"\/documentation\/divar\/singlehierarchybasecontrollerdicontainer","title":"SingleHierarchyBaseControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/textrowcellupdate","title":"TextRowCellUpdate","type":"typealias"},{"path":"\/documentation\/divar\/uiviewcontrollerwithclaim","title":"UIViewControllerWithClaim","type":"typealias"},{"path":"\/documentation\/divar\/uiviewcontrollerwitherrorandnotification","title":"UIViewControllerWithErrorAndNotification","type":"typealias"},{"path":"\/documentation\/divar\/usedpriceformviewcontrollerdicontainer","title":"UsedPriceFormViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/verificationcodeinputdicontainer","title":"VerificationCodeInputDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/voidtask","title":"VoidTask","type":"typealias"},{"path":"\/documentation\/divar\/widgetbasedbuilderdicontainer","title":"WidgetBasedBuilderDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/widgetbasedfilterviewcontrollerdicontainer","title":"WidgetBasedFilterViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/widgetbasedpostdetailsviewcontrollercontainer","title":"WidgetBasedPostDetailsViewControllerContainer","type":"typealias"},{"path":"\/documentation\/divar\/widgetbasedsegmentedhandlerdicontainer","title":"WidgetBasedSegmentedHandlerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/widgetviewcontrollerdicontainer","title":"WidgetViewControllerDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/widgetviewmodeldicontainer","title":"WidgetViewModelDIContainer","type":"typealias"},{"path":"\/documentation\/divar\/widgetsactionlogconfigurationdicontainer","title":"WidgetsActionLogConfigurationDIContainer","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttabletype\/description","title":"case Description","type":"case"},{"path":"\/documentation\/divar\/abstracttabletype\/descriptionfield","title":"case DescriptionField","type":"case"},{"path":"\/documentation\/divar\/abstracttabletype\/descriptionsecondary","title":"case DescriptionSecondary","type":"case"},{"path":"\/documentation\/divar\/abstracttabletype\/inforow","title":"case InfoRow","type":"case"},{"path":"\/documentation\/divar\/abstracttabletype\/legendtitle","title":"case LegendTitle","type":"case"},{"path":"\/documentation\/divar\/abstracttabletype\/noterow","title":"case NoteRow","type":"case"},{"path":"\/documentation\/divar\/abstracttabletype\/subtitlerow","title":"case SubtitleRow","type":"case"},{"path":"\/documentation\/divar\/abstracttabletype\/textfield","title":"case TextField","type":"case"},{"path":"\/documentation\/divar\/abstracttabletype\/titlerow","title":"case TitleRow","type":"case"},{"path":"\/documentation\/divar\/abstracttabletype\/unknown","title":"case Unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttabletype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttabletype\/cellname","title":"var cellName: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttabletype\/widgets","title":"static var widgets: [AbstractTableType]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttabletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttabletype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/abstracttabletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttabletype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/abstracttabletype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/abstracttabletype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/abstracttabletype","title":"AbstractTableType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/actionenum\/car_details_car_specs_homepage","title":"case CAR_DETAILS_CAR_SPECS_HOMEPAGE","type":"case"},{"path":"\/documentation\/divar\/actionenum\/car_details_price_tools_page","title":"case CAR_DETAILS_PRICE_TOOLS_PAGE","type":"case"},{"path":"\/documentation\/divar\/actionenum\/car_details_zero_price_page","title":"case CAR_DETAILS_ZERO_PRICE_PAGE","type":"case"},{"path":"\/documentation\/divar\/actionenum\/car_inspection_karnameh_manage_page","title":"case CAR_INSPECTION_KARNAMEH_MANAGE_PAGE","type":"case"},{"path":"\/documentation\/divar\/actionenum\/car_inspection_manage_page","title":"case CAR_INSPECTION_MANAGE_PAGE","type":"case"},{"path":"\/documentation\/divar\/actionenum\/dealership_car_dealers_list","title":"case DEALERSHIP_CAR_DEALERS_LIST","type":"case"},{"path":"\/documentation\/divar\/actionenum\/marketplace_store_list","title":"case MARKETPLACE_STORE_LIST","type":"case"},{"path":"\/documentation\/divar\/actionenum\/mechanic_car_blog_post","title":"case MECHANIC_CAR_BLOG_POST","type":"case"},{"path":"\/documentation\/divar\/actionenum\/open_page","title":"case OPEN_PAGE","type":"case"},{"path":"\/documentation\/divar\/actionenum\/open_postlist_page","title":"case OPEN_POSTLIST_PAGE","type":"case"},{"path":"\/documentation\/divar\/actionenum\/open_web_page","title":"case OPEN_WEB_PAGE","type":"case"},{"path":"\/documentation\/divar\/actionenum\/unknown","title":"case UNKNOWN","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actionenum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/actionenum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionenum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/actionenum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/actionenum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/actionenum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/actionenum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/actionenum","title":"ActionEnum","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/actiontype\/genericwidget(source:)","title":"case GenericWidget(source: ActionLog_ActionInfo.Source)","type":"case"},{"path":"\/documentation\/divar\/actiontype\/pagewithsearch","title":"case PageWithSearch","type":"case"},{"path":"\/documentation\/divar\/actiontype\/simplepage","title":"case SimplePage","type":"case"},{"path":"\/documentation\/divar\/actiontype\/stickysplitbutton","title":"case StickySplitButton","type":"case"},{"path":"\/documentation\/divar\/actiontype\/stickytwinbutton","title":"case StickyTwinButton","type":"case"},{"path":"\/documentation\/divar\/actiontype\/stickywidebutton","title":"case StickyWideButton","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/actiontype\/init(_:)","title":"init?(ActionLog_ActionInfo.Source)","type":"init"}],"path":"\/documentation\/divar\/actiontype","title":"ActionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestiontype\/choice","title":"case choice","type":"case"},{"path":"\/documentation\/divar\/archivequestiontype\/none","title":"case none","type":"case"},{"path":"\/documentation\/divar\/archivequestiontype\/string","title":"case string","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestiontype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestiontype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/archivequestiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestiontype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/archivequestiontype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/divar\/archivequestiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/archivequestiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/archivequestiontype","title":"ArchiveQuestionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/audioplayerstatus\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/divar\/audioplayerstatus\/finished","title":"case finished","type":"case"},{"path":"\/documentation\/divar\/audioplayerstatus\/interrupted","title":"case interrupted","type":"case"},{"path":"\/documentation\/divar\/audioplayerstatus\/start(url:)","title":"case start(url: URL)","type":"case"}],"path":"\/documentation\/divar\/audioplayerstatus","title":"AudioPlayerStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformbottombartype\/none","title":"case none","type":"case"},{"path":"\/documentation\/divar\/baseformbottombartype\/splitbuttonbar","title":"case splitButtonBar","type":"case"},{"path":"\/documentation\/divar\/baseformbottombartype\/twinbuttonbar","title":"case twinButtonBar","type":"case"},{"path":"\/documentation\/divar\/baseformbottombartype\/widebuttonbar","title":"case wideButtonBar","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformbottombartype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseformbottombartype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/baseformbottombartype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/baseformbottombartype","title":"BaseFormBottomBarType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/baseurl\/apiversion","title":"case apiVersion","type":"case"},{"path":"\/documentation\/divar\/baseurl\/base","title":"case base","type":"case"},{"path":"\/documentation\/divar\/baseurl\/chatgateway","title":"case chatGateway","type":"case"},{"path":"\/documentation\/divar\/baseurl\/gateway","title":"case gateway","type":"case"},{"path":"\/documentation\/divar\/baseurl\/gatewaywithoutversion","title":"case gatewayWithoutVersion","type":"case"},{"path":"\/documentation\/divar\/baseurl\/grpcgateway","title":"case grpcGateway","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/baseurl\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseurl\/getvalue()","title":"func getValue() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/baseurl\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseurl\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/baseurl\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/baseurl\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/baseurl\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/baseurl\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/baseurl","title":"BaseURL","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/bottombartype\/split","title":"case split","type":"case"},{"path":"\/documentation\/divar\/bottombartype\/twin","title":"case twin","type":"case"},{"path":"\/documentation\/divar\/bottombartype\/wide","title":"case wide","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/bottombartype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/bottombartype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/bottombartype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/bottombartype","title":"BottomBarType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/brandwidgets\/chart","title":"case chart","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/description","title":"case description","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/feedback","title":"case feedback","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/header","title":"case header","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/image","title":"case image","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/link","title":"case link","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/model","title":"case model","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/option","title":"case option","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/rate","title":"case rate","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/ratetitle","title":"case rateTitle","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/related","title":"case related","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/report","title":"case report","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/search","title":"case search","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/divar\/brandwidgets\/video","title":"case video","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandwidgets\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/brandwidgets\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandwidgets\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/brandwidgets\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/brandwidgets\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/brandwidgets\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/brandwidgets\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/divar\/brandwidgets\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/brandwidgets\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/brandwidgets","title":"BrandWidgets","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/buttonrowtype\/payment","title":"case payment","type":"case"},{"path":"\/documentation\/divar\/buttonrowtype\/redeem","title":"case redeem","type":"case"},{"path":"\/documentation\/divar\/buttonrowtype\/submit","title":"case submit","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/buttonrowtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/buttonrowtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/buttonrowtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/buttonrowtype","title":"ButtonRowType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/buttontype\/primary","title":"case primary","type":"case"},{"path":"\/documentation\/divar\/buttontype\/secondary","title":"case secondary","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/buttontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/buttontype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/buttontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/buttontype","title":"ButtonType","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecallstate\/meta-swift.struct\/init(call:statestartdate:)","title":"init(call: CXCall, stateStartDate: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecallstate\/meta-swift.struct\/call","title":"let call: CXCall","type":"property"},{"path":"\/documentation\/divar\/callobserverservicecallstate\/meta-swift.struct\/statestartdate","title":"let stateStartDate: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecallstate\/meta-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecallstate\/meta-swift.struct\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/callobserverservicecallstate\/meta-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/callobserverservicecallstate\/meta-swift.struct","title":"CallObserverServiceCallState.Meta","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecallstate\/connected(meta:)","title":"case connected(meta: Meta)","type":"case"},{"path":"\/documentation\/divar\/callobserverservicecallstate\/dialing(meta:)","title":"case dialing(meta: Meta)","type":"case"},{"path":"\/documentation\/divar\/callobserverservicecallstate\/disconnected(meta:)","title":"case disconnected(meta: Meta)","type":"case"},{"path":"\/documentation\/divar\/callobserverservicecallstate\/incoming(meta:)","title":"case incoming(meta: Meta)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecallstate\/meta-swift.property","title":"var meta: Meta","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecallstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecallstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/callobserverservicecallstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/callobserverservicecallstate","title":"CallObserverServiceCallState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/incoming(result:)","title":"case incoming(result: `Self`.Result)","type":"case"},{"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/outgoing(result:)","title":"case outgoing(result: `Self`.Result)","type":"case"},{"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/undefined","title":"case undefined","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/result\/aftercall","title":"case afterCall","type":"case"},{"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/result\/answered","title":"case answered","type":"case"},{"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/result\/declined","title":"case declined","type":"case"},{"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/result\/finished(callduration:)","title":"case finished(callDuration: TimeInterval)","type":"case"},{"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/result\/oncurrentcall","title":"case onCurrentCall","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/result\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/result\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/result\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/result","title":"CallObserverServiceComplementaryState.Result","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/callobserverservicecomplementarystate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/callobserverservicecomplementarystate","title":"CallObserverServiceComplementaryState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/categorytype\/main","title":"case main","type":"case"},{"path":"\/documentation\/divar\/categorytype\/submit","title":"case submit","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/categorytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/categorytype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/categorytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/categorytype","title":"CategoryType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/change\/delete(_:)","title":"case delete(Delete<T>)","type":"case"},{"path":"\/documentation\/divar\/change\/insert(_:)","title":"case insert(Insert<T>)","type":"case"},{"path":"\/documentation\/divar\/change\/move(_:)","title":"case move(Move<T>)","type":"case"},{"path":"\/documentation\/divar\/change\/replace(_:)","title":"case replace(Replace<T>)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/change\/delete","title":"var delete: Delete<T>?","type":"property"},{"path":"\/documentation\/divar\/change\/insert","title":"var insert: Insert<T>?","type":"property"},{"path":"\/documentation\/divar\/change\/isdeletion","title":"var isDeletion: Bool","type":"property"},{"path":"\/documentation\/divar\/change\/isinsertion","title":"var isInsertion: Bool","type":"property"},{"path":"\/documentation\/divar\/change\/ismove","title":"var isMove: Bool","type":"property"},{"path":"\/documentation\/divar\/change\/isreplace","title":"var isReplace: Bool","type":"property"},{"path":"\/documentation\/divar\/change\/move","title":"var move: Move<T>?","type":"property"},{"path":"\/documentation\/divar\/change\/replace","title":"var replace: Replace<T>?","type":"property"}],"path":"\/documentation\/divar\/change","title":"Change","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorlog\/invalidconversation","title":"case invalidConversation","type":"case"},{"path":"\/documentation\/divar\/chaterrorlog\/limitreached","title":"case limitReached","type":"case"},{"path":"\/documentation\/divar\/chaterrorlog\/ownerdeletedconversation","title":"case ownerDeletedConversation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorlog\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorlog\/log(_:topic:payload:)","title":"func log(SocketErrorResponseStruct, topic: String, payload: [String : Any]?) -> SentryEventArguments?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorlog\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorlog\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chaterrorlog\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorlog\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chaterrorlog\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/chaterrorlog\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chaterrorlog","title":"ChatErrorLog","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkmanagererror\/channelnotfound","title":"case channelNotFound","type":"case"},{"path":"\/documentation\/divar\/chatnetworkmanagererror\/socketalreadyopen","title":"case socketAlreadyOpen","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkmanagererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkmanagererror\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/chatnetworkmanagererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkmanagererror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/divar\/chatnetworkmanagererror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/chatnetworkmanagererror\/asaferror(or:)","title":"func asAFError(or: () -> AFError) -> AFError","type":"method"},{"path":"\/documentation\/divar\/chatnetworkmanagererror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/divar\/chatnetworkmanagererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/divar\/chatnetworkmanagererror","title":"ChatNetworkManagerError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectiontype\/all","title":"case all","type":"case"},{"path":"\/documentation\/divar\/cityselectiontype\/nearby","title":"case nearby","type":"case"},{"path":"\/documentation\/divar\/cityselectiontype\/popular","title":"case popular","type":"case"},{"path":"\/documentation\/divar\/cityselectiontype\/search","title":"case search","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectiontype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectiontype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/cityselectiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/cityselectiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/cityselectiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/cityselectiontype","title":"CitySelectionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/configurablecellenum\/descriptiontextchange(isvalid:)","title":"case DescriptionTextChange(isValid: Bool)","type":"case"},{"path":"\/documentation\/divar\/configurablecellenum\/ondealerregistertap","title":"case OnDealerRegisterTap","type":"case"},{"path":"\/documentation\/divar\/configurablecellenum\/onsubscriptionbuttontap","title":"case OnSubscriptionButtonTap","type":"case"},{"path":"\/documentation\/divar\/configurablecellenum\/textfieldtextchange","title":"case TextFieldTextChange","type":"case"}],"path":"\/documentation\/divar\/configurablecellenum","title":"ConfigurableCellEnum","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitemaction\/bookmark","title":"case bookmark","type":"case"},{"path":"\/documentation\/divar\/contactitemaction\/call","title":"case call","type":"case"},{"path":"\/documentation\/divar\/contactitemaction\/chat","title":"case chat","type":"case"},{"path":"\/documentation\/divar\/contactitemaction\/sms","title":"case sms","type":"case"},{"path":"\/documentation\/divar\/contactitemaction\/voip","title":"case voip","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitemaction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitemaction\/notgoodtimemessage","title":"var notGoodTimeMessage: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitemaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitemaction\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/contactitemaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitemaction\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitemaction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contactitemaction\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/divar\/contactitemaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/contactitemaction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/contactitemaction","title":"ContactItemAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/contenttype\/grpc","title":"case gRPC","type":"case"},{"path":"\/documentation\/divar\/contenttype\/json","title":"case json","type":"case"},{"path":"\/documentation\/divar\/contenttype\/octetstream","title":"case octetStream","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/contenttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/contenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contenttype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/contenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/contenttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/contenttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/contenttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/contenttype","title":"ContentType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/currency\/billion","title":"case billion","type":"case"},{"path":"\/documentation\/divar\/currency\/hundred","title":"case hundred","type":"case"},{"path":"\/documentation\/divar\/currency\/million","title":"case million","type":"case"},{"path":"\/documentation\/divar\/currency\/thousand","title":"case thousand","type":"case"},{"path":"\/documentation\/divar\/currency\/unco","title":"case unco","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/currency\/init(number:)","title":"init(number: NSNumber)","type":"init"},{"path":"\/documentation\/divar\/currency\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/currency\/maxnubmerwithseparator","title":"var maxNubmerWithSeparator: Int","type":"property"},{"path":"\/documentation\/divar\/currency\/maxnumber","title":"var maxNumber: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/currency\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/currency\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/currency\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/currency\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/currency\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/currency\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/currency","title":"Currency","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/decodeerror\/invalidbase64url(_:)","title":"case invalidBase64Url(String)","type":"case"},{"path":"\/documentation\/divar\/decodeerror\/invalidjson(_:)","title":"case invalidJSON(String)","type":"case"},{"path":"\/documentation\/divar\/decodeerror\/invalidpartcount(_:_:)","title":"case invalidPartCount(String, Int)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/decodeerror\/localizeddescription-9wdv9","title":"var localizedDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/decodeerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/divar\/decodeerror\/localizeddescription-4frns","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/decodeerror\/asaferror(or:)","title":"func asAFError(or: () -> AFError) -> AFError","type":"method"},{"path":"\/documentation\/divar\/decodeerror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/divar\/decodeerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/decodeerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/divar\/decodeerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/divar\/decodeerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/divar\/decodeerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/divar\/decodeerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/divar\/decodeerror","title":"DecodeError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgettype\/primary","title":"case primary","type":"case"},{"path":"\/documentation\/divar\/descriptiontextwidgettype\/secondary","title":"case secondary","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgettype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgettype\/color","title":"var color: UIColor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgettype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgettype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/descriptiontextwidgettype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgettype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/descriptiontextwidgettype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/descriptiontextwidgettype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/descriptiontextwidgettype","title":"DescriptionTextWidgetType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/directionchangesensitivity\/custom(_:)","title":"case custom(CGFloat)","type":"case"},{"path":"\/documentation\/divar\/directionchangesensitivity\/high","title":"case high","type":"case"},{"path":"\/documentation\/divar\/directionchangesensitivity\/low","title":"case low","type":"case"},{"path":"\/documentation\/divar\/directionchangesensitivity\/normal","title":"case normal","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/directionchangesensitivity\/sensitivity","title":"var sensitivity: CGFloat","type":"property"}],"path":"\/documentation\/divar\/directionchangesensitivity","title":"DirectionChangeSensitivity","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepoststabidentifier\/disable","title":"case disable","type":"case"},{"path":"\/documentation\/divar\/disablepoststabidentifier\/enable","title":"case enable","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepoststabidentifier\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepoststabidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepoststabidentifier\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/disablepoststabidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepoststabidentifier\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/disablepoststabidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/disablepoststabidentifier\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/disablepoststabidentifier","title":"DisablePostsTabIdentifier","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/documenthelperfilename\/businessregister","title":"case businessRegister","type":"case"},{"path":"\/documentation\/divar\/documenthelperfilename\/businesssubmit","title":"case businessSubmit","type":"case"},{"path":"\/documentation\/divar\/documenthelperfilename\/personalsubmit","title":"case personalSubmit","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/documenthelperfilename\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/documenthelperfilename\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/documenthelperfilename\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/documenthelperfilename\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/documenthelperfilename\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/documenthelperfilename\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/documenthelperfilename\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/documenthelperfilename","title":"DocumentHelperFileName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/errorrowindextype\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/divar\/errorrowindextype\/top","title":"case top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/errorrowindextype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/errorrowindextype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/errorrowindextype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/errorrowindextype","title":"ErrorRowIndexType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktype\/buyer","title":"case buyer","type":"case"},{"path":"\/documentation\/divar\/feedbacktype\/seller","title":"case seller","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/feedbacktype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/feedbacktype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/feedbacktype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/feedbacktype","title":"FeedbackType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/category","title":"case category","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/contact","title":"case contact","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/credit","title":"case credit","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/images","title":"case images","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/link","title":"case link","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/location","title":"case location","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/price","title":"case price","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/rent","title":"case rent","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/video","title":"case video","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/chatenabled","title":"case chatEnabled","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/chatid","title":"case chatID","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/email","title":"case email","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/hideemail","title":"case hideEmail","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/hidephone","title":"case hidePhone","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/phone","title":"case phone","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/fieldkeys\/contactkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/fieldkeys\/contactkeys","title":"FieldKeys.ContactKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/approximatelatitude","title":"case approximateLatitude","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/approximatelongitude","title":"case approximateLongitude","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/city","title":"case city","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/destlong","title":"case destLong","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/detslat","title":"case detsLat","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/district","title":"case district","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/street","title":"case street","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/fieldkeys\/locationkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/fieldkeys\/locationkeys","title":"FieldKeys.LocationKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/pricekeys\/mode","title":"case mode","type":"case"},{"path":"\/documentation\/divar\/fieldkeys\/pricekeys\/value","title":"case value","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/pricekeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/pricekeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/pricekeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/fieldkeys\/pricekeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/pricekeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/pricekeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/fieldkeys\/pricekeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/fieldkeys\/pricekeys","title":"FieldKeys.PriceKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/fieldkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/fieldkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/fieldkeys","title":"FieldKeys","type":"enum"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/alertvalidator","title":"case alertValidator","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/alt_date","title":"case alt_date","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/alt_datetime","title":"case alt_datetime","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/bottomsheet","title":"case bottomSheet","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/category","title":"case category","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/categoryhierarchy","title":"case categoryHierarchy","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/color","title":"case color","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/date","title":"case date","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/datetime","title":"case datetime","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/email","title":"case email","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/file","title":"case file","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/hidden","title":"case hidden","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/hierarchy","title":"case hierarchy","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/inputfield","title":"case inputField","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/packageselectionwidget","title":"case packageSelectionWidget","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/password","title":"case password","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/radio","title":"case radio","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/segmentedfield","title":"case segmentedField","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/select","title":"case select","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/singleselecthierarchywidget","title":"case singleSelectHierarchyWidget","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/text","title":"case text","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/textarea","title":"case textarea","type":"case"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/uri","title":"case uri","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/fieldtypes\/stringfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/fieldtypes\/stringfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/fieldtypes\/stringfield\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/fieldtypes\/stringfield","title":"FieldTypes.StringField","type":"enum"}],"path":"\/documentation\/divar\/fieldtypes","title":"FieldTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/formactiontype\/opencarconciergemanagement","title":"case openCarConciergeManagement","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/openmarketplacefinalizeeditstore","title":"case openMarketplaceFinalizeEditStore","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/openmarketplacefinalizeregister","title":"case openMarketplaceFinalizeRegister","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/openpostmanagement","title":"case openPostManagement","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/opentransactionconfirmationoffer","title":"case openTransactionConfirmationOffer","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/schemapageaction","title":"case schemaPageAction","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/unknown","title":"case unknown","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/caragentsubmitnextpage","title":"case carAgentSubmitNextPage","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/dealerregisternextpage","title":"case dealerRegisterNextPage","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/dealersubmitnextpage","title":"case dealerSubmitNextPage","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/jobssubmitpage","title":"case jobsSubmitPage","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/marketplaceregisterstorenextpage","title":"case marketplaceRegisterStoreNextPage","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/marketplacesubmitnextpage","title":"case marketplaceSubmitNextPage","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/personalsubmitnextpage","title":"case personalSubmitNextPage","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/realestatedigitalregistrationnextpage","title":"case realEstateDigitalRegistrationNextPage","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/realestateregisterindependentagent","title":"case realEstateRegisterIndependentAgent","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/realestatesubmitnextpage","title":"case realEstateSubmitNextPage","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/realestatesubscriptionpurchasenextpage","title":"case realEstateSubscriptionPurchaseNextPage","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/schemapage","title":"case schemaPage","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/usedpricefromnextpage","title":"case usedPriceFromNextPage","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/formactiontype\/nextpagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/formactiontype\/nextpagetype","title":"FormActionType.NextPageType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/formactiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/formactiontype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/formactiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/formactiontype","title":"FormActionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchysearchsources\/filter","title":"case filter","type":"case"},{"path":"\/documentation\/divar\/hierarchysearchsources\/submit","title":"case submit","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchysearchsources\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchysearchsources\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchysearchsources\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/hierarchysearchsources\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchysearchsources\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/hierarchysearchsources\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/hierarchysearchsources\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/hierarchysearchsources","title":"HierarchySearchSources","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/hintrowtype\/empty","title":"case empty","type":"case"},{"path":"\/documentation\/divar\/hintrowtype\/error","title":"case error","type":"case"},{"path":"\/documentation\/divar\/hintrowtype\/hint","title":"case hint","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/hintrowtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/hintrowtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/hintrowtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/hintrowtype","title":"HintRowType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/hinttype\/error(text:icon:)","title":"case error(text: String?, icon: UIImage?)","type":"case"},{"path":"\/documentation\/divar\/hinttype\/message(text:)","title":"case message(text: String?)","type":"case"}],"path":"\/documentation\/divar\/hinttype","title":"HintType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/horizontalscrollingdirection\/left","title":"case left","type":"case"},{"path":"\/documentation\/divar\/horizontalscrollingdirection\/right","title":"case right","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/horizontalscrollingdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/horizontalscrollingdirection\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/horizontalscrollingdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/horizontalscrollingdirection","title":"HorizontalScrollingDirection","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivassetfetchtype\/image","title":"case image","type":"case"},{"path":"\/documentation\/divar\/ivassetfetchtype\/video","title":"case video","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/ivassetfetchtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivassetfetchtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivassetfetchtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivassetfetchtype","title":"IVAssetFetchType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectoritems\/image(item:)","title":"case image(item: IVCollectionAssetSelectorImageItem)","type":"case"},{"path":"\/documentation\/divar\/ivcollectionassetselectoritems\/video(item:)","title":"case video(item: IVCollectionAssetSelectorVideoItem)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectoritems\/isimage","title":"var isImage: Bool","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectoritems\/isvideo","title":"var isVideo: Bool","type":"property"},{"path":"\/documentation\/divar\/ivcollectionassetselectoritems\/uniqueidentifier","title":"var uniqueIdentifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectoritems\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectoritems\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectoritems\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionassetselectoritems","title":"IVCollectionAssetSelectorItems","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorsections\/main","title":"case main","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorsections\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionassetselectorsections\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivcollectionassetselectorsections\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionassetselectorsections","title":"IVCollectionAssetSelectorSections","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/albumcloudshared","title":"case albumCloudShared","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/albumimported","title":"case albumImported","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/albummyphotostream","title":"case albumMyPhotoStream","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/albumregular","title":"case albumRegular","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/albumsyncedalbum","title":"case albumSyncedAlbum","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/albumsyncedevent","title":"case albumSyncedEvent","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/albumsyncedfaces","title":"case albumSyncedFaces","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/any","title":"case any","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumallhidden","title":"case smartAlbumAllHidden","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumanimated","title":"case smartAlbumAnimated","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumbursts","title":"case smartAlbumBursts","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumdeptheffect","title":"case smartAlbumDepthEffect","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumfavorites","title":"case smartAlbumFavorites","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumgeneric","title":"case smartAlbumGeneric","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumlivephotos","title":"case smartAlbumLivePhotos","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumlongexposures","title":"case smartAlbumLongExposures","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumpanoramas","title":"case smartAlbumPanoramas","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumraw","title":"case smartAlbumRAW","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumrecentlyadded","title":"case smartAlbumRecentlyAdded","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumscreenshots","title":"case smartAlbumScreenshots","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumselfportraits","title":"case smartAlbumSelfPortraits","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumslomovideos","title":"case smartAlbumSlomoVideos","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumtimelapses","title":"case smartAlbumTimelapses","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumunabletoupload","title":"case smartAlbumUnableToUpload","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumuserlibrary","title":"case smartAlbumUserLibrary","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/smartalbumvideos","title":"case smartAlbumVideos","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivcollectionfetchsubtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionfetchsubtype","title":"IVCollectionFetchSubType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchtype\/album","title":"case album","type":"case"},{"path":"\/documentation\/divar\/ivcollectionfetchtype\/smartalbum","title":"case smartAlbum","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchtype\/tophassetcollectiontype","title":"var toPHAssetCollectionType: PHAssetCollectionType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivcollectionfetchtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivcollectionfetchtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivcollectionfetchtype","title":"IVCollectionFetchType","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/message\/init(message:file:function:line:)","title":"init(message: String?, file: String?, function: String?, line: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/message\/file","title":"let file: String?","type":"property"},{"path":"\/documentation\/divar\/iverror\/message\/function","title":"let function: String?","type":"property"},{"path":"\/documentation\/divar\/iverror\/message\/line","title":"let line: Int?","type":"property"},{"path":"\/documentation\/divar\/iverror\/message\/message","title":"let message: String?","type":"property"}],"path":"\/documentation\/divar\/iverror\/message","title":"IVError.Message","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/exporterror(reason:)","title":"case exportError(reason: `Self`.ExportError)","type":"case"},{"path":"\/documentation\/divar\/iverror\/photoapierror(reason:)","title":"case photoAPIError(reason: `Self`.PhotoAPIError)","type":"case"},{"path":"\/documentation\/divar\/iverror\/typeconversionerror(reason:)","title":"case typeConversionError(reason: `Self`.TypeConversionError)","type":"case"},{"path":"\/documentation\/divar\/iverror\/urlerror(reason:)","title":"case urlError(reason: `Self`.URLError)","type":"case"},{"path":"\/documentation\/divar\/iverror\/videomanipulatorerror(reason:)","title":"case videoManipulatorError(reason: `Self`.VideoManipulatorError)","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/exporterror\/cannotcreatavexportsession(message:)","title":"case canNotCreatAvExportSession(message: IVError.Message)","type":"case"},{"path":"\/documentation\/divar\/iverror\/exporterror\/exportsessionwascanceled(message:)","title":"case exportSessionWasCanceled(message: IVError.Message)","type":"case"},{"path":"\/documentation\/divar\/iverror\/exporterror\/exportsessionwasfailed(message:)","title":"case exportSessionWasFailed(message: IVError.Message)","type":"case"},{"path":"\/documentation\/divar\/iverror\/exporterror\/outputurlwasnotfound(message:)","title":"case outputURLWasNotFound(message: IVError.Message)","type":"case"},{"path":"\/documentation\/divar\/iverror\/exporterror\/unknownexportsessionstate(message:)","title":"case unknownExportSessionState(message: IVError.Message)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/exporterror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/divar\/iverror\/exporterror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/exporterror\/asaferror(or:)","title":"func asAFError(or: () -> AFError) -> AFError","type":"method"},{"path":"\/documentation\/divar\/iverror\/exporterror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/divar\/iverror\/exporterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/divar\/iverror\/exporterror","title":"IVError.ExportError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/photoapierror\/appcollectionnotloaded(message:)","title":"case appCollectionNotLoaded(message: IVError.Message)","type":"case"},{"path":"\/documentation\/divar\/iverror\/photoapierror\/assetlocalidentifierwasnotcreated(message:)","title":"case assetLocalIdentifierWasNotCreated(message: IVError.Message)","type":"case"},{"path":"\/documentation\/divar\/iverror\/photoapierror\/cannotcreatecontent(message:)","title":"case canNotCreateContent(message: IVError.Message)","type":"case"},{"path":"\/documentation\/divar\/iverror\/photoapierror\/cannotfetchcollection(uniqueidentifier:message:)","title":"case canNotFetchCollection(uniqueIdentifier: String, message: IVError.Message)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/photoapierror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/divar\/iverror\/photoapierror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/photoapierror\/asaferror(or:)","title":"func asAFError(or: () -> AFError) -> AFError","type":"method"},{"path":"\/documentation\/divar\/iverror\/photoapierror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/divar\/iverror\/photoapierror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/divar\/iverror\/photoapierror","title":"IVError.PhotoAPIError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/typeconversionerror\/cannotconvert(message:)","title":"case canNotConvert(message: IVError.Message)","type":"case"},{"path":"\/documentation\/divar\/iverror\/typeconversionerror\/cannotconvertdatatouiimage(message:)","title":"case canNotConvertDataToUIImage(message: IVError.Message)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/typeconversionerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/divar\/iverror\/typeconversionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/typeconversionerror\/asaferror(or:)","title":"func asAFError(or: () -> AFError) -> AFError","type":"method"},{"path":"\/documentation\/divar\/iverror\/typeconversionerror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/divar\/iverror\/typeconversionerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/divar\/iverror\/typeconversionerror","title":"IVError.TypeConversionError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/urlerror\/notfileurl(message:)","title":"case notFileURL(message: IVError.Message)","type":"case"},{"path":"\/documentation\/divar\/iverror\/urlerror\/urlnotfound(message:)","title":"case urlNotFound(message: IVError.Message)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/urlerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/divar\/iverror\/urlerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/urlerror\/asaferror(or:)","title":"func asAFError(or: () -> AFError) -> AFError","type":"method"},{"path":"\/documentation\/divar\/iverror\/urlerror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/divar\/iverror\/urlerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/divar\/iverror\/urlerror","title":"IVError.URLError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/videomanipulatorerror\/cannotaddmutedaudiotrack(message:)","title":"case canNotAddMutedAudioTrack(message: IVError.Message)","type":"case"},{"path":"\/documentation\/divar\/iverror\/videomanipulatorerror\/cannotextractaudio(message:)","title":"case canNotExtractAudio(message: IVError.Message)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/videomanipulatorerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/divar\/iverror\/videomanipulatorerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/videomanipulatorerror\/asaferror(or:)","title":"func asAFError(or: () -> AFError) -> AFError","type":"method"},{"path":"\/documentation\/divar\/iverror\/videomanipulatorerror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/divar\/iverror\/videomanipulatorerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/divar\/iverror\/videomanipulatorerror","title":"IVError.VideoManipulatorError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/divar\/iverror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/iverror\/asaferror(or:)","title":"func asAFError(or: () -> AFError) -> AFError","type":"method"},{"path":"\/documentation\/divar\/iverror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/divar\/iverror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/divar\/iverror","title":"IVError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivfiletype\/ac3","title":"case ac3","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/aifc","title":"case aifc","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/aiff","title":"case aiff","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/amr","title":"case amr","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/au","title":"case au","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/avci","title":"case avci","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/caf","title":"case caf","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/dng","title":"case dng","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/eac3","title":"case eac3","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/heic","title":"case heic","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/heif","title":"case heif","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/jpg","title":"case jpg","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/m4a","title":"case m4a","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/m4v","title":"case m4v","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/mobile3gpp","title":"case mobile3GPP","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/mobile3gpp2","title":"case mobile3GPP2","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/mov","title":"case mov","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/mp3","title":"case mp3","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/mp4","title":"case mp4","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/tif","title":"case tif","type":"case"},{"path":"\/documentation\/divar\/ivfiletype\/wav","title":"case wav","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivfiletype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivfiletype\/maptoavfiletype","title":"var mapToAVFileType: AVFileType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/ivfiletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivfiletype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivfiletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivfiletype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivfiletype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/ivfiletype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivfiletype","title":"IVFileType","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorvalidationresult\/errormeta\/init(message:failedrule:)","title":"init(message: String, failedRule: IVRule)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorvalidationresult\/errormeta\/failedrule","title":"let failedRule: IVRule","type":"property"},{"path":"\/documentation\/divar\/ivitemselectorvalidationresult\/errormeta\/message","title":"let message: String","type":"property"}],"path":"\/documentation\/divar\/ivitemselectorvalidationresult\/errormeta","title":"IVItemSelectorValidationResult.ErrorMeta","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorvalidationresult\/error(meta:)","title":"case error(meta: [ErrorMeta])","type":"case"},{"path":"\/documentation\/divar\/ivitemselectorvalidationresult\/valid","title":"case valid","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivitemselectorvalidationresult\/errormessages","title":"var errorMessages: [String]","type":"property"},{"path":"\/documentation\/divar\/ivitemselectorvalidationresult\/isvalid","title":"var isValid: Bool","type":"property"}],"path":"\/documentation\/divar\/ivitemselectorvalidationresult","title":"IVItemSelectorValidationResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivmediatype\/image","title":"case image","type":"case"},{"path":"\/documentation\/divar\/ivmediatype\/video","title":"case video","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/ivmediatype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/ivmediatype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivmediatype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivmediatype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivmediatype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivmediatype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/ivmediatype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivmediatype","title":"IVMediaType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivpickeddata\/image(_:)","title":"case image(IVPickedImageData)","type":"case"},{"path":"\/documentation\/divar\/ivpickeddata\/video(_:)","title":"case video(IVPickedVideoData)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivpickeddata\/imagedata","title":"var imageData: IVPickedImageData?","type":"property"},{"path":"\/documentation\/divar\/ivpickeddata\/isimage","title":"var isImage: Bool","type":"property"},{"path":"\/documentation\/divar\/ivpickeddata\/isvideo","title":"var isVideo: Bool","type":"property"},{"path":"\/documentation\/divar\/ivpickeddata\/videodata","title":"var videoData: IVPickedVideoData?","type":"property"}],"path":"\/documentation\/divar\/ivpickeddata","title":"IVPickedData","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvalidationresult\/error(message:)","title":"case error(message: String)","type":"case"},{"path":"\/documentation\/divar\/ivvalidationresult\/valid","title":"case valid","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvalidationresult\/errormessage","title":"var errorMessage: String?","type":"property"},{"path":"\/documentation\/divar\/ivvalidationresult\/haserror","title":"var hasError: Bool","type":"property"}],"path":"\/documentation\/divar\/ivvalidationresult","title":"IVValidationResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/preset1280x720","title":"case preset1280x720","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/preset1920x1080","title":"case preset1920x1080","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/preset3840x2160","title":"case preset3840x2160","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/preset640x480","title":"case preset640x480","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/preset960x540","title":"case preset960x540","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presetapplem4a","title":"case presetAppleM4A","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presetappleprores422lpcm","title":"case presetAppleProRes422LPCM","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presetappleprores4444lpcm","title":"case presetAppleProRes4444LPCM","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presethevc1920x1080","title":"case presetHEVC1920x1080","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presethevc1920x1080withalpha","title":"case presetHEVC1920x1080WithAlpha","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presethevc3840x2160","title":"case presetHEVC3840x2160","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presethevc3840x2160withalpha","title":"case presetHEVC3840x2160WithAlpha","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presethevchighestquality","title":"case presetHEVCHighestQuality","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presethevchighestqualitywithalpha","title":"case presetHEVCHighestQualityWithAlpha","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presethighestquality","title":"case presetHighestQuality","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presetlowquality","title":"case presetLowQuality","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presetmediumquality","title":"case presetMediumQuality","type":"case"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/presetpassthrough","title":"case presetPassthrough","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/toavassetexportpreset","title":"var toAVAssetExportPreset: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/ivvideoexportpreset\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/ivvideoexportpreset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/ivvideoexportpreset","title":"IVVideoExportPreset","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/imagerowitemstate\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/divar\/imagerowitemstate\/filled","title":"case filled","type":"case"},{"path":"\/documentation\/divar\/imagerowitemstate\/placeholder","title":"case placeholder","type":"case"},{"path":"\/documentation\/divar\/imagerowitemstate\/uploading","title":"case uploading","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/imagerowitemstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/imagerowitemstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/imagerowitemstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/imagerowitemstate","title":"ImageRowItemState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/int64rowtype\/price","title":"case price","type":"case"},{"path":"\/documentation\/divar\/int64rowtype\/submit","title":"case submit","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/int64rowtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/int64rowtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/int64rowtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/int64rowtype","title":"Int64RowType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/labelrowtype\/error","title":"case error","type":"case"},{"path":"\/documentation\/divar\/labelrowtype\/payment","title":"case payment","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/labelrowtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/labelrowtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/labelrowtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/labelrowtype","title":"LabelRowType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataactions\/openagencypage","title":"case openAgencyPage","type":"case"},{"path":"\/documentation\/divar\/listdataactions\/opencarconciergesalelandingpage","title":"case openCarConciergeSaleLandingPage","type":"case"},{"path":"\/documentation\/divar\/listdataactions\/openlandingpage","title":"case openLandingPage","type":"case"},{"path":"\/documentation\/divar\/listdataactions\/openmarketplacelandingpage","title":"case openMarketplaceLandingPage","type":"case"},{"path":"\/documentation\/divar\/listdataactions\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataactions\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataactions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataactions\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/listdataactions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataactions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataactions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataactions\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/divar\/listdataactions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/listdataactions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/listdataactions","title":"ListDataActions","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataformat\/button","title":"case button","type":"case"},{"path":"\/documentation\/divar\/listdataformat\/link","title":"case link","type":"case"},{"path":"\/documentation\/divar\/listdataformat\/price","title":"case price","type":"case"},{"path":"\/documentation\/divar\/listdataformat\/string","title":"case string","type":"case"},{"path":"\/documentation\/divar\/listdataformat\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/divar\/listdataformat\/uri","title":"case uri","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataformat\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/listdataformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataformat\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/listdataformat\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/divar\/listdataformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/listdataformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/listdataformat","title":"ListDataFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatamode\/inapp","title":"case inApp","type":"case"},{"path":"\/documentation\/divar\/listdatamode\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatamode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatamode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatamode\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/listdatamode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatamode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatamode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/listdatamode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/divar\/listdatamode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/listdatamode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/listdatamode","title":"ListDataMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/mapapps\/applemaps","title":"case AppleMaps","type":"case"},{"path":"\/documentation\/divar\/mapapps\/balad","title":"case Balad","type":"case"},{"path":"\/documentation\/divar\/mapapps\/googlemaps","title":"case GoogleMaps","type":"case"},{"path":"\/documentation\/divar\/mapapps\/navigon","title":"case Navigon","type":"case"},{"path":"\/documentation\/divar\/mapapps\/tomtom","title":"case TomTom","type":"case"},{"path":"\/documentation\/divar\/mapapps\/waze","title":"case Waze","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mapapps\/available","title":"var available: Bool","type":"property"},{"path":"\/documentation\/divar\/mapapps\/image","title":"var image: SonnatImages?","type":"property"},{"path":"\/documentation\/divar\/mapapps\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/divar\/mapapps\/url","title":"var url: URL?","type":"property"},{"path":"\/documentation\/divar\/mapapps\/urlstring","title":"var urlString: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapapps\/directionsurl(coordinate:name:)","title":"func directionsUrl(coordinate: CLLocationCoordinate2D, name: String) -> URL?","type":"method"},{"path":"\/documentation\/divar\/mapapps\/directionsurlstring(coordinate:name:)","title":"func directionsUrlString(coordinate: CLLocationCoordinate2D, name: String) -> String","type":"method"},{"path":"\/documentation\/divar\/mapapps\/openwithdirections(coordinate:name:completion:)","title":"func openWithDirections(coordinate: CLLocationCoordinate2D, name: String, completion: ((Bool) -> Swift.Void)?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/mapapps\/allvalues","title":"static let AllValues: [MapApps]","type":"property"},{"path":"\/documentation\/divar\/mapapps\/availableservices","title":"static var AvailableServices: [MapApps]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/mapapps\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/mapapps\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/mapapps\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/mapapps","title":"MapApps","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecelloptions\/copy","title":"case copy","type":"case"},{"path":"\/documentation\/divar\/messagecelloptions\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/divar\/messagecelloptions\/edit","title":"case edit","type":"case"},{"path":"\/documentation\/divar\/messagecelloptions\/forward","title":"case forward","type":"case"},{"path":"\/documentation\/divar\/messagecelloptions\/reply","title":"case reply","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecelloptions\/all","title":"static var all: [MessageCellOptions]","type":"property"},{"path":"\/documentation\/divar\/messagecelloptions\/allbutcopy","title":"static var allButCopy: [MessageCellOptions]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecelloptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagecelloptions\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/messagecelloptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagecelloptions","title":"MessageCellOptions","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/messagedata\/call(_:)","title":"case call(ChatCallLogStructure)","type":"case"},{"path":"\/documentation\/divar\/messagedata\/file(_:)","title":"case file(ChatFileMessageStructure)","type":"case"},{"path":"\/documentation\/divar\/messagedata\/location(_:)","title":"case location(ChatLocationDataStructure)","type":"case"},{"path":"\/documentation\/divar\/messagedata\/media(_:)","title":"case media(ChatMediaDataStructure)","type":"case"},{"path":"\/documentation\/divar\/messagedata\/sharecontact(_:)","title":"case shareContact(ChatShareContactStructure)","type":"case"},{"path":"\/documentation\/divar\/messagedata\/suggestion(_:)","title":"case suggestion(Suggestion)","type":"case"},{"path":"\/documentation\/divar\/messagedata\/text(_:)","title":"case text(String)","type":"case"},{"path":"\/documentation\/divar\/messagedata\/unknown(_:)","title":"case unknown(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/messagedata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagedata\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagedata\/fromdatabasevalue(_:for:)","title":"static func fromDatabaseValue(DatabaseValue, for: MessageType) -> MessageData?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagedata\/databasevalue","title":"var databaseValue: DatabaseValue","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagedata\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/messagedata\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/messagedata\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/messagedata\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/messagedata\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/messagedata\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/messagedata\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/messagedata\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/messagedata\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/messagedata\/fetchset(_:_:)","title":"static func fetchSet<R>(Database, R) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/messagedata\/fetchset(_:arguments:adapter:)","title":"static func fetchSet(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/messagedata\/fetchset(_:sql:arguments:adapter:)","title":"static func fetchSet(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/messagedata\/fromdatabasevalue(_:)","title":"static func fromDatabaseValue(DatabaseValue) -> Self?","type":"method"}],"path":"\/documentation\/divar\/messagedata\/databasevalueconvertible-implementations","title":"DatabaseValueConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagedata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/divar\/messagedata\/==(_:_:)","title":"static func == (MessageData, MessageData) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagedata\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/messagedata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagedata\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/messagedata\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagedata\/sqlexpression","title":"var sqlExpression: SQLExpression","type":"property"}],"path":"\/documentation\/divar\/messagedata\/sqlexpressible-implementations","title":"SQLExpressible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagedata\/bind(to:at:)","title":"func bind(to: SQLiteStatement, at: CInt) -> CInt","type":"method"}],"path":"\/documentation\/divar\/messagedata\/statementbinding-implementations","title":"StatementBinding Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagedata","title":"MessageData","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/messagehandlertypeenum\/conversationlastmessage","title":"case conversationLastMessage","type":"case"},{"path":"\/documentation\/divar\/messagehandlertypeenum\/getconversationlastmessage","title":"case getConversationLastMessage","type":"case"},{"path":"\/documentation\/divar\/messagehandlertypeenum\/getconversationmessage","title":"case getConversationMessage","type":"case"},{"path":"\/documentation\/divar\/messagehandlertypeenum\/newmessagearrive","title":"case newMessageArrive","type":"case"},{"path":"\/documentation\/divar\/messagehandlertypeenum\/outboxblockedmessage","title":"case outboxBlockedMessage","type":"case"},{"path":"\/documentation\/divar\/messagehandlertypeenum\/outboxmessage","title":"case outboxMessage","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagehandlertypeenum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagehandlertypeenum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/messagehandlertypeenum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagehandlertypeenum","title":"MessageHandlerTypeEnum","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/messagestate\/deleted","title":"case deleted","type":"case"},{"path":"\/documentation\/divar\/messagestate\/edited","title":"case edited","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/messagestate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagestate\/label","title":"var label: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagestate\/databasevalue","title":"var databaseValue: DatabaseValue","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagestate\/fetchall(_:_:)","title":"static func fetchAll<R>(Database, R) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fetchall(_:arguments:adapter:)","title":"static func fetchAll(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fetchall(_:sql:arguments:adapter:)","title":"static func fetchAll(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> [Self]","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fetchcursor(_:_:)","title":"static func fetchCursor<R>(Database, R) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fetchcursor(_:arguments:adapter:)","title":"static func fetchCursor(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fetchcursor(_:sql:arguments:adapter:)","title":"static func fetchCursor(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> DatabaseValueCursor<Self>","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fetchone(_:_:)","title":"static func fetchOne<R>(Database, R) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fetchone(_:arguments:adapter:)","title":"static func fetchOne(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fetchone(_:sql:arguments:adapter:)","title":"static func fetchOne(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Self?","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fetchset(_:_:)","title":"static func fetchSet<R>(Database, R) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fetchset(_:arguments:adapter:)","title":"static func fetchSet(Statement, arguments: StatementArguments?, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fetchset(_:sql:arguments:adapter:)","title":"static func fetchSet(Database, sql: String, arguments: StatementArguments, adapter: RowAdapter?) throws -> Set<Self>","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fromdatabasevalue(_:)-3d0m1","title":"static func fromDatabaseValue(DatabaseValue) -> MessageState?","type":"method"},{"path":"\/documentation\/divar\/messagestate\/fromdatabasevalue(_:)-cm3a","title":"static func fromDatabaseValue(DatabaseValue) -> Self?","type":"method"}],"path":"\/documentation\/divar\/messagestate\/databasevalueconvertible-implementations","title":"DatabaseValueConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagestate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagestate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/messagestate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/messagestate\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagestate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagestate\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/divar\/messagestate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/messagestate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagestate\/sqlexpression","title":"var sqlExpression: SQLExpression","type":"property"}],"path":"\/documentation\/divar\/messagestate\/sqlexpressible-implementations","title":"SQLExpressible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagestate\/bind(to:at:)","title":"func bind(to: SQLiteStatement, at: CInt) -> CInt","type":"method"}],"path":"\/documentation\/divar\/messagestate\/statementbinding-implementations","title":"StatementBinding Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagestate","title":"MessageState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/messagetype\/call","title":"case call","type":"case"},{"path":"\/documentation\/divar\/messagetype\/file","title":"case file","type":"case"},{"path":"\/documentation\/divar\/messagetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/divar\/messagetype\/location","title":"case location","type":"case"},{"path":"\/documentation\/divar\/messagetype\/sharecontact","title":"case shareContact","type":"case"},{"path":"\/documentation\/divar\/messagetype\/suggestion","title":"case suggestion","type":"case"},{"path":"\/documentation\/divar\/messagetype\/text","title":"case text","type":"case"},{"path":"\/documentation\/divar\/messagetype\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/divar\/messagetype\/video","title":"case video","type":"case"},{"path":"\/documentation\/divar\/messagetype\/voice","title":"case voice","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/messagetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagetype\/allnibidentifiersdictionary","title":"var allNibIdentifiersDictionary: [String : String]","type":"property"},{"path":"\/documentation\/divar\/messagetype\/cellidentifierprefix","title":"var cellIdentifierPrefix: String","type":"property"},{"path":"\/documentation\/divar\/messagetype\/uploadurl","title":"var uploadURL: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagetype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/messagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/messagetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/messagetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messagetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/divar\/messagetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/messagetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messagetype","title":"MessageType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/messageviewstyle\/alert","title":"case alert","type":"case"},{"path":"\/documentation\/divar\/messageviewstyle\/snackbar","title":"case snackBar","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/messageviewstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/messageviewstyle\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/messageviewstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/messageviewstyle","title":"MessageViewStyle","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/multihierarchynodetype\/folder","title":"case Folder","type":"case"},{"path":"\/documentation\/divar\/multihierarchynodetype\/leaf","title":"case Leaf","type":"case"},{"path":"\/documentation\/divar\/multihierarchynodetype\/selectall","title":"case SelectAll","type":"case"},{"path":"\/documentation\/divar\/multihierarchynodetype\/root","title":"case root","type":"case"},{"path":"\/documentation\/divar\/multihierarchynodetype\/title","title":"case title","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/multihierarchynodetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/multihierarchynodetype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/multihierarchynodetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/multihierarchynodetype","title":"MultiHierarchyNodeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/noteactiontype\/cancel","title":"case Cancel","type":"case"},{"path":"\/documentation\/divar\/noteactiontype\/delete","title":"case Delete","type":"case"},{"path":"\/documentation\/divar\/noteactiontype\/save","title":"case Save","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/noteactiontype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/noteactiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noteactiontype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/noteactiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/noteactiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/noteactiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/noteactiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/noteactiontype","title":"NoteActionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/notebookmarkloadstate\/shouldload","title":"case shouldLoad","type":"case"},{"path":"\/documentation\/divar\/notebookmarkloadstate\/shouldnotload","title":"case shouldNotLoad","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/notebookmarkloadstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notebookmarkloadstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/notebookmarkloadstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/notebookmarkloadstate","title":"NoteBookmarkLoadState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/notetype\/edit","title":"case Edit","type":"case"},{"path":"\/documentation\/divar\/notetype\/new","title":"case New","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/notetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/notetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notetype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/notetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/notetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/notetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/notetype","title":"NoteType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/notificationstate\/open","title":"case open","type":"case"},{"path":"\/documentation\/divar\/notificationstate\/received","title":"case received","type":"case"},{"path":"\/documentation\/divar\/notificationstate\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/notificationstate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/notificationstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notificationstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/notificationstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/notificationstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/notificationstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/notificationstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/notificationstate","title":"NotificationState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecellidentidier\/converted","title":"case converted","type":"case"},{"path":"\/documentation\/divar\/numbertextfieldpagecellidentidier\/description","title":"case description","type":"case"},{"path":"\/documentation\/divar\/numbertextfieldpagecellidentidier\/textfield","title":"case textfield","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecellidentidier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecellidentidier\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagecellidentidier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numbertextfieldpagecellidentidier","title":"NumberTextFieldPageCellIdentidier","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecellmodel\/converted(model:)","title":"case converted(model: NumberTextFieldPageTextConvertedCell)","type":"case"},{"path":"\/documentation\/divar\/numbertextfieldpagecellmodel\/description(model:)","title":"case description(model: NumberTextFieldPageCellDescriptionModel)","type":"case"},{"path":"\/documentation\/divar\/numbertextfieldpagecellmodel\/textfield(model:)","title":"case textfield(model: NumberTextFieldPageTextFieldCellModel)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecellmodel\/identifier","title":"var identifier: NumberTextFieldPageCellIdentidier","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecellmodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/numbertextfieldpagecellmodel\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/numbertextfieldpagecellmodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/numbertextfieldpagecellmodel","title":"NumberTextFieldPageCellModel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/optionselectiontype\/list","title":"case list","type":"case"},{"path":"\/documentation\/divar\/optionselectiontype\/search","title":"case search","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/optionselectiontype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/optionselectiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/optionselectiontype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/optionselectiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/optionselectiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/optionselectiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/optionselectiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/optionselectiontype","title":"OptionSelectionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/pageidentifier\/general","title":"case general","type":"case"},{"path":"\/documentation\/divar\/pageidentifier\/transactionopenstatuspage","title":"case transactionOpenStatusPage","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/pageidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pageidentifier\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/pageidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/pageidentifier","title":"PageIdentifier","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/pagination\/==(_:_:)","title":"static func == (Pagination, Pagination) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/pagination\/infinitescroll(_:)","title":"case infiniteScroll(Widgets_InfiniteScrollResponse)","type":"case"},{"path":"\/documentation\/divar\/pagination\/lastpostdate(_:)","title":"case lastPostDate(Int64)","type":"case"},{"path":"\/documentation\/divar\/pagination\/none","title":"case none","type":"case"},{"path":"\/documentation\/divar\/pagination\/page(_:)","title":"case page(Int)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pagination\/infinitescrollmessage","title":"var infiniteScrollMessage: Widgets_InfiniteScrollResponse?","type":"property"},{"path":"\/documentation\/divar\/pagination\/infinitescrollparameters","title":"var infiniteScrollParameters: [String : String]?","type":"property"},{"path":"\/documentation\/divar\/pagination\/infinitescrollwidget","title":"var infiniteScrollWidget: Widgets_InfiniteScrollResponse?","type":"property"},{"path":"\/documentation\/divar\/pagination\/isfirstpage","title":"var isFirstPage: Bool","type":"property"},{"path":"\/documentation\/divar\/pagination\/lastpostdate","title":"var lastPostDate: Int64?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/pagination\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pagination\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/pagination\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/pagination","title":"Pagination","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/paginationtype\/infinitescrolling","title":"case infiniteScrolling","type":"case"},{"path":"\/documentation\/divar\/paginationtype\/lastpostdate","title":"case lastPostDate","type":"case"},{"path":"\/documentation\/divar\/paginationtype\/none","title":"case none","type":"case"},{"path":"\/documentation\/divar\/paginationtype\/page","title":"case page","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/paginationtype\/firstpage","title":"var firstPage: Pagination","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/paginationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/paginationtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/paginationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/paginationtype","title":"PaginationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalheight\/contentheight(_:)","title":"case contentHeight(CGFloat)","type":"case"},{"path":"\/documentation\/divar\/panmodalheight\/contentheightignoringsafearea(_:)","title":"case contentHeightIgnoringSafeArea(CGFloat)","type":"case"},{"path":"\/documentation\/divar\/panmodalheight\/intrinsicheight","title":"case intrinsicHeight","type":"case"},{"path":"\/documentation\/divar\/panmodalheight\/maxheight","title":"case maxHeight","type":"case"},{"path":"\/documentation\/divar\/panmodalheight\/maxheightwithtopinset(_:)","title":"case maxHeightWithTopInset(CGFloat)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalheight\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/panmodalheight\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/panmodalheight\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/panmodalheight","title":"PanModalHeight","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/parametertype\/data(info:)","title":"case data(info: Data)","type":"case"},{"path":"\/documentation\/divar\/parametertype\/dictionary(info:)","title":"case dictionary(info: [String : Any]?)","type":"case"}],"path":"\/documentation\/divar\/parametertype","title":"ParameterType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/peermanagementenum\/block","title":"case block","type":"case"},{"path":"\/documentation\/divar\/peermanagementenum\/unblock","title":"case unblock","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/peermanagementenum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/peermanagementenum\/topictype","title":"var topicType: ChatTopicType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/peermanagementenum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/peermanagementenum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/peermanagementenum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/peermanagementenum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/peermanagementenum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/peermanagementenum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/peermanagementenum","title":"PeerManagementEnum","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/performaceeventfinishreason\/ok","title":"case ok","type":"case"},{"path":"\/documentation\/divar\/performaceeventfinishreason\/unknownerror","title":"case unknownError","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/performaceeventfinishreason\/sentryreason","title":"var sentryReason: SentrySpanStatus","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/performaceeventfinishreason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/performaceeventfinishreason\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/performaceeventfinishreason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/performaceeventfinishreason","title":"PerformaceEventFinishReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailstoken\/managetoken(_:)","title":"case manageToken(String)","type":"case"},{"path":"\/documentation\/divar\/postdetailstoken\/token(_:)","title":"case token(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postdetailstoken\/ispostpreview","title":"var isPostPreview: Bool","type":"property"},{"path":"\/documentation\/divar\/postdetailstoken\/posttoken","title":"var postToken: String?","type":"property"}],"path":"\/documentation\/divar\/postdetailstoken","title":"PostDetailsToken","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistloadtype\/infinitescroll","title":"case infiniteScroll","type":"case"},{"path":"\/documentation\/divar\/postlistloadtype\/pulltorefresh","title":"case pullToRefresh","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistloadtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postlistloadtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postlistloadtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postlistloadtype","title":"PostListLoadType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewsource\/bookmark","title":"case bookmark","type":"case"},{"path":"\/documentation\/divar\/postviewsource\/chat","title":"case chat","type":"case"},{"path":"\/documentation\/divar\/postviewsource\/external","title":"case external","type":"case"},{"path":"\/documentation\/divar\/postviewsource\/mypost","title":"case myPost","type":"case"},{"path":"\/documentation\/divar\/postviewsource\/note","title":"case note","type":"case"},{"path":"\/documentation\/divar\/postviewsource\/postview","title":"case postView","type":"case"},{"path":"\/documentation\/divar\/postviewsource\/postviewsuggestion","title":"case postViewSuggestion","type":"case"},{"path":"\/documentation\/divar\/postviewsource\/preview","title":"case preview","type":"case"},{"path":"\/documentation\/divar\/postviewsource\/recentposts","title":"case recentPosts","type":"case"},{"path":"\/documentation\/divar\/postviewsource\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewsource\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewsource\/value","title":"var value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewsource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewsource\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postviewsource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewsource\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postviewsource\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postviewsource\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postviewsource","title":"PostViewSource","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postwidgetaction\/openmap","title":"case openMap","type":"case"},{"path":"\/documentation\/divar\/postwidgetaction\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postwidgetaction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postwidgetaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postwidgetaction\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postwidgetaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postwidgetaction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postwidgetaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postwidgetaction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postwidgetaction","title":"PostWidgetAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postwidgettype\/bookmarkhistorypostwidget","title":"case bookmarkHistoryPostWidget","type":"case"},{"path":"\/documentation\/divar\/postwidgettype\/defaultpostwidget","title":"case defaultPostWidget","type":"case"},{"path":"\/documentation\/divar\/postwidgettype\/generic","title":"case generic","type":"case"},{"path":"\/documentation\/divar\/postwidgettype\/notehistorypostwidget","title":"case noteHistoryPostWidget","type":"case"},{"path":"\/documentation\/divar\/postwidgettype\/postwithimagecount","title":"case postWithImageCount","type":"case"},{"path":"\/documentation\/divar\/postwidgettype\/searchsuggestion","title":"case searchSuggestion","type":"case"},{"path":"\/documentation\/divar\/postwidgettype\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/divar\/postwidgettype\/userpostwidget","title":"case userPostWidget","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/postwidgettype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postwidgettype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postwidgettype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postwidgettype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/postwidgettype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postwidgettype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/postwidgettype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postwidgettype","title":"PostWidgetType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/postsloadingstatus\/loadingmore","title":"case loadingMore","type":"case"},{"path":"\/documentation\/divar\/postsloadingstatus\/none","title":"case none","type":"case"},{"path":"\/documentation\/divar\/postsloadingstatus\/refreshing","title":"case refreshing","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/postsloadingstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/postsloadingstatus\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/postsloadingstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/postsloadingstatus","title":"PostsLoadingStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/pricerowstate\/decrease","title":"case Decrease","type":"case"},{"path":"\/documentation\/divar\/pricerowstate\/increase","title":"case Increase","type":"case"},{"path":"\/documentation\/divar\/pricerowstate\/nochange","title":"case NoChange","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pricerowstate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pricerowstate\/color","title":"var color: UIColor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/pricerowstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pricerowstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/pricerowstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pricerowstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pricerowstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/pricerowstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/pricerowstate","title":"PriceRowState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/pushproviders\/apns","title":"case apns","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/pushproviders\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pushproviders\/pushhandlertype","title":"var pushHandlerType: PushProtocol.Type","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pushproviders\/preferred","title":"static let preferred: PushProviders","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/pushproviders\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pushproviders\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/pushproviders\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/pushproviders\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/pushproviders\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/pushproviders\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/pushproviders","title":"PushProviders","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/querysorttype\/ascending","title":"case ascending","type":"case"},{"path":"\/documentation\/divar\/querysorttype\/descending","title":"case descending","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/querysorttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/querysorttype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/querysorttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/querysorttype","title":"QuerySortType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugconstant\/postlisttabtitle","title":"case PostListTabTitle","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/postlisttabtype","title":"case PostListTabType","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/accounttype","title":"case accountType","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/actiontype","title":"case actionType","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/attachmentname","title":"case attachmentName","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/clickedposition","title":"case clickedPosition","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/conversationindex","title":"case conversationIndex","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/conversationscount","title":"case conversationsCount","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/conversationsids","title":"case conversationsIds","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/haspostchi","title":"case hasPostchi","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krcontactmethod","title":"case kRContactMethod","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krdealershiptoken","title":"case kRDealershipToken","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krisfromme","title":"case kRIsFromMe","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpagent","title":"case kRPAgent","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpbookmarkstate","title":"case kRPBookmarkState","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpbrandmodelslug","title":"case kRPBrandModelSlug","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpbrandsmodelsslugs","title":"case kRPBrandsModelsSlugs","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpbusinessref","title":"case kRPBusinessRef","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpbusinesstype","title":"case kRPBusinessType","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpcallid","title":"case kRPCallID","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpcategory","title":"case kRPCategory","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpcategoryslug","title":"case kRPCategorySlug","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpcategorysuggestionchoiceaction","title":"case kRPCategorySuggestionChoiceAction","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpcategorysuggestionchoiceid","title":"case kRPCategorySuggestionChoiceId","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpcategorysuggestionchoicename","title":"case kRPCategorySuggestionChoiceName","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpcategorysuggestionchoiceoffset","title":"case kRPCategorySuggestionChoiceOffset","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpcategorysuggestionchoices","title":"case kRPCategorySuggestionChoices","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpclickedpostoffset","title":"case kRPClickedPostOffset","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpclickedposttoken","title":"case kRPClickedPostToken","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpconversationid","title":"case kRPConversationID","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpcurrentlatitude","title":"case kRPCurrentLatitude","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpcurrentlongitude","title":"case kRPCurrentLongitude","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpcurrentsearchstring","title":"case kRPCurrentSearchString","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpdestinationpagename","title":"case kRPDestinationPageName","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpediteventname","title":"case kRPEditEventName","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpenteredphonenumber","title":"case kRPEnteredPhoneNumber","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krperrorreason","title":"case kRPErrorReason","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpfeedbackselected","title":"case kRPFeedbackSelected","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpfilter","title":"case kRPFilter","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpformid","title":"case kRPFormID","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpfrompage","title":"case kRPFromPage","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krphistorychoiceoffset","title":"case kRPHistoryChoiceOffset","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpinapp","title":"case kRPInApp","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpindexinpage","title":"case kRPIndexInPage","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpindexinsimilarbrandlist","title":"case kRPIndexInSimilarBrandList","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpinputsuggestion","title":"case kRPInputSuggestion","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpissuccessful","title":"case kRPIsSuccessful","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krplastpostdate","title":"case kRPLastPostDate","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krplastpostoffsetinpage","title":"case kRPLastPostOffsetInPage","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krplocation","title":"case kRPLocation","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krplocationpreviouscity","title":"case kRPLocationPreviousCity","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krplocationsource","title":"case kRPLocationSource","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krplogin","title":"case kRPLogin","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krploginreference","title":"case kRPLoginReference","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpmethod","title":"case kRPMethod","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpnewcity","title":"case kRPNewCity","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpnewlatitude","title":"case kRPNewLatitude","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpnewlongitude","title":"case kRPNewLongitude","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpnewneighbor","title":"case kRPNewNeighbor","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpnextpagedata","title":"case kRPNextPageData","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpnocatpage","title":"case kRPNoCatPage","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpnotificationid","title":"case kRPNotificationID","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpnotificationpushid","title":"case kRPNotificationPushID","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpnotificationstate","title":"case kRPNotificationState","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpnumberofimages","title":"case kRPNumberOfImages","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpoffset","title":"case kRPOffset","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppackage","title":"case kRPPackage","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppage","title":"case kRPPage","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppagebrandmodel","title":"case kRPPageBrandModel","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppageoffset","title":"case kRPPageOffset","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppeer","title":"case kRPPeer","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpphonenumber","title":"case kRPPhoneNumber","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppostindexinpage","title":"case kRPPostIndexInPage","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppostpageislast","title":"case kRPPostPageIsLast","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpposttoken","title":"case kRPPostToken","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpposttokens","title":"case kRPPostTokens","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppostviewsuggestionsource","title":"case kRPPostViewSuggestionSource","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppostslistviewmode","title":"case kRPPostsListViewMode","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppreviouscity","title":"case kRPPreviousCity","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppreviouslatitude","title":"case kRPPreviousLatitude","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppreviouslongitude","title":"case kRPPreviousLongitude","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppreviousneighbor","title":"case kRPPreviousNeighbor","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krppreviouspagedata","title":"case kRPPreviousPageData","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpreasonselected","title":"case kRPReasonSelected","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpreference","title":"case kRPReference","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsearchedterm","title":"case kRPSearchedTerm","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsection","title":"case kRPSection","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpselectedbrandmodel","title":"case kRPSelectedBrandModel","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpselectedposts","title":"case kRPSelectedPosts","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsimilarpoststokens","title":"case kRPSimilarPostsTokens","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsmartsuggestion","title":"case kRPSmartSuggestion","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsource","title":"case kRPSource","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsourcepagename","title":"case kRPSourcePageName","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpstate","title":"case kRPState","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpstatus","title":"case kRPStatus","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsubmitcontactinfo","title":"case kRPSubmitContactInfo","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsubmitfieldname","title":"case kRPSubmitFieldName","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsubmitfieldvalue","title":"case kRPSubmitFieldValue","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsubmitformdata","title":"case kRPSubmitFormData","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsubmitisdraft","title":"case kRPSubmitIsDraft","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsubmitisediting","title":"case kRPSubmitIsEditing","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsubmitpagenumber","title":"case kRPSubmitPageNumber","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsubmitphotocount","title":"case kRPSubmitPhotoCount","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsubmitphotoduration","title":"case kRPSubmitPhotoDuration","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsubmitphotosource","title":"case kRPSubmitPhotoSource","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpsubtitle","title":"case kRPSubtitle","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krptitle","title":"case kRPTitle","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krptopage","title":"case kRPToPage","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krptoken","title":"case kRPToken","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpurl","title":"case kRPURL","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krputmcampaigndeeplink","title":"case kRPUTMCampaignDeepLink","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krputmcontentdeeplink","title":"case kRPUTMContentDeepLink","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krputmmediumdeeplink","title":"case kRPUTMMediumDeepLink","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krputmsourcedeeplink","title":"case kRPUTMSourceDeepLink","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krputmtermdeeplink","title":"case kRPUTMTermDeepLink","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krputmurldeeplink","title":"case kRPUTMUrlDeepLink","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpuserchoice","title":"case kRPUserChoice","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krpuserlisttype","title":"case kRPUserListType","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krshowblockedstatus","title":"case kRShowBlockedStatus","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krsuggestionall","title":"case kRSuggestionAll","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krsuggestionconversationid","title":"case kRSuggestionConversationID","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krsuggestionpage","title":"case kRSuggestionPage","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krsuggestionselected","title":"case kRSuggestionSelected","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krtype","title":"case kRType","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/krusertypedmessage","title":"case kRUserTypedMessage","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/messageid","title":"case messageID","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/notificationaction","title":"case notificationAction","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/notificationcampaign","title":"case notificationCampaign","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/notificationinsideapp","title":"case notificationInsideApp","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/notificationmessage","title":"case notificationMessage","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/notificationtitle","title":"case notificationTitle","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/notitificationconversationid","title":"case notitificationConversationID","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/orderid","title":"case orderID","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/phone","title":"case phone","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/postlisttabcount","title":"case postListTabCount","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/promotionplan","title":"case promotionPlan","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/promotionplantype","title":"case promotionPlanType","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/purchasedpack","title":"case purchasedPack","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/purchasedpacktype","title":"case purchasedPackType","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/settingsitemname","title":"case settingsItemName","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/settingsitemvalue","title":"case settingsItemValue","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/tokens","title":"case tokens","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/vrpagentsystem","title":"case vRPAgentSystem","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/vrpagentuser","title":"case vRPAgentUser","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/vrpstatefailed","title":"case vRPStateFailed","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/vrpstatesuccessful","title":"case vRPStateSuccessful","type":"case"},{"path":"\/documentation\/divar\/rawplugconstant\/voiceconversationid","title":"case voiceConversationID","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugconstant\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugconstant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugconstant\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/rawplugconstant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugconstant\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugconstant\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/rawplugconstant\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/rawplugconstant","title":"RawPlugConstant","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugeventtype\/approved","title":"case Approved","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/chatselectconversation","title":"case ChatSelectConversation","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/chatsettingclicked","title":"case ChatSettingClicked","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/chatsettingsitemclicked","title":"case ChatSettingsItemClicked","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/decline","title":"case Decline","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/deleteconversations","title":"case DeleteConversations","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/divarforbusinesses","title":"case DivarForBusinesses","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/notification","title":"case Notification","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/postchinotification","title":"case PostchiNotification","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/postponestep","title":"case PostponeStep","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/promotepostplan","title":"case PromotePostPlan","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpactioncatchdeeplink","title":"case RPActionCatchDeepLink","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpactionvoipanswer","title":"case RPActionVoipAnswer","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpactionvoipclick","title":"case RPActionVoipClick","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpactionvoipincoming","title":"case RPActionVoipIncoming","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpactionvoipinit","title":"case RPActionVoipInit","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpactionvoipready","title":"case RPActionVoipReady","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpactionvoipterminate","title":"case RPActionVoipTerminate","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpback","title":"case RPBack","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpbookmarkdidremovefromlist","title":"case RPBookmarkDidRemoveFromList","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpbulkladderchoice","title":"case RPBulkLadderChoice","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpbuyerinspectionrequest","title":"case RPBuyerInspectionRequest","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpchatattachmentitemdidselect","title":"case RPCHatAttachmentItemDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpcallinchatdidselect","title":"case RPCallInChatDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpcategoryitemdidselect","title":"case RPCategoryItemDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpchatattachmentdidselect","title":"case RPChatAttachmentDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpchatcallcheckdidselect","title":"case RPChatCallCheckDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpchatdidsendimage","title":"case RPChatDidSendImage","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpchatformatnotsupported","title":"case RPChatFormatNotSupported","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpchatistyping","title":"case RPChatIsTyping","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpchatmessageedit","title":"case RPChatMessageEdit","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpchatnotificationdidreceive","title":"case RPChatNotificationDidReceive","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpchatreportspamdidselect","title":"case RPChatReportSpamDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpchatsuggestionmessage","title":"case RPChatSuggestionMessage","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpchatvoicemessage","title":"case RPChatVoiceMessage","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpchoosemap","title":"case RPChooseMap","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpcitydidchange","title":"case RPCityDidChange","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickagencyinpost","title":"case RPClickAgencyInPost","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickbaladpromotion","title":"case RPClickBaladPromotion","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickblogpost","title":"case RPClickBlogPost","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickbrandposts","title":"case RPClickBrandPosts","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickbrandtype","title":"case RPClickBrandType","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickbulkladder","title":"case RPClickBulkLadder","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickcontactus","title":"case RPClickContactUs","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickdealershipcontact","title":"case RPClickDealershipContact","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickdealershipcontactmethod","title":"case RPClickDealershipContactMethod","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickinspectionfield","title":"case RPClickInspectionField","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickpost","title":"case RPClickPost","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickrules","title":"case RPClickRules","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclickshare","title":"case RPClickShare","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclicksimilarbranditem","title":"case RPClickSimilarBrandItem","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclicksimilarpost","title":"case RPClickSimilarPost","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpclicksubmitfield","title":"case RPClickSubmitField","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpcontactmethoddidselect","title":"case RPContactMethodDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpdeletepostreason","title":"case RPDeletePostReason","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpdidentersubmit","title":"case RPDidEnterSubmit","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpdidexitsubmit","title":"case RPDidExitSubmit","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpdivardidinactive","title":"case RPDivarDidInactive","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpdivardidopen","title":"case RPDivarDidOpen","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpdivardidreactive","title":"case RPDivarDidReactive","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpenterlogin","title":"case RPEnterLogin","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpenterverificationcode","title":"case RPEnterVerificationCode","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpextendpostdescriptiontext","title":"case RPExtendPostDescriptionText","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpfeedback","title":"case RPFeedBack","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpfilterdialogdidclose","title":"case RPFilterDialogDidClose","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpfilterdidreset","title":"case RPFilterDidReset","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpfilteritemdidclear","title":"case RPFilterItemDidClear","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpfilteritemdidselect","title":"case RPFilterItemDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpfiltersdidselect","title":"case RPFiltersDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rphistorydidremove","title":"case RPHistoryDidRemove","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rphistorydidselect","title":"case RPHistoryDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpinputsuggestiondidselect","title":"case RPInputSuggestionDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpinputsuggestiondidsubmit","title":"case RPInputSuggestionDidSubmit","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rplistcategorysuggestion","title":"case RPListCategorySuggestion","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rploadbrandpage","title":"case RPLoadBrandPage","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rploadfirstpage","title":"case RPLoadFirstPage","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rploadimage","title":"case RPLoadImage","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rplocationchangecity","title":"case RPLocationChangeCity","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rplocationchangeinmap","title":"case RPLocationChangeInMap","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rplocationchangeneighbor","title":"case RPLocationChangeNeighbor","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpnewpostlistpagedidload","title":"case RPNewPostListPageDidLoad","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpopenimagepreview","title":"case RPOpenImagePreview","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpotherfiltersdidselect","title":"case RPOtherFiltersDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpothervaluesdidselect","title":"case RPOtherValuesDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rppostcontactdidshow","title":"case RPPostContactDidShow","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rppostdidbookmarked","title":"case RPPostDidBookmarked","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rppostdidclose","title":"case RPPostDidClose","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rppostnote","title":"case RPPostNote","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rppostslistdidscroll","title":"case RPPostsListDidScroll","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rppreloadcontactinfo","title":"case RPPreloadContactInfo","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rppreviewdidopen","title":"case RPPreviewDidOpen","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rppreviewsimilarposts","title":"case RPPreviewSimilarPosts","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rprecentdidremovefromlist","title":"case RPRecentDidRemoveFromList","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpregisterdealership","title":"case RPRegisterDealership","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpsmscontactmethodstatus","title":"case RPSMSContactMethodStatus","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpsearchdiddone","title":"case RPSearchDidDone","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpsearchdidselect","title":"case RPSearchDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpshowblockedconversations","title":"case RPShowBlockedConversations","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpsmartsuggestiondidselect","title":"case RPSmartSuggestionDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpsubmitaddphoto","title":"case RPSubmitAddPhoto","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpsubmitnextpage","title":"case RPSubmitNextPage","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpsubmitpostsavelocation","title":"case RPSubmitPostSaveLocation","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpsubmitpreviouspage","title":"case RPSubmitPreviousPage","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpsubmitremovephoto","title":"case RPSubmitRemovePhoto","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpsubmitselectcategory","title":"case RPSubmitSelectCategory","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpsubmitverificationcode","title":"case RPSubmitVerificationCode","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpsuggestiondidselect","title":"case RPSuggestionDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rptabdidchange","title":"case RPTabDidChange","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rptitledidselect","title":"case RPTitleDidSelect","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpvalidationerror","title":"case RPValidationError","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpviewbulkladder","title":"case RPViewBulkLadder","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpviewdealershipmanagmentpage","title":"case RPViewDealershipManagmentPage","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpviewdealershippage","title":"case RPViewDealershipPage","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpviewinspectionreport","title":"case RPViewInspectionReport","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpviewpaymenthistory","title":"case RPViewPaymentHistory","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpviewpostfeature","title":"case RPViewPostFeature","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpviewpricereport","title":"case RPViewPriceReport","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpviewpurchasesubscription","title":"case RPViewPurchaseSubscription","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/rpviewsubscriptionmanagement","title":"case RPViewSubscriptionManagement","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/registernextstep","title":"case RegisterNextStep","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/registerprevstep","title":"case RegisterPrevStep","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/selectmulticonversationdelete","title":"case SelectMultiConversationDelete","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/showcensoredlink","title":"case ShowCensoredLink","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/startpayment","title":"case StartPayment","type":"case"},{"path":"\/documentation\/divar\/rawplugeventtype\/switchaccounttype","title":"case SwitchAccountType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugeventtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugeventtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugeventtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/rawplugeventtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugeventtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugeventtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/rawplugeventtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/rawplugeventtype","title":"RawPlugEventType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugstate\/rpdelete","title":"case RPDelete","type":"case"},{"path":"\/documentation\/divar\/rawplugstate\/rpplay","title":"case RPPlay","type":"case"},{"path":"\/documentation\/divar\/rawplugstate\/rprecord","title":"case RPRecord","type":"case"},{"path":"\/documentation\/divar\/rawplugstate\/rpsend","title":"case RPSend","type":"case"},{"path":"\/documentation\/divar\/rawplugstate\/rpstatecurrentfilter","title":"case RPStateCurrentFilter","type":"case"},{"path":"\/documentation\/divar\/rawplugstate\/rpstatecurrenttab","title":"case RPStateCurrentTab","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugstate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/rawplugstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rawplugstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/rawplugstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/rawplugstate","title":"RawPlugState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/reason\/failure","title":"case Failure","type":"case"},{"path":"\/documentation\/divar\/reason\/notspecified","title":"case NotSpecified","type":"case"},{"path":"\/documentation\/divar\/reason\/success","title":"case Success","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/reason\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/reason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/reason\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/reason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/reason\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/reason\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/reason\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/reason","title":"Reason","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/rentformatter\/styledstring\/init()","title":"init()","type":"init"},{"path":"\/documentation\/divar\/rentformatter\/styledstring\/init(primarytext:secondarytext:)","title":"init(primaryText: String?, secondaryText: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/rentformatter\/styledstring\/primarytext","title":"var primaryText: String?","type":"property"},{"path":"\/documentation\/divar\/rentformatter\/styledstring\/secondarytext","title":"var secondaryText: String?","type":"property"}],"path":"\/documentation\/divar\/rentformatter\/styledstring","title":"RentFormatter.StyledString","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/rentformatter\/credit","title":"case credit","type":"case"},{"path":"\/documentation\/divar\/rentformatter\/rent","title":"case rent","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rentformatter\/stringfor(_:)","title":"func stringFor(Int64) -> String","type":"method"},{"path":"\/documentation\/divar\/rentformatter\/styledstringfor(_:)","title":"func styledStringFor(Int64) -> StyledString","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/rentformatter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/rentformatter\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/rentformatter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/rentformatter","title":"RentFormatter","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/reportingtype\/archive","title":"case archive","type":"case"},{"path":"\/documentation\/divar\/reportingtype\/archiveanswer","title":"case archiveAnswer","type":"case"},{"path":"\/documentation\/divar\/reportingtype\/brandreport","title":"case brandReport","type":"case"},{"path":"\/documentation\/divar\/reportingtype\/carinspectioncancel","title":"case carInspectionCancel","type":"case"},{"path":"\/documentation\/divar\/reportingtype\/postreport","title":"case postReport","type":"case"},{"path":"\/documentation\/divar\/reportingtype\/postreportexactreason","title":"case postReportExactReason","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/reportingtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/reportingtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/reportingtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/reportingtype","title":"ReportingType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/requestmethod\/delete","title":"case DELETE","type":"case"},{"path":"\/documentation\/divar\/requestmethod\/get","title":"case GET","type":"case"},{"path":"\/documentation\/divar\/requestmethod\/post","title":"case POST","type":"case"},{"path":"\/documentation\/divar\/requestmethod\/put","title":"case PUT","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/requestmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/requestmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/requestmethod\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/requestmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/requestmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/requestmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/requestmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/requestmethod","title":"RequestMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/requesttype\/grpc","title":"case gRPC","type":"case"},{"path":"\/documentation\/divar\/requesttype\/imageupload","title":"case imageUpload","type":"case"},{"path":"\/documentation\/divar\/requesttype\/octetstreamrequest","title":"case octetStreamRequest","type":"case"},{"path":"\/documentation\/divar\/requesttype\/request","title":"case request","type":"case"},{"path":"\/documentation\/divar\/requesttype\/requestwithoctetstreamresponse","title":"case requestWithOctetStreamResponse","type":"case"},{"path":"\/documentation\/divar\/requesttype\/videoupload","title":"case videoUpload","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/requesttype\/headertype","title":"var headerType: RequestHeaderProtocol.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/requesttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/requesttype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/requesttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/requesttype","title":"RequestType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/requesturls\/actionlogs","title":"case actionLogs","type":"case"},{"path":"\/documentation\/divar\/requesturls\/authnationalid","title":"case authNationalId","type":"case"},{"path":"\/documentation\/divar\/requesturls\/authenticatelandline(mngtoken:)","title":"case authenticateLandline(mngToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/authenticateuser","title":"case authenticateUser","type":"case"},{"path":"\/documentation\/divar\/requesturls\/bookmark","title":"case bookmark","type":"case"},{"path":"\/documentation\/divar\/requesturls\/bookmarklist","title":"case bookmarkList","type":"case"},{"path":"\/documentation\/divar\/requesturls\/brandfeedback","title":"case brandFeedback","type":"case"},{"path":"\/documentation\/divar\/requesturls\/carconciergesalemanagement(saletoken:)","title":"case carConciergeSaleManagement(saleToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/carconciergesalessubmitpromotion","title":"case carConciergeSalesSubmitPromotion","type":"case"},{"path":"\/documentation\/divar\/requesturls\/carconciergesalessubmitregister","title":"case carConciergeSalesSubmitRegister","type":"case"},{"path":"\/documentation\/divar\/requesturls\/cardetailspricechart(slug:)","title":"case carDetailsPriceChart(slug: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/categoryfilter(cityid:categoryslug:)","title":"case categoryFilter(cityId: Int, categorySlug: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/chatapiinit","title":"case chatApiInit","type":"case"},{"path":"\/documentation\/divar\/requesturls\/chatstaticmeta","title":"case chatStaticMeta","type":"case"},{"path":"\/documentation\/divar\/requesturls\/chatupdateprofile","title":"case chatUpdateProfile","type":"case"},{"path":"\/documentation\/divar\/requesturls\/chatuploadfile","title":"case chatUploadFile","type":"case"},{"path":"\/documentation\/divar\/requesturls\/chatuploadimage","title":"case chatUploadImage","type":"case"},{"path":"\/documentation\/divar\/requesturls\/chatuploadvideo","title":"case chatUploadVideo","type":"case"},{"path":"\/documentation\/divar\/requesturls\/chatuploadvoice","title":"case chatUploadVoice","type":"case"},{"path":"\/documentation\/divar\/requesturls\/clearbookmarks","title":"case clearBookmarks","type":"case"},{"path":"\/documentation\/divar\/requesturls\/clearnotes","title":"case clearNotes","type":"case"},{"path":"\/documentation\/divar\/requesturls\/confirmauthenticationcode","title":"case confirmAuthenticationCode","type":"case"},{"path":"\/documentation\/divar\/requesturls\/contact(token:type:)","title":"case contact(token: String?, type: UserType)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/deletepost(mngtoken:)","title":"case deletePost(mngToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/divarforbusinesses","title":"case divarForBusinesses","type":"case"},{"path":"\/documentation\/divar\/requesturls\/fraudsuspendedoptionslist","title":"case fraudSuspendedOptionsList","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getarchivereasons(mngtoken:)","title":"case getArchiveReasons(mngToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getbrandinfo(brandslug:)","title":"case getBrandInfo(brandSlug: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getbrandreportreasons","title":"case getBrandReportReasons","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getcategories","title":"case getCategories","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getcities","title":"case getCities","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getdistiricts(cityid:)","title":"case getDistiricts(cityID: Int)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getdistirictsgeo(cityid:)","title":"case getDistirictsGeo(cityID: Int)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getjli(urlpath:)","title":"case getJLI(urlPath: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getmaincategories","title":"case getMainCategories","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getnearbylocations(lat:long:)","title":"case getNearbyLocations(lat: Double, long: Double)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getnotes","title":"case getNotes","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getpaymentform(mngtoken:)","title":"case getPaymentForm(mngToken: String?)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getpaymenthistory(mngtoken:)","title":"case getPaymentHistory(mngToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getpost(mngtoken:)","title":"case getPost(mngToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getpostcontact(posttoken:)","title":"case getPostContact(postToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getpostlist(cityid:categoryslug:)","title":"case getPostList(cityId: Int, categorySlug: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getpostlistswithtokens","title":"case getPostListsWithTokens","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getpostpayments(mngtoken:)","title":"case getPostPayments(mngToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getreportreasons","title":"case getReportReasons","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getscheme(slug:isedit:)","title":"case getScheme(slug: String, isEdit: Bool)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getsearchsuggestion(cityid:)","title":"case getSearchSuggestion(cityId: Int)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getstartupconfigurations","title":"case getStartupConfigurations","type":"case"},{"path":"\/documentation\/divar\/requesturls\/getuserpostlist","title":"case getUserPostList","type":"case"},{"path":"\/documentation\/divar\/requesturls\/hierarchycontentsearch(searchkey:query:source:field:)","title":"case hierarchyContentSearch(searchKey: String?, query: String, source: String, field: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/locationwidgetsearch(searchkey:query:source:field:cityid:)","title":"case locationWidgetSearch(searchKey: String?, query: String, source: String, field: String, cityID: Int)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/mechaniccarblogpost(slug:)","title":"case mechanicCarBlogPost(slug: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/multicity(cityid:)","title":"case multiCity(cityId: Int)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/note(token:)","title":"case note(token: String?)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/openpage(requestpath:)","title":"case openPage(requestPath: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/postfeedbackanswer","title":"case postFeedBackAnswer","type":"case"},{"path":"\/documentation\/divar\/requesturls\/postmanage(mngtoken:)","title":"case postManage(mngToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/postpreviewwidgetbased(token:)","title":"case postPreviewWidgetBased(token: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/postsituation(token:)","title":"case postSituation(token: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/postview(posttoken:)","title":"case postView(postToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/postviewwidgetbased(token:)","title":"case postViewWidgetBased(token: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/postchi(lastmessageid:pagesize:)","title":"case postchi(lastMessageId: String?, pageSize: Int?)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/postchiseenrequest","title":"case postchiSeenRequest","type":"case"},{"path":"\/documentation\/divar\/requesturls\/ratefeedback(urlpath:)","title":"case rateFeedback(urlPath: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/redeemgift(mngtoken:)","title":"case redeemGift(mngToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/removeimage(name:)","title":"case removeImage(name: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/reportbrand","title":"case reportBrand","type":"case"},{"path":"\/documentation\/divar\/requesturls\/reportpost(token:)","title":"case reportPost(token: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/searchautocomplete","title":"case searchAutoComplete","type":"case"},{"path":"\/documentation\/divar\/requesturls\/searchstreet(cityid:query:)","title":"case searchStreet(cityId: Int, query: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/sellerfeedback","title":"case sellerFeedBack","type":"case"},{"path":"\/documentation\/divar\/requesturls\/singlemultiselectcontentsearch(searchkey:query:source:field:city:cities:)","title":"case singleMultiSelectContentSearch(searchKey: String?, query: String, source: String, field: String, city: Int, cities: [String])","type":"case"},{"path":"\/documentation\/divar\/requesturls\/startpayment(managetoken:)","title":"case startPayment(manageToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/submitpost(mngtoken:)","title":"case submitPost(mngToken: String?)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/subscribenotification","title":"case subscribeNotification","type":"case"},{"path":"\/documentation\/divar\/requesturls\/suggestionpage","title":"case suggestionPage","type":"case"},{"path":"\/documentation\/divar\/requesturls\/unsubscribenotification","title":"case unsubscribeNotification","type":"case"},{"path":"\/documentation\/divar\/requesturls\/validatelandlinenumber(mngtoken:)","title":"case validateLandlineNumber(mngToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/validatepost(mngtoken:)","title":"case validatePost(mngToken: String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/requesturls\/path","title":"var path: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/requesturls\/business\/addvr(mngtoken:)","title":"case addVR(mngToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/agencymanagementpage","title":"case agencyManagementPage","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/agencypage(businessref:)","title":"case agencyPage(businessRef: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/agentusage(agentid:timeslot:)","title":"case agentUsage(agentId: String, timeSlot: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/agentsusagelist(timeslot:)","title":"case agentsUsageList(timeSlot: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/businessschemaandsubmitpost(mngtoken:submittype:)","title":"case businessSchemaAndSubmitPost(mngToken: String?, submitType: String?)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/businesssubscriptionplans","title":"case businessSubscriptionPlans","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/buybulkladderplans","title":"case buyBulkLadderPlans","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/caragentbulkladder","title":"case carAgentBulkLadder","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/caragentbuyladderpackageschema","title":"case carAgentBuyLadderPackageSchema","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/caragentbuypackageschema","title":"case carAgentBuyPackageSchema","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/caragentregister","title":"case carAgentRegister","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carconciergesalelandingpage(slug:)","title":"case carConciergeSaleLandingPage(slug: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carconciergesalemanagement(saletoken:)","title":"case carConciergeSaleManagement(saleToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carconciergesalessubmitregister","title":"case carConciergeSalesSubmitRegister","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/cardealerbulkladder","title":"case carDealerBulkLadder","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/cardetailsbrand(_:)","title":"case carDetailsBrand(String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/cardetailscategorypage(_:)","title":"case carDetailsCategoryPage(String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carinspection(mngtoken:)","title":"case carInspection(mngToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carinspectioncancellation","title":"case carInspectionCancellation","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carinspectioneditform(managetoken:)","title":"case carInspectionEditForm(manageToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carinspectionpublishreport","title":"case carInspectionPublishReport","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carinspectionregisterform(managetoken:)","title":"case carInspectionRegisterForm(manageToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carinspectionreport(managetoken:carinspectiontoken:cardetailslug:)","title":"case carInspectionReport(manageToken: String?, carInspectionToken: String?, carDetailSlug: String?)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carinspectionsettlement","title":"case carInspectionSettlement","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carinspectionsubmitregister","title":"case carInspectionSubmitRegister","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carpricetools","title":"case carPriceTools","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/carspecshome","title":"case carSpecsHome","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/dealerlandingpage(token:lastpostdate:)","title":"case dealerLandingPage(token: String, lastPostDate: Int64)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/dealerlist","title":"case dealerList","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/dealermanagementpage(lastpostdate:)","title":"case dealerManagementPage(lastPostDate: Int64)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/dealersubscribe","title":"case dealerSubscribe","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/dealershipconfirminvitation","title":"case dealershipConfirmInvitation","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/evaluationdescription","title":"case evaluationDescription","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/getagencypage(businessref:)","title":"case getAgencyPage(businessRef: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/getagentmanagementschema(agentid:)","title":"case getAgentManagementSchema(agentID: Int32?)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/getagentmanagementwidgets","title":"case getAgentManagementWidgets","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/getcontact(businessref:)","title":"case getContact(businessRef: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/getfaqwidgets","title":"case getFAQWidgets","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/getoperatormanagement","title":"case getOperatorManagement","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/getoperatormanagementschema(operatorid:)","title":"case getOperatorManagementSchema(operatorId: String?)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/getpaymentstatus(orderid:)","title":"case getPaymentStatus(orderId: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/getpaymenturl(orderid:)","title":"case getPaymentUrl(orderId: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/getschemaandregisterbusiness","title":"case getSchemaAndRegisterBusiness","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/independentagentonboardingpage","title":"case independentAgentOnboardingPage","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/jobsbulkladder","title":"case jobsBulkLadder","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/jobsemployerpanel(refid:)","title":"case jobsEmployerPanel(refId: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/jobspanel","title":"case jobsPanel","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/jobspanelmanagment","title":"case jobsPanelManagment","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/jobspurchasepackage","title":"case jobsPurchasePackage","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/jobspurchasepackagestatus","title":"case jobsPurchasePackageStatus","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/jobsregisterbusiness","title":"case jobsRegisterBusiness","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/jobssubmitmultipost","title":"case jobsSubmitMultiPost","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/jobssubmitpost","title":"case jobsSubmitPost","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/kaladetailsmobileinfo","title":"case kalaDetailsMobileInfo","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/kaladetailsmobileinfobrand(brand:)","title":"case kalaDetailsMobileInfoBrand(brand: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/kaladetailsmobileinfobrandmodel(brandmodel:)","title":"case kalaDetailsMobileinfoBrandModel(brandModel: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/kalamobilezero","title":"case kalaMobileZero","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/karnamecarinspectionregisterform","title":"case karnameCarInspectionRegisterForm","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/karnamehmanageinspection(carinspectiontoken:)","title":"case karnamehManageInspection(carInspectionToken: String?)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketpalcebulkladdertabbar","title":"case marketpalceBulkLadderTabbar","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplaceaddsalesman","title":"case marketplaceAddSalesman","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplaceaddstoremanager","title":"case marketplaceAddStoreManager","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplaceassistantpage","title":"case marketplaceAssistantPage","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplaceassitantmanagement(storetoken:)","title":"case marketplaceAssitantManagement(storeToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplaceauthneticatelandlinenumber","title":"case marketplaceAuthneticateLandlineNumber","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacebulkladder","title":"case marketplaceBulkLadder","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacecancelpromotion","title":"case marketplaceCancelPromotion","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplaceeditassistant","title":"case marketplaceEditAssistant","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplaceeditstore(section:)","title":"case marketplaceEditStore(section: Int32?)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacefeatureslist","title":"case marketplaceFeaturesList","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacefeedbackoptionspage(posttoken:storetoken:)","title":"case marketplaceFeedbackOptionsPage(postToken: String, storeToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacefinalizeeditstore","title":"case marketplaceFinalizeEditStore","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacefinalizeregisterstore","title":"case marketplaceFinalizeRegisterStore","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacefreesubscription","title":"case marketplaceFreeSubscription","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacelandingpage(token:)","title":"case marketplaceLandingPage(token: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacemanagementpage","title":"case marketplaceManagementPage","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacepostsmanagement(storetoken:)","title":"case marketplacePostsManagement(storeToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacequickeditpost(mngtoken:)","title":"case marketplaceQuickEditPost(mngToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacequickeditpostlist","title":"case marketplaceQuickEditPostList","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplaceregisterstore(section:)","title":"case marketplaceRegisterStore(section: Int32?)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplaceremoveassistant","title":"case marketplaceRemoveAssistant","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacestoreprize","title":"case marketplaceStorePrize","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacestorestatspage(storetoken:)","title":"case marketplaceStoreStatsPage(storeToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacestoreslist","title":"case marketplaceStoresList","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacesubmitpostfeedback(feedbackoption:posttoken:storetoken:)","title":"case marketplaceSubmitPostFeedback(feedbackOption: Int, postToken: String, storeToken: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacesubscriptiondetailtabbar","title":"case marketplaceSubscriptionDetailTabbar","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacesubscriptionplans","title":"case marketplaceSubscriptionPlans","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplacevalidatelandlinenumber","title":"case marketplaceValidateLandlineNumber","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/marketplaceviewpostfeedbackpage","title":"case marketplaceViewPostFeedbackPage","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/mycaragentpanel","title":"case myCarAgentPanel","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/mydealerpanel","title":"case myDealerPanel","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/mymarketplacepanel","title":"case myMarketplacePanel","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/myrealestatepanel","title":"case myRealEstatePanel","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/pricereport","title":"case priceReport","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/pricetoolsfeedback","title":"case priceToolsFeedback","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/purchase(purchasetype:consumertype:)","title":"case purchase(purchaseType: String, consumerType: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/purchasehistory","title":"case purchaseHistory","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/realestateagencyinformation","title":"case realEstateAgencyInformation","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/realestateanswerpanelinvitation","title":"case realEstateAnswerPanelInvitation","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/realestatebulkladder","title":"case realEstateBulkLadder","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/realestatebulkladdersubmit","title":"case realEstateBulkLadderSubmit","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/realestatedigitalregisteration","title":"case realEstateDigitalRegisteration","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/realestatedigitalregisterationedit(draftid:)","title":"case realEstateDigitalRegisterationEdit(draftID: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/realestatepanelinvitationlist","title":"case realEstatePanelInvitationList","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/realestateregisteragent","title":"case realEstateRegisterAgent","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/removeoperator(operatorid:)","title":"case removeOperator(operatorId: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/sendfeedbackmessage","title":"case sendFeedbackMessage","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/submitvalidation","title":"case submitValidation","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/subscribebusiness","title":"case subscribeBusiness","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/subscriptionmanagement","title":"case subscriptionManagement","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/subscriptionstatus","title":"case subscriptionStatus","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/usedpriceestimation","title":"case usedPriceEstimation","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/usedpriceform","title":"case usedPriceForm","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/usercarinspection(token:)","title":"case userCarInspection(token: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/usercarinspectionregisterform(token:)","title":"case userCarInspectionRegisterForm(token: String)","type":"case"},{"path":"\/documentation\/divar\/requesturls\/business\/zeroprice","title":"case zeroPrice","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/requesturls\/business\/path(for:)","title":"func path(for: UserType) -> String","type":"method"}],"path":"\/documentation\/divar\/requesturls\/business","title":"RequestURLs.Business","type":"enum"}],"path":"\/documentation\/divar\/requesturls","title":"RequestURLs","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/sqlcasterror\/alreasyconfigured","title":"case alreasyConfigured","type":"case"},{"path":"\/documentation\/divar\/sqlcasterror\/invalidfilter","title":"case invalidFilter","type":"case"},{"path":"\/documentation\/divar\/sqlcasterror\/invalidtable","title":"case invalidTable","type":"case"},{"path":"\/documentation\/divar\/sqlcasterror\/primarykeynotfound","title":"case primaryKeyNotFound","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/sqlcasterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sqlcasterror\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/sqlcasterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/sqlcasterror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/divar\/sqlcasterror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sqlcasterror\/asaferror(or:)","title":"func asAFError(or: () -> AFError) -> AFError","type":"method"},{"path":"\/documentation\/divar\/sqlcasterror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/divar\/sqlcasterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/divar\/sqlcasterror","title":"SQLCastError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/savedpostlisttype\/bookmarks","title":"case bookmarks","type":"case"},{"path":"\/documentation\/divar\/savedpostlisttype\/myposts","title":"case myPosts","type":"case"},{"path":"\/documentation\/divar\/savedpostlisttype\/notes","title":"case notes","type":"case"},{"path":"\/documentation\/divar\/savedpostlisttype\/recents","title":"case recents","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/savedpostlisttype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/savedpostlisttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/savedpostlisttype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/savedpostlisttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/savedpostlisttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/savedpostlisttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/savedpostlisttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/savedpostlisttype","title":"SavedPostListType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/schematype\/filter","title":"case filter","type":"case"},{"path":"\/documentation\/divar\/schematype\/submit","title":"case submit","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/schematype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/schematype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/schematype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/schematype","title":"SchemaType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingdirection\/down","title":"case down","type":"case"},{"path":"\/documentation\/divar\/scrollingdirection\/up","title":"case up","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/scrollingdirection\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/scrollingdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/scrollingdirection","title":"ScrollingDirection","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttonaction\/buyerinspection","title":"case buyerInspection","type":"case"},{"path":"\/documentation\/divar\/secondarybuttonaction\/general(_:)","title":"case general(String)","type":"case"},{"path":"\/documentation\/divar\/secondarybuttonaction\/inspectionreport","title":"case inspectionReport","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttonaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/secondarybuttonaction\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/secondarybuttonaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/secondarybuttonaction","title":"SecondaryButtonAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/seenmessageoriginenum\/me","title":"case me","type":"case"},{"path":"\/documentation\/divar\/seenmessageoriginenum\/peer","title":"case peer","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/seenmessageoriginenum\/topicname","title":"var topicName: String","type":"property"},{"path":"\/documentation\/divar\/seenmessageoriginenum\/topictype","title":"var topicType: ChatTopicType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/seenmessageoriginenum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/seenmessageoriginenum\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/seenmessageoriginenum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/seenmessageoriginenum","title":"SeenMessageOriginEnum","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowaction\/editnote","title":"case editNote","type":"case"},{"path":"\/documentation\/divar\/selectorrowaction\/general(_:)","title":"case general(String)","type":"case"},{"path":"\/documentation\/divar\/selectorrowaction\/none","title":"case none","type":"case"},{"path":"\/documentation\/divar\/selectorrowaction\/postviewpriceevaluation","title":"case postViewPriceEvaluation","type":"case"},{"path":"\/documentation\/divar\/selectorrowaction\/postviewreport","title":"case postViewReport","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/selectorrowaction\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/selectorrowaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/selectorrowaction","title":"SelectorRowAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/sentryeventlevel\/error","title":"case error","type":"case"},{"path":"\/documentation\/divar\/sentryeventlevel\/fatal","title":"case fatal","type":"case"},{"path":"\/documentation\/divar\/sentryeventlevel\/info","title":"case info","type":"case"},{"path":"\/documentation\/divar\/sentryeventlevel\/warning","title":"case warning","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/sentryeventlevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/sentryeventlevel\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/sentryeventlevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/sentryeventlevel","title":"SentryEventLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/sentrymessagenames\/actionlogerror(code:)","title":"case actionLogError(code: Int)","type":"case"},{"path":"\/documentation\/divar\/sentrymessagenames\/actionnotimplemented(hasfallbacklink:)","title":"case actionNotImplemented(hasFallbackLink: Bool)","type":"case"},{"path":"\/documentation\/divar\/sentrymessagenames\/alakwidgetfailedtoconvertjsontoprotobuffmodel(schemakey:)","title":"case alakWidgetFailedToConvertJSONToProtoBuffModel(schemaKey: String)","type":"case"},{"path":"\/documentation\/divar\/sentrymessagenames\/chatdberror(error:)","title":"case chatDbError(error: String)","type":"case"},{"path":"\/documentation\/divar\/sentrymessagenames\/chaterror(errorname:topic:)","title":"case chatError(errorName: String, topic: String)","type":"case"},{"path":"\/documentation\/divar\/sentrymessagenames\/jwterror(error:)","title":"case jwtError(error: String?)","type":"case"}],"path":"\/documentation\/divar\/sentrymessagenames","title":"SentryMessageNames","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/separatorhidestyle\/all","title":"case all","type":"case"},{"path":"\/documentation\/divar\/separatorhidestyle\/top","title":"case top","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/separatorhidestyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/separatorhidestyle\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/separatorhidestyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/separatorhidestyle","title":"SeparatorHideStyle","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/serverresponseerrors\/interneterror","title":"case internetError","type":"case"},{"path":"\/documentation\/divar\/serverresponseerrors\/loginrequirederror","title":"case loginRequiredError","type":"case"},{"path":"\/documentation\/divar\/serverresponseerrors\/servererror","title":"case serverError","type":"case"},{"path":"\/documentation\/divar\/serverresponseerrors\/unknownerror","title":"case unknownError","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/serverresponseerrors\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/serverresponseerrors\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/serverresponseerrors\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/serverresponseerrors","title":"ServerResponseErrors","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/simplebuttonrowactions\/authnationalid","title":"case authNationalId","type":"case"},{"path":"\/documentation\/divar\/simplebuttonrowactions\/authtelephonenumber","title":"case authTelephoneNumber","type":"case"},{"path":"\/documentation\/divar\/simplebuttonrowactions\/purchasesubscription","title":"case purchaseSubscription","type":"case"},{"path":"\/documentation\/divar\/simplebuttonrowactions\/subscriptionhistory","title":"case subscriptionHistory","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/simplebuttonrowactions\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/simplebuttonrowactions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/simplebuttonrowactions\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/simplebuttonrowactions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/simplebuttonrowactions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/simplebuttonrowactions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/simplebuttonrowactions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/simplebuttonrowactions","title":"SimpleButtonRowActions","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultireportnextaction\/opendescriptionpage","title":"case openDescriptionPage","type":"case"},{"path":"\/documentation\/divar\/singlemultireportnextaction\/openregisterpage","title":"case openRegisterPage","type":"case"},{"path":"\/documentation\/divar\/singlemultireportnextaction\/sendreasontoserver","title":"case sendReasonToServer","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultireportnextaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultireportnextaction\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/singlemultireportnextaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlemultireportnextaction","title":"SingleMultiReportNextAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultisubviews\/buttonbar","title":"case ButtonBar","type":"case"},{"path":"\/documentation\/divar\/singlemultisubviews\/singlemultiselector","title":"case SingleMultiSelector","type":"case"},{"path":"\/documentation\/divar\/singlemultisubviews\/switchbar","title":"case SwitchBar","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultisubviews\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/singlemultisubviews\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/singlemultisubviews\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/singlemultisubviews","title":"SingleMultiSubviews","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlogtype\/contact","title":"case contact","type":"case"},{"path":"\/documentation\/divar\/smartsuggestionlogtype\/post","title":"case post","type":"case"},{"path":"\/documentation\/divar\/smartsuggestionlogtype\/postlist","title":"case postList","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlogtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlogtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlogtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/smartsuggestionlogtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlogtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/smartsuggestionlogtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/smartsuggestionlogtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/smartsuggestionlogtype","title":"SmartSuggestionLogType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/submissionmessagetype\/bottomsheet","title":"case bottomSheet","type":"case"},{"path":"\/documentation\/divar\/submissionmessagetype\/snackbar","title":"case snackBar","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/submissionmessagetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/divar\/submissionmessagetype\/init(type:)","title":"init?(type: String?)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/submissionmessagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/submissionmessagetype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/submissionmessagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/submissionmessagetype","title":"SubmissionMessageType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/submiterrors\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/divar\/submiterrors\/validation","title":"case validation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/submiterrors\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/submiterrors\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/submiterrors\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/submiterrors\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/submiterrors\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/submiterrors\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/submiterrors\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/submiterrors","title":"SubmitErrors","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/category","title":"case category","type":"case"},{"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/categorysuggestion","title":"case categorySuggestion","type":"case"},{"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/filter","title":"case filter","type":"case"},{"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/inputsuggestion","title":"case inputSuggestion","type":"case"},{"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/selectedfilter","title":"case selectedFilter","type":"case"},{"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/taglistsuggestionwidgettype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/taglistsuggestionwidgettype","title":"TagListSuggestionWidgetType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/textrowtype\/redeem","title":"case redeem","type":"case"},{"path":"\/documentation\/divar\/textrowtype\/submit","title":"case submit","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/textrowtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/textrowtype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/textrowtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/textrowtype","title":"TextRowType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgettype\/black","title":"case black","type":"case"},{"path":"\/documentation\/divar\/titlewidgettype\/error","title":"case error","type":"case"},{"path":"\/documentation\/divar\/titlewidgettype\/success","title":"case success","type":"case"},{"path":"\/documentation\/divar\/titlewidgettype\/warning","title":"case warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgettype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgettype\/color","title":"var color: UIColor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgettype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgettype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/titlewidgettype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgettype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/titlewidgettype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/titlewidgettype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/titlewidgettype","title":"TitleWidgetType","type":"enum"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/celldata\/init(creditandrenttitletext:creditandrentvaluetext:credittitletext:creditvaluetext:renttitletext:rentvaluetext:)","title":"init(creditAndRentTitleText: String?, creditAndRentValueText: String?, creditTitleText: String?, creditValueText: String?, rentTitleText: String?, rentValueText: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/celldata\/creditandrenttitletext","title":"let creditAndRentTitleText: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/celldata\/creditandrentvaluetext","title":"let creditAndRentValueText: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/celldata\/credittitletext","title":"let creditTitleText: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/celldata\/creditvaluetext","title":"let creditValueText: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/celldata\/renttitletext","title":"let rentTitleText: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/celldata\/rentvaluetext","title":"let rentValueText: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/celldata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/celldata\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/model\/celldata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/transformableprice\/model\/celldata","title":"TransformablePrice.Model.CellData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/descriptiontextcellmodel\/init(identifier:titletext:)","title":"init(identifier: TransformablePrice.Model.Identifiers, titleText: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/descriptiontextcellmodel\/identifier","title":"var identifier: Identifiers","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/descriptiontextcellmodel\/titletext","title":"var titleText: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/descriptiontextcellmodel\/titletextcolor","title":"var titleTextColor: SonnatColors","type":"property"}],"path":"\/documentation\/divar\/transformableprice\/model\/descriptiontextcellmodel","title":"TransformablePrice.Model.DescriptionTextCellModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/numbertextfieldcellmodel\/init(identifier:key:placeholdertext:titletext:textfieldtext:subtitletext:secondarytext:titledescription:subtitlecolor:)","title":"init(identifier: TransformablePrice.Model.Identifiers, key: String, placeholderText: String?, titleText: String?, textFieldText: String?, subtitleText: String?, secondaryText: String?, titleDescription: String?, subtitleColor: UIColor)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/numbertextfieldcellmodel\/identifier","title":"var identifier: Identifiers","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/numbertextfieldcellmodel\/key","title":"var key: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/numbertextfieldcellmodel\/placeholdertext","title":"var placeholderText: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/numbertextfieldcellmodel\/secondarytext","title":"var secondaryText: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/numbertextfieldcellmodel\/subtitlecolor","title":"var subtitleColor: UIColor","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/numbertextfieldcellmodel\/subtitletext","title":"var subtitleText: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/numbertextfieldcellmodel\/textfieldtext","title":"var textFieldText: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/numbertextfieldcellmodel\/titledescription","title":"var titleDescription: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/numbertextfieldcellmodel\/titletext","title":"var titleText: String?","type":"property"}],"path":"\/documentation\/divar\/transformableprice\/model\/numbertextfieldcellmodel","title":"TransformablePrice.Model.NumberTextFieldCellModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/switchcellmodel\/init(iscellenabled:icon:identifier:data:title:ison:isdividerhidden:)","title":"init(isCellEnabled: Bool, icon: ImageAsset, identifier: TransformablePrice.Model.Identifiers, data: Any?, title: String, isOn: Bool, isDividerHidden: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/switchcellmodel\/data","title":"var data: Any?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/switchcellmodel\/icon","title":"var icon: ImageAsset","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/switchcellmodel\/identifier","title":"var identifier: Identifiers","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/switchcellmodel\/iscellenabled","title":"var isCellEnabled: Bool","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/switchcellmodel\/isdividerhidden","title":"var isDividerHidden: Bool","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/switchcellmodel\/ison","title":"var isOn: Bool","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/switchcellmodel\/title","title":"var title: String","type":"property"}],"path":"\/documentation\/divar\/transformableprice\/model\/switchcellmodel","title":"TransformablePrice.Model.SwitchCellModel","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/rawdata","title":"TransformablePrice.Model.RawData","type":"typealias"},{"path":"\/documentation\/divar\/transformableprice\/model\/uncheckedrawdata","title":"TransformablePrice.Model.UnCheckedRawData","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/cellviewstates\/bothdepositeandrent","title":"case bothDepositeAndRent","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/model\/cellviewstates\/separateddepositeandrent","title":"case separatedDepositeAndRent","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/cellviewstates\/shouldaddextraheight","title":"var shouldAddExtraHeight: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/cellviewstates\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/cellviewstates\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/model\/cellviewstates\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/transformableprice\/model\/cellviewstates","title":"TransformablePrice.Model.CellViewStates","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/datasource\/description(model:)","title":"case description(model: DescriptionTextCellModel)","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/model\/datasource\/switch(model:)","title":"case `switch`(model: SwitchCellModel)","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/model\/datasource\/textfield(model:)","title":"case textField(model: NumberTextFieldCellModel)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/datasource\/identifier","title":"var identifier: Identifiers","type":"property"}],"path":"\/documentation\/divar\/transformableprice\/model\/datasource","title":"TransformablePrice.Model.DataSource","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/credit","title":"case credit","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/description","title":"case description","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/rent","title":"case rent","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/transformedcredit","title":"case transformedCredit","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/transformeddisableddescription","title":"case transformedDisabledDescription","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/transformedenableddescription","title":"case transformedEnabledDescription","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/transformedrent","title":"case transformedRent","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/transformedswtitch","title":"case transformedSwtitch","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/init(rawvalue:)-3mehn","title":"init?(rawValue: IndexPath)","type":"init"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/init(rawvalue:)-5ic3v","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/init(rawvalue:)-nrpx","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/cellidentifier","title":"var cellIdentifier: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/cellindexpath","title":"var cellIndexPath: IndexPath","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/key","title":"var key: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/model\/identifiers\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/transformableprice\/model\/identifiers","title":"TransformablePrice.Model.Identifiers","type":"enum"}],"path":"\/documentation\/divar\/transformableprice\/model","title":"TransformablePrice.Model","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/init(rawvalue:)","title":"init(rawValue: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/rawvalue","title":"let rawValue: UInt8","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/cannotsubmit","title":"static let canNotSubmit: TransformablePrice.States.SubmitState","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/cansubmit","title":"static let canSubmit: TransformablePrice.States.SubmitState","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/cansubmitwithtransformables","title":"static let canSubmitWithTransformables: TransformablePrice.States.SubmitState","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/states\/submitstate\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/divar\/transformableprice\/states\/submitstate","title":"TransformablePrice.States.SubmitState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/init(rawvalue:)","title":"init(rawValue: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/rawvalue","title":"let rawValue: UInt8","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/cannotdisable","title":"static let canNotDisable: TransformablePrice.States.SwitchState","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/cannotenable","title":"static let canNotEnable: TransformablePrice.States.SwitchState","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/disabledbyclient","title":"static let disabledByClient: TransformablePrice.States.SwitchState","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/disabledbyuser","title":"static let disabledByUser: TransformablePrice.States.SwitchState","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/enabledbyclient","title":"static let enabledByClient: TransformablePrice.States.SwitchState","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/enabledbyuser","title":"static let enabledByUser: TransformablePrice.States.SwitchState","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/states\/switchstate\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/divar\/transformableprice\/states\/switchstate","title":"TransformablePrice.States.SwitchState","type":"struct"}],"path":"\/documentation\/divar\/transformableprice\/states","title":"TransformablePrice.States","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/bound\/init(maximum:minimum:)","title":"init(maximum: Int64?, minimum: Int64?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/bound\/maximum","title":"let maximum: Int64?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/bound\/minimum","title":"let minimum: Int64?","type":"property"}],"path":"\/documentation\/divar\/transformableprice\/validator\/bound","title":"TransformablePrice.Validator.Bound","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/creditfield\/init(creditvalue:bound:errormessages:)","title":"init(creditValue: Int64?, bound: DynamicBound, errorMessages: ErrorMessages)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/creditfield\/validate()","title":"func validate() -> NumberValidationResult","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/validator\/creditfield","title":"TransformablePrice.Validator.CreditField","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/dynamicbound\/init(firstmaximum:firstminimum:secondmaximum:secondminimum:)","title":"init(firstMaximum: Int64?, firstMinimum: Int64?, secondMaximum: Int64?, secondMinimum: Int64?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/dynamicbound\/firstmaximum","title":"let firstMaximum: Int64?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/dynamicbound\/firstminimum","title":"let firstMinimum: Int64?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/dynamicbound\/secondmaximum","title":"let secondMaximum: Int64?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/dynamicbound\/secondminimum","title":"let secondMinimum: Int64?","type":"property"}],"path":"\/documentation\/divar\/transformableprice\/validator\/dynamicbound","title":"TransformablePrice.Validator.DynamicBound","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/init(transformedcreditrequirederrormessage:creditnotchangederrormessage:creditmaximumerror:creditminimumerror:creditandrentbothzeromessage:creditandrentincreasederrormessage:creditandrentdecreasederrormessage:rentnotchangederrormessage:tran-3x9u4","title":"init(transformedCreditRequiredErrorMessage: String, creditNotChangedErrorMessage: String, creditMaximumError: String, creditMinimumError: String, creditAndRentBothZeroMessage: String, creditAndRentIncreasedErrorMessage: String, creditAndRentDecreasedErrorMessage: String, rentNotChangedErrorMessage: String, transformedRentRequiredErrorMessage: String, rentMaximumError: String, rentMinimumError: String, ivalidRateErrorMessage: String, errorNumberFormatter: NumberFormatter)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/creditandrentbothzeromessage","title":"let creditAndRentBothZeroMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/creditandrentdecreasederrormessage","title":"let creditAndRentDecreasedErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/creditandrentincreasederrormessage","title":"let creditAndRentIncreasedErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/creditmaximumerror","title":"let creditMaximumError: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/creditminimumerror","title":"let creditMinimumError: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/creditnotchangederrormessage","title":"let creditNotChangedErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/ivalidrateerrormessage","title":"let ivalidRateErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/rentmaximumerror","title":"let rentMaximumError: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/rentminimumerror","title":"let rentMinimumError: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/rentnotchangederrormessage","title":"let rentNotChangedErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/transformedcreditrequirederrormessage","title":"let transformedCreditRequiredErrorMessage: String","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/transformedrentrequirederrormessage","title":"let transformedRentRequiredErrorMessage: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages\/normalizeerror(_:number:decimalseparator:)","title":"func normalizeError(String, number: Int64, decimalSeparator: String) -> String","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/validator\/errormessages","title":"TransformablePrice.Validator.ErrorMessages","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/fieldsdependency\/state\/init(transformedcrediterror:transformedrenterror:canbesubmited:)","title":"init(transformedCreditError: String?, transformedRentError: String?, canBeSubmited: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/fieldsdependency\/state\/canbesubmited","title":"let canBeSubmited: Bool","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/fieldsdependency\/state\/transformedcrediterror","title":"let transformedCreditError: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/fieldsdependency\/state\/transformedrenterror","title":"let transformedRentError: String?","type":"property"}],"path":"\/documentation\/divar\/transformableprice\/validator\/fieldsdependency\/state","title":"TransformablePrice.Validator.FieldsDependency.State","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/fieldsdependency\/init(rentvalue:creditvalue:transformedrentvalue:transformedcreditvalue:transformrate:errormessages:)","title":"init(rentValue: Int64, creditValue: Int64, transformedRentValue: Int64?, transformedCreditValue: Int64?, transformRate: TransformRate, errorMessages: ErrorMessages)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/fieldsdependency\/validate()","title":"func validate() -> State","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/validator\/fieldsdependency","title":"TransformablePrice.Validator.FieldsDependency","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/rentandcreditfield\/state\/init(shouldenabletransformableswitch:crediterror:renterror:canbesubmited:isonefieldempty:)","title":"init(shouldEnableTransformableSwitch: Bool, creditError: String?, rentError: String?, canBeSubmited: Bool, isOneFieldEmpty: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/rentandcreditfield\/state\/canbesubmited","title":"let canBeSubmited: Bool","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/rentandcreditfield\/state\/crediterror","title":"let creditError: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/rentandcreditfield\/state\/isonefieldempty","title":"let isOneFieldEmpty: Bool","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/rentandcreditfield\/state\/renterror","title":"let rentError: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/rentandcreditfield\/state\/shouldenabletransformableswitch","title":"let shouldEnableTransformableSwitch: Bool","type":"property"}],"path":"\/documentation\/divar\/transformableprice\/validator\/rentandcreditfield\/state","title":"TransformablePrice.Validator.RentAndCreditField.State","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/rentandcreditfield\/init(istransformableexpanded:errormessages:rentdynamicbound:creditdynamicbound:rentvalidator:creditvalidator:)","title":"init(isTransformableExpanded: Bool, errorMessages: ErrorMessages, rentDynamicBound: DynamicBound, creditDynamicBound: DynamicBound, rentValidator: TransformablePriceFieldValidator, creditValidator: TransformablePriceFieldValidator)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/rentandcreditfield\/validate()","title":"func validate() -> State","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/validator\/rentandcreditfield","title":"TransformablePrice.Validator.RentAndCreditField","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/rentfield\/init(rentvalue:bound:errormessages:)","title":"init(rentValue: Int64?, bound: DynamicBound, errorMessages: ErrorMessages)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/rentfield\/validate()","title":"func validate() -> NumberValidationResult","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/validator\/rentfield","title":"TransformablePrice.Validator.RentField","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformrate\/init(maximum:minimum:)","title":"init(maximum: Int64, minimum: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformrate\/maximum","title":"let maximum: Int64","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformrate\/minimum","title":"let minimum: Int64","type":"property"}],"path":"\/documentation\/divar\/transformableprice\/validator\/transformrate","title":"TransformablePrice.Validator.TransformRate","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformedcreditfield\/init(transformedcreditvalue:bound:errormessages:)","title":"init(transformedCreditValue: Int64?, bound: Bound, errorMessages: ErrorMessages)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformedcreditfield\/validate()","title":"func validate() -> NumberValidationResult","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/validator\/transformedcreditfield","title":"TransformablePrice.Validator.TransformedCreditField","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformedrentandtransformedcreditfield\/state\/init(transformedcrediterror:transformedrenterror:canbesubmited:)","title":"init(transformedCreditError: String?, transformedRentError: String?, canBeSubmited: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformedrentandtransformedcreditfield\/state\/canbesubmited","title":"let canBeSubmited: Bool","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformedrentandtransformedcreditfield\/state\/transformedcrediterror","title":"let transformedCreditError: String?","type":"property"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformedrentandtransformedcreditfield\/state\/transformedrenterror","title":"let transformedRentError: String?","type":"property"}],"path":"\/documentation\/divar\/transformableprice\/validator\/transformedrentandtransformedcreditfield\/state","title":"TransformablePrice.Validator.TransformedRentAndTransformedCreditField.State","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformedrentandtransformedcreditfield\/init(transformedrentvalidator:transformedcreditvalidator:errormessages:rentvalue:creditvalue:transformedrentvalue:transformedcreditvalue:)","title":"init(transformedRentValidator: TransformablePriceFieldValidator, transformedCreditValidator: TransformablePriceFieldValidator, errorMessages: ErrorMessages, rentValue: Int64, creditValue: Int64, transformedRentValue: Int64?, transformedCreditValue: Int64?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformedrentandtransformedcreditfield\/validate()","title":"func validate() -> State","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/validator\/transformedrentandtransformedcreditfield","title":"TransformablePrice.Validator.TransformedRentAndTransformedCreditField","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformedrentfield\/init(transformedrentvalue:bound:errormessages:)","title":"init(transformedRentValue: Int64?, bound: Bound, errorMessages: ErrorMessages)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/transformedrentfield\/validate()","title":"func validate() -> NumberValidationResult","type":"method"}],"path":"\/documentation\/divar\/transformableprice\/validator\/transformedrentfield","title":"TransformablePrice.Validator.TransformedRentField","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/transformableprice\/validator\/numbervalidationresult\/error(message:)","title":"case error(message: String)","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/validator\/numbervalidationresult\/hasvalue(value:)","title":"case hasValue(value: Int64)","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/validator\/numbervalidationresult\/null(message:)","title":"case null(message: String?)","type":"case"},{"path":"\/documentation\/divar\/transformableprice\/validator\/numbervalidationresult\/zero(message:)","title":"case zero(message: String?)","type":"case"}],"path":"\/documentation\/divar\/transformableprice\/validator\/numbervalidationresult","title":"TransformablePrice.Validator.NumberValidationResult","type":"enum"}],"path":"\/documentation\/divar\/transformableprice\/validator","title":"TransformablePrice.Validator","type":"enum"}],"path":"\/documentation\/divar\/transformableprice","title":"TransformablePrice","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/updatetype\/hardupdate","title":"case hardUpdate","type":"case"},{"path":"\/documentation\/divar\/updatetype\/softupdate","title":"case softUpdate","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/updatetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/updatetype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/updatetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/updatetype","title":"UpdateType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/usertype\/caragent","title":"case CarAgent","type":"case"},{"path":"\/documentation\/divar\/usertype\/dealer","title":"case Dealer","type":"case"},{"path":"\/documentation\/divar\/usertype\/jobs","title":"case Jobs","type":"case"},{"path":"\/documentation\/divar\/usertype\/marketplace","title":"case Marketplace","type":"case"},{"path":"\/documentation\/divar\/usertype\/personal","title":"case Personal","type":"case"},{"path":"\/documentation\/divar\/usertype\/realestate","title":"case RealEstate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/divar\/usertype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/usertype\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/usertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/usertype\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/usertype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/usertype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/usertype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/divar\/usertype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/usertype","title":"UserType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/verticalscrollingdirection\/down","title":"case down","type":"case"},{"path":"\/documentation\/divar\/verticalscrollingdirection\/up","title":"case up","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/verticalscrollingdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/verticalscrollingdirection\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/verticalscrollingdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/verticalscrollingdirection","title":"VerticalScrollingDirection","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadviewresponse\/completionresponse\/thumbnailname","title":"let thumbnailName: String","type":"property"},{"path":"\/documentation\/divar\/videouploadviewresponse\/completionresponse\/videoname","title":"let videoName: String","type":"property"}],"path":"\/documentation\/divar\/videouploadviewresponse\/completionresponse","title":"VideoUploadViewResponse.CompletionResponse","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/videouploadviewresponse\/completed(_:)","title":"case completed(CompletionResponse)","type":"case"},{"path":"\/documentation\/divar\/videouploadviewresponse\/progress(_:)","title":"case progress(Double)","type":"case"}],"path":"\/documentation\/divar\/videouploadviewresponse","title":"VideoUploadViewResponse","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/videowidgetcellstatemodel\/notchoosed","title":"case notChoosed","type":"case"},{"path":"\/documentation\/divar\/videowidgetcellstatemodel\/uploadfailed","title":"case uploadFailed","type":"case"},{"path":"\/documentation\/divar\/videowidgetcellstatemodel\/uploaded(model:)","title":"case uploaded(model: VideoWidgetCellModel)","type":"case"},{"path":"\/documentation\/divar\/videowidgetcellstatemodel\/uploading","title":"case uploading","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/videowidgetcellstatemodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/videowidgetcellstatemodel\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/videowidgetcellstatemodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/videowidgetcellstatemodel","title":"VideoWidgetCellStateModel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/viewstate\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/divar\/viewstate\/searching","title":"case searching","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/viewstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/viewstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/viewstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/viewstate","title":"ViewState","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetlist\/==(_:_:)","title":"static func == (WidgetList, WidgetList) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetlist\/append(_:)","title":"case append(([Widgets_Widget], ActionLog_ActionLogCoordinator))","type":"case"},{"path":"\/documentation\/divar\/widgetlist\/empty","title":"case empty","type":"case"},{"path":"\/documentation\/divar\/widgetlist\/newlist(_:)","title":"case newList(([Widgets_Widget], ActionLog_ActionLogCoordinator))","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetlist\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetlist\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/widgetlist\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetlist","title":"WidgetList","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewstate\/history","title":"case history","type":"case"},{"path":"\/documentation\/divar\/widgetviewstate\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/divar\/widgetviewstate\/prediction","title":"case prediction","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/divar\/widgetviewstate\/equate(_:_:)","title":"static func equate(Any, Any) -> Bool","type":"method"}],"path":"\/documentation\/divar\/widgetviewstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/divar\/widgetviewstate","title":"WidgetViewState","type":"enum"}],"path":"\/documentation\/divar","title":"Divar","type":"module"},{"path":"\/documentation\/divar\/pageextractor\/actionlog","title":"var actionLog: ActionLog_ActionLogCoordinator","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/confirmationmessage","title":"var confirmationMessage: String","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/hasactionlog","title":"var hasActionLog: Bool","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/hasremainingtorefresh","title":"var hasRemainingToRefresh: Bool","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/hasstickywidget","title":"var hasStickyWidget: Bool","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/infinitescrollresponse","title":"var infiniteScrollResponse: Widgets_InfiniteScrollResponse","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/lastpostdate","title":"var lastPostDate: Int64","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/loginrequired","title":"var loginRequired: Bool","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/maxselectableitems","title":"var maxSelectableItems: Int32","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/navbar","title":"var navBar: [Widgets_NavigationBar]","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/phonenumber","title":"var phoneNumber: String","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/remainingtorefresh","title":"var remainingToRefresh: Google_Protobuf_Duration","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/stickywidget","title":"var stickyWidget: Widgets_StickyWidget","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/title","title":"var title: String","type":"property"},{"path":"\/documentation\/divar\/pageextractor\/widgetlist","title":"var widgetList: [Widgets_Widget]","type":"property"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}